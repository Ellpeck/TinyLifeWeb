### YamlMime:ManagedReference
items:
- uid: TinyLife.Mods.Mod
  commentId: T:TinyLife.Mods.Mod
  id: Mod
  parent: TinyLife.Mods
  children:
  - TinyLife.Mods.Mod.AddGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
  - TinyLife.Mods.Mod.Description
  - TinyLife.Mods.Mod.DonationUrl
  - TinyLife.Mods.Mod.FinalizeGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
  - TinyLife.Mods.Mod.GetCustomFurnitureTextures(TinyLife.Mods.ModInfo)
  - TinyLife.Mods.Mod.Icon
  - TinyLife.Mods.Mod.Initialize(ExtremelySimpleLogger.Logger,MLEM.Data.Content.RawContentManager,MLEM.Data.RuntimeTexturePacker,TinyLife.Mods.ModInfo)
  - TinyLife.Mods.Mod.IssueTrackerUrl
  - TinyLife.Mods.Mod.Name
  - TinyLife.Mods.Mod.PopulateOptions(MLEM.Ui.Elements.Group,TinyLife.Mods.ModInfo)
  - TinyLife.Mods.Mod.RequiresHarmony
  - TinyLife.Mods.Mod.TestedVersionRange
  - TinyLife.Mods.Mod.Version
  - TinyLife.Mods.Mod.WebsiteUrl
  langs:
  - csharp
  - vb
  name: Mod
  nameWithType: Mod
  fullName: TinyLife.Mods.Mod
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: >-
    The base class for all Tiny Life mods.

    For an example mod, see https://github.com/Ellpeck/TinyLifeExampleMod.

    Mods are uniquely identified by their ID. The id is the name of the class that extends <xref href="TinyLife.Mods.Mod" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public abstract class Mod
    content.vb: Public MustInherit Class [Mod]
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Mods.Mod.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Mods.Mod.Name
  commentId: P:TinyLife.Mods.Mod.Name
  id: Name
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Mod.Name
  fullName: TinyLife.Mods.Mod.Name
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: The display name of this mod, which will be visible in the options menu
  example: []
  syntax:
    content: public abstract string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Name As String
  overload: TinyLife.Mods.Mod.Name*
- uid: TinyLife.Mods.Mod.Description
  commentId: P:TinyLife.Mods.Mod.Description
  id: Description
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Mod.Description
  fullName: TinyLife.Mods.Mod.Description
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: >-
    The description of this mod, which will be visible in the options menu.

    To localize the description, use <xref href="TinyLife.Localization" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public abstract string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Description As String
  overload: TinyLife.Mods.Mod.Description*
- uid: TinyLife.Mods.Mod.TestedVersionRange
  commentId: P:TinyLife.Mods.Mod.TestedVersionRange
  id: TestedVersionRange
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: TestedVersionRange
  nameWithType: Mod.TestedVersionRange
  fullName: TinyLife.Mods.Mod.TestedVersionRange
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: >-
    A semantic version range in interval notation that denotes the game versions that this mod has been tested for.

    If the game's current version (<xref href="TinyLife.GameImpl.Version" data-throw-if-not-resolved="false"></xref>) is not included in this range, a warning is displayed on game startup.

    For more information on semantic version ranges in interval notation, see https://learn.microsoft.com/en-us/nuget/concepts/package-versioning#version-ranges.
  example: []
  syntax:
    content: public abstract string TestedVersionRange { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property TestedVersionRange As String
  overload: TinyLife.Mods.Mod.TestedVersionRange*
- uid: TinyLife.Mods.Mod.Version
  commentId: P:TinyLife.Mods.Mod.Version
  id: Version
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: Mod.Version
  fullName: TinyLife.Mods.Mod.Version
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: >-
    This mod's current version.

    By default, this property returns the version of this mod's <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref>, which can be set in your mod's project file.
  example: []
  syntax:
    content: public virtual string Version { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Version As String
  overload: TinyLife.Mods.Mod.Version*
- uid: TinyLife.Mods.Mod.Icon
  commentId: P:TinyLife.Mods.Mod.Icon
  id: Icon
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: Mod.Icon
  fullName: TinyLife.Mods.Mod.Icon
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: The icon texture region of this mod, which will be visible in the options menu
  example: []
  syntax:
    content: public virtual TextureRegion Icon { get; }
    parameters: []
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public Overridable ReadOnly Property Icon As TextureRegion
  overload: TinyLife.Mods.Mod.Icon*
- uid: TinyLife.Mods.Mod.IssueTrackerUrl
  commentId: P:TinyLife.Mods.Mod.IssueTrackerUrl
  id: IssueTrackerUrl
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: IssueTrackerUrl
  nameWithType: Mod.IssueTrackerUrl
  fullName: TinyLife.Mods.Mod.IssueTrackerUrl
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: >-
    An optional string that will be the destination of a clickable text in the main menu when this mod fails to initialize (<xref href="TinyLife.Mods.Mod.Initialize(ExtremelySimpleLogger.Logger%2cMLEM.Data.Content.RawContentManager%2cMLEM.Data.RuntimeTexturePacker%2cTinyLife.Mods.ModInfo)" data-throw-if-not-resolved="false"></xref>) or add game content (<xref href="TinyLife.Mods.Mod.AddGameContent(TinyLife.GameImpl%2cTinyLife.Mods.ModInfo)" data-throw-if-not-resolved="false"></xref>).

    Note that this will not be displayed when the mod fails to load entirely, since this class will not have had time to instantiate.
  example: []
  syntax:
    content: public virtual string IssueTrackerUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property IssueTrackerUrl As String
  overload: TinyLife.Mods.Mod.IssueTrackerUrl*
- uid: TinyLife.Mods.Mod.WebsiteUrl
  commentId: P:TinyLife.Mods.Mod.WebsiteUrl
  id: WebsiteUrl
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: WebsiteUrl
  nameWithType: Mod.WebsiteUrl
  fullName: TinyLife.Mods.Mod.WebsiteUrl
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: An optional string that will be the destination of a clickable button in the options menu which is meant to lead to a website run by this mod's author, or a website that provides more information about this mod.
  example: []
  syntax:
    content: public virtual string WebsiteUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property WebsiteUrl As String
  overload: TinyLife.Mods.Mod.WebsiteUrl*
- uid: TinyLife.Mods.Mod.DonationUrl
  commentId: P:TinyLife.Mods.Mod.DonationUrl
  id: DonationUrl
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: DonationUrl
  nameWithType: Mod.DonationUrl
  fullName: TinyLife.Mods.Mod.DonationUrl
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: An optional string that will be the destination of a clickable button in the options menu which is meant to lead to a website where users can donate to this mod's author financially. This could be a ko-fi, Patreon, GitHub sponsors, or any other donation platform.
  example: []
  syntax:
    content: public virtual string DonationUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property DonationUrl As String
  overload: TinyLife.Mods.Mod.DonationUrl*
- uid: TinyLife.Mods.Mod.RequiresHarmony
  commentId: P:TinyLife.Mods.Mod.RequiresHarmony
  id: RequiresHarmony
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: RequiresHarmony
  nameWithType: Mod.RequiresHarmony
  fullName: TinyLife.Mods.Mod.RequiresHarmony
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: >-
    Whether this mod requires Harmony for patches.

    If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, the <xref href="HarmonyLib.Harmony" data-throw-if-not-resolved="false"></xref> instance to use can be found in <xref href="TinyLife.Mods.ModInfo.Harmony" data-throw-if-not-resolved="false"></xref> during <xref href="TinyLife.Mods.Mod.Initialize(ExtremelySimpleLogger.Logger%2cMLEM.Data.Content.RawContentManager%2cMLEM.Data.RuntimeTexturePacker%2cTinyLife.Mods.ModInfo)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual bool RequiresHarmony { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property RequiresHarmony As Boolean
  overload: TinyLife.Mods.Mod.RequiresHarmony*
- uid: TinyLife.Mods.Mod.Initialize(ExtremelySimpleLogger.Logger,MLEM.Data.Content.RawContentManager,MLEM.Data.RuntimeTexturePacker,TinyLife.Mods.ModInfo)
  commentId: M:TinyLife.Mods.Mod.Initialize(ExtremelySimpleLogger.Logger,MLEM.Data.Content.RawContentManager,MLEM.Data.RuntimeTexturePacker,TinyLife.Mods.ModInfo)
  id: Initialize(ExtremelySimpleLogger.Logger,MLEM.Data.Content.RawContentManager,MLEM.Data.RuntimeTexturePacker,TinyLife.Mods.ModInfo)
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: Initialize(Logger, RawContentManager, RuntimeTexturePacker, ModInfo)
  nameWithType: Mod.Initialize(Logger, RawContentManager, RuntimeTexturePacker, ModInfo)
  fullName: TinyLife.Mods.Mod.Initialize(ExtremelySimpleLogger.Logger, MLEM.Data.Content.RawContentManager, MLEM.Data.RuntimeTexturePacker, TinyLife.Mods.ModInfo)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: >-
    Initialize the data for this mod, including textures, sounds and other data.

    The <xref href="MLEM.Data.Content.RawContentManager" data-throw-if-not-resolved="false"></xref> is a variation of MonoGame's <xref href="Microsoft.Xna.Framework.Content.ContentManager" data-throw-if-not-resolved="false"></xref> and should be used to load mod content.
  example: []
  syntax:
    content: public abstract void Initialize(Logger logger, RawContentManager content, RuntimeTexturePacker texturePacker, ModInfo info)
    parameters:
    - id: logger
      type: ExtremelySimpleLogger.Logger
      description: The logger that can be used to write info about this mod to the console
    - id: content
      type: MLEM.Data.Content.RawContentManager
      description: The content manager for this mod
    - id: texturePacker
      type: MLEM.Data.RuntimeTexturePacker
      description: The texture packer that packs added textures into one big texture
    - id: info
      type: TinyLife.Mods.ModInfo
      description: The <xref href="TinyLife.Mods.ModInfo" data-throw-if-not-resolved="false"></xref> of this mod.
    content.vb: Public MustOverride Sub Initialize(logger As Logger, content As RawContentManager, texturePacker As RuntimeTexturePacker, info As ModInfo)
  overload: TinyLife.Mods.Mod.Initialize*
- uid: TinyLife.Mods.Mod.AddGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
  commentId: M:TinyLife.Mods.Mod.AddGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
  id: AddGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: AddGameContent(GameImpl, ModInfo)
  nameWithType: Mod.AddGameContent(GameImpl, ModInfo)
  fullName: TinyLife.Mods.Mod.AddGameContent(TinyLife.GameImpl, TinyLife.Mods.ModInfo)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: >-
    Add the content that this mod provides for the given <xref href="TinyLife.GameImpl" data-throw-if-not-resolved="false"></xref> instance. Some of the supported things to register are:

    <xref href="TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)" data-throw-if-not-resolved="false"></xref> to register furniture types,

    <xref href="TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)" data-throw-if-not-resolved="false"></xref> to register action types,

    <xref href="TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)" data-throw-if-not-resolved="false"></xref> to register clothes (and hair),

    <xref href="TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)" data-throw-if-not-resolved="false"></xref> to register skills.

    Note that there are a lot of additional things that can be registered in this method.
  example: []
  syntax:
    content: public abstract void AddGameContent(GameImpl game, ModInfo info)
    parameters:
    - id: game
      type: TinyLife.GameImpl
      description: The game instance.
    - id: info
      type: TinyLife.Mods.ModInfo
      description: The <xref href="TinyLife.Mods.ModInfo" data-throw-if-not-resolved="false"></xref> of this mod.
    content.vb: Public MustOverride Sub AddGameContent(game As GameImpl, info As ModInfo)
  overload: TinyLife.Mods.Mod.AddGameContent*
- uid: TinyLife.Mods.Mod.FinalizeGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
  commentId: M:TinyLife.Mods.Mod.FinalizeGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
  id: FinalizeGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: FinalizeGameContent(GameImpl, ModInfo)
  nameWithType: Mod.FinalizeGameContent(GameImpl, ModInfo)
  fullName: TinyLife.Mods.Mod.FinalizeGameContent(TinyLife.GameImpl, TinyLife.Mods.ModInfo)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: >-
    Finalize loading any additional game content for your mod.

    Note that "finalize" in this context refers not to object destruction, but to the completion of the loading process.

    This method is called after all mods had their <xref href="TinyLife.Mods.Mod.AddGameContent(TinyLife.GameImpl%2cTinyLife.Mods.ModInfo)" data-throw-if-not-resolved="false"></xref> methods called, and after all basegame content has been finalized.

    This method can be used, for example, to modify any game content added by other mods.
  example: []
  syntax:
    content: public virtual void FinalizeGameContent(GameImpl game, ModInfo info)
    parameters:
    - id: game
      type: TinyLife.GameImpl
      description: The game instance.
    - id: info
      type: TinyLife.Mods.ModInfo
      description: The <xref href="TinyLife.Mods.ModInfo" data-throw-if-not-resolved="false"></xref> of this mod.
    content.vb: Public Overridable Sub FinalizeGameContent(game As GameImpl, info As ModInfo)
  overload: TinyLife.Mods.Mod.FinalizeGameContent*
- uid: TinyLife.Mods.Mod.GetCustomFurnitureTextures(TinyLife.Mods.ModInfo)
  commentId: M:TinyLife.Mods.Mod.GetCustomFurnitureTextures(TinyLife.Mods.ModInfo)
  id: GetCustomFurnitureTextures(TinyLife.Mods.ModInfo)
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: GetCustomFurnitureTextures(ModInfo)
  nameWithType: Mod.GetCustomFurnitureTextures(ModInfo)
  fullName: TinyLife.Mods.Mod.GetCustomFurnitureTextures(TinyLife.Mods.ModInfo)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: >-
    Return a list of paths (relative to this mod's Content directory) to textures that contain the texture regions used by this mod's custom <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref>s.

    Note that the furniture texture needs to have an associated <xref href="MLEM.Data.DataTextureAtlas" data-throw-if-not-resolved="false"></xref> file in the same location, but with the .atlas file extension.

    By default, an empty <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> is returned.
  example: []
  syntax:
    content: public virtual IEnumerable<string> GetCustomFurnitureTextures(ModInfo info)
    parameters:
    - id: info
      type: TinyLife.Mods.ModInfo
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The custom data texture atlases for this mod's furniture
    content.vb: Public Overridable Function GetCustomFurnitureTextures(info As ModInfo) As IEnumerable(Of String)
  overload: TinyLife.Mods.Mod.GetCustomFurnitureTextures*
- uid: TinyLife.Mods.Mod.PopulateOptions(MLEM.Ui.Elements.Group,TinyLife.Mods.ModInfo)
  commentId: M:TinyLife.Mods.Mod.PopulateOptions(MLEM.Ui.Elements.Group,TinyLife.Mods.ModInfo)
  id: PopulateOptions(MLEM.Ui.Elements.Group,TinyLife.Mods.ModInfo)
  parent: TinyLife.Mods.Mod
  langs:
  - csharp
  - vb
  name: PopulateOptions(Group, ModInfo)
  nameWithType: Mod.PopulateOptions(Group, ModInfo)
  fullName: TinyLife.Mods.Mod.PopulateOptions(MLEM.Ui.Elements.Group, TinyLife.Mods.ModInfo)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Mods
  summary: >-
    Populates this mod's options section, which can be found in the Mods section of the game's main and in-game menus.

    If any elements are added to the <code class="paramref">group</code> provided, a button will display next to this mod to open its options.

    This mod can create, add, and load custom options using <xref href="TinyLife.Mods.ModInfo.LoadOptions%60%601(System.Func%7b%60%600%7d)" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Mods.ModInfo.SaveOptions%60%601(%60%600)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void PopulateOptions(Group group, ModInfo info)
    parameters:
    - id: group
      type: MLEM.Ui.Elements.Group
      description: The group to add options to.
    - id: info
      type: TinyLife.Mods.ModInfo
      description: The game's mod info.
    content.vb: Public Overridable Sub PopulateOptions(group As Group, info As ModInfo)
  overload: TinyLife.Mods.Mod.PopulateOptions*
references:
- uid: TinyLife.Mods.Mod
  commentId: T:TinyLife.Mods.Mod
  parent: TinyLife.Mods
  href: TinyLife.Mods.Mod.html
  name: Mod
  nameWithType: Mod
  fullName: TinyLife.Mods.Mod
- uid: TinyLife.Mods
  commentId: N:TinyLife.Mods
  href: TinyLife.html
  name: TinyLife.Mods
  nameWithType: TinyLife.Mods
  fullName: TinyLife.Mods
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Mods
    name: Mods
    href: TinyLife.Mods.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Mods
    name: Mods
    href: TinyLife.Mods.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Mods.Mod.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Mod>(Mod)
  nameWithType: Extensions.JsonCopy<Mod>(Mod)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Mods.Mod>(TinyLife.Mods.Mod)
  nameWithType.vb: Extensions.JsonCopy(Of Mod)(Mod)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Mods.Mod)(TinyLife.Mods.Mod)
  name.vb: JsonCopy(Of Mod)(Mod)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Mods.Mod)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Mods.Mod
    name: Mod
    href: TinyLife.Mods.Mod.html
  - name: '>'
  - name: (
  - uid: TinyLife.Mods.Mod
    name: Mod
    href: TinyLife.Mods.Mod.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Mods.Mod)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Mods.Mod
    name: Mod
    href: TinyLife.Mods.Mod.html
  - name: )
  - name: (
  - uid: TinyLife.Mods.Mod
    name: Mod
    href: TinyLife.Mods.Mod.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Mods.Mod.Name*
  commentId: Overload:TinyLife.Mods.Mod.Name
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_Name
  name: Name
  nameWithType: Mod.Name
  fullName: TinyLife.Mods.Mod.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Localization
  commentId: T:TinyLife.Localization
  href: TinyLife.Localization.html
  name: Localization
  nameWithType: Localization
  fullName: TinyLife.Localization
- uid: TinyLife.Mods.Mod.Description*
  commentId: Overload:TinyLife.Mods.Mod.Description
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_Description
  name: Description
  nameWithType: Mod.Description
  fullName: TinyLife.Mods.Mod.Description
- uid: TinyLife.GameImpl.Version
  commentId: F:TinyLife.GameImpl.Version
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Version
  name: Version
  nameWithType: GameImpl.Version
  fullName: TinyLife.GameImpl.Version
- uid: TinyLife.Mods.Mod.TestedVersionRange*
  commentId: Overload:TinyLife.Mods.Mod.TestedVersionRange
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_TestedVersionRange
  name: TestedVersionRange
  nameWithType: Mod.TestedVersionRange
  fullName: TinyLife.Mods.Mod.TestedVersionRange
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: TinyLife.Mods.Mod.Version*
  commentId: Overload:TinyLife.Mods.Mod.Version
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_Version
  name: Version
  nameWithType: Mod.Version
  fullName: TinyLife.Mods.Mod.Version
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: TinyLife.Mods.Mod.Icon*
  commentId: Overload:TinyLife.Mods.Mod.Icon
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_Icon
  name: Icon
  nameWithType: Mod.Icon
  fullName: TinyLife.Mods.Mod.Icon
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.Mods.Mod.Initialize(ExtremelySimpleLogger.Logger,MLEM.Data.Content.RawContentManager,MLEM.Data.RuntimeTexturePacker,TinyLife.Mods.ModInfo)
  commentId: M:TinyLife.Mods.Mod.Initialize(ExtremelySimpleLogger.Logger,MLEM.Data.Content.RawContentManager,MLEM.Data.RuntimeTexturePacker,TinyLife.Mods.ModInfo)
  isExternal: true
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_Initialize_ExtremelySimpleLogger_Logger_MLEM_Data_Content_RawContentManager_MLEM_Data_RuntimeTexturePacker_TinyLife_Mods_ModInfo_
  name: Initialize(Logger, RawContentManager, RuntimeTexturePacker, ModInfo)
  nameWithType: Mod.Initialize(Logger, RawContentManager, RuntimeTexturePacker, ModInfo)
  fullName: TinyLife.Mods.Mod.Initialize(ExtremelySimpleLogger.Logger, MLEM.Data.Content.RawContentManager, MLEM.Data.RuntimeTexturePacker, TinyLife.Mods.ModInfo)
  spec.csharp:
  - uid: TinyLife.Mods.Mod.Initialize(ExtremelySimpleLogger.Logger,MLEM.Data.Content.RawContentManager,MLEM.Data.RuntimeTexturePacker,TinyLife.Mods.ModInfo)
    name: Initialize
    href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_Initialize_ExtremelySimpleLogger_Logger_MLEM_Data_Content_RawContentManager_MLEM_Data_RuntimeTexturePacker_TinyLife_Mods_ModInfo_
  - name: (
  - uid: ExtremelySimpleLogger.Logger
    name: Logger
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Data.Content.RawContentManager
    name: RawContentManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Data.RuntimeTexturePacker
    name: RuntimeTexturePacker
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
    href: TinyLife.Mods.ModInfo.html
  - name: )
  spec.vb:
  - uid: TinyLife.Mods.Mod.Initialize(ExtremelySimpleLogger.Logger,MLEM.Data.Content.RawContentManager,MLEM.Data.RuntimeTexturePacker,TinyLife.Mods.ModInfo)
    name: Initialize
    href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_Initialize_ExtremelySimpleLogger_Logger_MLEM_Data_Content_RawContentManager_MLEM_Data_RuntimeTexturePacker_TinyLife_Mods_ModInfo_
  - name: (
  - uid: ExtremelySimpleLogger.Logger
    name: Logger
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Data.Content.RawContentManager
    name: RawContentManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Data.RuntimeTexturePacker
    name: RuntimeTexturePacker
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
    href: TinyLife.Mods.ModInfo.html
  - name: )
- uid: TinyLife.Mods.Mod.AddGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
  commentId: M:TinyLife.Mods.Mod.AddGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_AddGameContent_TinyLife_GameImpl_TinyLife_Mods_ModInfo_
  name: AddGameContent(GameImpl, ModInfo)
  nameWithType: Mod.AddGameContent(GameImpl, ModInfo)
  fullName: TinyLife.Mods.Mod.AddGameContent(TinyLife.GameImpl, TinyLife.Mods.ModInfo)
  spec.csharp:
  - uid: TinyLife.Mods.Mod.AddGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
    name: AddGameContent
    href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_AddGameContent_TinyLife_GameImpl_TinyLife_Mods_ModInfo_
  - name: (
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
    href: TinyLife.Mods.ModInfo.html
  - name: )
  spec.vb:
  - uid: TinyLife.Mods.Mod.AddGameContent(TinyLife.GameImpl,TinyLife.Mods.ModInfo)
    name: AddGameContent
    href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_AddGameContent_TinyLife_GameImpl_TinyLife_Mods_ModInfo_
  - name: (
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
    href: TinyLife.Mods.ModInfo.html
  - name: )
- uid: TinyLife.Mods.Mod.IssueTrackerUrl*
  commentId: Overload:TinyLife.Mods.Mod.IssueTrackerUrl
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_IssueTrackerUrl
  name: IssueTrackerUrl
  nameWithType: Mod.IssueTrackerUrl
  fullName: TinyLife.Mods.Mod.IssueTrackerUrl
- uid: TinyLife.Mods.Mod.WebsiteUrl*
  commentId: Overload:TinyLife.Mods.Mod.WebsiteUrl
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_WebsiteUrl
  name: WebsiteUrl
  nameWithType: Mod.WebsiteUrl
  fullName: TinyLife.Mods.Mod.WebsiteUrl
- uid: TinyLife.Mods.Mod.DonationUrl*
  commentId: Overload:TinyLife.Mods.Mod.DonationUrl
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_DonationUrl
  name: DonationUrl
  nameWithType: Mod.DonationUrl
  fullName: TinyLife.Mods.Mod.DonationUrl
- uid: HarmonyLib.Harmony
  commentId: T:HarmonyLib.Harmony
  parent: HarmonyLib
  isExternal: true
  href: https://github.com/pardeike/Harmony/blob/789df191bbaf6610232d50e7ef7dddc0d2812549/Harmony/Public/Harmony.cs
  name: Harmony
  nameWithType: Harmony
  fullName: HarmonyLib.Harmony
- uid: TinyLife.Mods.ModInfo.Harmony
  commentId: F:TinyLife.Mods.ModInfo.Harmony
  href: TinyLife.Mods.ModInfo.html#TinyLife_Mods_ModInfo_Harmony
  name: Harmony
  nameWithType: ModInfo.Harmony
  fullName: TinyLife.Mods.ModInfo.Harmony
- uid: TinyLife.Mods.Mod.RequiresHarmony*
  commentId: Overload:TinyLife.Mods.Mod.RequiresHarmony
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_RequiresHarmony
  name: RequiresHarmony
  nameWithType: Mod.RequiresHarmony
  fullName: TinyLife.Mods.Mod.RequiresHarmony
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: HarmonyLib
  commentId: N:HarmonyLib
  isExternal: true
  name: HarmonyLib
  nameWithType: HarmonyLib
  fullName: HarmonyLib
- uid: MLEM.Data.Content.RawContentManager
  commentId: T:MLEM.Data.Content.RawContentManager
  parent: MLEM.Data.Content
  isExternal: true
  name: RawContentManager
  nameWithType: RawContentManager
  fullName: MLEM.Data.Content.RawContentManager
- uid: Microsoft.Xna.Framework.Content.ContentManager
  commentId: T:Microsoft.Xna.Framework.Content.ContentManager
  parent: Microsoft.Xna.Framework.Content
  isExternal: true
  name: ContentManager
  nameWithType: ContentManager
  fullName: Microsoft.Xna.Framework.Content.ContentManager
- uid: TinyLife.Mods.ModInfo
  commentId: T:TinyLife.Mods.ModInfo
  parent: TinyLife.Mods
  href: TinyLife.Mods.ModInfo.html
  name: ModInfo
  nameWithType: ModInfo
  fullName: TinyLife.Mods.ModInfo
- uid: TinyLife.Mods.Mod.Initialize*
  commentId: Overload:TinyLife.Mods.Mod.Initialize
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_Initialize_ExtremelySimpleLogger_Logger_MLEM_Data_Content_RawContentManager_MLEM_Data_RuntimeTexturePacker_TinyLife_Mods_ModInfo_
  name: Initialize
  nameWithType: Mod.Initialize
  fullName: TinyLife.Mods.Mod.Initialize
- uid: ExtremelySimpleLogger.Logger
  commentId: T:ExtremelySimpleLogger.Logger
  parent: ExtremelySimpleLogger
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: ExtremelySimpleLogger.Logger
- uid: MLEM.Data.RuntimeTexturePacker
  commentId: T:MLEM.Data.RuntimeTexturePacker
  parent: MLEM.Data
  isExternal: true
  name: RuntimeTexturePacker
  nameWithType: RuntimeTexturePacker
  fullName: MLEM.Data.RuntimeTexturePacker
- uid: MLEM.Data.Content
  commentId: N:MLEM.Data.Content
  isExternal: true
  name: MLEM.Data.Content
  nameWithType: MLEM.Data.Content
  fullName: MLEM.Data.Content
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Content
    name: Content
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Content
    name: Content
    isExternal: true
- uid: Microsoft.Xna.Framework.Content
  commentId: N:Microsoft.Xna.Framework.Content
  isExternal: true
  name: Microsoft.Xna.Framework.Content
  nameWithType: Microsoft.Xna.Framework.Content
  fullName: Microsoft.Xna.Framework.Content
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Content
    name: Content
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Content
    name: Content
    isExternal: true
- uid: ExtremelySimpleLogger
  commentId: N:ExtremelySimpleLogger
  isExternal: true
  name: ExtremelySimpleLogger
  nameWithType: ExtremelySimpleLogger
  fullName: ExtremelySimpleLogger
- uid: MLEM.Data
  commentId: N:MLEM.Data
  isExternal: true
  name: MLEM.Data
  nameWithType: MLEM.Data
  fullName: MLEM.Data
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
- uid: TinyLife.GameImpl
  commentId: T:TinyLife.GameImpl
  parent: TinyLife
  href: TinyLife.GameImpl.html
  name: GameImpl
  nameWithType: GameImpl
  fullName: TinyLife.GameImpl
- uid: TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)
  commentId: M:TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Register_TinyLife_Objects_FurnitureType_TypeSettings_
  name: Register(TypeSettings)
  nameWithType: FurnitureType.Register(FurnitureType.TypeSettings)
  fullName: TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)
    name: Register
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Register_TinyLife_Objects_FurnitureType_TypeSettings_
  - name: (
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)
    name: Register
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Register_TinyLife_Objects_FurnitureType_TypeSettings_
  - name: (
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
  - name: )
- uid: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  commentId: M:TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_Register_TinyLife_Actions_ActionType_TypeSettings_
  name: Register(TypeSettings)
  nameWithType: ActionType.Register(ActionType.TypeSettings)
  fullName: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  spec.csharp:
  - uid: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
    name: Register
    href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_Register_TinyLife_Actions_ActionType_TypeSettings_
  - name: (
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
    name: Register
    href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_Register_TinyLife_Actions_ActionType_TypeSettings_
  - name: (
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
  - name: )
- uid: TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
  commentId: M:TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
  href: TinyLife.Objects.Clothes.html#TinyLife_Objects_Clothes_Register_TinyLife_Objects_Clothes_
  name: Register(Clothes)
  nameWithType: Clothes.Register(Clothes)
  fullName: TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
  spec.csharp:
  - uid: TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
    name: Register
    href: TinyLife.Objects.Clothes.html#TinyLife_Objects_Clothes_Register_TinyLife_Objects_Clothes_
  - name: (
  - uid: TinyLife.Objects.Clothes
    name: Clothes
    href: TinyLife.Objects.Clothes.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
    name: Register
    href: TinyLife.Objects.Clothes.html#TinyLife_Objects_Clothes_Register_TinyLife_Objects_Clothes_
  - name: (
  - uid: TinyLife.Objects.Clothes
    name: Clothes
    href: TinyLife.Objects.Clothes.html
  - name: )
- uid: TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
  commentId: M:TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Register_TinyLife_Skills_SkillType_
  name: Register(SkillType)
  nameWithType: SkillType.Register(SkillType)
  fullName: TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
  spec.csharp:
  - uid: TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
    name: Register
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Register_TinyLife_Skills_SkillType_
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
    name: Register
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Register_TinyLife_Skills_SkillType_
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: )
- uid: TinyLife.Mods.Mod.AddGameContent*
  commentId: Overload:TinyLife.Mods.Mod.AddGameContent
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_AddGameContent_TinyLife_GameImpl_TinyLife_Mods_ModInfo_
  name: AddGameContent
  nameWithType: Mod.AddGameContent
  fullName: TinyLife.Mods.Mod.AddGameContent
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.Mods.Mod.FinalizeGameContent*
  commentId: Overload:TinyLife.Mods.Mod.FinalizeGameContent
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_FinalizeGameContent_TinyLife_GameImpl_TinyLife_Mods_ModInfo_
  name: FinalizeGameContent
  nameWithType: Mod.FinalizeGameContent
  fullName: TinyLife.Mods.Mod.FinalizeGameContent
- uid: TinyLife.Objects.FurnitureType
  commentId: T:TinyLife.Objects.FurnitureType
  parent: TinyLife.Objects
  href: TinyLife.Objects.FurnitureType.html
  name: FurnitureType
  nameWithType: FurnitureType
  fullName: TinyLife.Objects.FurnitureType
- uid: MLEM.Data.DataTextureAtlas
  commentId: T:MLEM.Data.DataTextureAtlas
  parent: MLEM.Data
  isExternal: true
  name: DataTextureAtlas
  nameWithType: DataTextureAtlas
  fullName: MLEM.Data.DataTextureAtlas
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Mods.Mod.GetCustomFurnitureTextures*
  commentId: Overload:TinyLife.Mods.Mod.GetCustomFurnitureTextures
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_GetCustomFurnitureTextures_TinyLife_Mods_ModInfo_
  name: GetCustomFurnitureTextures
  nameWithType: Mod.GetCustomFurnitureTextures
  fullName: TinyLife.Mods.Mod.GetCustomFurnitureTextures
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Mods.ModInfo.LoadOptions``1(System.Func{``0})
  commentId: M:TinyLife.Mods.ModInfo.LoadOptions``1(System.Func{``0})
  isExternal: true
  href: TinyLife.Mods.ModInfo.html#TinyLife_Mods_ModInfo_LoadOptions__1_System_Func___0__
  name: LoadOptions<T>(Func<T>)
  nameWithType: ModInfo.LoadOptions<T>(Func<T>)
  fullName: TinyLife.Mods.ModInfo.LoadOptions<T>(System.Func<T>)
  nameWithType.vb: ModInfo.LoadOptions(Of T)(Func(Of T))
  fullName.vb: TinyLife.Mods.ModInfo.LoadOptions(Of T)(System.Func(Of T))
  name.vb: LoadOptions(Of T)(Func(Of T))
  spec.csharp:
  - uid: TinyLife.Mods.ModInfo.LoadOptions``1(System.Func{``0})
    name: LoadOptions
    href: TinyLife.Mods.ModInfo.html#TinyLife_Mods_ModInfo_LoadOptions__1_System_Func___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Mods.ModInfo.LoadOptions``1(System.Func{``0})
    name: LoadOptions
    href: TinyLife.Mods.ModInfo.html#TinyLife_Mods_ModInfo_LoadOptions__1_System_Func___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: TinyLife.Mods.ModInfo.SaveOptions``1(``0)
  commentId: M:TinyLife.Mods.ModInfo.SaveOptions``1(``0)
  href: TinyLife.Mods.ModInfo.html#TinyLife_Mods_ModInfo_SaveOptions__1___0_
  name: SaveOptions<T>(T)
  nameWithType: ModInfo.SaveOptions<T>(T)
  fullName: TinyLife.Mods.ModInfo.SaveOptions<T>(T)
  nameWithType.vb: ModInfo.SaveOptions(Of T)(T)
  fullName.vb: TinyLife.Mods.ModInfo.SaveOptions(Of T)(T)
  name.vb: SaveOptions(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Mods.ModInfo.SaveOptions``1(``0)
    name: SaveOptions
    href: TinyLife.Mods.ModInfo.html#TinyLife_Mods_ModInfo_SaveOptions__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Mods.ModInfo.SaveOptions``1(``0)
    name: SaveOptions
    href: TinyLife.Mods.ModInfo.html#TinyLife_Mods_ModInfo_SaveOptions__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Mods.Mod.PopulateOptions*
  commentId: Overload:TinyLife.Mods.Mod.PopulateOptions
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_PopulateOptions_MLEM_Ui_Elements_Group_TinyLife_Mods_ModInfo_
  name: PopulateOptions
  nameWithType: Mod.PopulateOptions
  fullName: TinyLife.Mods.Mod.PopulateOptions
- uid: MLEM.Ui.Elements.Group
  commentId: T:MLEM.Ui.Elements.Group
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Group
  nameWithType: Group
  fullName: MLEM.Ui.Elements.Group
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
