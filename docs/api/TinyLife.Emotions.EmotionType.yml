### YamlMime:ManagedReference
items:
- uid: TinyLife.Emotions.EmotionType
  commentId: T:TinyLife.Emotions.EmotionType
  id: EmotionType
  parent: TinyLife.Emotions
  children:
  - TinyLife.Emotions.EmotionType.#ctor(System.String,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,TinyLife.Emotions.EmotionType.TypeCategory,Microsoft.Xna.Framework.Audio.SoundEffect)
  - TinyLife.Emotions.EmotionType.Angry
  - TinyLife.Emotions.EmotionType.Asleep
  - TinyLife.Emotions.EmotionType.Bored
  - TinyLife.Emotions.EmotionType.Category
  - TinyLife.Emotions.EmotionType.Color
  - TinyLife.Emotions.EmotionType.Confident
  - TinyLife.Emotions.EmotionType.Creative
  - TinyLife.Emotions.EmotionType.Embarrassed
  - TinyLife.Emotions.EmotionType.Energetic
  - TinyLife.Emotions.EmotionType.Fine
  - TinyLife.Emotions.EmotionType.Focused
  - TinyLife.Emotions.EmotionType.Frisky
  - TinyLife.Emotions.EmotionType.Goofy
  - TinyLife.Emotions.EmotionType.Happy
  - TinyLife.Emotions.EmotionType.Icon
  - TinyLife.Emotions.EmotionType.Name
  - TinyLife.Emotions.EmotionType.ParticleSpawner
  - TinyLife.Emotions.EmotionType.Priority
  - TinyLife.Emotions.EmotionType.Register(TinyLife.Emotions.EmotionType)
  - TinyLife.Emotions.EmotionType.Relaxed
  - TinyLife.Emotions.EmotionType.Sad
  - TinyLife.Emotions.EmotionType.StingSound
  - TinyLife.Emotions.EmotionType.Stunned
  - TinyLife.Emotions.EmotionType.Types
  - TinyLife.Emotions.EmotionType.Uncomfortable
  - TinyLife.Emotions.EmotionType.Uneasy
  langs:
  - csharp
  - vb
  name: EmotionType
  nameWithType: EmotionType
  fullName: TinyLife.Emotions.EmotionType
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  summary: >-
    An emotion type is a type of feeling that a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> can have.

    The emotion that a person has results from that person's applied <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref><xref href="TinyLife.Emotions.EmotionModifier.Instance" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(MigratingStaticJsonConverter<EmotionType>), new object[] { typeof(EmotionType), "PrivateTypes", true })]

      public class EmotionType
    content.vb: >-
      <JsonConverter(GetType(MigratingStaticJsonConverter(Of EmotionType)), New Object() { GetType(EmotionType), "PrivateTypes", True })>

      Public Class EmotionType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Emotions.EmotionType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Emotions.EmotionType.Types
  commentId: F:TinyLife.Emotions.EmotionType.Types
  id: Types
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: EmotionType.Types
  fullName: TinyLife.Emotions.EmotionType.Types
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  summary: A registry of all <xref href="TinyLife.Emotions.EmotionType" data-throw-if-not-resolved="false"></xref> instances from the game and mods
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, EmotionType> Types
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Emotions.EmotionType}
    content.vb: Public Shared ReadOnly Types As ReadOnlyDictionary(Of String, EmotionType)
- uid: TinyLife.Emotions.EmotionType.Fine
  commentId: F:TinyLife.Emotions.EmotionType.Fine
  id: Fine
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Fine
  nameWithType: EmotionType.Fine
  fullName: TinyLife.Emotions.EmotionType.Fine
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Fine
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Fine As EmotionType
- uid: TinyLife.Emotions.EmotionType.Uncomfortable
  commentId: F:TinyLife.Emotions.EmotionType.Uncomfortable
  id: Uncomfortable
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Uncomfortable
  nameWithType: EmotionType.Uncomfortable
  fullName: TinyLife.Emotions.EmotionType.Uncomfortable
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Uncomfortable
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Uncomfortable As EmotionType
- uid: TinyLife.Emotions.EmotionType.Happy
  commentId: F:TinyLife.Emotions.EmotionType.Happy
  id: Happy
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Happy
  nameWithType: EmotionType.Happy
  fullName: TinyLife.Emotions.EmotionType.Happy
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Happy
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Happy As EmotionType
- uid: TinyLife.Emotions.EmotionType.Asleep
  commentId: F:TinyLife.Emotions.EmotionType.Asleep
  id: Asleep
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Asleep
  nameWithType: EmotionType.Asleep
  fullName: TinyLife.Emotions.EmotionType.Asleep
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Asleep
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Asleep As EmotionType
- uid: TinyLife.Emotions.EmotionType.Embarrassed
  commentId: F:TinyLife.Emotions.EmotionType.Embarrassed
  id: Embarrassed
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Embarrassed
  nameWithType: EmotionType.Embarrassed
  fullName: TinyLife.Emotions.EmotionType.Embarrassed
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Embarrassed
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Embarrassed As EmotionType
- uid: TinyLife.Emotions.EmotionType.Sad
  commentId: F:TinyLife.Emotions.EmotionType.Sad
  id: Sad
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Sad
  nameWithType: EmotionType.Sad
  fullName: TinyLife.Emotions.EmotionType.Sad
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Sad
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Sad As EmotionType
- uid: TinyLife.Emotions.EmotionType.Bored
  commentId: F:TinyLife.Emotions.EmotionType.Bored
  id: Bored
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Bored
  nameWithType: EmotionType.Bored
  fullName: TinyLife.Emotions.EmotionType.Bored
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Bored
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Bored As EmotionType
- uid: TinyLife.Emotions.EmotionType.Frisky
  commentId: F:TinyLife.Emotions.EmotionType.Frisky
  id: Frisky
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Frisky
  nameWithType: EmotionType.Frisky
  fullName: TinyLife.Emotions.EmotionType.Frisky
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Frisky
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Frisky As EmotionType
- uid: TinyLife.Emotions.EmotionType.Creative
  commentId: F:TinyLife.Emotions.EmotionType.Creative
  id: Creative
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Creative
  nameWithType: EmotionType.Creative
  fullName: TinyLife.Emotions.EmotionType.Creative
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Creative
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Creative As EmotionType
- uid: TinyLife.Emotions.EmotionType.Focused
  commentId: F:TinyLife.Emotions.EmotionType.Focused
  id: Focused
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Focused
  nameWithType: EmotionType.Focused
  fullName: TinyLife.Emotions.EmotionType.Focused
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Focused
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Focused As EmotionType
- uid: TinyLife.Emotions.EmotionType.Stunned
  commentId: F:TinyLife.Emotions.EmotionType.Stunned
  id: Stunned
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Stunned
  nameWithType: EmotionType.Stunned
  fullName: TinyLife.Emotions.EmotionType.Stunned
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Stunned
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Stunned As EmotionType
- uid: TinyLife.Emotions.EmotionType.Angry
  commentId: F:TinyLife.Emotions.EmotionType.Angry
  id: Angry
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Angry
  nameWithType: EmotionType.Angry
  fullName: TinyLife.Emotions.EmotionType.Angry
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Angry
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Angry As EmotionType
- uid: TinyLife.Emotions.EmotionType.Energetic
  commentId: F:TinyLife.Emotions.EmotionType.Energetic
  id: Energetic
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Energetic
  nameWithType: EmotionType.Energetic
  fullName: TinyLife.Emotions.EmotionType.Energetic
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Energetic
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Energetic As EmotionType
- uid: TinyLife.Emotions.EmotionType.Uneasy
  commentId: F:TinyLife.Emotions.EmotionType.Uneasy
  id: Uneasy
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Uneasy
  nameWithType: EmotionType.Uneasy
  fullName: TinyLife.Emotions.EmotionType.Uneasy
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Uneasy
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Uneasy As EmotionType
- uid: TinyLife.Emotions.EmotionType.Relaxed
  commentId: F:TinyLife.Emotions.EmotionType.Relaxed
  id: Relaxed
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Relaxed
  nameWithType: EmotionType.Relaxed
  fullName: TinyLife.Emotions.EmotionType.Relaxed
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Relaxed
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Relaxed As EmotionType
- uid: TinyLife.Emotions.EmotionType.Confident
  commentId: F:TinyLife.Emotions.EmotionType.Confident
  id: Confident
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Confident
  nameWithType: EmotionType.Confident
  fullName: TinyLife.Emotions.EmotionType.Confident
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Confident
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Confident As EmotionType
- uid: TinyLife.Emotions.EmotionType.Goofy
  commentId: F:TinyLife.Emotions.EmotionType.Goofy
  id: Goofy
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Goofy
  nameWithType: EmotionType.Goofy
  fullName: TinyLife.Emotions.EmotionType.Goofy
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Goofy
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Goofy As EmotionType
- uid: TinyLife.Emotions.EmotionType.Name
  commentId: F:TinyLife.Emotions.EmotionType.Name
  id: Name
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EmotionType.Name
  fullName: TinyLife.Emotions.EmotionType.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  summary: This emotion's name
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Emotions.EmotionType.Icon
  commentId: F:TinyLife.Emotions.EmotionType.Icon
  id: Icon
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: EmotionType.Icon
  fullName: TinyLife.Emotions.EmotionType.Icon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  summary: This emotion's icon, which is used in the portrait section for a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> that has this emotion
  example: []
  syntax:
    content: public readonly TextureRegion Icon
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Icon As TextureRegion
- uid: TinyLife.Emotions.EmotionType.Color
  commentId: F:TinyLife.Emotions.EmotionType.Color
  id: Color
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: EmotionType.Color
  fullName: TinyLife.Emotions.EmotionType.Color
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  summary: >-
    The color that represents this emotion.

    The color is used as a backdrop for <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> instances of this type.
  example: []
  syntax:
    content: public readonly Color Color
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public ReadOnly Color As Color
- uid: TinyLife.Emotions.EmotionType.Category
  commentId: F:TinyLife.Emotions.EmotionType.Category
  id: Category
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: EmotionType.Category
  fullName: TinyLife.Emotions.EmotionType.Category
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  summary: >-
    The <xref href="TinyLife.Emotions.EmotionType.TypeCategory" data-throw-if-not-resolved="false"></xref> that this emotion type fits into.

    The category is used for ordering and organizing <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> instances.
  example: []
  syntax:
    content: public readonly EmotionType.TypeCategory Category
    return:
      type: TinyLife.Emotions.EmotionType.TypeCategory
    content.vb: Public ReadOnly Category As EmotionType.TypeCategory
- uid: TinyLife.Emotions.EmotionType.StingSound
  commentId: F:TinyLife.Emotions.EmotionType.StingSound
  id: StingSound
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: StingSound
  nameWithType: EmotionType.StingSound
  fullName: TinyLife.Emotions.EmotionType.StingSound
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  summary: >-
    The sting sound effect to play when this emotion becomes active.

    If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, no sound effect will play.
  example: []
  syntax:
    content: public readonly SoundEffect StingSound
    return:
      type: Microsoft.Xna.Framework.Audio.SoundEffect
    content.vb: Public ReadOnly StingSound As SoundEffect
- uid: TinyLife.Emotions.EmotionType.Priority
  commentId: P:TinyLife.Emotions.EmotionType.Priority
  id: Priority
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: EmotionType.Priority
  fullName: TinyLife.Emotions.EmotionType.Priority
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  summary: >-
    The priority that this emotion type has, which determines whether it is chosen over another emotion with the same total amount.

    A higher priority means the emotion is chosen over a lower priority one. The default priority is 0.
  example: []
  syntax:
    content: public int Priority { get; init; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Priority As Integer
  overload: TinyLife.Emotions.EmotionType.Priority*
- uid: TinyLife.Emotions.EmotionType.ParticleSpawner
  commentId: P:TinyLife.Emotions.EmotionType.ParticleSpawner
  id: ParticleSpawner
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: ParticleSpawner
  nameWithType: EmotionType.ParticleSpawner
  fullName: TinyLife.Emotions.EmotionType.ParticleSpawner
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  summary: This emotion type's particle spawner, which can be used to spawn <xref href="TinyLife.Objects.Particle" data-throw-if-not-resolved="false"></xref> instances around any <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> who is currently experiencing this emtion. The first value is a function that returns the chance of a particle spawning per frame, while the second value is the spawner itself, which is expected to spawn particles using <xref href="TinyLife.Objects.Particle.Spawn(TinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Func%7bMicrosoft.Xna.Framework.Vector2%2cTinyLife.Objects.Particle%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public (Func<PersonLike, float> Chance, Action<PersonLike, Random> Spawner) ParticleSpawner { get; init; }
    parameters: []
    return:
      type: System.ValueTuple{System.Func{TinyLife.Objects.PersonLike,System.Single},System.Action{TinyLife.Objects.PersonLike,System.Random}}
    content.vb: Public Property ParticleSpawner As (Chance As Func(Of PersonLike, Single), Spawner As Action(Of PersonLike, Random))
  overload: TinyLife.Emotions.EmotionType.ParticleSpawner*
- uid: TinyLife.Emotions.EmotionType.#ctor(System.String,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,TinyLife.Emotions.EmotionType.TypeCategory,Microsoft.Xna.Framework.Audio.SoundEffect)
  commentId: M:TinyLife.Emotions.EmotionType.#ctor(System.String,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,TinyLife.Emotions.EmotionType.TypeCategory,Microsoft.Xna.Framework.Audio.SoundEffect)
  id: '#ctor(System.String,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,TinyLife.Emotions.EmotionType.TypeCategory,Microsoft.Xna.Framework.Audio.SoundEffect)'
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: EmotionType(string, TextureRegion, Color, TypeCategory, SoundEffect)
  nameWithType: EmotionType.EmotionType(string, TextureRegion, Color, EmotionType.TypeCategory, SoundEffect)
  fullName: TinyLife.Emotions.EmotionType.EmotionType(string, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, TinyLife.Emotions.EmotionType.TypeCategory, Microsoft.Xna.Framework.Audio.SoundEffect)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  summary: Creates a new emotion type with the given settings
  example: []
  syntax:
    content: public EmotionType(string name, TextureRegion icon, Color color, EmotionType.TypeCategory category, SoundEffect stingSound)
    parameters:
    - id: name
      type: System.String
      description: The emotion type's name
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The emotion type's icon
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The emotion type's color
    - id: category
      type: TinyLife.Emotions.EmotionType.TypeCategory
      description: This emotion type's category
    - id: stingSound
      type: Microsoft.Xna.Framework.Audio.SoundEffect
      description: The sound effect that should play when this emotion becomes active, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to have no sound effect.
    content.vb: Public Sub New(name As String, icon As TextureRegion, color As Color, category As EmotionType.TypeCategory, stingSound As SoundEffect)
  overload: TinyLife.Emotions.EmotionType.#ctor*
  nameWithType.vb: EmotionType.New(String, TextureRegion, Color, EmotionType.TypeCategory, SoundEffect)
  fullName.vb: TinyLife.Emotions.EmotionType.New(String, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, TinyLife.Emotions.EmotionType.TypeCategory, Microsoft.Xna.Framework.Audio.SoundEffect)
  name.vb: New(String, TextureRegion, Color, TypeCategory, SoundEffect)
- uid: TinyLife.Emotions.EmotionType.Register(TinyLife.Emotions.EmotionType)
  commentId: M:TinyLife.Emotions.EmotionType.Register(TinyLife.Emotions.EmotionType)
  id: Register(TinyLife.Emotions.EmotionType)
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Register(EmotionType)
  nameWithType: EmotionType.Register(EmotionType)
  fullName: TinyLife.Emotions.EmotionType.Register(TinyLife.Emotions.EmotionType)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Emotions
  summary: Registers the given emotion type to the <xref href="TinyLife.Emotions.EmotionType.Types" data-throw-if-not-resolved="false"></xref> registry
  example: []
  syntax:
    content: public static EmotionType Register(EmotionType type)
    parameters:
    - id: type
      type: TinyLife.Emotions.EmotionType
      description: The type to register
    return:
      type: TinyLife.Emotions.EmotionType
      description: The passed type, for chaining
    content.vb: Public Shared Function Register(type As EmotionType) As EmotionType
  overload: TinyLife.Emotions.EmotionType.Register*
references:
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Emotions.EmotionModifier
  commentId: T:TinyLife.Emotions.EmotionModifier
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionModifier.html
  name: EmotionModifier
  nameWithType: EmotionModifier
  fullName: TinyLife.Emotions.EmotionModifier
- uid: TinyLife.Emotions.EmotionModifier.Instance
  commentId: T:TinyLife.Emotions.EmotionModifier.Instance
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionModifier.html
  name: EmotionModifier.Instance
  nameWithType: EmotionModifier.Instance
  fullName: TinyLife.Emotions.EmotionModifier.Instance
  spec.csharp:
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
    href: TinyLife.Emotions.EmotionModifier.Instance.html
  spec.vb:
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
    href: TinyLife.Emotions.EmotionModifier.Instance.html
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  href: TinyLife.html
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Emotions.EmotionType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<EmotionType>(EmotionType)
  nameWithType: Extensions.JsonCopy<EmotionType>(EmotionType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Emotions.EmotionType>(TinyLife.Emotions.EmotionType)
  nameWithType.vb: Extensions.JsonCopy(Of EmotionType)(EmotionType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Emotions.EmotionType)(TinyLife.Emotions.EmotionType)
  name.vb: JsonCopy(Of EmotionType)(EmotionType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Emotions.EmotionType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: '>'
  - name: (
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Emotions.EmotionType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: )
  - name: (
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Emotions.EmotionType
  commentId: T:TinyLife.Emotions.EmotionType
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionType.html
  name: EmotionType
  nameWithType: EmotionType
  fullName: TinyLife.Emotions.EmotionType
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Emotions.EmotionType}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Emotions.EmotionType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, EmotionType>
  nameWithType: ReadOnlyDictionary<string, EmotionType>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Emotions.EmotionType>
  nameWithType.vb: ReadOnlyDictionary(Of String, EmotionType)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Emotions.EmotionType)
  name.vb: ReadOnlyDictionary(Of String, EmotionType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Emotions.EmotionType.TypeCategory
  commentId: T:TinyLife.Emotions.EmotionType.TypeCategory
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionType.html
  name: EmotionType.TypeCategory
  nameWithType: EmotionType.TypeCategory
  fullName: TinyLife.Emotions.EmotionType.TypeCategory
  spec.csharp:
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: .
  - uid: TinyLife.Emotions.EmotionType.TypeCategory
    name: TypeCategory
    href: TinyLife.Emotions.EmotionType.TypeCategory.html
  spec.vb:
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: .
  - uid: TinyLife.Emotions.EmotionType.TypeCategory
    name: TypeCategory
    href: TinyLife.Emotions.EmotionType.TypeCategory.html
- uid: Microsoft.Xna.Framework.Audio.SoundEffect
  commentId: T:Microsoft.Xna.Framework.Audio.SoundEffect
  parent: Microsoft.Xna.Framework.Audio
  isExternal: true
  name: SoundEffect
  nameWithType: SoundEffect
  fullName: Microsoft.Xna.Framework.Audio.SoundEffect
- uid: Microsoft.Xna.Framework.Audio
  commentId: N:Microsoft.Xna.Framework.Audio
  isExternal: true
  name: Microsoft.Xna.Framework.Audio
  nameWithType: Microsoft.Xna.Framework.Audio
  fullName: Microsoft.Xna.Framework.Audio
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Audio
    name: Audio
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Audio
    name: Audio
    isExternal: true
- uid: TinyLife.Emotions.EmotionType.Priority*
  commentId: Overload:TinyLife.Emotions.EmotionType.Priority
  href: TinyLife.Emotions.EmotionType.html#TinyLife_Emotions_EmotionType_Priority
  name: Priority
  nameWithType: EmotionType.Priority
  fullName: TinyLife.Emotions.EmotionType.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Objects.Particle
  commentId: T:TinyLife.Objects.Particle
  parent: TinyLife.Objects
  href: TinyLife.Objects.Particle.html
  name: Particle
  nameWithType: Particle
  fullName: TinyLife.Objects.Particle
- uid: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  commentId: M:TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  isExternal: true
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Spawn_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Func_Microsoft_Xna_Framework_Vector2_TinyLife_Objects_Particle__
  name: Spawn(Map, Vector2, Func<Vector2, Particle>)
  nameWithType: Particle.Spawn(Map, Vector2, Func<Vector2, Particle>)
  fullName: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, System.Func<Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle>)
  nameWithType.vb: Particle.Spawn(Map, Vector2, Func(Of Vector2, Particle))
  fullName.vb: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, System.Func(Of Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle))
  name.vb: Spawn(Map, Vector2, Func(Of Vector2, Particle))
  spec.csharp:
  - uid: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
    name: Spawn
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Spawn_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Func_Microsoft_Xna_Framework_Vector2_TinyLife_Objects_Particle__
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
    name: Spawn
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Spawn_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Func_Microsoft_Xna_Framework_Vector2_TinyLife_Objects_Particle__
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: )
  - name: )
- uid: TinyLife.Emotions.EmotionType.ParticleSpawner*
  commentId: Overload:TinyLife.Emotions.EmotionType.ParticleSpawner
  href: TinyLife.Emotions.EmotionType.html#TinyLife_Emotions_EmotionType_ParticleSpawner
  name: ParticleSpawner
  nameWithType: EmotionType.ParticleSpawner
  fullName: TinyLife.Emotions.EmotionType.ParticleSpawner
- uid: System.ValueTuple{System.Func{TinyLife.Objects.PersonLike,System.Single},System.Action{TinyLife.Objects.PersonLike,System.Random}}
  commentId: T:System.ValueTuple{System.Func{TinyLife.Objects.PersonLike,System.Single},System.Action{TinyLife.Objects.PersonLike,System.Random}}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: (Func<PersonLike, float> Chance, Action<PersonLike, Random> Spawner)
  nameWithType: (Func<PersonLike, float> Chance, Action<PersonLike, Random> Spawner)
  fullName: (System.Func<TinyLife.Objects.PersonLike, float> Chance, System.Action<TinyLife.Objects.PersonLike, System.Random> Spawner)
  nameWithType.vb: (Chance As Func(Of PersonLike, Single), Spawner As Action(Of PersonLike, Random))
  fullName.vb: (Chance As System.Func(Of TinyLife.Objects.PersonLike, Single), Spawner As System.Action(Of TinyLife.Objects.PersonLike, System.Random))
  name.vb: (Chance As Func(Of PersonLike, Single), Spawner As Action(Of PersonLike, Random))
  spec.csharp:
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Func{TinyLife.Objects.PersonLike,System.Single},System.Action{TinyLife.Objects.PersonLike,System.Random}}.Chance
    name: Chance
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-tinylife.objects.personlike,system.single-,system.action-tinylife.objects.personlike,system.random--.chance
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Func{TinyLife.Objects.PersonLike,System.Single},System.Action{TinyLife.Objects.PersonLike,System.Random}}.Spawner
    name: Spawner
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-tinylife.objects.personlike,system.single-,system.action-tinylife.objects.personlike,system.random--.spawner
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Func{TinyLife.Objects.PersonLike,System.Single},System.Action{TinyLife.Objects.PersonLike,System.Random}}.Chance
    name: Chance
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-tinylife.objects.personlike,system.single-,system.action-tinylife.objects.personlike,system.random--.chance
  - name: " "
  - name: As
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Func{TinyLife.Objects.PersonLike,System.Single},System.Action{TinyLife.Objects.PersonLike,System.Random}}.Spawner
    name: Spawner
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-tinylife.objects.personlike,system.single-,system.action-tinylife.objects.personlike,system.random--.spawner
  - name: " "
  - name: As
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: )
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Emotions.EmotionType.#ctor*
  commentId: Overload:TinyLife.Emotions.EmotionType.#ctor
  href: TinyLife.Emotions.EmotionType.html#TinyLife_Emotions_EmotionType__ctor_System_String_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_TinyLife_Emotions_EmotionType_TypeCategory_Microsoft_Xna_Framework_Audio_SoundEffect_
  name: EmotionType
  nameWithType: EmotionType.EmotionType
  fullName: TinyLife.Emotions.EmotionType.EmotionType
  nameWithType.vb: EmotionType.New
  fullName.vb: TinyLife.Emotions.EmotionType.New
  name.vb: New
- uid: TinyLife.Emotions.EmotionType.Types
  commentId: F:TinyLife.Emotions.EmotionType.Types
  href: TinyLife.Emotions.EmotionType.html#TinyLife_Emotions_EmotionType_Types
  name: Types
  nameWithType: EmotionType.Types
  fullName: TinyLife.Emotions.EmotionType.Types
- uid: TinyLife.Emotions.EmotionType.Register*
  commentId: Overload:TinyLife.Emotions.EmotionType.Register
  href: TinyLife.Emotions.EmotionType.html#TinyLife_Emotions_EmotionType_Register_TinyLife_Emotions_EmotionType_
  name: Register
  nameWithType: EmotionType.Register
  fullName: TinyLife.Emotions.EmotionType.Register
