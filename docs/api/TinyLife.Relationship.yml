### YamlMime:ManagedReference
items:
- uid: TinyLife.Relationship
  commentId: T:TinyLife.Relationship
  id: Relationship
  parent: TinyLife
  children:
  - TinyLife.Relationship.AddMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Int32,System.Nullable{System.TimeSpan})
  - TinyLife.Relationship.CreateBars(MLEM.Ui.Anchor,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean)
  - TinyLife.Relationship.CreatePanel(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2)
  - TinyLife.Relationship.Dating
  - TinyLife.Relationship.FriendDisplayString
  - TinyLife.Relationship.FriendLevel
  - TinyLife.Relationship.FriendPercentage
  - TinyLife.Relationship.Genealogy
  - TinyLife.Relationship.GetMemories``1(TinyLife.Goals.MemoryType,System.Boolean)
  - TinyLife.Relationship.GetPartner(System.Boolean)
  - TinyLife.Relationship.GetSocialEffectiveness(TinyLife.Actions.ActionType)
  - TinyLife.Relationship.GetTimeSinceMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Func{``0,System.Boolean})
  - TinyLife.Relationship.KnownJobType
  - TinyLife.Relationship.KnownPersonalityTypes
  - TinyLife.Relationship.Max
  - TinyLife.Relationship.Migrations
  - TinyLife.Relationship.OnRelationshipPanel
  - TinyLife.Relationship.OnRelationshipTooltip
  - TinyLife.Relationship.OtherPerson
  - TinyLife.Relationship.Partner
  - TinyLife.Relationship.PassiveFriendReduction
  - TinyLife.Relationship.PassiveRomanceReduction
  - TinyLife.Relationship.Person
  - TinyLife.Relationship.PopulateTooltip(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip)
  - TinyLife.Relationship.RemoveMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Int32,System.Func{``0,System.Boolean})
  - TinyLife.Relationship.ResetToStatic(System.Boolean,System.Boolean)
  - TinyLife.Relationship.RomanceDisplayString
  - TinyLife.Relationship.RomanceLevel
  - TinyLife.Relationship.RomancePercentage
  - TinyLife.Relationship.RomanceType
  - TinyLife.Relationship.SetGenealogy(TinyLife.GenealogyType,System.Boolean,System.Action{TinyLife.Objects.PersonLike,TinyLife.Relationship,TinyLife.GenealogyType},System.Collections.Generic.ICollection{TinyLife.Objects.PersonLike})
  - TinyLife.Relationship.TryingForBaby
  - TinyLife.Relationship.Type
  - TinyLife.Relationship.Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  langs:
  - csharp
  - vb
  name: Relationship
  nameWithType: Relationship
  fullName: TinyLife.Relationship
  type: Class
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    A relationship is a connection between two <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> objects.

    It should be noted that a relationship is not always the same between a person and the linked <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref>.

    What this means is that A can have a good relationship to B, but B can have a less good relationship to A.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Relationship : JsonTypeSafeGenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class Relationship Inherits JsonTypeSafeGenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Relationship.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Relationship.Migrations
  commentId: F:TinyLife.Relationship.Migrations
  id: Migrations
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: Migrations
  nameWithType: Relationship.Migrations
  fullName: TinyLife.Relationship.Migrations
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: A set of migrations that will be applied when a <xref href="TinyLife.Relationship" data-throw-if-not-resolved="false"></xref> is validated, specifically in <xref href="TinyLife.Relationship.Validate(TinyLife.Objects.PersonLike%2cTinyLife.Utilities.AppliedMigrations)" data-throw-if-not-resolved="false"></xref>. Mods can add their own migrations to this list. Non-silent migrations, as well as <xref href="TinyLife.Utilities.MigrationPhase.Early" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Utilities.MigrationPhase.Late" data-throw-if-not-resolved="false"></xref> migration phases, are supported.
  example: []
  syntax:
    content: public static readonly List<Migration<Relationship>> Migrations
    return:
      type: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Relationship}}
    content.vb: Public Shared ReadOnly Migrations As List(Of Migration(Of Relationship))
- uid: TinyLife.Relationship.OnRelationshipPanel
  commentId: E:TinyLife.Relationship.OnRelationshipPanel
  id: OnRelationshipPanel
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: OnRelationshipPanel
  nameWithType: Relationship.OnRelationshipPanel
  fullName: TinyLife.Relationship.OnRelationshipPanel
  type: Event
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    An event that is raised when a relationship panel is created in <xref href="TinyLife.Relationship.CreatePanel(TinyLife.Objects.PersonLike%2cTinyLife.Objects.PersonLike%2cTinyLife.Relationship%2cMicrosoft.Xna.Framework.Vector2)" data-throw-if-not-resolved="false"></xref>.

    Use this event to add custom information to a relationship panel.
  example: []
  syntax:
    content: public static event Action<(PersonLike Person, PersonLike Other, Relationship Relationship, Group Group)> OnRelationshipPanel
    return:
      type: System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Group}}
    content.vb: Public Shared Event OnRelationshipPanel As Action(Of (Person As PersonLike, Other As PersonLike, Relationship As Relationship, Group As Group))
- uid: TinyLife.Relationship.OnRelationshipTooltip
  commentId: E:TinyLife.Relationship.OnRelationshipTooltip
  id: OnRelationshipTooltip
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: OnRelationshipTooltip
  nameWithType: Relationship.OnRelationshipTooltip
  fullName: TinyLife.Relationship.OnRelationshipTooltip
  type: Event
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    An event that is raised when a relationship tooltip is populated in <xref href="TinyLife.Relationship.PopulateTooltip(TinyLife.Objects.PersonLike%2cTinyLife.Objects.PersonLike%2cTinyLife.Relationship%2cMLEM.Ui.Elements.Tooltip)" data-throw-if-not-resolved="false"></xref>.

    Use this event to add custom information to a relationship tooltip.
  example: []
  syntax:
    content: public static event Action<(PersonLike Person, PersonLike Other, Relationship Relationship, Tooltip Tooltip)> OnRelationshipTooltip
    return:
      type: System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip}}
    content.vb: Public Shared Event OnRelationshipTooltip As Action(Of (Person As PersonLike, Other As PersonLike, Relationship As Relationship, Tooltip As Tooltip))
- uid: TinyLife.Relationship.Max
  commentId: F:TinyLife.Relationship.Max
  id: Max
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: Relationship.Max
  fullName: TinyLife.Relationship.Max
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: The maximum value that a relationship level can have
  example: []
  syntax:
    content: public const float Max = 100000
    return:
      type: System.Single
    content.vb: Public Const Max As Single = 100000
- uid: TinyLife.Relationship.PassiveFriendReduction
  commentId: F:TinyLife.Relationship.PassiveFriendReduction
  id: PassiveFriendReduction
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: PassiveFriendReduction
  nameWithType: Relationship.PassiveFriendReduction
  fullName: TinyLife.Relationship.PassiveFriendReduction
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: The amount of points (out of <xref href="TinyLife.Relationship.Max" data-throw-if-not-resolved="false"></xref>) that are removed from each relationship's <xref href="TinyLife.Relationship.FriendLevel" data-throw-if-not-resolved="false"></xref> each update frame
  example: []
  syntax:
    content: public const float PassiveFriendReduction = 0.01
    return:
      type: System.Single
    content.vb: Public Const PassiveFriendReduction As Single = 0.01
- uid: TinyLife.Relationship.PassiveRomanceReduction
  commentId: F:TinyLife.Relationship.PassiveRomanceReduction
  id: PassiveRomanceReduction
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: PassiveRomanceReduction
  nameWithType: Relationship.PassiveRomanceReduction
  fullName: TinyLife.Relationship.PassiveRomanceReduction
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: The amount of points (out of <xref href="TinyLife.Relationship.Max" data-throw-if-not-resolved="false"></xref>) that are removed from each relationship's <xref href="TinyLife.Relationship.RomanceLevel" data-throw-if-not-resolved="false"></xref> each update frame
  example: []
  syntax:
    content: public const float PassiveRomanceReduction = 0.015
    return:
      type: System.Single
    content.vb: Public Const PassiveRomanceReduction As Single = 0.015
- uid: TinyLife.Relationship.KnownPersonalityTypes
  commentId: F:TinyLife.Relationship.KnownPersonalityTypes
  id: KnownPersonalityTypes
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: KnownPersonalityTypes
  nameWithType: Relationship.KnownPersonalityTypes
  fullName: TinyLife.Relationship.KnownPersonalityTypes
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    A set of <xref href="TinyLife.PersonalityType" data-throw-if-not-resolved="false"></xref> objects that are known about this relationship's <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref>.

    This collection is populated by <xref href="TinyLife.Actions.ActionType.AskAboutPersonality" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly HashSet<PersonalityType> KnownPersonalityTypes
    return:
      type: System.Collections.Generic.HashSet{TinyLife.PersonalityType}
    content.vb: >-
      <DataMember>

      Public ReadOnly KnownPersonalityTypes As HashSet(Of PersonalityType)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Relationship.OtherPerson
  commentId: P:TinyLife.Relationship.OtherPerson
  id: OtherPerson
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: OtherPerson
  nameWithType: Relationship.OtherPerson
  fullName: TinyLife.Relationship.OtherPerson
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    The <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> of the person that this relationship is linked to.

    To easily retrieve the matching <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> instance, see <xref href="TinyLife.Relationship.Partner" data-throw-if-not-resolved="false"></xref> or the more customizable <xref href="TinyLife.Relationship.GetPartner(System.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public Guid OtherPerson { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <DataMember>

      Public Property OtherPerson As Guid
  overload: TinyLife.Relationship.OtherPerson*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Relationship.Partner
  commentId: P:TinyLife.Relationship.Partner
  id: Partner
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: Partner
  nameWithType: Relationship.Partner
  fullName: TinyLife.Relationship.Partner
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    Returns an instance of the <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref> that this relationship is linked to.

    Internally, this property calls the <xref href="TinyLife.Relationship.GetPartner(System.Boolean)" data-throw-if-not-resolved="false"></xref> method with the <code>includeDeadPeople</code> parameter set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.

    If a potentially dead partner that isn't currently on the map should be included, use <xref href="TinyLife.Relationship.GetPartner(System.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public PersonLike Partner { get; }
    parameters: []
    return:
      type: TinyLife.Objects.PersonLike
    content.vb: Public ReadOnly Property Partner As PersonLike
  overload: TinyLife.Relationship.Partner*
- uid: TinyLife.Relationship.FriendLevel
  commentId: P:TinyLife.Relationship.FriendLevel
  id: FriendLevel
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: FriendLevel
  nameWithType: Relationship.FriendLevel
  fullName: TinyLife.Relationship.FriendLevel
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    The current amount of friendship points (out of <xref href="TinyLife.Relationship.Max" data-throw-if-not-resolved="false"></xref>) that this relationship has.

    This value is automatically clamped between -<xref href="TinyLife.Relationship.Max" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Relationship.Max" data-throw-if-not-resolved="false"></xref>.

    To take skills, personalities and more into account, use <xref href="TinyLife.Objects.PersonLike.ChangeFriendship(TinyLife.Objects.PersonLike%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float FriendLevel { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property FriendLevel As Single
  overload: TinyLife.Relationship.FriendLevel*
- uid: TinyLife.Relationship.RomanceLevel
  commentId: P:TinyLife.Relationship.RomanceLevel
  id: RomanceLevel
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: RomanceLevel
  nameWithType: Relationship.RomanceLevel
  fullName: TinyLife.Relationship.RomanceLevel
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    The current amount of romance points (out of <xref href="TinyLife.Relationship.Max" data-throw-if-not-resolved="false"></xref>) that this relationship has.

    This value is automatically clamped between 0 and <xref href="TinyLife.Relationship.Max" data-throw-if-not-resolved="false"></xref>.

    To take skills, personalities and more into account, use <xref href="TinyLife.Objects.PersonLike.ChangeRomance(TinyLife.Objects.PersonLike%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    Note that, for aromantic people, getting and setting this value always gets and sets <xref href="TinyLife.Relationship.FriendLevel" data-throw-if-not-resolved="false"></xref> instead.
  example: []
  syntax:
    content: public float RomanceLevel { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property RomanceLevel As Single
  overload: TinyLife.Relationship.RomanceLevel*
- uid: TinyLife.Relationship.FriendPercentage
  commentId: P:TinyLife.Relationship.FriendPercentage
  id: FriendPercentage
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: FriendPercentage
  nameWithType: Relationship.FriendPercentage
  fullName: TinyLife.Relationship.FriendPercentage
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: The <xref href="TinyLife.Relationship.FriendLevel" data-throw-if-not-resolved="false"></xref> of this relationship, divided by <xref href="TinyLife.Relationship.Max" data-throw-if-not-resolved="false"></xref>, yielding a percentage between -1 and 1 of how good this friendship is
  example: []
  syntax:
    content: public float FriendPercentage { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property FriendPercentage As Single
  overload: TinyLife.Relationship.FriendPercentage*
- uid: TinyLife.Relationship.RomancePercentage
  commentId: P:TinyLife.Relationship.RomancePercentage
  id: RomancePercentage
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: RomancePercentage
  nameWithType: Relationship.RomancePercentage
  fullName: TinyLife.Relationship.RomancePercentage
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: The <xref href="TinyLife.Relationship.RomanceLevel" data-throw-if-not-resolved="false"></xref> of this relationship, divided by <xref href="TinyLife.Relationship.Max" data-throw-if-not-resolved="false"></xref>, yielding a percentage between 0 and 1 of how good this relationship's romance level is
  example: []
  syntax:
    content: public float RomancePercentage { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property RomancePercentage As Single
  overload: TinyLife.Relationship.RomancePercentage*
- uid: TinyLife.Relationship.Type
  commentId: P:TinyLife.Relationship.Type
  id: Type
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Relationship.Type
  fullName: TinyLife.Relationship.Type
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: The <xref href="TinyLife.RelationshipType" data-throw-if-not-resolved="false"></xref> that this relationship has, based on the current <xref href="TinyLife.Relationship.FriendLevel" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RelationshipType Type { get; set; }
    parameters: []
    return:
      type: TinyLife.RelationshipType
    content.vb: Public Property Type As RelationshipType
  overload: TinyLife.Relationship.Type*
- uid: TinyLife.Relationship.RomanceType
  commentId: P:TinyLife.Relationship.RomanceType
  id: RomanceType
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: RomanceType
  nameWithType: Relationship.RomanceType
  fullName: TinyLife.Relationship.RomanceType
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: The <xref href="TinyLife.Relationship.RomanceType" data-throw-if-not-resolved="false"></xref> that this relationship has, based on the current <xref href="TinyLife.Relationship.RomanceLevel" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RomanceType RomanceType { get; set; }
    parameters: []
    return:
      type: TinyLife.RomanceType
    content.vb: Public Property RomanceType As RomanceType
  overload: TinyLife.Relationship.RomanceType*
- uid: TinyLife.Relationship.FriendDisplayString
  commentId: P:TinyLife.Relationship.FriendDisplayString
  id: FriendDisplayString
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: FriendDisplayString
  nameWithType: Relationship.FriendDisplayString
  fullName: TinyLife.Relationship.FriendDisplayString
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: An (unlocalized) string that represents a written version of this relationship's <xref href="TinyLife.Relationship.Type" data-throw-if-not-resolved="false"></xref> status.
  example: []
  syntax:
    content: public string FriendDisplayString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FriendDisplayString As String
  overload: TinyLife.Relationship.FriendDisplayString*
- uid: TinyLife.Relationship.RomanceDisplayString
  commentId: P:TinyLife.Relationship.RomanceDisplayString
  id: RomanceDisplayString
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: RomanceDisplayString
  nameWithType: Relationship.RomanceDisplayString
  fullName: TinyLife.Relationship.RomanceDisplayString
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: An (unlocalized) string that represents a written version of this relationship's <xref href="TinyLife.Relationship.RomanceType" data-throw-if-not-resolved="false"></xref> status.
  example: []
  syntax:
    content: public string RomanceDisplayString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RomanceDisplayString As String
  overload: TinyLife.Relationship.RomanceDisplayString*
- uid: TinyLife.Relationship.Genealogy
  commentId: P:TinyLife.Relationship.Genealogy
  id: Genealogy
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: Genealogy
  nameWithType: Relationship.Genealogy
  fullName: TinyLife.Relationship.Genealogy
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    The <xref href="TinyLife.GenealogyType" data-throw-if-not-resolved="false"></xref> of this relationship.

    Note that the genealogy's value works in the following direction: "I am the [Genealogy] of [OtherPerson]".

    Note that <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref> will always have the <xref href="TinyLife.GenealogyType" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public GenealogyType Genealogy { get; }
    parameters: []
    return:
      type: TinyLife.GenealogyType
    content.vb: >-
      <DataMember>

      Public Property Genealogy As GenealogyType
  overload: TinyLife.Relationship.Genealogy*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Relationship.Dating
  commentId: F:TinyLife.Relationship.Dating
  id: Dating
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: Dating
  nameWithType: Relationship.Dating
  fullName: TinyLife.Relationship.Dating
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: This value is set to true if this relationship is a romantic relationship
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool Dating
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Dating As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Relationship.KnownJobType
  commentId: F:TinyLife.Relationship.KnownJobType
  id: KnownJobType
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: KnownJobType
  nameWithType: Relationship.KnownJobType
  fullName: TinyLife.Relationship.KnownJobType
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Stores the <xref href="TinyLife.Goals.JobType.Types" data-throw-if-not-resolved="false"></xref> registry name of the job type that this relationship's person currently knows about the relationship's <xref href="TinyLife.Relationship.Partner" data-throw-if-not-resolved="false"></xref>. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, no job type is known. If this value is set to <code>None</code>, the <xref href="TinyLife.Relationship.Partner" data-throw-if-not-resolved="false"></xref> has no job.
  example: []
  syntax:
    content: >-
      [DataMember]

      public string KnownJobType
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public KnownJobType As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Relationship.TryingForBaby
  commentId: F:TinyLife.Relationship.TryingForBaby
  id: TryingForBaby
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: TryingForBaby
  nameWithType: Relationship.TryingForBaby
  fullName: TinyLife.Relationship.TryingForBaby
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Stores whether the people involved in this relationship have agreed to try for a baby. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, fooling around has a chance to lead to a pregnancy.
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public bool TryingForBaby
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public TryingForBaby As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Relationship.Person
  commentId: P:TinyLife.Relationship.Person
  id: Person
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: Person
  nameWithType: Relationship.Person
  fullName: TinyLife.Relationship.Person
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: The person that this relationship is linked to.
  example: []
  syntax:
    content: public PersonLike Person { get; }
    parameters: []
    return:
      type: TinyLife.Objects.PersonLike
    content.vb: Public Property Person As PersonLike
  overload: TinyLife.Relationship.Person*
- uid: TinyLife.Relationship.GetPartner(System.Boolean)
  commentId: M:TinyLife.Relationship.GetPartner(System.Boolean)
  id: GetPartner(System.Boolean)
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: GetPartner(bool)
  nameWithType: Relationship.GetPartner(bool)
  fullName: TinyLife.Relationship.GetPartner(bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    Returns an instance of the <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref> that this relationship is linked to.

    Note that the <xref href="TinyLife.Relationship.Partner" data-throw-if-not-resolved="false"></xref> property calls this method internally, with the <code class="paramref">includeDeadPeople</code> parameter set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public PersonLike GetPartner(bool includeDeadPeople)
    parameters:
    - id: includeDeadPeople
      type: System.Boolean
      description: Whether any dead people, that is, people returned as part of <xref href="TinyLife.World.Map.GetStoredDeadPeople" data-throw-if-not-resolved="false"></xref>, should also be searched for a matching person.
    return:
      type: TinyLife.Objects.PersonLike
      description: This relationship's partner, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if they can't be found.
    content.vb: Public Function GetPartner(includeDeadPeople As Boolean) As PersonLike
  overload: TinyLife.Relationship.GetPartner*
  nameWithType.vb: Relationship.GetPartner(Boolean)
  fullName.vb: TinyLife.Relationship.GetPartner(Boolean)
  name.vb: GetPartner(Boolean)
- uid: TinyLife.Relationship.GetSocialEffectiveness(TinyLife.Actions.ActionType)
  commentId: M:TinyLife.Relationship.GetSocialEffectiveness(TinyLife.Actions.ActionType)
  id: GetSocialEffectiveness(TinyLife.Actions.ActionType)
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: GetSocialEffectiveness(ActionType)
  nameWithType: Relationship.GetSocialEffectiveness(ActionType)
  fullName: TinyLife.Relationship.GetSocialEffectiveness(TinyLife.Actions.ActionType)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    Returns the effectiveness percentage that the given <xref href="TinyLife.Actions.ActionType" data-throw-if-not-resolved="false"></xref> has right now, based on the amount of times that it has been used previously.

    In <xref href="TinyLife.Actions.TalkAction" data-throw-if-not-resolved="false"></xref>, this effectiveness is used to reduce the friendship and romance gain based on the "boringness" of an action.

    Note that, if this relationship's main person is younger than a <xref href="TinyLife.Objects.AgeGroup.Child" data-throw-if-not-resolved="false"></xref>, the social effectiveness will always be 1.
  example: []
  syntax:
    content: public float GetSocialEffectiveness(ActionType action)
    parameters:
    - id: action
      type: TinyLife.Actions.ActionType
      description: The action whose effectiveness to query
    return:
      type: System.Single
      description: The social effectiveness, which is a percentage between 0 and 1
    content.vb: Public Function GetSocialEffectiveness(action As ActionType) As Single
  overload: TinyLife.Relationship.GetSocialEffectiveness*
- uid: TinyLife.Relationship.Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Relationship.Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  id: Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: Validate(PersonLike, AppliedMigrations)
  nameWithType: Relationship.Validate(PersonLike, AppliedMigrations)
  fullName: TinyLife.Relationship.Validate(TinyLife.Objects.PersonLike, TinyLife.Utilities.AppliedMigrations)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    Validates this relationship, setting its internal person reference to the given <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.

    This method is automatically called for all of their relationships in <xref href="TinyLife.Objects.PersonLike.Validate(TinyLife.Utilities.AppliedMigrations)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool Validate(PersonLike person, AppliedMigrations appliedMigrations)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person that this relationship belongs to
    - id: appliedMigrations
      type: TinyLife.Utilities.AppliedMigrations
      description: The migrations to use when validating this relationship.
    return:
      type: System.Boolean
    content.vb: Public Function Validate(person As PersonLike, appliedMigrations As AppliedMigrations) As Boolean
  overload: TinyLife.Relationship.Validate*
- uid: TinyLife.Relationship.ResetToStatic(System.Boolean,System.Boolean)
  commentId: M:TinyLife.Relationship.ResetToStatic(System.Boolean,System.Boolean)
  id: ResetToStatic(System.Boolean,System.Boolean)
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: ResetToStatic(bool, bool)
  nameWithType: Relationship.ResetToStatic(bool, bool)
  fullName: TinyLife.Relationship.ResetToStatic(bool, bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    Resets this relationship to a more basic, static version.

    This method is used when a map or household is exported, and by the ExportHousehold cheat.
  example: []
  syntax:
    content: public void ResetToStatic(bool thorough, bool sameHousehold)
    parameters:
    - id: thorough
      type: System.Boolean
      description: Whether the relationship should be reset thoroughly, causing the friendship level and romance level to be averaged out
    - id: sameHousehold
      type: System.Boolean
      description: Whether the two people that are part of this relationship are in the same household
    content.vb: Public Sub ResetToStatic(thorough As Boolean, sameHousehold As Boolean)
  overload: TinyLife.Relationship.ResetToStatic*
  nameWithType.vb: Relationship.ResetToStatic(Boolean, Boolean)
  fullName.vb: TinyLife.Relationship.ResetToStatic(Boolean, Boolean)
  name.vb: ResetToStatic(Boolean, Boolean)
- uid: TinyLife.Relationship.SetGenealogy(TinyLife.GenealogyType,System.Boolean,System.Action{TinyLife.Objects.PersonLike,TinyLife.Relationship,TinyLife.GenealogyType},System.Collections.Generic.ICollection{TinyLife.Objects.PersonLike})
  commentId: M:TinyLife.Relationship.SetGenealogy(TinyLife.GenealogyType,System.Boolean,System.Action{TinyLife.Objects.PersonLike,TinyLife.Relationship,TinyLife.GenealogyType},System.Collections.Generic.ICollection{TinyLife.Objects.PersonLike})
  id: SetGenealogy(TinyLife.GenealogyType,System.Boolean,System.Action{TinyLife.Objects.PersonLike,TinyLife.Relationship,TinyLife.GenealogyType},System.Collections.Generic.ICollection{TinyLife.Objects.PersonLike})
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: SetGenealogy(GenealogyType, bool, Action<PersonLike, Relationship, GenealogyType>, ICollection<PersonLike>)
  nameWithType: Relationship.SetGenealogy(GenealogyType, bool, Action<PersonLike, Relationship, GenealogyType>, ICollection<PersonLike>)
  fullName: TinyLife.Relationship.SetGenealogy(TinyLife.GenealogyType, bool, System.Action<TinyLife.Objects.PersonLike, TinyLife.Relationship, TinyLife.GenealogyType>, System.Collections.Generic.ICollection<TinyLife.Objects.PersonLike>)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Sets this relationship's <xref href="TinyLife.Relationship.Genealogy" data-throw-if-not-resolved="false"></xref> and this <xref href="TinyLife.Relationship.Partner" data-throw-if-not-resolved="false"></xref>'s relationship's <xref href="TinyLife.Relationship.Genealogy" data-throw-if-not-resolved="false"></xref>, additionally updating all transitive relationships' genealogies using <xref href="TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType%2cTinyLife.GenealogyType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void SetGenealogy(GenealogyType genealogy, bool overwriteExistingTransitive, Action<PersonLike, Relationship, GenealogyType> onGenealogyChanged = null, ICollection<PersonLike> possibleAdditionalPeople = null)
    parameters:
    - id: genealogy
      type: TinyLife.GenealogyType
      description: The genealogy to use for this relationship.
    - id: overwriteExistingTransitive
      type: System.Boolean
      description: Whether the genealogies of existing transitive relationships should be updated, even if they are already set to a non-<xref href="TinyLife.GenealogyType.Unrelated" data-throw-if-not-resolved="false"></xref> relationship.
    - id: onGenealogyChanged
      type: System.Action{TinyLife.Objects.PersonLike,TinyLife.Relationship,TinyLife.GenealogyType}
      description: An action that is invoked when a genealogy is changed, which is additionally passed to recursive calls of this method.
    - id: possibleAdditionalPeople
      type: System.Collections.Generic.ICollection{TinyLife.Objects.PersonLike}
      description: A set of additional people that can optionally be considered as this relationship's or subsequent recursive calls' relationships' partners, in addition to the <xref href="TinyLife.Relationship.Partner" data-throw-if-not-resolved="false"></xref> and subsequent recursive calls' partners, which may not currently be present on the map.
    content.vb: Public Sub SetGenealogy(genealogy As GenealogyType, overwriteExistingTransitive As Boolean, onGenealogyChanged As Action(Of PersonLike, Relationship, GenealogyType) = Nothing, possibleAdditionalPeople As ICollection(Of PersonLike) = Nothing)
  overload: TinyLife.Relationship.SetGenealogy*
  nameWithType.vb: Relationship.SetGenealogy(GenealogyType, Boolean, Action(Of PersonLike, Relationship, GenealogyType), ICollection(Of PersonLike))
  fullName.vb: TinyLife.Relationship.SetGenealogy(TinyLife.GenealogyType, Boolean, System.Action(Of TinyLife.Objects.PersonLike, TinyLife.Relationship, TinyLife.GenealogyType), System.Collections.Generic.ICollection(Of TinyLife.Objects.PersonLike))
  name.vb: SetGenealogy(GenealogyType, Boolean, Action(Of PersonLike, Relationship, GenealogyType), ICollection(Of PersonLike))
- uid: TinyLife.Relationship.AddMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Int32,System.Nullable{System.TimeSpan})
  commentId: M:TinyLife.Relationship.AddMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Int32,System.Nullable{System.TimeSpan})
  id: AddMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Int32,System.Nullable{System.TimeSpan})
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: AddMemory<T>(MemoryType, bool, int, TimeSpan?)
  nameWithType: Relationship.AddMemory<T>(MemoryType, bool, int, TimeSpan?)
  fullName: TinyLife.Relationship.AddMemory<T>(TinyLife.Goals.MemoryType, bool, int, System.TimeSpan?)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Adds a <xref href="TinyLife.Goals.Memory" data-throw-if-not-resolved="false"></xref> to this relationship's person's and <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Objects.PersonLike.Memories" data-throw-if-not-resolved="false"></xref> list of this person.
  example: []
  syntax:
    content: 'public T AddMemory<T>(MemoryType type, bool addToBoth, int toKeep = 0, TimeSpan? timeOccured = null) where T : Memory'
    parameters:
    - id: type
      type: TinyLife.Goals.MemoryType
      description: The type of memory to add.
    - id: addToBoth
      type: System.Boolean
      description: Whether the memory should be added to the <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref> as well.
    - id: toKeep
      type: System.Int32
      description: An amount of memories of the given <code class="paramref">type</code> to keep, also counting the newly added one. Oldest memories will be removed first.
    - id: timeOccured
      type: System.Nullable{System.TimeSpan}
      description: The time that this memory occured on, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use <xref href="TinyLife.World.Map.Time" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: The added memory.
    content.vb: Public Function AddMemory(Of T As Memory)(type As MemoryType, addToBoth As Boolean, toKeep As Integer = 0, timeOccured As TimeSpan? = Nothing) As T
  overload: TinyLife.Relationship.AddMemory*
  nameWithType.vb: Relationship.AddMemory(Of T)(MemoryType, Boolean, Integer, TimeSpan?)
  fullName.vb: TinyLife.Relationship.AddMemory(Of T)(TinyLife.Goals.MemoryType, Boolean, Integer, System.TimeSpan?)
  name.vb: AddMemory(Of T)(MemoryType, Boolean, Integer, TimeSpan?)
- uid: TinyLife.Relationship.GetMemories``1(TinyLife.Goals.MemoryType,System.Boolean)
  commentId: M:TinyLife.Relationship.GetMemories``1(TinyLife.Goals.MemoryType,System.Boolean)
  id: GetMemories``1(TinyLife.Goals.MemoryType,System.Boolean)
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: GetMemories<T>(MemoryType, bool)
  nameWithType: Relationship.GetMemories<T>(MemoryType, bool)
  fullName: TinyLife.Relationship.GetMemories<T>(TinyLife.Goals.MemoryType, bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Returns all <xref href="TinyLife.Goals.Memory" data-throw-if-not-resolved="false"></xref> instances that this relationship's person and <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref> currently track that match the given <xref href="TinyLife.Goals.MemoryType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public IEnumerable<T> GetMemories<T>(MemoryType type, bool returnBoth) where T : Memory'
    parameters:
    - id: type
      type: TinyLife.Goals.MemoryType
      description: The memory type to match.
    - id: returnBoth
      type: System.Boolean
      description: Whether the <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref>'s memories should also be returned.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The memories of the given type.
    content.vb: Public Function GetMemories(Of T As Memory)(type As MemoryType, returnBoth As Boolean) As IEnumerable(Of T)
  overload: TinyLife.Relationship.GetMemories*
  nameWithType.vb: Relationship.GetMemories(Of T)(MemoryType, Boolean)
  fullName.vb: TinyLife.Relationship.GetMemories(Of T)(TinyLife.Goals.MemoryType, Boolean)
  name.vb: GetMemories(Of T)(MemoryType, Boolean)
- uid: TinyLife.Relationship.RemoveMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Int32,System.Func{``0,System.Boolean})
  commentId: M:TinyLife.Relationship.RemoveMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Int32,System.Func{``0,System.Boolean})
  id: RemoveMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Int32,System.Func{``0,System.Boolean})
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: RemoveMemory<T>(MemoryType, bool, int, Func<T, bool>)
  nameWithType: Relationship.RemoveMemory<T>(MemoryType, bool, int, Func<T, bool>)
  fullName: TinyLife.Relationship.RemoveMemory<T>(TinyLife.Goals.MemoryType, bool, int, System.Func<T, bool>)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Removes all <xref href="TinyLife.Goals.Memory" data-throw-if-not-resolved="false"></xref> instances of the given type <code class="typeparamref">T</code> and <xref href="TinyLife.Goals.MemoryType" data-throw-if-not-resolved="false"></xref> from this relationship's person's and <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Objects.PersonLike.Memories" data-throw-if-not-resolved="false"></xref> collections, and returns the amount of memories removed.
  example: []
  syntax:
    content: 'public int RemoveMemory<T>(MemoryType type, bool removeFromBoth, int toKeep = 0, Func<T, bool> condition = null) where T : Memory'
    parameters:
    - id: type
      type: TinyLife.Goals.MemoryType
      description: The memory type to match.
    - id: removeFromBoth
      type: System.Boolean
      description: Wether the <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref>'s memories should also be removed.
    - id: toKeep
      type: System.Int32
      description: An amount of memories of the given <code class="paramref">type</code> to keep. Oldest memories will be removed first.
    - id: condition
      type: System.Func{{T},System.Boolean}
      description: An additional condition to determine whether memories should be included in the search.
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: How many memories were removed.
    content.vb: Public Function RemoveMemory(Of T As Memory)(type As MemoryType, removeFromBoth As Boolean, toKeep As Integer = 0, condition As Func(Of T, Boolean) = Nothing) As Integer
  overload: TinyLife.Relationship.RemoveMemory*
  nameWithType.vb: Relationship.RemoveMemory(Of T)(MemoryType, Boolean, Integer, Func(Of T, Boolean))
  fullName.vb: TinyLife.Relationship.RemoveMemory(Of T)(TinyLife.Goals.MemoryType, Boolean, Integer, System.Func(Of T, Boolean))
  name.vb: RemoveMemory(Of T)(MemoryType, Boolean, Integer, Func(Of T, Boolean))
- uid: TinyLife.Relationship.GetTimeSinceMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Func{``0,System.Boolean})
  commentId: M:TinyLife.Relationship.GetTimeSinceMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Func{``0,System.Boolean})
  id: GetTimeSinceMemory``1(TinyLife.Goals.MemoryType,System.Boolean,System.Func{``0,System.Boolean})
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: GetTimeSinceMemory<T>(MemoryType, bool, Func<T, bool>)
  nameWithType: Relationship.GetTimeSinceMemory<T>(MemoryType, bool, Func<T, bool>)
  fullName: TinyLife.Relationship.GetTimeSinceMemory<T>(TinyLife.Goals.MemoryType, bool, System.Func<T, bool>)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    Returns the time since a memory of the given <xref href="TinyLife.Goals.MemoryType" data-throw-if-not-resolved="false"></xref> has occured in this relationship's main person or <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref>.

    If there are multiple memories of the given type, the minimum time is returned. If there is no memory of the given type, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> is returned.
  example: []
  syntax:
    content: 'public TimeSpan? GetTimeSinceMemory<T>(MemoryType type, bool includeBoth, Func<T, bool> condition = null) where T : Memory'
    parameters:
    - id: type
      type: TinyLife.Goals.MemoryType
      description: The memory type to query.
    - id: includeBoth
      type: System.Boolean
      description: Whether the <xref href="TinyLife.Relationship.OtherPerson" data-throw-if-not-resolved="false"></xref>'s memories should be included in the search.
    - id: condition
      type: System.Func{{T},System.Boolean}
      description: An additional condition to determine whether memories should be included in the search.
    typeParameters:
    - id: T
    return:
      type: System.Nullable{System.TimeSpan}
      description: The time since the given memory type.
    content.vb: Public Function GetTimeSinceMemory(Of T As Memory)(type As MemoryType, includeBoth As Boolean, condition As Func(Of T, Boolean) = Nothing) As TimeSpan?
  overload: TinyLife.Relationship.GetTimeSinceMemory*
  nameWithType.vb: Relationship.GetTimeSinceMemory(Of T)(MemoryType, Boolean, Func(Of T, Boolean))
  fullName.vb: TinyLife.Relationship.GetTimeSinceMemory(Of T)(TinyLife.Goals.MemoryType, Boolean, System.Func(Of T, Boolean))
  name.vb: GetTimeSinceMemory(Of T)(MemoryType, Boolean, Func(Of T, Boolean))
- uid: TinyLife.Relationship.CreatePanel(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2)
  commentId: M:TinyLife.Relationship.CreatePanel(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2)
  id: CreatePanel(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2)
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: CreatePanel(PersonLike, PersonLike, Relationship, Vector2)
  nameWithType: Relationship.CreatePanel(PersonLike, PersonLike, Relationship, Vector2)
  fullName: TinyLife.Relationship.CreatePanel(TinyLife.Objects.PersonLike, TinyLife.Objects.PersonLike, TinyLife.Relationship, Microsoft.Xna.Framework.Vector2)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    Creates a <xref href="MLEM.Ui.Elements.Group" data-throw-if-not-resolved="false"></xref> with a <xref href="MLEM.Ui.Elements.Panel" data-throw-if-not-resolved="false"></xref> in it that contains information about the given <code class="paramref">relationship</code>.

    This method also calls <xref href="TinyLife.Relationship.OnRelationshipPanel" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Group CreatePanel(PersonLike person, PersonLike otherPerson, Relationship relationship, Vector2 size)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person who has the <code class="paramref">relationship</code>.
    - id: otherPerson
      type: TinyLife.Objects.PersonLike
      description: The partner of the <code class="paramref">relationship</code>.
    - id: relationship
      type: TinyLife.Relationship
      description: The relationship. May be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: size
      type: Microsoft.Xna.Framework.Vector2
      description: The <xref href="MLEM.Ui.Elements.Element.Size" data-throw-if-not-resolved="false"></xref> that the <xref href="MLEM.Ui.Elements.Panel" data-throw-if-not-resolved="false"></xref> should have.
    return:
      type: MLEM.Ui.Elements.Group
      description: A <xref href="MLEM.Ui.Elements.Group" data-throw-if-not-resolved="false"></xref> that contains the <xref href="MLEM.Ui.Elements.Panel" data-throw-if-not-resolved="false"></xref> created.
    content.vb: Public Shared Function CreatePanel(person As PersonLike, otherPerson As PersonLike, relationship As Relationship, size As Vector2) As Group
  overload: TinyLife.Relationship.CreatePanel*
- uid: TinyLife.Relationship.CreateBars(MLEM.Ui.Anchor,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean)
  commentId: M:TinyLife.Relationship.CreateBars(MLEM.Ui.Anchor,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean)
  id: CreateBars(MLEM.Ui.Anchor,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean)
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: CreateBars(Anchor, PersonLike, Relationship, Vector2, float, bool)
  nameWithType: Relationship.CreateBars(Anchor, PersonLike, Relationship, Vector2, float, bool)
  fullName: TinyLife.Relationship.CreateBars(MLEM.Ui.Anchor, TinyLife.Objects.PersonLike, TinyLife.Relationship, Microsoft.Xna.Framework.Vector2, float, bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Creates a <xref href="MLEM.Ui.Elements.Group" data-throw-if-not-resolved="false"></xref> with two <xref href="MLEM.Ui.Elements.ProgressBar" data-throw-if-not-resolved="false"></xref> elements in it that represent the friendship and romance levels of the given <code class="paramref">relationship</code>.
  example: []
  syntax:
    content: public static Group CreateBars(Anchor anchor, PersonLike person, Relationship relationship, Vector2 size, float barHeight = 10, bool showText = true)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The anchor to use.
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person who has the <code class="paramref">relationship</code>.
    - id: relationship
      type: TinyLife.Relationship
      description: The relationship. May be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: size
      type: Microsoft.Xna.Framework.Vector2
      description: The <xref href="MLEM.Ui.Elements.Element.Size" data-throw-if-not-resolved="false"></xref> that the <xref href="MLEM.Ui.Elements.Group" data-throw-if-not-resolved="false"></xref> should have.
    - id: barHeight
      type: System.Single
      description: The height of the bars.
    - id: showText
      type: System.Boolean
      description: Whether the relationship type should be displayed as text in the bars.
    return:
      type: MLEM.Ui.Elements.Group
      description: The group containing the bars.
    content.vb: Public Shared Function CreateBars(anchor As Anchor, person As PersonLike, relationship As Relationship, size As Vector2, barHeight As Single = 10, showText As Boolean = True) As Group
  overload: TinyLife.Relationship.CreateBars*
  nameWithType.vb: Relationship.CreateBars(Anchor, PersonLike, Relationship, Vector2, Single, Boolean)
  fullName.vb: TinyLife.Relationship.CreateBars(MLEM.Ui.Anchor, TinyLife.Objects.PersonLike, TinyLife.Relationship, Microsoft.Xna.Framework.Vector2, Single, Boolean)
  name.vb: CreateBars(Anchor, PersonLike, Relationship, Vector2, Single, Boolean)
- uid: TinyLife.Relationship.PopulateTooltip(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip)
  commentId: M:TinyLife.Relationship.PopulateTooltip(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip)
  id: PopulateTooltip(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip)
  parent: TinyLife.Relationship
  langs:
  - csharp
  - vb
  name: PopulateTooltip(PersonLike, PersonLike, Relationship, Tooltip)
  nameWithType: Relationship.PopulateTooltip(PersonLike, PersonLike, Relationship, Tooltip)
  fullName: TinyLife.Relationship.PopulateTooltip(TinyLife.Objects.PersonLike, TinyLife.Objects.PersonLike, TinyLife.Relationship, MLEM.Ui.Elements.Tooltip)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    Populates the given <code class="paramref">tooltip</code> with information about the given <code class="paramref">relationship</code>.

    This method also takes the <xref href="TinyLife.Relationship.OnRelationshipTooltip" data-throw-if-not-resolved="false"></xref> event into account.
  example: []
  syntax:
    content: public static void PopulateTooltip(PersonLike person, PersonLike otherPerson, Relationship relationship, Tooltip tooltip)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person who has the <code class="paramref">relationship</code>.
    - id: otherPerson
      type: TinyLife.Objects.PersonLike
      description: The partner of the <code class="paramref">relationship</code>.
    - id: relationship
      type: TinyLife.Relationship
      description: The relationship. May be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: tooltip
      type: MLEM.Ui.Elements.Tooltip
      description: The tooltip to populate.
    content.vb: Public Shared Sub PopulateTooltip(person As PersonLike, otherPerson As PersonLike, relationship As Relationship, tooltip As Tooltip)
  overload: TinyLife.Relationship.PopulateTooltip*
references:
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Relationship.OtherPerson
  commentId: P:TinyLife.Relationship.OtherPerson
  href: TinyLife.Relationship.html#TinyLife_Relationship_OtherPerson
  name: OtherPerson
  nameWithType: Relationship.OtherPerson
  fullName: TinyLife.Relationship.OtherPerson
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Relationship.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Relationship>(Relationship)
  nameWithType: Extensions.JsonCopy<Relationship>(Relationship)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Relationship>(TinyLife.Relationship)
  nameWithType.vb: Extensions.JsonCopy(Of Relationship)(Relationship)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Relationship)(TinyLife.Relationship)
  name.vb: JsonCopy(Of Relationship)(Relationship)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Relationship)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: '>'
  - name: (
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Relationship)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: )
  - name: (
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Relationship
  commentId: T:TinyLife.Relationship
  parent: TinyLife
  href: TinyLife.Relationship.html
  name: Relationship
  nameWithType: Relationship
  fullName: TinyLife.Relationship
- uid: TinyLife.Relationship.Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Relationship.Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  href: TinyLife.Relationship.html#TinyLife_Relationship_Validate_TinyLife_Objects_PersonLike_TinyLife_Utilities_AppliedMigrations_
  name: Validate(PersonLike, AppliedMigrations)
  nameWithType: Relationship.Validate(PersonLike, AppliedMigrations)
  fullName: TinyLife.Relationship.Validate(TinyLife.Objects.PersonLike, TinyLife.Utilities.AppliedMigrations)
  spec.csharp:
  - uid: TinyLife.Relationship.Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Relationship.html#TinyLife_Relationship_Validate_TinyLife_Objects_PersonLike_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
  spec.vb:
  - uid: TinyLife.Relationship.Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Relationship.html#TinyLife_Relationship_Validate_TinyLife_Objects_PersonLike_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
- uid: TinyLife.Utilities.MigrationPhase.Early
  commentId: F:TinyLife.Utilities.MigrationPhase.Early
  href: TinyLife.Utilities.MigrationPhase.html#TinyLife_Utilities_MigrationPhase_Early
  name: Early
  nameWithType: MigrationPhase.Early
  fullName: TinyLife.Utilities.MigrationPhase.Early
- uid: TinyLife.Utilities.MigrationPhase.Late
  commentId: F:TinyLife.Utilities.MigrationPhase.Late
  href: TinyLife.Utilities.MigrationPhase.html#TinyLife_Utilities_MigrationPhase_Late
  name: Late
  nameWithType: MigrationPhase.Late
  fullName: TinyLife.Utilities.MigrationPhase.Late
- uid: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Relationship}}
  commentId: T:System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Relationship}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Migration<Relationship>>
  nameWithType: List<Migration<Relationship>>
  fullName: System.Collections.Generic.List<TinyLife.Utilities.Migration<TinyLife.Relationship>>
  nameWithType.vb: List(Of Migration(Of Relationship))
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Utilities.Migration(Of TinyLife.Relationship))
  name.vb: List(Of Migration(Of Relationship))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: <
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Relationship.CreatePanel(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2)
  commentId: M:TinyLife.Relationship.CreatePanel(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2)
  isExternal: true
  href: TinyLife.Relationship.html#TinyLife_Relationship_CreatePanel_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_TinyLife_Relationship_Microsoft_Xna_Framework_Vector2_
  name: CreatePanel(PersonLike, PersonLike, Relationship, Vector2)
  nameWithType: Relationship.CreatePanel(PersonLike, PersonLike, Relationship, Vector2)
  fullName: TinyLife.Relationship.CreatePanel(TinyLife.Objects.PersonLike, TinyLife.Objects.PersonLike, TinyLife.Relationship, Microsoft.Xna.Framework.Vector2)
  spec.csharp:
  - uid: TinyLife.Relationship.CreatePanel(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2)
    name: CreatePanel
    href: TinyLife.Relationship.html#TinyLife_Relationship_CreatePanel_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_TinyLife_Relationship_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Relationship.CreatePanel(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,Microsoft.Xna.Framework.Vector2)
    name: CreatePanel
    href: TinyLife.Relationship.html#TinyLife_Relationship_CreatePanel_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_TinyLife_Relationship_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Group}}
  commentId: T:System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Group}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<(PersonLike Person, PersonLike Other, Relationship Relationship, Group Group)>
  nameWithType: Action<(PersonLike Person, PersonLike Other, Relationship Relationship, Group Group)>
  fullName: System.Action<(TinyLife.Objects.PersonLike Person, TinyLife.Objects.PersonLike Other, TinyLife.Relationship Relationship, MLEM.Ui.Elements.Group Group)>
  nameWithType.vb: Action(Of (Person As PersonLike, Other As PersonLike, Relationship As Relationship, Group As Group))
  fullName.vb: System.Action(Of (Person As TinyLife.Objects.PersonLike, Other As TinyLife.Objects.PersonLike, Relationship As TinyLife.Relationship, Group As MLEM.Ui.Elements.Group))
  name.vb: Action(Of (Person As PersonLike, Other As PersonLike, Relationship As Relationship, Group As Group))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Group}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.group-.person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Group}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.group-.other
  - name: ','
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Group}.Relationship
    name: Relationship
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.group-.relationship
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Group
    name: Group
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Group}.Group
    name: Group
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.group-.group
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Group}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.group-.person
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Group}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.group-.other
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Group}.Relationship
    name: Relationship
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.group-.relationship
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Group}.Group
    name: Group
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.group-.group
  - name: " "
  - name: As
  - name: " "
  - uid: MLEM.Ui.Elements.Group
    name: Group
    isExternal: true
  - name: )
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Relationship.PopulateTooltip(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip)
  commentId: M:TinyLife.Relationship.PopulateTooltip(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip)
  isExternal: true
  href: TinyLife.Relationship.html#TinyLife_Relationship_PopulateTooltip_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_TinyLife_Relationship_MLEM_Ui_Elements_Tooltip_
  name: PopulateTooltip(PersonLike, PersonLike, Relationship, Tooltip)
  nameWithType: Relationship.PopulateTooltip(PersonLike, PersonLike, Relationship, Tooltip)
  fullName: TinyLife.Relationship.PopulateTooltip(TinyLife.Objects.PersonLike, TinyLife.Objects.PersonLike, TinyLife.Relationship, MLEM.Ui.Elements.Tooltip)
  spec.csharp:
  - uid: TinyLife.Relationship.PopulateTooltip(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip)
    name: PopulateTooltip
    href: TinyLife.Relationship.html#TinyLife_Relationship_PopulateTooltip_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_TinyLife_Relationship_MLEM_Ui_Elements_Tooltip_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Relationship.PopulateTooltip(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip)
    name: PopulateTooltip
    href: TinyLife.Relationship.html#TinyLife_Relationship_PopulateTooltip_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_TinyLife_Relationship_MLEM_Ui_Elements_Tooltip_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: )
- uid: System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip}}
  commentId: T:System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<(PersonLike Person, PersonLike Other, Relationship Relationship, Tooltip Tooltip)>
  nameWithType: Action<(PersonLike Person, PersonLike Other, Relationship Relationship, Tooltip Tooltip)>
  fullName: System.Action<(TinyLife.Objects.PersonLike Person, TinyLife.Objects.PersonLike Other, TinyLife.Relationship Relationship, MLEM.Ui.Elements.Tooltip Tooltip)>
  nameWithType.vb: Action(Of (Person As PersonLike, Other As PersonLike, Relationship As Relationship, Tooltip As Tooltip))
  fullName.vb: System.Action(Of (Person As TinyLife.Objects.PersonLike, Other As TinyLife.Objects.PersonLike, Relationship As TinyLife.Relationship, Tooltip As MLEM.Ui.Elements.Tooltip))
  name.vb: Action(Of (Person As PersonLike, Other As PersonLike, Relationship As Relationship, Tooltip As Tooltip))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.tooltip-.person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.tooltip-.other
  - name: ','
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip}.Relationship
    name: Relationship
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.tooltip-.relationship
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip}.Tooltip
    name: Tooltip
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.tooltip-.tooltip
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.tooltip-.person
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.tooltip-.other
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip}.Relationship
    name: Relationship
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.tooltip-.relationship
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,TinyLife.Relationship,MLEM.Ui.Elements.Tooltip}.Tooltip
    name: Tooltip
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.personlike,tinylife.relationship,mlem.ui.elements.tooltip-.tooltip
  - name: " "
  - name: As
  - name: " "
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: )
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Relationship.Max
  commentId: F:TinyLife.Relationship.Max
  href: TinyLife.Relationship.html#TinyLife_Relationship_Max
  name: Max
  nameWithType: Relationship.Max
  fullName: TinyLife.Relationship.Max
- uid: TinyLife.Relationship.FriendLevel
  commentId: P:TinyLife.Relationship.FriendLevel
  href: TinyLife.Relationship.html#TinyLife_Relationship_FriendLevel
  name: FriendLevel
  nameWithType: Relationship.FriendLevel
  fullName: TinyLife.Relationship.FriendLevel
- uid: TinyLife.Relationship.RomanceLevel
  commentId: P:TinyLife.Relationship.RomanceLevel
  href: TinyLife.Relationship.html#TinyLife_Relationship_RomanceLevel
  name: RomanceLevel
  nameWithType: Relationship.RomanceLevel
  fullName: TinyLife.Relationship.RomanceLevel
- uid: TinyLife.PersonalityType
  commentId: T:TinyLife.PersonalityType
  parent: TinyLife
  href: TinyLife.PersonalityType.html
  name: PersonalityType
  nameWithType: PersonalityType
  fullName: TinyLife.PersonalityType
- uid: TinyLife.Actions.ActionType.AskAboutPersonality
  commentId: F:TinyLife.Actions.ActionType.AskAboutPersonality
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_AskAboutPersonality
  name: AskAboutPersonality
  nameWithType: ActionType.AskAboutPersonality
  fullName: TinyLife.Actions.ActionType.AskAboutPersonality
- uid: System.Collections.Generic.HashSet{TinyLife.PersonalityType}
  commentId: T:System.Collections.Generic.HashSet{TinyLife.PersonalityType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<PersonalityType>
  nameWithType: HashSet<PersonalityType>
  fullName: System.Collections.Generic.HashSet<TinyLife.PersonalityType>
  nameWithType.vb: HashSet(Of PersonalityType)
  fullName.vb: System.Collections.Generic.HashSet(Of TinyLife.PersonalityType)
  name.vb: HashSet(Of PersonalityType)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TinyLife.Relationship.Partner
  commentId: P:TinyLife.Relationship.Partner
  href: TinyLife.Relationship.html#TinyLife_Relationship_Partner
  name: Partner
  nameWithType: Relationship.Partner
  fullName: TinyLife.Relationship.Partner
- uid: TinyLife.Relationship.GetPartner(System.Boolean)
  commentId: M:TinyLife.Relationship.GetPartner(System.Boolean)
  isExternal: true
  href: TinyLife.Relationship.html#TinyLife_Relationship_GetPartner_System_Boolean_
  name: GetPartner(bool)
  nameWithType: Relationship.GetPartner(bool)
  fullName: TinyLife.Relationship.GetPartner(bool)
  nameWithType.vb: Relationship.GetPartner(Boolean)
  fullName.vb: TinyLife.Relationship.GetPartner(Boolean)
  name.vb: GetPartner(Boolean)
  spec.csharp:
  - uid: TinyLife.Relationship.GetPartner(System.Boolean)
    name: GetPartner
    href: TinyLife.Relationship.html#TinyLife_Relationship_GetPartner_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Relationship.GetPartner(System.Boolean)
    name: GetPartner
    href: TinyLife.Relationship.html#TinyLife_Relationship_GetPartner_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Relationship.OtherPerson*
  commentId: Overload:TinyLife.Relationship.OtherPerson
  href: TinyLife.Relationship.html#TinyLife_Relationship_OtherPerson
  name: OtherPerson
  nameWithType: Relationship.OtherPerson
  fullName: TinyLife.Relationship.OtherPerson
- uid: TinyLife.Relationship.Partner*
  commentId: Overload:TinyLife.Relationship.Partner
  href: TinyLife.Relationship.html#TinyLife_Relationship_Partner
  name: Partner
  nameWithType: Relationship.Partner
  fullName: TinyLife.Relationship.Partner
- uid: TinyLife.Objects.PersonLike.ChangeFriendship(TinyLife.Objects.PersonLike,System.Single,System.Boolean)
  commentId: M:TinyLife.Objects.PersonLike.ChangeFriendship(TinyLife.Objects.PersonLike,System.Single,System.Boolean)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_ChangeFriendship_TinyLife_Objects_PersonLike_System_Single_System_Boolean_
  name: ChangeFriendship(PersonLike, float, bool)
  nameWithType: PersonLike.ChangeFriendship(PersonLike, float, bool)
  fullName: TinyLife.Objects.PersonLike.ChangeFriendship(TinyLife.Objects.PersonLike, float, bool)
  nameWithType.vb: PersonLike.ChangeFriendship(PersonLike, Single, Boolean)
  fullName.vb: TinyLife.Objects.PersonLike.ChangeFriendship(TinyLife.Objects.PersonLike, Single, Boolean)
  name.vb: ChangeFriendship(PersonLike, Single, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.ChangeFriendship(TinyLife.Objects.PersonLike,System.Single,System.Boolean)
    name: ChangeFriendship
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_ChangeFriendship_TinyLife_Objects_PersonLike_System_Single_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.ChangeFriendship(TinyLife.Objects.PersonLike,System.Single,System.Boolean)
    name: ChangeFriendship
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_ChangeFriendship_TinyLife_Objects_PersonLike_System_Single_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Relationship.FriendLevel*
  commentId: Overload:TinyLife.Relationship.FriendLevel
  href: TinyLife.Relationship.html#TinyLife_Relationship_FriendLevel
  name: FriendLevel
  nameWithType: Relationship.FriendLevel
  fullName: TinyLife.Relationship.FriendLevel
- uid: TinyLife.Objects.PersonLike.ChangeRomance(TinyLife.Objects.PersonLike,System.Single,System.Boolean)
  commentId: M:TinyLife.Objects.PersonLike.ChangeRomance(TinyLife.Objects.PersonLike,System.Single,System.Boolean)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_ChangeRomance_TinyLife_Objects_PersonLike_System_Single_System_Boolean_
  name: ChangeRomance(PersonLike, float, bool)
  nameWithType: PersonLike.ChangeRomance(PersonLike, float, bool)
  fullName: TinyLife.Objects.PersonLike.ChangeRomance(TinyLife.Objects.PersonLike, float, bool)
  nameWithType.vb: PersonLike.ChangeRomance(PersonLike, Single, Boolean)
  fullName.vb: TinyLife.Objects.PersonLike.ChangeRomance(TinyLife.Objects.PersonLike, Single, Boolean)
  name.vb: ChangeRomance(PersonLike, Single, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.ChangeRomance(TinyLife.Objects.PersonLike,System.Single,System.Boolean)
    name: ChangeRomance
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_ChangeRomance_TinyLife_Objects_PersonLike_System_Single_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.ChangeRomance(TinyLife.Objects.PersonLike,System.Single,System.Boolean)
    name: ChangeRomance
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_ChangeRomance_TinyLife_Objects_PersonLike_System_Single_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Relationship.RomanceLevel*
  commentId: Overload:TinyLife.Relationship.RomanceLevel
  href: TinyLife.Relationship.html#TinyLife_Relationship_RomanceLevel
  name: RomanceLevel
  nameWithType: Relationship.RomanceLevel
  fullName: TinyLife.Relationship.RomanceLevel
- uid: TinyLife.Relationship.FriendPercentage*
  commentId: Overload:TinyLife.Relationship.FriendPercentage
  href: TinyLife.Relationship.html#TinyLife_Relationship_FriendPercentage
  name: FriendPercentage
  nameWithType: Relationship.FriendPercentage
  fullName: TinyLife.Relationship.FriendPercentage
- uid: TinyLife.Relationship.RomancePercentage*
  commentId: Overload:TinyLife.Relationship.RomancePercentage
  href: TinyLife.Relationship.html#TinyLife_Relationship_RomancePercentage
  name: RomancePercentage
  nameWithType: Relationship.RomancePercentage
  fullName: TinyLife.Relationship.RomancePercentage
- uid: TinyLife.RelationshipType
  commentId: T:TinyLife.RelationshipType
  parent: TinyLife
  href: TinyLife.RelationshipType.html
  name: RelationshipType
  nameWithType: RelationshipType
  fullName: TinyLife.RelationshipType
- uid: TinyLife.Relationship.Type*
  commentId: Overload:TinyLife.Relationship.Type
  href: TinyLife.Relationship.html#TinyLife_Relationship_Type
  name: Type
  nameWithType: Relationship.Type
  fullName: TinyLife.Relationship.Type
- uid: TinyLife.Relationship.RomanceType
  commentId: P:TinyLife.Relationship.RomanceType
  href: TinyLife.Relationship.html#TinyLife_Relationship_RomanceType
  name: RomanceType
  nameWithType: Relationship.RomanceType
  fullName: TinyLife.Relationship.RomanceType
- uid: TinyLife.Relationship.RomanceType*
  commentId: Overload:TinyLife.Relationship.RomanceType
  href: TinyLife.Relationship.html#TinyLife_Relationship_RomanceType
  name: RomanceType
  nameWithType: Relationship.RomanceType
  fullName: TinyLife.Relationship.RomanceType
- uid: TinyLife.RomanceType
  commentId: T:TinyLife.RomanceType
  parent: TinyLife
  href: TinyLife.RomanceType.html
  name: RomanceType
  nameWithType: RomanceType
  fullName: TinyLife.RomanceType
- uid: TinyLife.Relationship.Type
  commentId: P:TinyLife.Relationship.Type
  href: TinyLife.Relationship.html#TinyLife_Relationship_Type
  name: Type
  nameWithType: Relationship.Type
  fullName: TinyLife.Relationship.Type
- uid: TinyLife.Relationship.FriendDisplayString*
  commentId: Overload:TinyLife.Relationship.FriendDisplayString
  href: TinyLife.Relationship.html#TinyLife_Relationship_FriendDisplayString
  name: FriendDisplayString
  nameWithType: Relationship.FriendDisplayString
  fullName: TinyLife.Relationship.FriendDisplayString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Relationship.RomanceDisplayString*
  commentId: Overload:TinyLife.Relationship.RomanceDisplayString
  href: TinyLife.Relationship.html#TinyLife_Relationship_RomanceDisplayString
  name: RomanceDisplayString
  nameWithType: Relationship.RomanceDisplayString
  fullName: TinyLife.Relationship.RomanceDisplayString
- uid: TinyLife.GenealogyType
  commentId: T:TinyLife.GenealogyType
  parent: TinyLife
  href: TinyLife.GenealogyType.html
  name: GenealogyType
  nameWithType: GenealogyType
  fullName: TinyLife.GenealogyType
- uid: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
  commentId: M:TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetOpposite_TinyLife_GenealogyType_
  name: GetOpposite(GenealogyType)
  nameWithType: Extensions.GetOpposite(GenealogyType)
  fullName: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
    name: GetOpposite
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetOpposite_TinyLife_GenealogyType_
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
    href: TinyLife.GenealogyType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
    name: GetOpposite
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetOpposite_TinyLife_GenealogyType_
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
    href: TinyLife.GenealogyType.html
  - name: )
- uid: TinyLife.Relationship.Genealogy*
  commentId: Overload:TinyLife.Relationship.Genealogy
  href: TinyLife.Relationship.html#TinyLife_Relationship_Genealogy
  name: Genealogy
  nameWithType: Relationship.Genealogy
  fullName: TinyLife.Relationship.Genealogy
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Goals.JobType.Types
  commentId: F:TinyLife.Goals.JobType.Types
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_Types
  name: Types
  nameWithType: JobType.Types
  fullName: TinyLife.Goals.JobType.Types
- uid: TinyLife.Goals.JobType
  commentId: T:TinyLife.Goals.JobType
  parent: TinyLife.Goals
  href: TinyLife.Goals.JobType.html
  name: JobType
  nameWithType: JobType
  fullName: TinyLife.Goals.JobType
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: TinyLife.Relationship.Person*
  commentId: Overload:TinyLife.Relationship.Person
  href: TinyLife.Relationship.html#TinyLife_Relationship_Person
  name: Person
  nameWithType: Relationship.Person
  fullName: TinyLife.Relationship.Person
- uid: TinyLife.World.Map.GetStoredDeadPeople
  commentId: M:TinyLife.World.Map.GetStoredDeadPeople
  href: TinyLife.World.Map.html#TinyLife_World_Map_GetStoredDeadPeople
  name: GetStoredDeadPeople()
  nameWithType: Map.GetStoredDeadPeople()
  fullName: TinyLife.World.Map.GetStoredDeadPeople()
  spec.csharp:
  - uid: TinyLife.World.Map.GetStoredDeadPeople
    name: GetStoredDeadPeople
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetStoredDeadPeople
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.GetStoredDeadPeople
    name: GetStoredDeadPeople
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetStoredDeadPeople
  - name: (
  - name: )
- uid: TinyLife.Relationship.GetPartner*
  commentId: Overload:TinyLife.Relationship.GetPartner
  href: TinyLife.Relationship.html#TinyLife_Relationship_GetPartner_System_Boolean_
  name: GetPartner
  nameWithType: Relationship.GetPartner
  fullName: TinyLife.Relationship.GetPartner
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions.TalkAction
  commentId: T:TinyLife.Actions.TalkAction
  href: TinyLife.Actions.TalkAction.html
  name: TalkAction
  nameWithType: TalkAction
  fullName: TinyLife.Actions.TalkAction
- uid: TinyLife.Objects.AgeGroup.Child
  commentId: F:TinyLife.Objects.AgeGroup.Child
  href: TinyLife.Objects.AgeGroup.html#TinyLife_Objects_AgeGroup_Child
  name: Child
  nameWithType: AgeGroup.Child
  fullName: TinyLife.Objects.AgeGroup.Child
- uid: TinyLife.Relationship.GetSocialEffectiveness*
  commentId: Overload:TinyLife.Relationship.GetSocialEffectiveness
  href: TinyLife.Relationship.html#TinyLife_Relationship_GetSocialEffectiveness_TinyLife_Actions_ActionType_
  name: GetSocialEffectiveness
  nameWithType: Relationship.GetSocialEffectiveness
  fullName: TinyLife.Relationship.GetSocialEffectiveness
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: TinyLife.Objects.PersonLike.Validate(TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Objects.PersonLike.Validate(TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Validate_TinyLife_Utilities_AppliedMigrations_
  name: Validate(AppliedMigrations)
  nameWithType: PersonLike.Validate(AppliedMigrations)
  fullName: TinyLife.Objects.PersonLike.Validate(TinyLife.Utilities.AppliedMigrations)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.Validate(TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Validate_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.Validate(TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Validate_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
- uid: TinyLife.Relationship.Validate*
  commentId: Overload:TinyLife.Relationship.Validate
  href: TinyLife.Relationship.html#TinyLife_Relationship_Validate_TinyLife_Objects_PersonLike_TinyLife_Utilities_AppliedMigrations_
  name: Validate
  nameWithType: Relationship.Validate
  fullName: TinyLife.Relationship.Validate
- uid: TinyLife.Utilities.AppliedMigrations
  commentId: T:TinyLife.Utilities.AppliedMigrations
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.AppliedMigrations.html
  name: AppliedMigrations
  nameWithType: AppliedMigrations
  fullName: TinyLife.Utilities.AppliedMigrations
- uid: TinyLife.Relationship.ResetToStatic*
  commentId: Overload:TinyLife.Relationship.ResetToStatic
  href: TinyLife.Relationship.html#TinyLife_Relationship_ResetToStatic_System_Boolean_System_Boolean_
  name: ResetToStatic
  nameWithType: Relationship.ResetToStatic
  fullName: TinyLife.Relationship.ResetToStatic
- uid: TinyLife.Relationship.Genealogy
  commentId: P:TinyLife.Relationship.Genealogy
  href: TinyLife.Relationship.html#TinyLife_Relationship_Genealogy
  name: Genealogy
  nameWithType: Relationship.Genealogy
  fullName: TinyLife.Relationship.Genealogy
- uid: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
  commentId: M:TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetTransitive_TinyLife_GenealogyType_TinyLife_GenealogyType_
  name: GetTransitive(GenealogyType, GenealogyType)
  nameWithType: Extensions.GetTransitive(GenealogyType, GenealogyType)
  fullName: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType, TinyLife.GenealogyType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
    name: GetTransitive
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetTransitive_TinyLife_GenealogyType_TinyLife_GenealogyType_
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
    href: TinyLife.GenealogyType.html
  - name: ','
  - name: " "
  - uid: TinyLife.GenealogyType
    name: GenealogyType
    href: TinyLife.GenealogyType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
    name: GetTransitive
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetTransitive_TinyLife_GenealogyType_TinyLife_GenealogyType_
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
    href: TinyLife.GenealogyType.html
  - name: ','
  - name: " "
  - uid: TinyLife.GenealogyType
    name: GenealogyType
    href: TinyLife.GenealogyType.html
  - name: )
- uid: TinyLife.GenealogyType.Unrelated
  commentId: F:TinyLife.GenealogyType.Unrelated
  href: TinyLife.GenealogyType.html#TinyLife_GenealogyType_Unrelated
  name: Unrelated
  nameWithType: GenealogyType.Unrelated
  fullName: TinyLife.GenealogyType.Unrelated
- uid: TinyLife.Relationship.SetGenealogy*
  commentId: Overload:TinyLife.Relationship.SetGenealogy
  href: TinyLife.Relationship.html#TinyLife_Relationship_SetGenealogy_TinyLife_GenealogyType_System_Boolean_System_Action_TinyLife_Objects_PersonLike_TinyLife_Relationship_TinyLife_GenealogyType__System_Collections_Generic_ICollection_TinyLife_Objects_PersonLike__
  name: SetGenealogy
  nameWithType: Relationship.SetGenealogy
  fullName: TinyLife.Relationship.SetGenealogy
- uid: System.Action{TinyLife.Objects.PersonLike,TinyLife.Relationship,TinyLife.GenealogyType}
  commentId: T:System.Action{TinyLife.Objects.PersonLike,TinyLife.Relationship,TinyLife.GenealogyType}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<PersonLike, Relationship, GenealogyType>
  nameWithType: Action<PersonLike, Relationship, GenealogyType>
  fullName: System.Action<TinyLife.Objects.PersonLike, TinyLife.Relationship, TinyLife.GenealogyType>
  nameWithType.vb: Action(Of PersonLike, Relationship, GenealogyType)
  fullName.vb: System.Action(Of TinyLife.Objects.PersonLike, TinyLife.Relationship, TinyLife.GenealogyType)
  name.vb: Action(Of PersonLike, Relationship, GenealogyType)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: ','
  - name: " "
  - uid: TinyLife.GenealogyType
    name: GenealogyType
    href: TinyLife.GenealogyType.html
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Relationship
    name: Relationship
    href: TinyLife.Relationship.html
  - name: ','
  - name: " "
  - uid: TinyLife.GenealogyType
    name: GenealogyType
    href: TinyLife.GenealogyType.html
  - name: )
- uid: System.Collections.Generic.ICollection{TinyLife.Objects.PersonLike}
  commentId: T:System.Collections.Generic.ICollection{TinyLife.Objects.PersonLike}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<PersonLike>
  nameWithType: ICollection<PersonLike>
  fullName: System.Collections.Generic.ICollection<TinyLife.Objects.PersonLike>
  nameWithType.vb: ICollection(Of PersonLike)
  fullName.vb: System.Collections.Generic.ICollection(Of TinyLife.Objects.PersonLike)
  name.vb: ICollection(Of PersonLike)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Goals.Memory
  commentId: T:TinyLife.Goals.Memory
  href: TinyLife.Goals.Memory.html
  name: Memory
  nameWithType: Memory
  fullName: TinyLife.Goals.Memory
- uid: TinyLife.Objects.PersonLike.Memories
  commentId: F:TinyLife.Objects.PersonLike.Memories
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Memories
  name: Memories
  nameWithType: PersonLike.Memories
  fullName: TinyLife.Objects.PersonLike.Memories
- uid: TinyLife.World.Map.Time
  commentId: P:TinyLife.World.Map.Time
  href: TinyLife.World.Map.html#TinyLife_World_Map_Time
  name: Time
  nameWithType: Map.Time
  fullName: TinyLife.World.Map.Time
- uid: TinyLife.Relationship.AddMemory*
  commentId: Overload:TinyLife.Relationship.AddMemory
  href: TinyLife.Relationship.html#TinyLife_Relationship_AddMemory__1_TinyLife_Goals_MemoryType_System_Boolean_System_Int32_System_Nullable_System_TimeSpan__
  name: AddMemory
  nameWithType: Relationship.AddMemory
  fullName: TinyLife.Relationship.AddMemory
- uid: TinyLife.Goals.MemoryType
  commentId: T:TinyLife.Goals.MemoryType
  parent: TinyLife.Goals
  href: TinyLife.Goals.MemoryType.html
  name: MemoryType
  nameWithType: MemoryType
  fullName: TinyLife.Goals.MemoryType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TinyLife.Relationship.GetMemories*
  commentId: Overload:TinyLife.Relationship.GetMemories
  href: TinyLife.Relationship.html#TinyLife_Relationship_GetMemories__1_TinyLife_Goals_MemoryType_System_Boolean_
  name: GetMemories
  nameWithType: Relationship.GetMemories
  fullName: TinyLife.Relationship.GetMemories
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Relationship.RemoveMemory*
  commentId: Overload:TinyLife.Relationship.RemoveMemory
  href: TinyLife.Relationship.html#TinyLife_Relationship_RemoveMemory__1_TinyLife_Goals_MemoryType_System_Boolean_System_Int32_System_Func___0_System_Boolean__
  name: RemoveMemory
  nameWithType: Relationship.RemoveMemory
  fullName: TinyLife.Relationship.RemoveMemory
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, bool>
  nameWithType: Func<T, bool>
  fullName: System.Func<T, bool>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Relationship.GetTimeSinceMemory*
  commentId: Overload:TinyLife.Relationship.GetTimeSinceMemory
  href: TinyLife.Relationship.html#TinyLife_Relationship_GetTimeSinceMemory__1_TinyLife_Goals_MemoryType_System_Boolean_System_Func___0_System_Boolean__
  name: GetTimeSinceMemory
  nameWithType: Relationship.GetTimeSinceMemory
  fullName: TinyLife.Relationship.GetTimeSinceMemory
- uid: MLEM.Ui.Elements.Group
  commentId: T:MLEM.Ui.Elements.Group
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Group
  nameWithType: Group
  fullName: MLEM.Ui.Elements.Group
- uid: MLEM.Ui.Elements.Panel
  commentId: T:MLEM.Ui.Elements.Panel
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Panel
  nameWithType: Panel
  fullName: MLEM.Ui.Elements.Panel
- uid: TinyLife.Relationship.OnRelationshipPanel
  commentId: E:TinyLife.Relationship.OnRelationshipPanel
  href: TinyLife.Relationship.html#TinyLife_Relationship_OnRelationshipPanel
  name: OnRelationshipPanel
  nameWithType: Relationship.OnRelationshipPanel
  fullName: TinyLife.Relationship.OnRelationshipPanel
- uid: MLEM.Ui.Elements.Element.Size
  commentId: P:MLEM.Ui.Elements.Element.Size
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: Size
  nameWithType: Element.Size
  fullName: MLEM.Ui.Elements.Element.Size
- uid: TinyLife.Relationship.CreatePanel*
  commentId: Overload:TinyLife.Relationship.CreatePanel
  href: TinyLife.Relationship.html#TinyLife_Relationship_CreatePanel_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_TinyLife_Relationship_Microsoft_Xna_Framework_Vector2_
  name: CreatePanel
  nameWithType: Relationship.CreatePanel
  fullName: TinyLife.Relationship.CreatePanel
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: MLEM.Ui.Elements.ProgressBar
  commentId: T:MLEM.Ui.Elements.ProgressBar
  isExternal: true
  name: ProgressBar
  nameWithType: ProgressBar
  fullName: MLEM.Ui.Elements.ProgressBar
- uid: TinyLife.Relationship.CreateBars*
  commentId: Overload:TinyLife.Relationship.CreateBars
  href: TinyLife.Relationship.html#TinyLife_Relationship_CreateBars_MLEM_Ui_Anchor_TinyLife_Objects_PersonLike_TinyLife_Relationship_Microsoft_Xna_Framework_Vector2_System_Single_System_Boolean_
  name: CreateBars
  nameWithType: Relationship.CreateBars
  fullName: TinyLife.Relationship.CreateBars
- uid: MLEM.Ui.Anchor
  commentId: T:MLEM.Ui.Anchor
  parent: MLEM.Ui
  isExternal: true
  name: Anchor
  nameWithType: Anchor
  fullName: MLEM.Ui.Anchor
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  isExternal: true
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
- uid: TinyLife.Relationship.OnRelationshipTooltip
  commentId: E:TinyLife.Relationship.OnRelationshipTooltip
  href: TinyLife.Relationship.html#TinyLife_Relationship_OnRelationshipTooltip
  name: OnRelationshipTooltip
  nameWithType: Relationship.OnRelationshipTooltip
  fullName: TinyLife.Relationship.OnRelationshipTooltip
- uid: TinyLife.Relationship.PopulateTooltip*
  commentId: Overload:TinyLife.Relationship.PopulateTooltip
  href: TinyLife.Relationship.html#TinyLife_Relationship_PopulateTooltip_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_TinyLife_Relationship_MLEM_Ui_Elements_Tooltip_
  name: PopulateTooltip
  nameWithType: Relationship.PopulateTooltip
  fullName: TinyLife.Relationship.PopulateTooltip
- uid: MLEM.Ui.Elements.Tooltip
  commentId: T:MLEM.Ui.Elements.Tooltip
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Tooltip
  nameWithType: Tooltip
  fullName: MLEM.Ui.Elements.Tooltip
