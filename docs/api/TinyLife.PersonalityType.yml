### YamlMime:ManagedReference
items:
- uid: TinyLife.PersonalityType
  commentId: T:TinyLife.PersonalityType
  id: PersonalityType
  parent: TinyLife
  children:
  - TinyLife.PersonalityType.#ctor(System.String,MLEM.Textures.TextureRegion)
  - TinyLife.PersonalityType.AfraidOfStrangers
  - TinyLife.PersonalityType.AllowedAges
  - TinyLife.PersonalityType.AllowedPersonType
  - TinyLife.PersonalityType.Ambitious
  - TinyLife.PersonalityType.Aromantic
  - TinyLife.PersonalityType.Asexual
  - TinyLife.PersonalityType.BoostedSkillTypes
  - TinyLife.PersonalityType.BoostedSkills
  - TinyLife.PersonalityType.Brave
  - TinyLife.PersonalityType.CapableCarpenter
  - TinyLife.PersonalityType.Category
  - TinyLife.PersonalityType.Cheerful
  - TinyLife.PersonalityType.CityNative
  - TinyLife.PersonalityType.Clingy
  - TinyLife.PersonalityType.CommunicativeBaby
  - TinyLife.PersonalityType.ComputerAddict
  - TinyLife.PersonalityType.CreateInfoGroup(MLEM.Ui.Anchor,System.Single)
  - TinyLife.PersonalityType.Creative
  - TinyLife.PersonalityType.CreativeChild
  - TinyLife.PersonalityType.Daydreamer
  - TinyLife.PersonalityType.Energetic
  - TinyLife.PersonalityType.Extroverted
  - TinyLife.PersonalityType.FamilyFocused
  - TinyLife.PersonalityType.FastLearner
  - TinyLife.PersonalityType.FillRandomly(TinyLife.Objects.PersonLike,System.Random,System.Boolean)
  - TinyLife.PersonalityType.Foodie
  - TinyLife.PersonalityType.FriendOfEveryone
  - TinyLife.PersonalityType.GymRat
  - TinyLife.PersonalityType.HatesChildren
  - TinyLife.PersonalityType.Homebody
  - TinyLife.PersonalityType.HouseholdHero
  - TinyLife.PersonalityType.Hyphenate
  - TinyLife.PersonalityType.Incompatible
  - TinyLife.PersonalityType.Independent
  - TinyLife.PersonalityType.Introverted
  - TinyLife.PersonalityType.IsCompatible(TinyLife.PersonalityType)
  - TinyLife.PersonalityType.LaidBack
  - TinyLife.PersonalityType.Likeable
  - TinyLife.PersonalityType.MasterChef
  - TinyLife.PersonalityType.Mean
  - TinyLife.PersonalityType.Millionaire
  - TinyLife.PersonalityType.ModifiedEmotions
  - TinyLife.PersonalityType.ModifiedNeedReductions
  - TinyLife.PersonalityType.Name
  - TinyLife.PersonalityType.Outdoorsy
  - TinyLife.PersonalityType.PerfectPainter
  - TinyLife.PersonalityType.Pescetarian
  - TinyLife.PersonalityType.ReadBaby
  - TinyLife.PersonalityType.Register(TinyLife.PersonalityType)
  - TinyLife.PersonalityType.SmartKid
  - TinyLife.PersonalityType.SourceString
  - TinyLife.PersonalityType.Techie
  - TinyLife.PersonalityType.Texture
  - TinyLife.PersonalityType.Thinker
  - TinyLife.PersonalityType.Thrifty
  - TinyLife.PersonalityType.Types
  - TinyLife.PersonalityType.Vegan
  - TinyLife.PersonalityType.Vegetarian
  - TinyLife.PersonalityType.Writer
  langs:
  - csharp
  - vb
  name: PersonalityType
  nameWithType: PersonalityType
  fullName: TinyLife.PersonalityType
  type: Class
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    A personality type is a trait that a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> can have.

    Each personality type is meant to influence the person's behavior and abilities slightly in a certain way.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(MigratingStaticJsonConverter<PersonalityType>), new object[] { typeof(PersonalityType), "PrivateTypes", true })]

      public class PersonalityType : IEmotionSource
    content.vb: >-
      <JsonConverter(GetType(MigratingStaticJsonConverter(Of PersonalityType)), New Object() { GetType(PersonalityType), "PrivateTypes", True })>

      Public Class PersonalityType Implements IEmotionSource
  inheritance:
  - System.Object
  implements:
  - TinyLife.Emotions.IEmotionSource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.PersonalityType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.PersonalityType.Types
  commentId: F:TinyLife.PersonalityType.Types
  id: Types
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: PersonalityType.Types
  fullName: TinyLife.PersonalityType.Types
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    A registry of all of the personality types in the game.

    Use <xref href="TinyLife.PersonalityType.Register(TinyLife.PersonalityType)" data-throw-if-not-resolved="false"></xref> to register custom personality types.
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, PersonalityType> Types
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.PersonalityType}
    content.vb: Public Shared ReadOnly Types As ReadOnlyDictionary(Of String, PersonalityType)
- uid: TinyLife.PersonalityType.LaidBack
  commentId: F:TinyLife.PersonalityType.LaidBack
  id: LaidBack
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: LaidBack
  nameWithType: PersonalityType.LaidBack
  fullName: TinyLife.PersonalityType.LaidBack
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType LaidBack
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly LaidBack As PersonalityType
- uid: TinyLife.PersonalityType.Energetic
  commentId: F:TinyLife.PersonalityType.Energetic
  id: Energetic
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Energetic
  nameWithType: PersonalityType.Energetic
  fullName: TinyLife.PersonalityType.Energetic
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Energetic
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Energetic As PersonalityType
- uid: TinyLife.PersonalityType.Creative
  commentId: F:TinyLife.PersonalityType.Creative
  id: Creative
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Creative
  nameWithType: PersonalityType.Creative
  fullName: TinyLife.PersonalityType.Creative
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Creative
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Creative As PersonalityType
- uid: TinyLife.PersonalityType.Likeable
  commentId: F:TinyLife.PersonalityType.Likeable
  id: Likeable
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Likeable
  nameWithType: PersonalityType.Likeable
  fullName: TinyLife.PersonalityType.Likeable
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Likeable
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Likeable As PersonalityType
- uid: TinyLife.PersonalityType.Mean
  commentId: F:TinyLife.PersonalityType.Mean
  id: Mean
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Mean
  nameWithType: PersonalityType.Mean
  fullName: TinyLife.PersonalityType.Mean
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Mean
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Mean As PersonalityType
- uid: TinyLife.PersonalityType.Ambitious
  commentId: F:TinyLife.PersonalityType.Ambitious
  id: Ambitious
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Ambitious
  nameWithType: PersonalityType.Ambitious
  fullName: TinyLife.PersonalityType.Ambitious
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Ambitious
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Ambitious As PersonalityType
- uid: TinyLife.PersonalityType.Thinker
  commentId: F:TinyLife.PersonalityType.Thinker
  id: Thinker
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Thinker
  nameWithType: PersonalityType.Thinker
  fullName: TinyLife.PersonalityType.Thinker
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Thinker
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Thinker As PersonalityType
- uid: TinyLife.PersonalityType.Introverted
  commentId: F:TinyLife.PersonalityType.Introverted
  id: Introverted
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Introverted
  nameWithType: PersonalityType.Introverted
  fullName: TinyLife.PersonalityType.Introverted
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Introverted
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Introverted As PersonalityType
- uid: TinyLife.PersonalityType.Extroverted
  commentId: F:TinyLife.PersonalityType.Extroverted
  id: Extroverted
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Extroverted
  nameWithType: PersonalityType.Extroverted
  fullName: TinyLife.PersonalityType.Extroverted
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Extroverted
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Extroverted As PersonalityType
- uid: TinyLife.PersonalityType.FamilyFocused
  commentId: F:TinyLife.PersonalityType.FamilyFocused
  id: FamilyFocused
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: FamilyFocused
  nameWithType: PersonalityType.FamilyFocused
  fullName: TinyLife.PersonalityType.FamilyFocused
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType FamilyFocused
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly FamilyFocused As PersonalityType
- uid: TinyLife.PersonalityType.Foodie
  commentId: F:TinyLife.PersonalityType.Foodie
  id: Foodie
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Foodie
  nameWithType: PersonalityType.Foodie
  fullName: TinyLife.PersonalityType.Foodie
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Foodie
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Foodie As PersonalityType
- uid: TinyLife.PersonalityType.Outdoorsy
  commentId: F:TinyLife.PersonalityType.Outdoorsy
  id: Outdoorsy
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Outdoorsy
  nameWithType: PersonalityType.Outdoorsy
  fullName: TinyLife.PersonalityType.Outdoorsy
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Outdoorsy
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Outdoorsy As PersonalityType
- uid: TinyLife.PersonalityType.Techie
  commentId: F:TinyLife.PersonalityType.Techie
  id: Techie
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Techie
  nameWithType: PersonalityType.Techie
  fullName: TinyLife.PersonalityType.Techie
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Techie
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Techie As PersonalityType
- uid: TinyLife.PersonalityType.Thrifty
  commentId: F:TinyLife.PersonalityType.Thrifty
  id: Thrifty
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Thrifty
  nameWithType: PersonalityType.Thrifty
  fullName: TinyLife.PersonalityType.Thrifty
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Thrifty
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Thrifty As PersonalityType
- uid: TinyLife.PersonalityType.Homebody
  commentId: F:TinyLife.PersonalityType.Homebody
  id: Homebody
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Homebody
  nameWithType: PersonalityType.Homebody
  fullName: TinyLife.PersonalityType.Homebody
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Homebody
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Homebody As PersonalityType
- uid: TinyLife.PersonalityType.Cheerful
  commentId: F:TinyLife.PersonalityType.Cheerful
  id: Cheerful
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Cheerful
  nameWithType: PersonalityType.Cheerful
  fullName: TinyLife.PersonalityType.Cheerful
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Cheerful
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Cheerful As PersonalityType
- uid: TinyLife.PersonalityType.Brave
  commentId: F:TinyLife.PersonalityType.Brave
  id: Brave
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Brave
  nameWithType: PersonalityType.Brave
  fullName: TinyLife.PersonalityType.Brave
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Brave
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Brave As PersonalityType
- uid: TinyLife.PersonalityType.Independent
  commentId: F:TinyLife.PersonalityType.Independent
  id: Independent
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Independent
  nameWithType: PersonalityType.Independent
  fullName: TinyLife.PersonalityType.Independent
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Independent
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Independent As PersonalityType
- uid: TinyLife.PersonalityType.FastLearner
  commentId: F:TinyLife.PersonalityType.FastLearner
  id: FastLearner
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: FastLearner
  nameWithType: PersonalityType.FastLearner
  fullName: TinyLife.PersonalityType.FastLearner
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType FastLearner
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly FastLearner As PersonalityType
- uid: TinyLife.PersonalityType.Clingy
  commentId: F:TinyLife.PersonalityType.Clingy
  id: Clingy
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Clingy
  nameWithType: PersonalityType.Clingy
  fullName: TinyLife.PersonalityType.Clingy
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Clingy
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Clingy As PersonalityType
- uid: TinyLife.PersonalityType.AfraidOfStrangers
  commentId: F:TinyLife.PersonalityType.AfraidOfStrangers
  id: AfraidOfStrangers
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: AfraidOfStrangers
  nameWithType: PersonalityType.AfraidOfStrangers
  fullName: TinyLife.PersonalityType.AfraidOfStrangers
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType AfraidOfStrangers
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly AfraidOfStrangers As PersonalityType
- uid: TinyLife.PersonalityType.Asexual
  commentId: F:TinyLife.PersonalityType.Asexual
  id: Asexual
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Asexual
  nameWithType: PersonalityType.Asexual
  fullName: TinyLife.PersonalityType.Asexual
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Asexual
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Asexual As PersonalityType
- uid: TinyLife.PersonalityType.Aromantic
  commentId: F:TinyLife.PersonalityType.Aromantic
  id: Aromantic
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Aromantic
  nameWithType: PersonalityType.Aromantic
  fullName: TinyLife.PersonalityType.Aromantic
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Aromantic
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Aromantic As PersonalityType
- uid: TinyLife.PersonalityType.HatesChildren
  commentId: F:TinyLife.PersonalityType.HatesChildren
  id: HatesChildren
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: HatesChildren
  nameWithType: PersonalityType.HatesChildren
  fullName: TinyLife.PersonalityType.HatesChildren
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType HatesChildren
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly HatesChildren As PersonalityType
- uid: TinyLife.PersonalityType.Pescetarian
  commentId: F:TinyLife.PersonalityType.Pescetarian
  id: Pescetarian
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Pescetarian
  nameWithType: PersonalityType.Pescetarian
  fullName: TinyLife.PersonalityType.Pescetarian
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Pescetarian
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Pescetarian As PersonalityType
- uid: TinyLife.PersonalityType.Vegetarian
  commentId: F:TinyLife.PersonalityType.Vegetarian
  id: Vegetarian
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Vegetarian
  nameWithType: PersonalityType.Vegetarian
  fullName: TinyLife.PersonalityType.Vegetarian
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Vegetarian
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Vegetarian As PersonalityType
- uid: TinyLife.PersonalityType.Vegan
  commentId: F:TinyLife.PersonalityType.Vegan
  id: Vegan
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Vegan
  nameWithType: PersonalityType.Vegan
  fullName: TinyLife.PersonalityType.Vegan
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Vegan
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Vegan As PersonalityType
- uid: TinyLife.PersonalityType.Daydreamer
  commentId: F:TinyLife.PersonalityType.Daydreamer
  id: Daydreamer
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Daydreamer
  nameWithType: PersonalityType.Daydreamer
  fullName: TinyLife.PersonalityType.Daydreamer
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Daydreamer
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Daydreamer As PersonalityType
- uid: TinyLife.PersonalityType.CityNative
  commentId: F:TinyLife.PersonalityType.CityNative
  id: CityNative
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: CityNative
  nameWithType: PersonalityType.CityNative
  fullName: TinyLife.PersonalityType.CityNative
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType CityNative
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly CityNative As PersonalityType
- uid: TinyLife.PersonalityType.MasterChef
  commentId: F:TinyLife.PersonalityType.MasterChef
  id: MasterChef
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: MasterChef
  nameWithType: PersonalityType.MasterChef
  fullName: TinyLife.PersonalityType.MasterChef
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType MasterChef
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly MasterChef As PersonalityType
- uid: TinyLife.PersonalityType.SmartKid
  commentId: F:TinyLife.PersonalityType.SmartKid
  id: SmartKid
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: SmartKid
  nameWithType: PersonalityType.SmartKid
  fullName: TinyLife.PersonalityType.SmartKid
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType SmartKid
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly SmartKid As PersonalityType
- uid: TinyLife.PersonalityType.GymRat
  commentId: F:TinyLife.PersonalityType.GymRat
  id: GymRat
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: GymRat
  nameWithType: PersonalityType.GymRat
  fullName: TinyLife.PersonalityType.GymRat
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType GymRat
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly GymRat As PersonalityType
- uid: TinyLife.PersonalityType.HouseholdHero
  commentId: F:TinyLife.PersonalityType.HouseholdHero
  id: HouseholdHero
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: HouseholdHero
  nameWithType: PersonalityType.HouseholdHero
  fullName: TinyLife.PersonalityType.HouseholdHero
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType HouseholdHero
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly HouseholdHero As PersonalityType
- uid: TinyLife.PersonalityType.ComputerAddict
  commentId: F:TinyLife.PersonalityType.ComputerAddict
  id: ComputerAddict
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: ComputerAddict
  nameWithType: PersonalityType.ComputerAddict
  fullName: TinyLife.PersonalityType.ComputerAddict
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType ComputerAddict
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly ComputerAddict As PersonalityType
- uid: TinyLife.PersonalityType.FriendOfEveryone
  commentId: F:TinyLife.PersonalityType.FriendOfEveryone
  id: FriendOfEveryone
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: FriendOfEveryone
  nameWithType: PersonalityType.FriendOfEveryone
  fullName: TinyLife.PersonalityType.FriendOfEveryone
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType FriendOfEveryone
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly FriendOfEveryone As PersonalityType
- uid: TinyLife.PersonalityType.Millionaire
  commentId: F:TinyLife.PersonalityType.Millionaire
  id: Millionaire
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Millionaire
  nameWithType: PersonalityType.Millionaire
  fullName: TinyLife.PersonalityType.Millionaire
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Millionaire
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Millionaire As PersonalityType
- uid: TinyLife.PersonalityType.CapableCarpenter
  commentId: F:TinyLife.PersonalityType.CapableCarpenter
  id: CapableCarpenter
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: CapableCarpenter
  nameWithType: PersonalityType.CapableCarpenter
  fullName: TinyLife.PersonalityType.CapableCarpenter
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType CapableCarpenter
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly CapableCarpenter As PersonalityType
- uid: TinyLife.PersonalityType.PerfectPainter
  commentId: F:TinyLife.PersonalityType.PerfectPainter
  id: PerfectPainter
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: PerfectPainter
  nameWithType: PersonalityType.PerfectPainter
  fullName: TinyLife.PersonalityType.PerfectPainter
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType PerfectPainter
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly PerfectPainter As PersonalityType
- uid: TinyLife.PersonalityType.CreativeChild
  commentId: F:TinyLife.PersonalityType.CreativeChild
  id: CreativeChild
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: CreativeChild
  nameWithType: PersonalityType.CreativeChild
  fullName: TinyLife.PersonalityType.CreativeChild
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType CreativeChild
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly CreativeChild As PersonalityType
- uid: TinyLife.PersonalityType.ReadBaby
  commentId: F:TinyLife.PersonalityType.ReadBaby
  id: ReadBaby
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: ReadBaby
  nameWithType: PersonalityType.ReadBaby
  fullName: TinyLife.PersonalityType.ReadBaby
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType ReadBaby
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly ReadBaby As PersonalityType
- uid: TinyLife.PersonalityType.CommunicativeBaby
  commentId: F:TinyLife.PersonalityType.CommunicativeBaby
  id: CommunicativeBaby
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: CommunicativeBaby
  nameWithType: PersonalityType.CommunicativeBaby
  fullName: TinyLife.PersonalityType.CommunicativeBaby
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType CommunicativeBaby
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly CommunicativeBaby As PersonalityType
- uid: TinyLife.PersonalityType.Writer
  commentId: F:TinyLife.PersonalityType.Writer
  id: Writer
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Writer
  nameWithType: PersonalityType.Writer
  fullName: TinyLife.PersonalityType.Writer
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Writer
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Writer As PersonalityType
- uid: TinyLife.PersonalityType.Hyphenate
  commentId: F:TinyLife.PersonalityType.Hyphenate
  id: Hyphenate
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Hyphenate
  nameWithType: PersonalityType.Hyphenate
  fullName: TinyLife.PersonalityType.Hyphenate
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly PersonalityType Hyphenate
    return:
      type: TinyLife.PersonalityType
    content.vb: Public Shared ReadOnly Hyphenate As PersonalityType
- uid: TinyLife.PersonalityType.Name
  commentId: F:TinyLife.PersonalityType.Name
  id: Name
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PersonalityType.Name
  fullName: TinyLife.PersonalityType.Name
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    The name of this personality type.

    As this is used for <xref href="TinyLife.PersonalityType.Types" data-throw-if-not-resolved="false"></xref>, this name needs to be unique across all installed mods.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.PersonalityType.Texture
  commentId: F:TinyLife.PersonalityType.Texture
  id: Texture
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: PersonalityType.Texture
  fullName: TinyLife.PersonalityType.Texture
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: The icon texture for this personality type
  example: []
  syntax:
    content: public readonly TextureRegion Texture
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Texture As TextureRegion
- uid: TinyLife.PersonalityType.Incompatible
  commentId: P:TinyLife.PersonalityType.Incompatible
  id: Incompatible
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Incompatible
  nameWithType: PersonalityType.Incompatible
  fullName: TinyLife.PersonalityType.Incompatible
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    A set of personality types that cannot be applied together with this one. This property is queried in <xref href="TinyLife.PersonalityType.IsCompatible(TinyLife.PersonalityType)" data-throw-if-not-resolved="false"></xref>.

    Defaults to null, meaning all other personality types are compatible with this one.
  example: []
  syntax:
    content: public Func<PersonalityType[]> Incompatible { get; init; }
    parameters: []
    return:
      type: System.Func{TinyLife.PersonalityType[]}
    content.vb: Public Property Incompatible As Func(Of PersonalityType())
  overload: TinyLife.PersonalityType.Incompatible*
- uid: TinyLife.PersonalityType.BoostedSkills
  commentId: P:TinyLife.PersonalityType.BoostedSkills
  id: BoostedSkills
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: BoostedSkills
  nameWithType: PersonalityType.BoostedSkills
  fullName: TinyLife.PersonalityType.BoostedSkills
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    A set of <xref href="TinyLife.Skills.SkillCategory" data-throw-if-not-resolved="false"></xref> values that represent the skill categories that are boosted by this personality type, along with the amount that they are boosted by.

    If the amount is set to 0.1, for example, any skill gain will be multiplied by 1 + 0.1 (= 1.1).

    The boost for a specific skill can then be retrieved using <xref href="TinyLife.Objects.PersonLike.GetPersonalitySkillBoost(TinyLife.Skills.SkillType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public (SkillCategory Skill, float Amount) BoostedSkills { get; init; }
    parameters: []
    return:
      type: System.ValueTuple{TinyLife.Skills.SkillCategory,System.Single}
    content.vb: Public Property BoostedSkills As (Skill As SkillCategory, Amount As Single)
  overload: TinyLife.PersonalityType.BoostedSkills*
  seealso:
  - linkId: TinyLife.PersonalityType.BoostedSkillTypes
    commentId: P:TinyLife.PersonalityType.BoostedSkillTypes
- uid: TinyLife.PersonalityType.BoostedSkillTypes
  commentId: P:TinyLife.PersonalityType.BoostedSkillTypes
  id: BoostedSkillTypes
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: BoostedSkillTypes
  nameWithType: PersonalityType.BoostedSkillTypes
  fullName: TinyLife.PersonalityType.BoostedSkillTypes
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    A set of <xref href="TinyLife.Skills.SkillType" data-throw-if-not-resolved="false"></xref> values that represent the exact skills that are boosted by this personality type, along with the amount that they are boosted by.

    If the amount is set to 0.1, for example, any skill gain will be multiplied by 1 + 0.1 (= 1.1).

    The boost for a specific skill can then be retrieved using <xref href="TinyLife.Objects.PersonLike.GetPersonalitySkillBoost(TinyLife.Skills.SkillType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public (SkillType Type, float Amount)[] BoostedSkillTypes { get; init; }
    parameters: []
    return:
      type: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}[]
    content.vb: Public Property BoostedSkillTypes As (Type As SkillType, Amount As Single)()
  overload: TinyLife.PersonalityType.BoostedSkillTypes*
  seealso:
  - linkId: TinyLife.PersonalityType.BoostedSkills
    commentId: P:TinyLife.PersonalityType.BoostedSkills
- uid: TinyLife.PersonalityType.ModifiedEmotions
  commentId: P:TinyLife.PersonalityType.ModifiedEmotions
  id: ModifiedEmotions
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: ModifiedEmotions
  nameWithType: PersonalityType.ModifiedEmotions
  fullName: TinyLife.PersonalityType.ModifiedEmotions
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    A set of <xref href="TinyLife.Emotions.EmotionType" data-throw-if-not-resolved="false"></xref> instances that are modified by this personality type, along with the amount that they are modified by and the time multiplier that is applied to the duration of the emotion.

    This property is applied in <xref href="TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier%2cSystem.Int32%2cSystem.TimeSpan%2cTinyLife.Emotions.IEmotionSource%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public (EmotionType Emotion, int AmountChange, float TimeMultiplier)[] ModifiedEmotions { get; init; }
    parameters: []
    return:
      type: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Int32,System.Single}[]
    content.vb: Public Property ModifiedEmotions As (Emotion As EmotionType, AmountChange As Integer, TimeMultiplier As Single)()
  overload: TinyLife.PersonalityType.ModifiedEmotions*
- uid: TinyLife.PersonalityType.ModifiedNeedReductions
  commentId: P:TinyLife.PersonalityType.ModifiedNeedReductions
  id: ModifiedNeedReductions
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: ModifiedNeedReductions
  nameWithType: PersonalityType.ModifiedNeedReductions
  fullName: TinyLife.PersonalityType.ModifiedNeedReductions
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    A set of <xref href="TinyLife.NeedType" data-throw-if-not-resolved="false"></xref> instances whose <xref href="TinyLife.NeedType.PassiveReduction" data-throw-if-not-resolved="false"></xref> values are modified by this personality type, along with the amount that they are modified by.

    This property is applied in <xref href="TinyLife.Objects.PersonLike.GetPassiveNeedReduction(TinyLife.NeedType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public (NeedType Need, float Modifier)[] ModifiedNeedReductions { get; init; }
    parameters: []
    return:
      type: System.ValueTuple{TinyLife.NeedType,System.Single}[]
    content.vb: Public Property ModifiedNeedReductions As (Need As NeedType, Modifier As Single)()
  overload: TinyLife.PersonalityType.ModifiedNeedReductions*
- uid: TinyLife.PersonalityType.AllowedAges
  commentId: P:TinyLife.PersonalityType.AllowedAges
  id: AllowedAges
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: AllowedAges
  nameWithType: PersonalityType.AllowedAges
  fullName: TinyLife.PersonalityType.AllowedAges
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    A set of age group flags that represent people of which ages can have this personality type.

    This value defaults to <xref href="TinyLife.Objects.AgeGroup.ChildOrOlder" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AgeGroup AllowedAges { get; init; }
    parameters: []
    return:
      type: TinyLife.Objects.AgeGroup
    content.vb: Public Property AllowedAges As AgeGroup
  overload: TinyLife.PersonalityType.AllowedAges*
- uid: TinyLife.PersonalityType.AllowedPersonType
  commentId: P:TinyLife.PersonalityType.AllowedPersonType
  id: AllowedPersonType
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: AllowedPersonType
  nameWithType: PersonalityType.AllowedPersonType
  fullName: TinyLife.PersonalityType.AllowedPersonType
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: >-
    The type of <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> that is able to have this personality.

    This value default to the <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> type.
  example: []
  syntax:
    content: public Type AllowedPersonType { get; init; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property AllowedPersonType As Type
  overload: TinyLife.PersonalityType.AllowedPersonType*
- uid: TinyLife.PersonalityType.Category
  commentId: P:TinyLife.PersonalityType.Category
  id: Category
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: PersonalityType.Category
  fullName: TinyLife.PersonalityType.Category
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: This personality type's <xref href="TinyLife.PersonalityType.TypeCategory" data-throw-if-not-resolved="false"></xref>, which defaults to <xref href="TinyLife.PersonalityType.TypeCategory.Major" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public PersonalityType.TypeCategory Category { get; init; }
    parameters: []
    return:
      type: TinyLife.PersonalityType.TypeCategory
    content.vb: Public Property Category As PersonalityType.TypeCategory
  overload: TinyLife.PersonalityType.Category*
- uid: TinyLife.PersonalityType.SourceString
  commentId: P:TinyLife.PersonalityType.SourceString
  id: SourceString
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: SourceString
  nameWithType: PersonalityType.SourceString
  fullName: TinyLife.PersonalityType.SourceString
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: A (localized) string that is displayed when hovering over an <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> that has this source
  example: []
  syntax:
    content: public string SourceString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SourceString As String
  overload: TinyLife.PersonalityType.SourceString*
  implements:
  - TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.PersonalityType.#ctor(System.String,MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.PersonalityType.#ctor(System.String,MLEM.Textures.TextureRegion)
  id: '#ctor(System.String,MLEM.Textures.TextureRegion)'
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: PersonalityType(string, TextureRegion)
  nameWithType: PersonalityType.PersonalityType(string, TextureRegion)
  fullName: TinyLife.PersonalityType.PersonalityType(string, MLEM.Textures.TextureRegion)
  type: Constructor
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Creates a new personality type with the given name
  example: []
  syntax:
    content: public PersonalityType(string name, TextureRegion texture)
    parameters:
    - id: name
      type: System.String
      description: The name of this personality type
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The icon texture for this personality type
    content.vb: Public Sub New(name As String, texture As TextureRegion)
  overload: TinyLife.PersonalityType.#ctor*
  nameWithType.vb: PersonalityType.New(String, TextureRegion)
  fullName.vb: TinyLife.PersonalityType.New(String, MLEM.Textures.TextureRegion)
  name.vb: New(String, TextureRegion)
- uid: TinyLife.PersonalityType.IsCompatible(TinyLife.PersonalityType)
  commentId: M:TinyLife.PersonalityType.IsCompatible(TinyLife.PersonalityType)
  id: IsCompatible(TinyLife.PersonalityType)
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: IsCompatible(PersonalityType)
  nameWithType: PersonalityType.IsCompatible(PersonalityType)
  fullName: TinyLife.PersonalityType.IsCompatible(TinyLife.PersonalityType)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Returns whether this personality type is compatible with the other personality type, based on <xref href="TinyLife.PersonalityType.Incompatible" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsCompatible(PersonalityType other)
    parameters:
    - id: other
      type: TinyLife.PersonalityType
      description: The personality type to compare with.
    return:
      type: System.Boolean
      description: Whether the two personalities are compatible.
    content.vb: Public Function IsCompatible(other As PersonalityType) As Boolean
  overload: TinyLife.PersonalityType.IsCompatible*
- uid: TinyLife.PersonalityType.CreateInfoGroup(MLEM.Ui.Anchor,System.Single)
  commentId: M:TinyLife.PersonalityType.CreateInfoGroup(MLEM.Ui.Anchor,System.Single)
  id: CreateInfoGroup(MLEM.Ui.Anchor,System.Single)
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: CreateInfoGroup(Anchor, float)
  nameWithType: PersonalityType.CreateInfoGroup(Anchor, float)
  fullName: TinyLife.PersonalityType.CreateInfoGroup(MLEM.Ui.Anchor, float)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Creates a new <xref href="MLEM.Ui.Elements.Group" data-throw-if-not-resolved="false"></xref> element that contains information about this <xref href="TinyLife.PersonalityType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Group CreateInfoGroup(Anchor anchor, float scale)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The anchor to use.
    - id: scale
      type: System.Single
      description: The scale to render the <xref href="TinyLife.PersonalityType.Texture" data-throw-if-not-resolved="false"></xref> with.
    return:
      type: MLEM.Ui.Elements.Group
      description: The created group.
    content.vb: Public Function CreateInfoGroup(anchor As Anchor, scale As Single) As Group
  overload: TinyLife.PersonalityType.CreateInfoGroup*
  nameWithType.vb: PersonalityType.CreateInfoGroup(Anchor, Single)
  fullName.vb: TinyLife.PersonalityType.CreateInfoGroup(MLEM.Ui.Anchor, Single)
  name.vb: CreateInfoGroup(Anchor, Single)
- uid: TinyLife.PersonalityType.Register(TinyLife.PersonalityType)
  commentId: M:TinyLife.PersonalityType.Register(TinyLife.PersonalityType)
  id: Register(TinyLife.PersonalityType)
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: Register(PersonalityType)
  nameWithType: PersonalityType.Register(PersonalityType)
  fullName: TinyLife.PersonalityType.Register(TinyLife.PersonalityType)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Registers this personality type to the <xref href="TinyLife.PersonalityType.Types" data-throw-if-not-resolved="false"></xref> registry
  example: []
  syntax:
    content: public static PersonalityType Register(PersonalityType type)
    parameters:
    - id: type
      type: TinyLife.PersonalityType
      description: The personality type to register
    return:
      type: TinyLife.PersonalityType
      description: The personality type, for chaining
    content.vb: Public Shared Function Register(type As PersonalityType) As PersonalityType
  overload: TinyLife.PersonalityType.Register*
- uid: TinyLife.PersonalityType.FillRandomly(TinyLife.Objects.PersonLike,System.Random,System.Boolean)
  commentId: M:TinyLife.PersonalityType.FillRandomly(TinyLife.Objects.PersonLike,System.Random,System.Boolean)
  id: FillRandomly(TinyLife.Objects.PersonLike,System.Random,System.Boolean)
  parent: TinyLife.PersonalityType
  langs:
  - csharp
  - vb
  name: FillRandomly(PersonLike, Random, bool)
  nameWithType: PersonalityType.FillRandomly(PersonLike, Random, bool)
  fullName: TinyLife.PersonalityType.FillRandomly(TinyLife.Objects.PersonLike, System.Random, bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: Fills the given <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Objects.PersonLike.PersonalityTypes" data-throw-if-not-resolved="false"></xref> list until it has reached the amount required by MaxMajorsPerPerson. Additionally ,<xref href="TinyLife.PersonalityType.TypeCategory.Minor" data-throw-if-not-resolved="false"></xref> personalities may be added randomly.
  example: []
  syntax:
    content: public static void FillRandomly(PersonLike person, Random random, bool includeMinor = true)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person.
    - id: random
      type: System.Random
      description: The <xref href="TinyLife.PersonalityType.Random" data-throw-if-not-resolved="false"></xref> instance to use.
    - id: includeMinor
      type: System.Boolean
      description: Whether minor personalities should also be filled randomly.
    content.vb: Public Shared Sub FillRandomly(person As PersonLike, random As Random, includeMinor As Boolean = True)
  overload: TinyLife.PersonalityType.FillRandomly*
  nameWithType.vb: PersonalityType.FillRandomly(PersonLike, Random, Boolean)
  fullName.vb: TinyLife.PersonalityType.FillRandomly(TinyLife.Objects.PersonLike, System.Random, Boolean)
  name.vb: FillRandomly(PersonLike, Random, Boolean)
references:
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Emotions.IEmotionSource
  commentId: T:TinyLife.Emotions.IEmotionSource
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.IEmotionSource.html
  name: IEmotionSource
  nameWithType: IEmotionSource
  fullName: TinyLife.Emotions.IEmotionSource
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.PersonalityType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<PersonalityType>(PersonalityType)
  nameWithType: Extensions.JsonCopy<PersonalityType>(PersonalityType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.PersonalityType>(TinyLife.PersonalityType)
  nameWithType.vb: Extensions.JsonCopy(Of PersonalityType)(PersonalityType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.PersonalityType)(TinyLife.PersonalityType)
  name.vb: JsonCopy(Of PersonalityType)(PersonalityType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.PersonalityType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: '>'
  - name: (
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.PersonalityType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: )
  - name: (
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  href: TinyLife.html
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.PersonalityType.Register(TinyLife.PersonalityType)
  commentId: M:TinyLife.PersonalityType.Register(TinyLife.PersonalityType)
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_Register_TinyLife_PersonalityType_
  name: Register(PersonalityType)
  nameWithType: PersonalityType.Register(PersonalityType)
  fullName: TinyLife.PersonalityType.Register(TinyLife.PersonalityType)
  spec.csharp:
  - uid: TinyLife.PersonalityType.Register(TinyLife.PersonalityType)
    name: Register
    href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_Register_TinyLife_PersonalityType_
  - name: (
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: )
  spec.vb:
  - uid: TinyLife.PersonalityType.Register(TinyLife.PersonalityType)
    name: Register
    href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_Register_TinyLife_PersonalityType_
  - name: (
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.PersonalityType}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.PersonalityType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, PersonalityType>
  nameWithType: ReadOnlyDictionary<string, PersonalityType>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.PersonalityType>
  nameWithType.vb: ReadOnlyDictionary(Of String, PersonalityType)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.PersonalityType)
  name.vb: ReadOnlyDictionary(Of String, PersonalityType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.PersonalityType
  commentId: T:TinyLife.PersonalityType
  parent: TinyLife
  href: TinyLife.PersonalityType.html
  name: PersonalityType
  nameWithType: PersonalityType
  fullName: TinyLife.PersonalityType
- uid: TinyLife.PersonalityType.Types
  commentId: F:TinyLife.PersonalityType.Types
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_Types
  name: Types
  nameWithType: PersonalityType.Types
  fullName: TinyLife.PersonalityType.Types
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.PersonalityType.IsCompatible(TinyLife.PersonalityType)
  commentId: M:TinyLife.PersonalityType.IsCompatible(TinyLife.PersonalityType)
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_IsCompatible_TinyLife_PersonalityType_
  name: IsCompatible(PersonalityType)
  nameWithType: PersonalityType.IsCompatible(PersonalityType)
  fullName: TinyLife.PersonalityType.IsCompatible(TinyLife.PersonalityType)
  spec.csharp:
  - uid: TinyLife.PersonalityType.IsCompatible(TinyLife.PersonalityType)
    name: IsCompatible
    href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_IsCompatible_TinyLife_PersonalityType_
  - name: (
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: )
  spec.vb:
  - uid: TinyLife.PersonalityType.IsCompatible(TinyLife.PersonalityType)
    name: IsCompatible
    href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_IsCompatible_TinyLife_PersonalityType_
  - name: (
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: )
- uid: TinyLife.PersonalityType.Incompatible*
  commentId: Overload:TinyLife.PersonalityType.Incompatible
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_Incompatible
  name: Incompatible
  nameWithType: PersonalityType.Incompatible
  fullName: TinyLife.PersonalityType.Incompatible
- uid: System.Func{TinyLife.PersonalityType[]}
  commentId: T:System.Func{TinyLife.PersonalityType[]}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<PersonalityType[]>
  nameWithType: Func<PersonalityType[]>
  fullName: System.Func<TinyLife.PersonalityType[]>
  nameWithType.vb: Func(Of PersonalityType())
  fullName.vb: System.Func(Of TinyLife.PersonalityType())
  name.vb: Func(Of PersonalityType())
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: (
  - name: )
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.PersonalityType.BoostedSkillTypes
  commentId: P:TinyLife.PersonalityType.BoostedSkillTypes
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_BoostedSkillTypes
  name: BoostedSkillTypes
  nameWithType: PersonalityType.BoostedSkillTypes
  fullName: TinyLife.PersonalityType.BoostedSkillTypes
- uid: TinyLife.Skills.SkillCategory
  commentId: T:TinyLife.Skills.SkillCategory
  parent: TinyLife.Skills
  href: TinyLife.Skills.SkillCategory.html
  name: SkillCategory
  nameWithType: SkillCategory
  fullName: TinyLife.Skills.SkillCategory
- uid: TinyLife.Objects.PersonLike.GetPersonalitySkillBoost(TinyLife.Skills.SkillType)
  commentId: M:TinyLife.Objects.PersonLike.GetPersonalitySkillBoost(TinyLife.Skills.SkillType)
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetPersonalitySkillBoost_TinyLife_Skills_SkillType_
  name: GetPersonalitySkillBoost(SkillType)
  nameWithType: PersonLike.GetPersonalitySkillBoost(SkillType)
  fullName: TinyLife.Objects.PersonLike.GetPersonalitySkillBoost(TinyLife.Skills.SkillType)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.GetPersonalitySkillBoost(TinyLife.Skills.SkillType)
    name: GetPersonalitySkillBoost
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetPersonalitySkillBoost_TinyLife_Skills_SkillType_
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.GetPersonalitySkillBoost(TinyLife.Skills.SkillType)
    name: GetPersonalitySkillBoost
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetPersonalitySkillBoost_TinyLife_Skills_SkillType_
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: )
- uid: TinyLife.PersonalityType.BoostedSkills*
  commentId: Overload:TinyLife.PersonalityType.BoostedSkills
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_BoostedSkills
  name: BoostedSkills
  nameWithType: PersonalityType.BoostedSkills
  fullName: TinyLife.PersonalityType.BoostedSkills
- uid: System.ValueTuple{TinyLife.Skills.SkillCategory,System.Single}
  commentId: T:System.ValueTuple{TinyLife.Skills.SkillCategory,System.Single}
  parent: System
  definition: System.ValueTuple`2
  href: TinyLife.Skills.SkillCategory.html
  name: (SkillCategory Skill, float Amount)
  nameWithType: (SkillCategory Skill, float Amount)
  fullName: (TinyLife.Skills.SkillCategory Skill, float Amount)
  nameWithType.vb: (Skill As SkillCategory, Amount As Single)
  fullName.vb: (Skill As TinyLife.Skills.SkillCategory, Amount As Single)
  name.vb: (Skill As SkillCategory, Amount As Single)
  spec.csharp:
  - name: (
  - uid: TinyLife.Skills.SkillCategory
    name: SkillCategory
    href: TinyLife.Skills.SkillCategory.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillCategory,System.Single}.Skill
    name: Skill
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skillcategory,system.single-.skill
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillCategory,System.Single}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skillcategory,system.single-.amount
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.Skills.SkillCategory,System.Single}.Skill
    name: Skill
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skillcategory,system.single-.skill
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.SkillCategory
    name: SkillCategory
    href: TinyLife.Skills.SkillCategory.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillCategory,System.Single}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skillcategory,system.single-.amount
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.PersonalityType.BoostedSkills
  commentId: P:TinyLife.PersonalityType.BoostedSkills
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_BoostedSkills
  name: BoostedSkills
  nameWithType: PersonalityType.BoostedSkills
  fullName: TinyLife.PersonalityType.BoostedSkills
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  href: TinyLife.Skills.SkillType.html
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: TinyLife.PersonalityType.BoostedSkillTypes*
  commentId: Overload:TinyLife.PersonalityType.BoostedSkillTypes
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_BoostedSkillTypes
  name: BoostedSkillTypes
  nameWithType: PersonalityType.BoostedSkillTypes
  fullName: TinyLife.PersonalityType.BoostedSkillTypes
- uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}[]
  isExternal: true
  href: TinyLife.Skills.SkillType.html
  name: (SkillType Type, float Amount)[]
  nameWithType: (SkillType Type, float Amount)[]
  fullName: (TinyLife.Skills.SkillType Type, float Amount)[]
  nameWithType.vb: (Type As SkillType, Amount As Single)()
  fullName.vb: (Type As TinyLife.Skills.SkillType, Amount As Single)()
  name.vb: (Type As SkillType, Amount As Single)()
  spec.csharp:
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.type
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.amount
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.type
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.amount
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: (
  - name: )
- uid: TinyLife.Emotions.EmotionType
  commentId: T:TinyLife.Emotions.EmotionType
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionType.html
  name: EmotionType
  nameWithType: EmotionType
  fullName: TinyLife.Emotions.EmotionType
- uid: TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
  commentId: M:TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_AddEmotion_TinyLife_Emotions_EmotionModifier_System_Int32_System_TimeSpan_TinyLife_Emotions_IEmotionSource_System_Boolean_
  name: AddEmotion(EmotionModifier, int, TimeSpan, IEmotionSource, bool)
  nameWithType: PersonLike.AddEmotion(EmotionModifier, int, TimeSpan, IEmotionSource, bool)
  fullName: TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier, int, System.TimeSpan, TinyLife.Emotions.IEmotionSource, bool)
  nameWithType.vb: PersonLike.AddEmotion(EmotionModifier, Integer, TimeSpan, IEmotionSource, Boolean)
  fullName.vb: TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier, Integer, System.TimeSpan, TinyLife.Emotions.IEmotionSource, Boolean)
  name.vb: AddEmotion(EmotionModifier, Integer, TimeSpan, IEmotionSource, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: AddEmotion
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_AddEmotion_TinyLife_Emotions_EmotionModifier_System_Int32_System_TimeSpan_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: AddEmotion
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_AddEmotion_TinyLife_Emotions_EmotionModifier_System_Int32_System_TimeSpan_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.PersonalityType.ModifiedEmotions*
  commentId: Overload:TinyLife.PersonalityType.ModifiedEmotions
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_ModifiedEmotions
  name: ModifiedEmotions
  nameWithType: PersonalityType.ModifiedEmotions
  fullName: TinyLife.PersonalityType.ModifiedEmotions
- uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Int32,System.Single}[]
  isExternal: true
  href: TinyLife.Emotions.EmotionType.html
  name: (EmotionType Emotion, int AmountChange, float TimeMultiplier)[]
  nameWithType: (EmotionType Emotion, int AmountChange, float TimeMultiplier)[]
  fullName: (TinyLife.Emotions.EmotionType Emotion, int AmountChange, float TimeMultiplier)[]
  nameWithType.vb: (Emotion As EmotionType, AmountChange As Integer, TimeMultiplier As Single)()
  fullName.vb: (Emotion As TinyLife.Emotions.EmotionType, AmountChange As Integer, TimeMultiplier As Single)()
  name.vb: (Emotion As EmotionType, AmountChange As Integer, TimeMultiplier As Single)()
  spec.csharp:
  - name: (
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Int32,System.Single}.Emotion
    name: Emotion
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotiontype,system.int32,system.single-.emotion
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Int32,System.Single}.AmountChange
    name: AmountChange
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotiontype,system.int32,system.single-.amountchange
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Int32,System.Single}.TimeMultiplier
    name: TimeMultiplier
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotiontype,system.int32,system.single-.timemultiplier
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Int32,System.Single}.Emotion
    name: Emotion
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotiontype,system.int32,system.single-.emotion
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Int32,System.Single}.AmountChange
    name: AmountChange
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotiontype,system.int32,system.single-.amountchange
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Int32,System.Single}.TimeMultiplier
    name: TimeMultiplier
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotiontype,system.int32,system.single-.timemultiplier
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: (
  - name: )
- uid: TinyLife.NeedType
  commentId: T:TinyLife.NeedType
  parent: TinyLife
  href: TinyLife.NeedType.html
  name: NeedType
  nameWithType: NeedType
  fullName: TinyLife.NeedType
- uid: TinyLife.NeedType.PassiveReduction
  commentId: F:TinyLife.NeedType.PassiveReduction
  href: TinyLife.NeedType.html#TinyLife_NeedType_PassiveReduction
  name: PassiveReduction
  nameWithType: NeedType.PassiveReduction
  fullName: TinyLife.NeedType.PassiveReduction
- uid: TinyLife.Objects.PersonLike.GetPassiveNeedReduction(TinyLife.NeedType)
  commentId: M:TinyLife.Objects.PersonLike.GetPassiveNeedReduction(TinyLife.NeedType)
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetPassiveNeedReduction_TinyLife_NeedType_
  name: GetPassiveNeedReduction(NeedType)
  nameWithType: PersonLike.GetPassiveNeedReduction(NeedType)
  fullName: TinyLife.Objects.PersonLike.GetPassiveNeedReduction(TinyLife.NeedType)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.GetPassiveNeedReduction(TinyLife.NeedType)
    name: GetPassiveNeedReduction
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetPassiveNeedReduction_TinyLife_NeedType_
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.GetPassiveNeedReduction(TinyLife.NeedType)
    name: GetPassiveNeedReduction
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetPassiveNeedReduction_TinyLife_NeedType_
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: )
- uid: TinyLife.PersonalityType.ModifiedNeedReductions*
  commentId: Overload:TinyLife.PersonalityType.ModifiedNeedReductions
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_ModifiedNeedReductions
  name: ModifiedNeedReductions
  nameWithType: PersonalityType.ModifiedNeedReductions
  fullName: TinyLife.PersonalityType.ModifiedNeedReductions
- uid: System.ValueTuple{TinyLife.NeedType,System.Single}[]
  isExternal: true
  href: TinyLife.NeedType.html
  name: (NeedType Need, float Modifier)[]
  nameWithType: (NeedType Need, float Modifier)[]
  fullName: (TinyLife.NeedType Need, float Modifier)[]
  nameWithType.vb: (Need As NeedType, Modifier As Single)()
  fullName.vb: (Need As TinyLife.NeedType, Modifier As Single)()
  name.vb: (Need As NeedType, Modifier As Single)()
  spec.csharp:
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.NeedType,System.Single}.Need
    name: Need
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.single-.need
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{TinyLife.NeedType,System.Single}.Modifier
    name: Modifier
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.single-.modifier
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.NeedType,System.Single}.Need
    name: Need
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.single-.need
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.NeedType,System.Single}.Modifier
    name: Modifier
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.single-.modifier
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: (
  - name: )
- uid: TinyLife.Objects.AgeGroup.ChildOrOlder
  commentId: F:TinyLife.Objects.AgeGroup.ChildOrOlder
  href: TinyLife.Objects.AgeGroup.html#TinyLife_Objects_AgeGroup_ChildOrOlder
  name: ChildOrOlder
  nameWithType: AgeGroup.ChildOrOlder
  fullName: TinyLife.Objects.AgeGroup.ChildOrOlder
- uid: TinyLife.PersonalityType.AllowedAges*
  commentId: Overload:TinyLife.PersonalityType.AllowedAges
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_AllowedAges
  name: AllowedAges
  nameWithType: PersonalityType.AllowedAges
  fullName: TinyLife.PersonalityType.AllowedAges
- uid: TinyLife.Objects.AgeGroup
  commentId: T:TinyLife.Objects.AgeGroup
  parent: TinyLife.Objects
  href: TinyLife.Objects.AgeGroup.html
  name: AgeGroup
  nameWithType: AgeGroup
  fullName: TinyLife.Objects.AgeGroup
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.PersonalityType.AllowedPersonType*
  commentId: Overload:TinyLife.PersonalityType.AllowedPersonType
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_AllowedPersonType
  name: AllowedPersonType
  nameWithType: PersonalityType.AllowedPersonType
  fullName: TinyLife.PersonalityType.AllowedPersonType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TinyLife.PersonalityType.TypeCategory
  commentId: T:TinyLife.PersonalityType.TypeCategory
  parent: TinyLife
  href: TinyLife.PersonalityType.html
  name: PersonalityType.TypeCategory
  nameWithType: PersonalityType.TypeCategory
  fullName: TinyLife.PersonalityType.TypeCategory
  spec.csharp:
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: .
  - uid: TinyLife.PersonalityType.TypeCategory
    name: TypeCategory
    href: TinyLife.PersonalityType.TypeCategory.html
  spec.vb:
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: .
  - uid: TinyLife.PersonalityType.TypeCategory
    name: TypeCategory
    href: TinyLife.PersonalityType.TypeCategory.html
- uid: TinyLife.PersonalityType.TypeCategory.Major
  commentId: F:TinyLife.PersonalityType.TypeCategory.Major
  href: TinyLife.PersonalityType.TypeCategory.html#TinyLife_PersonalityType_TypeCategory_Major
  name: Major
  nameWithType: PersonalityType.TypeCategory.Major
  fullName: TinyLife.PersonalityType.TypeCategory.Major
- uid: TinyLife.PersonalityType.Category*
  commentId: Overload:TinyLife.PersonalityType.Category
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_Category
  name: Category
  nameWithType: PersonalityType.Category
  fullName: TinyLife.PersonalityType.Category
- uid: TinyLife.Emotions.EmotionModifier
  commentId: T:TinyLife.Emotions.EmotionModifier
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionModifier.html
  name: EmotionModifier
  nameWithType: EmotionModifier
  fullName: TinyLife.Emotions.EmotionModifier
- uid: TinyLife.PersonalityType.SourceString*
  commentId: Overload:TinyLife.PersonalityType.SourceString
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_SourceString
  name: SourceString
  nameWithType: PersonalityType.SourceString
  fullName: TinyLife.PersonalityType.SourceString
- uid: TinyLife.Emotions.IEmotionSource.SourceString
  commentId: P:TinyLife.Emotions.IEmotionSource.SourceString
  parent: TinyLife.Emotions.IEmotionSource
  href: TinyLife.Emotions.IEmotionSource.html#TinyLife_Emotions_IEmotionSource_SourceString
  name: SourceString
  nameWithType: IEmotionSource.SourceString
  fullName: TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.PersonalityType.#ctor*
  commentId: Overload:TinyLife.PersonalityType.#ctor
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType__ctor_System_String_MLEM_Textures_TextureRegion_
  name: PersonalityType
  nameWithType: PersonalityType.PersonalityType
  fullName: TinyLife.PersonalityType.PersonalityType
  nameWithType.vb: PersonalityType.New
  fullName.vb: TinyLife.PersonalityType.New
  name.vb: New
- uid: TinyLife.PersonalityType.Incompatible
  commentId: P:TinyLife.PersonalityType.Incompatible
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_Incompatible
  name: Incompatible
  nameWithType: PersonalityType.Incompatible
  fullName: TinyLife.PersonalityType.Incompatible
- uid: TinyLife.PersonalityType.IsCompatible*
  commentId: Overload:TinyLife.PersonalityType.IsCompatible
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_IsCompatible_TinyLife_PersonalityType_
  name: IsCompatible
  nameWithType: PersonalityType.IsCompatible
  fullName: TinyLife.PersonalityType.IsCompatible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Ui.Elements.Group
  commentId: T:MLEM.Ui.Elements.Group
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Group
  nameWithType: Group
  fullName: MLEM.Ui.Elements.Group
- uid: TinyLife.PersonalityType.Texture
  commentId: F:TinyLife.PersonalityType.Texture
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_Texture
  name: Texture
  nameWithType: PersonalityType.Texture
  fullName: TinyLife.PersonalityType.Texture
- uid: TinyLife.PersonalityType.CreateInfoGroup*
  commentId: Overload:TinyLife.PersonalityType.CreateInfoGroup
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_CreateInfoGroup_MLEM_Ui_Anchor_System_Single_
  name: CreateInfoGroup
  nameWithType: PersonalityType.CreateInfoGroup
  fullName: TinyLife.PersonalityType.CreateInfoGroup
- uid: MLEM.Ui.Anchor
  commentId: T:MLEM.Ui.Anchor
  parent: MLEM.Ui
  isExternal: true
  name: Anchor
  nameWithType: Anchor
  fullName: MLEM.Ui.Anchor
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  isExternal: true
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
- uid: TinyLife.PersonalityType.Register*
  commentId: Overload:TinyLife.PersonalityType.Register
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_Register_TinyLife_PersonalityType_
  name: Register
  nameWithType: PersonalityType.Register
  fullName: TinyLife.PersonalityType.Register
- uid: TinyLife.Objects.PersonLike.PersonalityTypes
  commentId: F:TinyLife.Objects.PersonLike.PersonalityTypes
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_PersonalityTypes
  name: PersonalityTypes
  nameWithType: PersonLike.PersonalityTypes
  fullName: TinyLife.Objects.PersonLike.PersonalityTypes
- uid: TinyLife.PersonalityType.TypeCategory.Minor
  commentId: F:TinyLife.PersonalityType.TypeCategory.Minor
  href: TinyLife.PersonalityType.TypeCategory.html#TinyLife_PersonalityType_TypeCategory_Minor
  name: Minor
  nameWithType: PersonalityType.TypeCategory.Minor
  fullName: TinyLife.PersonalityType.TypeCategory.Minor
- uid: TinyLife.PersonalityType.Random
  commentId: F:TinyLife.PersonalityType.Random
  name: Random
  nameWithType: PersonalityType.Random
  fullName: TinyLife.PersonalityType.Random
- uid: TinyLife.PersonalityType.FillRandomly*
  commentId: Overload:TinyLife.PersonalityType.FillRandomly
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_FillRandomly_TinyLife_Objects_PersonLike_System_Random_System_Boolean_
  name: FillRandomly
  nameWithType: PersonalityType.FillRandomly
  fullName: TinyLife.PersonalityType.FillRandomly
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
