### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.GoalTrigger
  commentId: T:TinyLife.Goals.GoalTrigger
  id: GoalTrigger
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.GoalTrigger.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type})
  - TinyLife.Goals.GoalTrigger.ActionCompleted
  - TinyLife.Goals.GoalTrigger.ActionEnded
  - TinyLife.Goals.GoalTrigger.ActionUpdate
  - TinyLife.Goals.GoalTrigger.EarnMoney
  - TinyLife.Goals.GoalTrigger.EmotionGained
  - TinyLife.Goals.GoalTrigger.EmotionLost
  - TinyLife.Goals.GoalTrigger.Equals(System.Object)
  - TinyLife.Goals.GoalTrigger.Equals(TinyLife.Goals.GoalTrigger)
  - TinyLife.Goals.GoalTrigger.FoodEaten
  - TinyLife.Goals.GoalTrigger.FurnitureCreated
  - TinyLife.Goals.GoalTrigger.GetHashCode
  - TinyLife.Goals.GoalTrigger.IsObjectCompatible(System.Type)
  - TinyLife.Goals.GoalTrigger.IsValueCompatible(System.Type)
  - TinyLife.Goals.GoalTrigger.Name
  - TinyLife.Goals.GoalTrigger.PersonUpdate
  - TinyLife.Goals.GoalTrigger.ProjectCompleted
  - TinyLife.Goals.GoalTrigger.SkillGained
  - TinyLife.Goals.GoalTrigger.SkillLevelGained
  - TinyLife.Goals.GoalTrigger.ValidObjects
  - TinyLife.Goals.GoalTrigger.ValidValues
  langs:
  - csharp
  - vb
  name: GoalTrigger
  nameWithType: GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger is used by <xref href="TinyLife.Goals.AutoTriggerGoal" data-throw-if-not-resolved="false"></xref> instances to determine whether they should be triggered.

    Goal triggers are compared only by their <xref href="TinyLife.Goals.GoalTrigger.Name" data-throw-if-not-resolved="false"></xref>, so mods can add goal triggers that work for other mods without explicit compatibility.

    If there is only one <xref href="TinyLife.Goals.GoalTrigger.ValidObjects" data-throw-if-not-resolved="false"></xref> entry, it is preferred to use one of the generic types <xref href="TinyLife.Goals.GoalTrigger%602" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.GoalTrigger%603" data-throw-if-not-resolved="false"></xref>, or <xref href="TinyLife.Goals.GoalTrigger%604" data-throw-if-not-resolved="false"></xref> for compile-time type safety.
  example: []
  syntax:
    content: 'public class GoalTrigger : IEquatable<GoalTrigger>'
    content.vb: Public Class GoalTrigger Implements IEquatable(Of GoalTrigger)
  inheritance:
  - System.Object
  derivedClasses:
  - TinyLife.Goals.GoalTrigger`2
  - TinyLife.Goals.GoalTrigger`3
  - TinyLife.Goals.GoalTrigger`4
  implements:
  - System.IEquatable{TinyLife.Goals.GoalTrigger}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.GoalTrigger.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Goals.GoalTrigger.PersonUpdate
  commentId: F:TinyLife.Goals.GoalTrigger.PersonUpdate
  id: PersonUpdate
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: PersonUpdate
  nameWithType: GoalTrigger.PersonUpdate
  fullName: TinyLife.Goals.GoalTrigger.PersonUpdate
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> method is called.

    This goal trigger supports the <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.TimedGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger<PersonLike, TimeSpan, bool> PersonUpdate
    return:
      type: TinyLife.Goals.GoalTrigger{TinyLife.Objects.PersonLike,System.TimeSpan,System.Boolean}
    content.vb: Public Shared ReadOnly PersonUpdate As GoalTrigger(Of PersonLike, TimeSpan, Boolean)
- uid: TinyLife.Goals.GoalTrigger.SkillGained
  commentId: F:TinyLife.Goals.GoalTrigger.SkillGained
  id: SkillGained
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: SkillGained
  nameWithType: GoalTrigger.SkillGained
  fullName: TinyLife.Goals.GoalTrigger.SkillGained
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Skills.Skill" data-throw-if-not-resolved="false"></xref>'s current skill points are increased through <xref href="TinyLife.Skills.Skill.Gain(System.Single)" data-throw-if-not-resolved="false"></xref>, which is called by methods like <xref href="TinyLife.Objects.PersonLike.GainSkill(TinyLife.Skills.SkillType%2cSystem.Single%2cTinyLife.Actions.ActionInfo%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Skills.Skill" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger<Skill, bool, float> SkillGained
    return:
      type: TinyLife.Goals.GoalTrigger{TinyLife.Skills.Skill,System.Boolean,System.Single}
    content.vb: Public Shared ReadOnly SkillGained As GoalTrigger(Of Skill, Boolean, Single)
- uid: TinyLife.Goals.GoalTrigger.SkillLevelGained
  commentId: F:TinyLife.Goals.GoalTrigger.SkillLevelGained
  id: SkillLevelGained
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: SkillLevelGained
  nameWithType: GoalTrigger.SkillLevelGained
  fullName: TinyLife.Goals.GoalTrigger.SkillLevelGained
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Skills.Skill" data-throw-if-not-resolved="false"></xref>'s current skill points are increased enough to increase by a full level through <xref href="TinyLife.Skills.Skill.Gain(System.Single)" data-throw-if-not-resolved="false"></xref>, which is called by methods like <xref href="TinyLife.Objects.PersonLike.GainSkill(TinyLife.Skills.SkillType%2cSystem.Single%2cTinyLife.Actions.ActionInfo%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Skills.Skill" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger<Skill, bool, float> SkillLevelGained
    return:
      type: TinyLife.Goals.GoalTrigger{TinyLife.Skills.Skill,System.Boolean,System.Single}
    content.vb: Public Shared ReadOnly SkillLevelGained As GoalTrigger(Of Skill, Boolean, Single)
- uid: TinyLife.Goals.GoalTrigger.FurnitureCreated
  commentId: F:TinyLife.Goals.GoalTrigger.FurnitureCreated
  id: FurnitureCreated
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: FurnitureCreated
  nameWithType: GoalTrigger.FurnitureCreated
  fullName: TinyLife.Goals.GoalTrigger.FurnitureCreated
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> item is created by a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.

    By default, this trigger is used in <xref href="TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger<Furniture, bool, Furniture, float> FurnitureCreated
    return:
      type: TinyLife.Goals.GoalTrigger{TinyLife.Objects.Furniture,System.Boolean,TinyLife.Objects.Furniture,System.Single}
    content.vb: Public Shared ReadOnly FurnitureCreated As GoalTrigger(Of Furniture, Boolean, Furniture, Single)
- uid: TinyLife.Goals.GoalTrigger.ActionCompleted
  commentId: F:TinyLife.Goals.GoalTrigger.ActionCompleted
  id: ActionCompleted
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ActionCompleted
  nameWithType: GoalTrigger.ActionCompleted
  fullName: TinyLife.Goals.GoalTrigger.ActionCompleted
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when an <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> is completed succesfully (the result is <xref href="TinyLife.Actions.CompletionType.Completed" data-throw-if-not-resolved="false"></xref>) by a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger<Action, bool, Action, float> ActionCompleted
    return:
      type: TinyLife.Goals.GoalTrigger{TinyLife.Actions.Action,System.Boolean,TinyLife.Actions.Action,System.Single}
    content.vb: Public Shared ReadOnly ActionCompleted As GoalTrigger(Of Action, Boolean, Action, Single)
- uid: TinyLife.Goals.GoalTrigger.ActionEnded
  commentId: F:TinyLife.Goals.GoalTrigger.ActionEnded
  id: ActionEnded
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ActionEnded
  nameWithType: GoalTrigger.ActionEnded
  fullName: TinyLife.Goals.GoalTrigger.ActionEnded
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when an <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> is completed in any way (the <xref href="TinyLife.Actions.CompletionType" data-throw-if-not-resolved="false"></xref> doesn't matter) by a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger<Action, bool, Action, float> ActionEnded
    return:
      type: TinyLife.Goals.GoalTrigger{TinyLife.Actions.Action,System.Boolean,TinyLife.Actions.Action,System.Single}
    content.vb: Public Shared ReadOnly ActionEnded As GoalTrigger(Of Action, Boolean, Action, Single)
- uid: TinyLife.Goals.GoalTrigger.ActionUpdate
  commentId: F:TinyLife.Goals.GoalTrigger.ActionUpdate
  id: ActionUpdate
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ActionUpdate
  nameWithType: GoalTrigger.ActionUpdate
  fullName: TinyLife.Goals.GoalTrigger.ActionUpdate
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when an <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> is updated.

    This goal trigger supports the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.TimedGoal" data-throw-if-not-resolved="false"></xref> goal type.
  example: []
  syntax:
    content: public static readonly GoalTrigger<Action, TimeSpan> ActionUpdate
    return:
      type: TinyLife.Goals.GoalTrigger{TinyLife.Actions.Action,System.TimeSpan}
    content.vb: Public Shared ReadOnly ActionUpdate As GoalTrigger(Of Action, TimeSpan)
- uid: TinyLife.Goals.GoalTrigger.EarnMoney
  commentId: F:TinyLife.Goals.GoalTrigger.EarnMoney
  id: EarnMoney
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: EarnMoney
  nameWithType: GoalTrigger.EarnMoney
  fullName: TinyLife.Goals.GoalTrigger.EarnMoney
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> earns money through an <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Goals.Project" data-throw-if-not-resolved="false"></xref>.

    By default, this trigger is used in <xref href="TinyLife.Objects.PersonLike.EarnMoney(System.Single%2cSystem.Object)" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Goals.Project" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.Job" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.World.LotEmployment.Instance" data-throw-if-not-resolved="false"></xref> object types and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger EarnMoney
    return:
      type: TinyLife.Goals.GoalTrigger
    content.vb: Public Shared ReadOnly EarnMoney As GoalTrigger
- uid: TinyLife.Goals.GoalTrigger.EmotionGained
  commentId: F:TinyLife.Goals.GoalTrigger.EmotionGained
  id: EmotionGained
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: EmotionGained
  nameWithType: GoalTrigger.EmotionGained
  fullName: TinyLife.Goals.GoalTrigger.EmotionGained
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> is added to a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> using <xref href="TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier%2cSystem.Int32%2cSystem.TimeSpan%2cTinyLife.Emotions.IEmotionSource%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Emotions.EmotionModifier.Instance" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger<EmotionModifier.Instance, bool, EmotionModifier.Instance, float> EmotionGained
    return:
      type: TinyLife.Goals.GoalTrigger{TinyLife.Emotions.EmotionModifier.Instance,System.Boolean,TinyLife.Emotions.EmotionModifier.Instance,System.Single}
    content.vb: Public Shared ReadOnly EmotionGained As GoalTrigger(Of EmotionModifier.Instance, Boolean, EmotionModifier.Instance, Single)
- uid: TinyLife.Goals.GoalTrigger.EmotionLost
  commentId: F:TinyLife.Goals.GoalTrigger.EmotionLost
  id: EmotionLost
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: EmotionLost
  nameWithType: GoalTrigger.EmotionLost
  fullName: TinyLife.Goals.GoalTrigger.EmotionLost
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> is removed from a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> in <xref href="TinyLife.Objects.PersonLike.RemoveEmotion(TinyLife.Emotions.EmotionModifier)" data-throw-if-not-resolved="false"></xref> or when it runs out.

    This goal trigger supports the <xref href="TinyLife.Emotions.EmotionModifier.Instance" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger<EmotionModifier.Instance, bool, EmotionModifier.Instance, float> EmotionLost
    return:
      type: TinyLife.Goals.GoalTrigger{TinyLife.Emotions.EmotionModifier.Instance,System.Boolean,TinyLife.Emotions.EmotionModifier.Instance,System.Single}
    content.vb: Public Shared ReadOnly EmotionLost As GoalTrigger(Of EmotionModifier.Instance, Boolean, EmotionModifier.Instance, Single)
- uid: TinyLife.Goals.GoalTrigger.FoodEaten
  commentId: F:TinyLife.Goals.GoalTrigger.FoodEaten
  id: FoodEaten
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: FoodEaten
  nameWithType: GoalTrigger.FoodEaten
  fullName: TinyLife.Goals.GoalTrigger.FoodEaten
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref> item is eaten by a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> in <xref href="TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo%2cTinyLife.Objects.FoodTypedItem)" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Objects.FoodTypedItem" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Objects.FoodTypedItem" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger<FoodTypedItem, bool, FoodTypedItem, float> FoodEaten
    return:
      type: TinyLife.Goals.GoalTrigger{TinyLife.Objects.FoodTypedItem,System.Boolean,TinyLife.Objects.FoodTypedItem,System.Single}
    content.vb: Public Shared ReadOnly FoodEaten As GoalTrigger(Of FoodTypedItem, Boolean, FoodTypedItem, Single)
- uid: TinyLife.Goals.GoalTrigger.ProjectCompleted
  commentId: F:TinyLife.Goals.GoalTrigger.ProjectCompleted
  id: ProjectCompleted
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ProjectCompleted
  nameWithType: GoalTrigger.ProjectCompleted
  fullName: TinyLife.Goals.GoalTrigger.ProjectCompleted
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Goals.Project" data-throw-if-not-resolved="false"></xref> is marked as completed in <xref href="TinyLife.Goals.Project.OnCompleted" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Goals.Project" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Goals.Project" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger<Project, bool, Project, float> ProjectCompleted
    return:
      type: TinyLife.Goals.GoalTrigger{TinyLife.Goals.Project,System.Boolean,TinyLife.Goals.Project,System.Single}
    content.vb: Public Shared ReadOnly ProjectCompleted As GoalTrigger(Of Project, Boolean, Project, Single)
- uid: TinyLife.Goals.GoalTrigger.Name
  commentId: F:TinyLife.Goals.GoalTrigger.Name
  id: Name
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GoalTrigger.Name
  fullName: TinyLife.Goals.GoalTrigger.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: This goal trigger's name.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Goals.GoalTrigger.ValidObjects
  commentId: F:TinyLife.Goals.GoalTrigger.ValidObjects
  id: ValidObjects
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ValidObjects
  nameWithType: GoalTrigger.ValidObjects
  fullName: TinyLife.Goals.GoalTrigger.ValidObjects
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: A set of types that determine which objects are valid trigger objects for this goal trigger. This validates the <code>obj</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly List<Type> ValidObjects
    return:
      type: System.Collections.Generic.List{System.Type}
    content.vb: Public ReadOnly ValidObjects As List(Of Type)
- uid: TinyLife.Goals.GoalTrigger.ValidValues
  commentId: F:TinyLife.Goals.GoalTrigger.ValidValues
  id: ValidValues
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ValidValues
  nameWithType: GoalTrigger.ValidValues
  fullName: TinyLife.Goals.GoalTrigger.ValidValues
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: A set of types that determine which values are valid trigger values for this goal trigger. This validates the <code>values</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly List<Type> ValidValues
    return:
      type: System.Collections.Generic.List{System.Type}
    content.vb: Public ReadOnly ValidValues As List(Of Type)
- uid: TinyLife.Goals.GoalTrigger.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:TinyLife.Goals.GoalTrigger.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type})'
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: GoalTrigger(string, IEnumerable<Type>, IEnumerable<Type>)
  nameWithType: GoalTrigger.GoalTrigger(string, IEnumerable<Type>, IEnumerable<Type>)
  fullName: TinyLife.Goals.GoalTrigger.GoalTrigger(string, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Creates a new goal trigger with the given settings.

    If there is only one <code class="paramref">validObjects</code> entry, it is preferred to use one of the generic types <xref href="TinyLife.Goals.GoalTrigger%602" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.GoalTrigger%603" data-throw-if-not-resolved="false"></xref>, or <xref href="TinyLife.Goals.GoalTrigger%604" data-throw-if-not-resolved="false"></xref> for compile-time type safety.
  example: []
  syntax:
    content: public GoalTrigger(string name, IEnumerable<Type> validObjects, IEnumerable<Type> validGoals)
    parameters:
    - id: name
      type: System.String
      description: This goal trigger's name.
    - id: validObjects
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: A set of types that determine which objects are valid trigger objects for this goal trigger. This validates the <code>obj</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
    - id: validGoals
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: A set of types that determine which values are valid trigger values for this goal trigger. When a subtype of <xref href="TinyLife.Goals.AutoTriggerGoal" data-throw-if-not-resolved="false"></xref> is passed, the valid value will be extracted from the type's generic type arguments. Otherwise, the type itself will be used. This validates the <code>values</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(name As String, validObjects As IEnumerable(Of Type), validGoals As IEnumerable(Of Type))
  overload: TinyLife.Goals.GoalTrigger.#ctor*
  nameWithType.vb: GoalTrigger.New(String, IEnumerable(Of Type), IEnumerable(Of Type))
  fullName.vb: TinyLife.Goals.GoalTrigger.New(String, System.Collections.Generic.IEnumerable(Of System.Type), System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: New(String, IEnumerable(Of Type), IEnumerable(Of Type))
- uid: TinyLife.Goals.GoalTrigger.IsObjectCompatible(System.Type)
  commentId: M:TinyLife.Goals.GoalTrigger.IsObjectCompatible(System.Type)
  id: IsObjectCompatible(System.Type)
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: IsObjectCompatible(Type)
  nameWithType: GoalTrigger.IsObjectCompatible(Type)
  fullName: TinyLife.Goals.GoalTrigger.IsObjectCompatible(System.Type)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Returns whether an object of the given <code class="paramref">objType</code> is compatible with this goal trigger, based on <xref href="TinyLife.Goals.GoalTrigger.ValidObjects" data-throw-if-not-resolved="false"></xref>.

    This validates the <code>obj</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public bool IsObjectCompatible(Type objType)
    parameters:
    - id: objType
      type: System.Type
      description: The type of the object.
    return:
      type: System.Boolean
      description: Whether the object is compatible.
    content.vb: Public Function IsObjectCompatible(objType As Type) As Boolean
  overload: TinyLife.Goals.GoalTrigger.IsObjectCompatible*
- uid: TinyLife.Goals.GoalTrigger.IsValueCompatible(System.Type)
  commentId: M:TinyLife.Goals.GoalTrigger.IsValueCompatible(System.Type)
  id: IsValueCompatible(System.Type)
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: IsValueCompatible(Type)
  nameWithType: GoalTrigger.IsValueCompatible(Type)
  fullName: TinyLife.Goals.GoalTrigger.IsValueCompatible(System.Type)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Returns whether a value of the given <code class="paramref">valueType</code> is compatible with this goal trigger, based on <xref href="TinyLife.Goals.GoalTrigger.ValidValues" data-throw-if-not-resolved="false"></xref>.

    This validates the <code>values</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public bool IsValueCompatible(Type valueType)
    parameters:
    - id: valueType
      type: System.Type
      description: The type of the value.
    return:
      type: System.Boolean
      description: Whether the value is compatible.
    content.vb: Public Function IsValueCompatible(valueType As Type) As Boolean
  overload: TinyLife.Goals.GoalTrigger.IsValueCompatible*
- uid: TinyLife.Goals.GoalTrigger.Equals(TinyLife.Goals.GoalTrigger)
  commentId: M:TinyLife.Goals.GoalTrigger.Equals(TinyLife.Goals.GoalTrigger)
  id: Equals(TinyLife.Goals.GoalTrigger)
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: Equals(GoalTrigger)
  nameWithType: GoalTrigger.Equals(GoalTrigger)
  fullName: TinyLife.Goals.GoalTrigger.Equals(TinyLife.Goals.GoalTrigger)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(GoalTrigger other)
    parameters:
    - id: other
      type: TinyLife.Goals.GoalTrigger
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As GoalTrigger) As Boolean
  overload: TinyLife.Goals.GoalTrigger.Equals*
  implements:
  - System.IEquatable{TinyLife.Goals.GoalTrigger}.Equals(TinyLife.Goals.GoalTrigger)
- uid: TinyLife.Goals.GoalTrigger.Equals(System.Object)
  commentId: M:TinyLife.Goals.GoalTrigger.Equals(System.Object)
  id: Equals(System.Object)
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: GoalTrigger.Equals(object)
  fullName: TinyLife.Goals.GoalTrigger.Equals(object)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: TinyLife.Goals.GoalTrigger.Equals*
  nameWithType.vb: GoalTrigger.Equals(Object)
  fullName.vb: TinyLife.Goals.GoalTrigger.Equals(Object)
  name.vb: Equals(Object)
- uid: TinyLife.Goals.GoalTrigger.GetHashCode
  commentId: M:TinyLife.Goals.GoalTrigger.GetHashCode
  id: GetHashCode
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: GoalTrigger.GetHashCode()
  fullName: TinyLife.Goals.GoalTrigger.GetHashCode()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: TinyLife.Goals.GoalTrigger.GetHashCode*
references:
- uid: TinyLife.Goals.AutoTriggerGoal
  commentId: T:TinyLife.Goals.AutoTriggerGoal
  parent: TinyLife.Goals
  href: TinyLife.Goals.AutoTriggerGoal.html
  name: AutoTriggerGoal
  nameWithType: AutoTriggerGoal
  fullName: TinyLife.Goals.AutoTriggerGoal
- uid: TinyLife.Goals.GoalTrigger.Name
  commentId: F:TinyLife.Goals.GoalTrigger.Name
  parent: TinyLife.Goals.GoalTrigger
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_Name
  name: Name
  nameWithType: GoalTrigger.Name
  fullName: TinyLife.Goals.GoalTrigger.Name
- uid: TinyLife.Goals.GoalTrigger.ValidObjects
  commentId: F:TinyLife.Goals.GoalTrigger.ValidObjects
  parent: TinyLife.Goals.GoalTrigger
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_ValidObjects
  name: ValidObjects
  nameWithType: GoalTrigger.ValidObjects
  fullName: TinyLife.Goals.GoalTrigger.ValidObjects
- uid: TinyLife.Goals.GoalTrigger`2
  commentId: T:TinyLife.Goals.GoalTrigger`2
  href: TinyLife.Goals.GoalTrigger-2.html
  name: GoalTrigger<TObject, TValue>
  nameWithType: GoalTrigger<TObject, TValue>
  fullName: TinyLife.Goals.GoalTrigger<TObject, TValue>
  nameWithType.vb: GoalTrigger(Of TObject, TValue)
  fullName.vb: TinyLife.Goals.GoalTrigger(Of TObject, TValue)
  name.vb: GoalTrigger(Of TObject, TValue)
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger`2
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-2.html
  - name: <
  - name: TObject
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger`2
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TObject
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TinyLife.Goals.GoalTrigger`3
  commentId: T:TinyLife.Goals.GoalTrigger`3
  href: TinyLife.Goals.GoalTrigger-3.html
  name: GoalTrigger<TObject, TValue1, TValue2>
  nameWithType: GoalTrigger<TObject, TValue1, TValue2>
  fullName: TinyLife.Goals.GoalTrigger<TObject, TValue1, TValue2>
  nameWithType.vb: GoalTrigger(Of TObject, TValue1, TValue2)
  fullName.vb: TinyLife.Goals.GoalTrigger(Of TObject, TValue1, TValue2)
  name.vb: GoalTrigger(Of TObject, TValue1, TValue2)
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger`3
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-3.html
  - name: <
  - name: TObject
  - name: ','
  - name: " "
  - name: TValue1
  - name: ','
  - name: " "
  - name: TValue2
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger`3
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TObject
  - name: ','
  - name: " "
  - name: TValue1
  - name: ','
  - name: " "
  - name: TValue2
  - name: )
- uid: TinyLife.Goals.GoalTrigger`4
  commentId: T:TinyLife.Goals.GoalTrigger`4
  href: TinyLife.Goals.GoalTrigger-4.html
  name: GoalTrigger<TObject, TValue1, TValue2, TValue3>
  nameWithType: GoalTrigger<TObject, TValue1, TValue2, TValue3>
  fullName: TinyLife.Goals.GoalTrigger<TObject, TValue1, TValue2, TValue3>
  nameWithType.vb: GoalTrigger(Of TObject, TValue1, TValue2, TValue3)
  fullName.vb: TinyLife.Goals.GoalTrigger(Of TObject, TValue1, TValue2, TValue3)
  name.vb: GoalTrigger(Of TObject, TValue1, TValue2, TValue3)
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: <
  - name: TObject
  - name: ','
  - name: " "
  - name: TValue1
  - name: ','
  - name: " "
  - name: TValue2
  - name: ','
  - name: " "
  - name: TValue3
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TObject
  - name: ','
  - name: " "
  - name: TValue1
  - name: ','
  - name: " "
  - name: TValue2
  - name: ','
  - name: " "
  - name: TValue3
  - name: )
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{TinyLife.Goals.GoalTrigger}
  commentId: T:System.IEquatable{TinyLife.Goals.GoalTrigger}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<GoalTrigger>
  nameWithType: IEquatable<GoalTrigger>
  fullName: System.IEquatable<TinyLife.Goals.GoalTrigger>
  nameWithType.vb: IEquatable(Of GoalTrigger)
  fullName.vb: System.IEquatable(Of TinyLife.Goals.GoalTrigger)
  name.vb: IEquatable(Of GoalTrigger)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Goals.GoalTrigger.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<GoalTrigger>(GoalTrigger)
  nameWithType: Extensions.JsonCopy<GoalTrigger>(GoalTrigger)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.GoalTrigger>(TinyLife.Goals.GoalTrigger)
  nameWithType.vb: Extensions.JsonCopy(Of GoalTrigger)(GoalTrigger)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.GoalTrigger)(TinyLife.Goals.GoalTrigger)
  name.vb: JsonCopy(Of GoalTrigger)(GoalTrigger)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.GoalTrigger)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.GoalTrigger)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
  - name: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
- uid: TinyLife.Goals.GoalTrigger
  commentId: T:TinyLife.Goals.GoalTrigger
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalTrigger.html
  name: GoalTrigger
  nameWithType: GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: Update(GameTime, TimeSpan, float)
  nameWithType: PersonLike.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: PersonLike.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Goals.TimedGoal
  commentId: T:TinyLife.Goals.TimedGoal
  href: TinyLife.Goals.TimedGoal.html
  name: TimedGoal
  nameWithType: TimedGoal
  fullName: TinyLife.Goals.TimedGoal
- uid: TinyLife.Goals.ConditionedGoal
  commentId: T:TinyLife.Goals.ConditionedGoal
  href: TinyLife.Goals.ConditionedGoal.html
  name: ConditionedGoal
  nameWithType: ConditionedGoal
  fullName: TinyLife.Goals.ConditionedGoal
- uid: TinyLife.Goals.GoalTrigger{TinyLife.Objects.PersonLike,System.TimeSpan,System.Boolean}
  commentId: T:TinyLife.Goals.GoalTrigger{TinyLife.Objects.PersonLike,System.TimeSpan,System.Boolean}
  parent: TinyLife.Goals
  definition: TinyLife.Goals.GoalTrigger`3
  href: TinyLife.Goals.GoalTrigger-3.html
  name: GoalTrigger<PersonLike, TimeSpan, bool>
  nameWithType: GoalTrigger<PersonLike, TimeSpan, bool>
  fullName: TinyLife.Goals.GoalTrigger<TinyLife.Objects.PersonLike, System.TimeSpan, bool>
  nameWithType.vb: GoalTrigger(Of PersonLike, TimeSpan, Boolean)
  fullName.vb: TinyLife.Goals.GoalTrigger(Of TinyLife.Objects.PersonLike, System.TimeSpan, Boolean)
  name.vb: GoalTrigger(Of PersonLike, TimeSpan, Boolean)
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger`3
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-3.html
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger`3
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-3.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Skills.Skill
  commentId: T:TinyLife.Skills.Skill
  parent: TinyLife.Skills
  href: TinyLife.Skills.Skill.html
  name: Skill
  nameWithType: Skill
  fullName: TinyLife.Skills.Skill
- uid: TinyLife.Skills.Skill.Gain(System.Single)
  commentId: M:TinyLife.Skills.Skill.Gain(System.Single)
  isExternal: true
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_Gain_System_Single_
  name: Gain(float)
  nameWithType: Skill.Gain(float)
  fullName: TinyLife.Skills.Skill.Gain(float)
  nameWithType.vb: Skill.Gain(Single)
  fullName.vb: TinyLife.Skills.Skill.Gain(Single)
  name.vb: Gain(Single)
  spec.csharp:
  - uid: TinyLife.Skills.Skill.Gain(System.Single)
    name: Gain
    href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_Gain_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.Skill.Gain(System.Single)
    name: Gain
    href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_Gain_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.PersonLike.GainSkill(TinyLife.Skills.SkillType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
  commentId: M:TinyLife.Objects.PersonLike.GainSkill(TinyLife.Skills.SkillType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GainSkill_TinyLife_Skills_SkillType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  name: GainSkill(SkillType, float, ActionInfo, float)
  nameWithType: PersonLike.GainSkill(SkillType, float, ActionInfo, float)
  fullName: TinyLife.Objects.PersonLike.GainSkill(TinyLife.Skills.SkillType, float, TinyLife.Actions.ActionInfo, float)
  nameWithType.vb: PersonLike.GainSkill(SkillType, Single, ActionInfo, Single)
  fullName.vb: TinyLife.Objects.PersonLike.GainSkill(TinyLife.Skills.SkillType, Single, TinyLife.Actions.ActionInfo, Single)
  name.vb: GainSkill(SkillType, Single, ActionInfo, Single)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.GainSkill(TinyLife.Skills.SkillType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
    name: GainSkill
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GainSkill_TinyLife_Skills_SkillType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.GainSkill(TinyLife.Skills.SkillType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
    name: GainSkill
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GainSkill_TinyLife_Skills_SkillType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Goals.AmountGoal
  commentId: T:TinyLife.Goals.AmountGoal
  href: TinyLife.Goals.AmountGoal.html
  name: AmountGoal
  nameWithType: AmountGoal
  fullName: TinyLife.Goals.AmountGoal
- uid: TinyLife.Goals.GoalTrigger{TinyLife.Skills.Skill,System.Boolean,System.Single}
  commentId: T:TinyLife.Goals.GoalTrigger{TinyLife.Skills.Skill,System.Boolean,System.Single}
  parent: TinyLife.Goals
  definition: TinyLife.Goals.GoalTrigger`3
  href: TinyLife.Goals.GoalTrigger-3.html
  name: GoalTrigger<Skill, bool, float>
  nameWithType: GoalTrigger<Skill, bool, float>
  fullName: TinyLife.Goals.GoalTrigger<TinyLife.Skills.Skill, bool, float>
  nameWithType.vb: GoalTrigger(Of Skill, Boolean, Single)
  fullName.vb: TinyLife.Goals.GoalTrigger(Of TinyLife.Skills.Skill, Boolean, Single)
  name.vb: GoalTrigger(Of Skill, Boolean, Single)
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger`3
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-3.html
  - name: <
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger`3
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-3.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_PersonLike_System_Boolean_
  name: SetCreator(PersonLike, bool)
  nameWithType: Furniture.SetCreator(PersonLike, bool)
  fullName: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike, bool)
  nameWithType.vb: Furniture.SetCreator(PersonLike, Boolean)
  fullName.vb: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike, Boolean)
  name.vb: SetCreator(PersonLike, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
    name: SetCreator
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_PersonLike_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
    name: SetCreator
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_PersonLike_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Goals.DistinctGoal`1
  commentId: T:TinyLife.Goals.DistinctGoal`1
  href: TinyLife.Goals.DistinctGoal-1.html
  name: DistinctGoal<T>
  nameWithType: DistinctGoal<T>
  fullName: TinyLife.Goals.DistinctGoal<T>
  nameWithType.vb: DistinctGoal(Of T)
  fullName.vb: TinyLife.Goals.DistinctGoal(Of T)
  name.vb: DistinctGoal(Of T)
  spec.csharp:
  - uid: TinyLife.Goals.DistinctGoal`1
    name: DistinctGoal
    href: TinyLife.Goals.DistinctGoal-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.DistinctGoal`1
    name: DistinctGoal
    href: TinyLife.Goals.DistinctGoal-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Goals.GoalTrigger{TinyLife.Objects.Furniture,System.Boolean,TinyLife.Objects.Furniture,System.Single}
  commentId: T:TinyLife.Goals.GoalTrigger{TinyLife.Objects.Furniture,System.Boolean,TinyLife.Objects.Furniture,System.Single}
  parent: TinyLife.Goals
  definition: TinyLife.Goals.GoalTrigger`4
  href: TinyLife.Goals.GoalTrigger-4.html
  name: GoalTrigger<Furniture, bool, Furniture, float>
  nameWithType: GoalTrigger<Furniture, bool, Furniture, float>
  fullName: TinyLife.Goals.GoalTrigger<TinyLife.Objects.Furniture, bool, TinyLife.Objects.Furniture, float>
  nameWithType.vb: GoalTrigger(Of Furniture, Boolean, Furniture, Single)
  fullName.vb: TinyLife.Goals.GoalTrigger(Of TinyLife.Objects.Furniture, Boolean, TinyLife.Objects.Furniture, Single)
  name.vb: GoalTrigger(Of Furniture, Boolean, Furniture, Single)
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.CompletionType.Completed
  commentId: F:TinyLife.Actions.CompletionType.Completed
  href: TinyLife.Actions.CompletionType.html#TinyLife_Actions_CompletionType_Completed
  name: Completed
  nameWithType: CompletionType.Completed
  fullName: TinyLife.Actions.CompletionType.Completed
- uid: TinyLife.Goals.GoalTrigger{TinyLife.Actions.Action,System.Boolean,TinyLife.Actions.Action,System.Single}
  commentId: T:TinyLife.Goals.GoalTrigger{TinyLife.Actions.Action,System.Boolean,TinyLife.Actions.Action,System.Single}
  parent: TinyLife.Goals
  definition: TinyLife.Goals.GoalTrigger`4
  href: TinyLife.Goals.GoalTrigger-4.html
  name: GoalTrigger<Action, bool, Action, float>
  nameWithType: GoalTrigger<Action, bool, Action, float>
  fullName: TinyLife.Goals.GoalTrigger<TinyLife.Actions.Action, bool, TinyLife.Actions.Action, float>
  nameWithType.vb: GoalTrigger(Of Action, Boolean, Action, Single)
  fullName.vb: TinyLife.Goals.GoalTrigger(Of TinyLife.Actions.Action, Boolean, TinyLife.Actions.Action, Single)
  name.vb: GoalTrigger(Of Action, Boolean, Action, Single)
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: <
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: TinyLife.Actions.CompletionType
  commentId: T:TinyLife.Actions.CompletionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.CompletionType.html
  name: CompletionType
  nameWithType: CompletionType
  fullName: TinyLife.Actions.CompletionType
- uid: TinyLife.Goals.GoalTrigger{TinyLife.Actions.Action,System.TimeSpan}
  commentId: T:TinyLife.Goals.GoalTrigger{TinyLife.Actions.Action,System.TimeSpan}
  parent: TinyLife.Goals
  definition: TinyLife.Goals.GoalTrigger`2
  href: TinyLife.Goals.GoalTrigger-2.html
  name: GoalTrigger<Action, TimeSpan>
  nameWithType: GoalTrigger<Action, TimeSpan>
  fullName: TinyLife.Goals.GoalTrigger<TinyLife.Actions.Action, System.TimeSpan>
  nameWithType.vb: GoalTrigger(Of Action, TimeSpan)
  fullName.vb: TinyLife.Goals.GoalTrigger(Of TinyLife.Actions.Action, System.TimeSpan)
  name.vb: GoalTrigger(Of Action, TimeSpan)
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger`2
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-2.html
  - name: <
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger`2
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: TinyLife.Goals.Project
  commentId: T:TinyLife.Goals.Project
  parent: TinyLife.Goals
  href: TinyLife.Goals.Project.html
  name: Project
  nameWithType: Project
  fullName: TinyLife.Goals.Project
- uid: TinyLife.Objects.PersonLike.EarnMoney(System.Single,System.Object)
  commentId: M:TinyLife.Objects.PersonLike.EarnMoney(System.Single,System.Object)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_EarnMoney_System_Single_System_Object_
  name: EarnMoney(float, object)
  nameWithType: PersonLike.EarnMoney(float, object)
  fullName: TinyLife.Objects.PersonLike.EarnMoney(float, object)
  nameWithType.vb: PersonLike.EarnMoney(Single, Object)
  fullName.vb: TinyLife.Objects.PersonLike.EarnMoney(Single, Object)
  name.vb: EarnMoney(Single, Object)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.EarnMoney(System.Single,System.Object)
    name: EarnMoney
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_EarnMoney_System_Single_System_Object_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.EarnMoney(System.Single,System.Object)
    name: EarnMoney
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_EarnMoney_System_Single_System_Object_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.Goals.Job
  commentId: T:TinyLife.Goals.Job
  parent: TinyLife.Goals
  href: TinyLife.Goals.Job.html
  name: Job
  nameWithType: Job
  fullName: TinyLife.Goals.Job
- uid: TinyLife.World.LotEmployment.Instance
  commentId: T:TinyLife.World.LotEmployment.Instance
  parent: TinyLife.World
  href: TinyLife.World.LotEmployment.html
  name: LotEmployment.Instance
  nameWithType: LotEmployment.Instance
  fullName: TinyLife.World.LotEmployment.Instance
  spec.csharp:
  - uid: TinyLife.World.LotEmployment
    name: LotEmployment
    href: TinyLife.World.LotEmployment.html
  - name: .
  - uid: TinyLife.World.LotEmployment.Instance
    name: Instance
    href: TinyLife.World.LotEmployment.Instance.html
  spec.vb:
  - uid: TinyLife.World.LotEmployment
    name: LotEmployment
    href: TinyLife.World.LotEmployment.html
  - name: .
  - uid: TinyLife.World.LotEmployment.Instance
    name: Instance
    href: TinyLife.World.LotEmployment.Instance.html
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.Emotions.EmotionModifier
  commentId: T:TinyLife.Emotions.EmotionModifier
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionModifier.html
  name: EmotionModifier
  nameWithType: EmotionModifier
  fullName: TinyLife.Emotions.EmotionModifier
- uid: TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
  commentId: M:TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_AddEmotion_TinyLife_Emotions_EmotionModifier_System_Int32_System_TimeSpan_TinyLife_Emotions_IEmotionSource_System_Boolean_
  name: AddEmotion(EmotionModifier, int, TimeSpan, IEmotionSource, bool)
  nameWithType: PersonLike.AddEmotion(EmotionModifier, int, TimeSpan, IEmotionSource, bool)
  fullName: TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier, int, System.TimeSpan, TinyLife.Emotions.IEmotionSource, bool)
  nameWithType.vb: PersonLike.AddEmotion(EmotionModifier, Integer, TimeSpan, IEmotionSource, Boolean)
  fullName.vb: TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier, Integer, System.TimeSpan, TinyLife.Emotions.IEmotionSource, Boolean)
  name.vb: AddEmotion(EmotionModifier, Integer, TimeSpan, IEmotionSource, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: AddEmotion
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_AddEmotion_TinyLife_Emotions_EmotionModifier_System_Int32_System_TimeSpan_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: AddEmotion
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_AddEmotion_TinyLife_Emotions_EmotionModifier_System_Int32_System_TimeSpan_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Emotions.EmotionModifier.Instance
  commentId: T:TinyLife.Emotions.EmotionModifier.Instance
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionModifier.html
  name: EmotionModifier.Instance
  nameWithType: EmotionModifier.Instance
  fullName: TinyLife.Emotions.EmotionModifier.Instance
  spec.csharp:
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
    href: TinyLife.Emotions.EmotionModifier.Instance.html
  spec.vb:
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
    href: TinyLife.Emotions.EmotionModifier.Instance.html
- uid: TinyLife.Goals.GoalTrigger{TinyLife.Emotions.EmotionModifier.Instance,System.Boolean,TinyLife.Emotions.EmotionModifier.Instance,System.Single}
  commentId: T:TinyLife.Goals.GoalTrigger{TinyLife.Emotions.EmotionModifier.Instance,System.Boolean,TinyLife.Emotions.EmotionModifier.Instance,System.Single}
  parent: TinyLife.Goals
  definition: TinyLife.Goals.GoalTrigger`4
  href: TinyLife.Goals.GoalTrigger-4.html
  name: GoalTrigger<EmotionModifier.Instance, bool, EmotionModifier.Instance, float>
  nameWithType: GoalTrigger<EmotionModifier.Instance, bool, EmotionModifier.Instance, float>
  fullName: TinyLife.Goals.GoalTrigger<TinyLife.Emotions.EmotionModifier.Instance, bool, TinyLife.Emotions.EmotionModifier.Instance, float>
  nameWithType.vb: GoalTrigger(Of EmotionModifier.Instance, Boolean, EmotionModifier.Instance, Single)
  fullName.vb: TinyLife.Goals.GoalTrigger(Of TinyLife.Emotions.EmotionModifier.Instance, Boolean, TinyLife.Emotions.EmotionModifier.Instance, Single)
  name.vb: GoalTrigger(Of EmotionModifier.Instance, Boolean, EmotionModifier.Instance, Single)
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: <
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
    href: TinyLife.Emotions.EmotionModifier.Instance.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
    href: TinyLife.Emotions.EmotionModifier.Instance.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
    href: TinyLife.Emotions.EmotionModifier.Instance.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
    href: TinyLife.Emotions.EmotionModifier.Instance.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  href: TinyLife.html
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
- uid: TinyLife.Objects.PersonLike.RemoveEmotion(TinyLife.Emotions.EmotionModifier)
  commentId: M:TinyLife.Objects.PersonLike.RemoveEmotion(TinyLife.Emotions.EmotionModifier)
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_RemoveEmotion_TinyLife_Emotions_EmotionModifier_
  name: RemoveEmotion(EmotionModifier)
  nameWithType: PersonLike.RemoveEmotion(EmotionModifier)
  fullName: TinyLife.Objects.PersonLike.RemoveEmotion(TinyLife.Emotions.EmotionModifier)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.RemoveEmotion(TinyLife.Emotions.EmotionModifier)
    name: RemoveEmotion
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_RemoveEmotion_TinyLife_Emotions_EmotionModifier_
  - name: (
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.RemoveEmotion(TinyLife.Emotions.EmotionModifier)
    name: RemoveEmotion
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_RemoveEmotion_TinyLife_Emotions_EmotionModifier_
  - name: (
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: )
- uid: TinyLife.Skills.FoodType
  commentId: T:TinyLife.Skills.FoodType
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType
  nameWithType: FoodType
  fullName: TinyLife.Skills.FoodType
- uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
  commentId: M:TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_ActionInfo_TinyLife_Objects_FoodTypedItem_
  name: InvokeOnEaten(ActionInfo, FoodTypedItem)
  nameWithType: FoodType.InvokeOnEaten(ActionInfo, FoodTypedItem)
  fullName: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo, TinyLife.Objects.FoodTypedItem)
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
    name: InvokeOnEaten
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_ActionInfo_TinyLife_Objects_FoodTypedItem_
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
    name: InvokeOnEaten
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_ActionInfo_TinyLife_Objects_FoodTypedItem_
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: )
- uid: TinyLife.Objects.FoodTypedItem
  commentId: T:TinyLife.Objects.FoodTypedItem
  parent: TinyLife.Objects
  href: TinyLife.Objects.FoodTypedItem.html
  name: FoodTypedItem
  nameWithType: FoodTypedItem
  fullName: TinyLife.Objects.FoodTypedItem
- uid: TinyLife.Goals.GoalTrigger{TinyLife.Objects.FoodTypedItem,System.Boolean,TinyLife.Objects.FoodTypedItem,System.Single}
  commentId: T:TinyLife.Goals.GoalTrigger{TinyLife.Objects.FoodTypedItem,System.Boolean,TinyLife.Objects.FoodTypedItem,System.Single}
  parent: TinyLife.Goals
  definition: TinyLife.Goals.GoalTrigger`4
  href: TinyLife.Goals.GoalTrigger-4.html
  name: GoalTrigger<FoodTypedItem, bool, FoodTypedItem, float>
  nameWithType: GoalTrigger<FoodTypedItem, bool, FoodTypedItem, float>
  fullName: TinyLife.Goals.GoalTrigger<TinyLife.Objects.FoodTypedItem, bool, TinyLife.Objects.FoodTypedItem, float>
  nameWithType.vb: GoalTrigger(Of FoodTypedItem, Boolean, FoodTypedItem, Single)
  fullName.vb: TinyLife.Goals.GoalTrigger(Of TinyLife.Objects.FoodTypedItem, Boolean, TinyLife.Objects.FoodTypedItem, Single)
  name.vb: GoalTrigger(Of FoodTypedItem, Boolean, FoodTypedItem, Single)
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: <
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Goals.Project.OnCompleted
  commentId: M:TinyLife.Goals.Project.OnCompleted
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OnCompleted
  name: OnCompleted()
  nameWithType: Project.OnCompleted()
  fullName: TinyLife.Goals.Project.OnCompleted()
  spec.csharp:
  - uid: TinyLife.Goals.Project.OnCompleted
    name: OnCompleted
    href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OnCompleted
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.Project.OnCompleted
    name: OnCompleted
    href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OnCompleted
  - name: (
  - name: )
- uid: TinyLife.Goals.GoalTrigger{TinyLife.Goals.Project,System.Boolean,TinyLife.Goals.Project,System.Single}
  commentId: T:TinyLife.Goals.GoalTrigger{TinyLife.Goals.Project,System.Boolean,TinyLife.Goals.Project,System.Single}
  parent: TinyLife.Goals
  definition: TinyLife.Goals.GoalTrigger`4
  href: TinyLife.Goals.GoalTrigger-4.html
  name: GoalTrigger<Project, bool, Project, float>
  nameWithType: GoalTrigger<Project, bool, Project, float>
  fullName: TinyLife.Goals.GoalTrigger<TinyLife.Goals.Project, bool, TinyLife.Goals.Project, float>
  nameWithType.vb: GoalTrigger(Of Project, Boolean, Project, Single)
  fullName.vb: TinyLife.Goals.GoalTrigger(Of TinyLife.Goals.Project, Boolean, TinyLife.Goals.Project, Single)
  name.vb: GoalTrigger(Of Project, Boolean, Project, Single)
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: <
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger`4
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger-4.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  commentId: M:TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  isExternal: true
  href: TinyLife.Goals.IGoalTriggerable.html#TinyLife_Goals_IGoalTriggerable_Trigger_TinyLife_Goals_IGoalTriggerable_System_Object_TinyLife_Goals_GoalTrigger_System_Object___
  name: Trigger(IGoalTriggerable, object, GoalTrigger, object[])
  nameWithType: IGoalTriggerable.Trigger(IGoalTriggerable, object, GoalTrigger, object[])
  fullName: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable, object, TinyLife.Goals.GoalTrigger, object[])
  nameWithType.vb: IGoalTriggerable.Trigger(IGoalTriggerable, Object, GoalTrigger, Object())
  fullName.vb: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable, Object, TinyLife.Goals.GoalTrigger, Object())
  name.vb: Trigger(IGoalTriggerable, Object, GoalTrigger, Object())
  spec.csharp:
  - uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
    name: Trigger
    href: TinyLife.Goals.IGoalTriggerable.html#TinyLife_Goals_IGoalTriggerable_Trigger_TinyLife_Goals_IGoalTriggerable_System_Object_TinyLife_Goals_GoalTrigger_System_Object___
  - name: (
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
    href: TinyLife.Goals.IGoalTriggerable.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
    name: Trigger
    href: TinyLife.Goals.IGoalTriggerable.html#TinyLife_Goals_IGoalTriggerable_Trigger_TinyLife_Goals_IGoalTriggerable_System_Object_TinyLife_Goals_GoalTrigger_System_Object___
  - name: (
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
    href: TinyLife.Goals.IGoalTriggerable.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Goals.GoalTrigger.#ctor*
  commentId: Overload:TinyLife.Goals.GoalTrigger.#ctor
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger__ctor_System_String_System_Collections_Generic_IEnumerable_System_Type__System_Collections_Generic_IEnumerable_System_Type__
  name: GoalTrigger
  nameWithType: GoalTrigger.GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger.GoalTrigger
  nameWithType.vb: GoalTrigger.New
  fullName.vb: TinyLife.Goals.GoalTrigger.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Goals.GoalTrigger.IsObjectCompatible*
  commentId: Overload:TinyLife.Goals.GoalTrigger.IsObjectCompatible
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_IsObjectCompatible_System_Type_
  name: IsObjectCompatible
  nameWithType: GoalTrigger.IsObjectCompatible
  fullName: TinyLife.Goals.GoalTrigger.IsObjectCompatible
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Goals.GoalTrigger.ValidValues
  commentId: F:TinyLife.Goals.GoalTrigger.ValidValues
  parent: TinyLife.Goals.GoalTrigger
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_ValidValues
  name: ValidValues
  nameWithType: GoalTrigger.ValidValues
  fullName: TinyLife.Goals.GoalTrigger.ValidValues
- uid: TinyLife.Goals.GoalTrigger.IsValueCompatible*
  commentId: Overload:TinyLife.Goals.GoalTrigger.IsValueCompatible
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_IsValueCompatible_System_Type_
  name: IsValueCompatible
  nameWithType: GoalTrigger.IsValueCompatible
  fullName: TinyLife.Goals.GoalTrigger.IsValueCompatible
- uid: TinyLife.Goals.GoalTrigger.Equals*
  commentId: Overload:TinyLife.Goals.GoalTrigger.Equals
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_Equals_TinyLife_Goals_GoalTrigger_
  name: Equals
  nameWithType: GoalTrigger.Equals
  fullName: TinyLife.Goals.GoalTrigger.Equals
- uid: System.IEquatable{TinyLife.Goals.GoalTrigger}.Equals(TinyLife.Goals.GoalTrigger)
  commentId: M:System.IEquatable{TinyLife.Goals.GoalTrigger}.Equals(TinyLife.Goals.GoalTrigger)
  parent: System.IEquatable{TinyLife.Goals.GoalTrigger}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(GoalTrigger)
  nameWithType: IEquatable<GoalTrigger>.Equals(GoalTrigger)
  fullName: System.IEquatable<TinyLife.Goals.GoalTrigger>.Equals(TinyLife.Goals.GoalTrigger)
  nameWithType.vb: IEquatable(Of GoalTrigger).Equals(GoalTrigger)
  fullName.vb: System.IEquatable(Of TinyLife.Goals.GoalTrigger).Equals(TinyLife.Goals.GoalTrigger)
  spec.csharp:
  - uid: System.IEquatable{TinyLife.Goals.GoalTrigger}.Equals(TinyLife.Goals.GoalTrigger)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{TinyLife.Goals.GoalTrigger}.Equals(TinyLife.Goals.GoalTrigger)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: TinyLife.Goals.GoalTrigger.GetHashCode*
  commentId: Overload:TinyLife.Goals.GoalTrigger.GetHashCode
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_GetHashCode
  name: GetHashCode
  nameWithType: GoalTrigger.GetHashCode
  fullName: TinyLife.Goals.GoalTrigger.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
