### YamlMime:ManagedReference
items:
- uid: TinyLife.Uis.Menus
  commentId: T:TinyLife.Uis.Menus
  id: Menus
  parent: TinyLife.Uis
  children:
  - TinyLife.Uis.Menus.CreateHouseholdPreview(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike},Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color)
  - TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean)
  - TinyLife.Uis.Menus.CreateLotPreview(TinyLife.World.ExportedLot,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Nullable{System.Int32})
  - TinyLife.Uis.Menus.CreateLotPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean,System.Nullable{System.Int32})
  - TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor,System.Func{TinyLife.Options,Microsoft.Xna.Framework.Input.Buttons},Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Func{System.Boolean})
  - TinyLife.Uis.Menus.IsTransitioning
  - TinyLife.Uis.Menus.MenuBackground(System.Single,System.Single,System.Single,System.Single)
  - TinyLife.Uis.Menus.Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  langs:
  - csharp
  - vb
  name: Menus
  nameWithType: Menus
  fullName: TinyLife.Uis.Menus
  type: Class
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: A set of static methods to deal with <xref href="MLEM.Ui" data-throw-if-not-resolved="false"></xref> and in-game menus
  example: []
  syntax:
    content: public static class Menus
    content.vb: Public Module Menus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TinyLife.Uis.Menus.Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.Uis.Menus.Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  id: Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  parent: TinyLife.Uis.Menus
  langs:
  - csharp
  - vb
  name: Transition(Action, Action, TransitionType, TransitionType, float, float, float, Color?)
  nameWithType: Menus.Transition(Action, Action, Menus.TransitionType, Menus.TransitionType, float, float, float, Color?)
  fullName: TinyLife.Uis.Menus.Transition(System.Action, System.Action, TinyLife.Uis.Menus.TransitionType, TinyLife.Uis.Menus.TransitionType, float, float, float, Microsoft.Xna.Framework.Color?)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: >-
    Displays a screen transition that includes a fade out, an <code class="paramref">inbetween</code> action, followed by a fade back in and an <code class="paramref">after</code> action.

    Whether a transition is currently active can be checked for using <xref href="TinyLife.Uis.Menus.IsTransitioning" data-throw-if-not-resolved="false"></xref>, at which point this method will return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public static bool Transition(Action inbetween = null, Action after = null, Menus.TransitionType outType = TransitionType.Swipe, Menus.TransitionType inType = TransitionType.Swipe, float outSpeed = 0.05, float inSpeed = 0.05, float waitInbetween = 0.15, Color? color = null)
    parameters:
    - id: inbetween
      type: System.Action
      description: The action that is invoked while the screen is faded out, or null to invoke no action.
    - id: after
      type: System.Action
      description: The action that is invoked after the full fade routine completes, or null to invoke no action.
    - id: outType
      type: TinyLife.Uis.Menus.TransitionType
      description: The <xref href="TinyLife.Uis.Menus.TransitionType" data-throw-if-not-resolved="false"></xref> used for fading out.
    - id: inType
      type: TinyLife.Uis.Menus.TransitionType
      description: The <xref href="TinyLife.Uis.Menus.TransitionType" data-throw-if-not-resolved="false"></xref> used for fading in.
    - id: outSpeed
      type: System.Single
      description: The speed with which <code class="paramref">outType</code> is displayed per frame.
    - id: inSpeed
      type: System.Single
      description: The speed with which <code class="paramref">inType</code> is displayed per frame.
    - id: waitInbetween
      type: System.Single
      description: The amount of time to wait while the screen is faded out.
    - id: color
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: The color that the fade should have, or null to use black.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the transition was started or executed successfully, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if there is already an active transition.
    content.vb: Public Shared Function Transition(inbetween As Action = Nothing, after As Action = Nothing, outType As Menus.TransitionType = TransitionType.Swipe, inType As Menus.TransitionType = TransitionType.Swipe, outSpeed As Single = 0.05, inSpeed As Single = 0.05, waitInbetween As Single = 0.15, color As Color? = Nothing) As Boolean
  overload: TinyLife.Uis.Menus.Transition*
  nameWithType.vb: Menus.Transition(Action, Action, Menus.TransitionType, Menus.TransitionType, Single, Single, Single, Color?)
  fullName.vb: TinyLife.Uis.Menus.Transition(System.Action, System.Action, TinyLife.Uis.Menus.TransitionType, TinyLife.Uis.Menus.TransitionType, Single, Single, Single, Microsoft.Xna.Framework.Color?)
  name.vb: Transition(Action, Action, TransitionType, TransitionType, Single, Single, Single, Color?)
- uid: TinyLife.Uis.Menus.IsTransitioning
  commentId: M:TinyLife.Uis.Menus.IsTransitioning
  id: IsTransitioning
  parent: TinyLife.Uis.Menus
  langs:
  - csharp
  - vb
  name: IsTransitioning()
  nameWithType: Menus.IsTransitioning()
  fullName: TinyLife.Uis.Menus.IsTransitioning()
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: Returns whether the UI is currently transitioning, ie whether a transition is active that was invoked through <xref href="TinyLife.Uis.Menus.Transition(System.Action%2cSystem.Action%2cTinyLife.Uis.Menus.TransitionType%2cTinyLife.Uis.Menus.TransitionType%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Color%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool IsTransitioning()
    return:
      type: System.Boolean
      description: Whether a transition is active.
    content.vb: Public Shared Function IsTransitioning() As Boolean
  overload: TinyLife.Uis.Menus.IsTransitioning*
- uid: TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor,System.Func{TinyLife.Options,Microsoft.Xna.Framework.Input.Buttons},Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Func{System.Boolean})
  commentId: M:TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor,System.Func{TinyLife.Options,Microsoft.Xna.Framework.Input.Buttons},Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Func{System.Boolean})
  id: GamepadHint(MLEM.Ui.Anchor,System.Func{TinyLife.Options,Microsoft.Xna.Framework.Input.Buttons},Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Func{System.Boolean})
  parent: TinyLife.Uis.Menus
  langs:
  - csharp
  - vb
  name: GamepadHint(Anchor, Func<Options, Buttons>, Vector2, Vector2?, Func<bool>)
  nameWithType: Menus.GamepadHint(Anchor, Func<Options, Buttons>, Vector2, Vector2?, Func<bool>)
  fullName: TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor, System.Func<TinyLife.Options, Microsoft.Xna.Framework.Input.Buttons>, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2?, System.Func<bool>)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: >-
    Returns a new image that displays information about what gamepad <xref href="Microsoft.Xna.Framework.Input.Buttons" data-throw-if-not-resolved="false"></xref> can be pressed to invoke an action.

    This image is automatically hidden if gamepad controls are not currently being used, or if <code class="paramref">shouldHide</code> returns true.
  example: []
  syntax:
    content: public static Image GamepadHint(Anchor anchor, Func<Options, Buttons> button, Vector2 positionOffset = default, Vector2? size = null, Func<bool> shouldHide = null)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The anchor for the image.
    - id: button
      type: System.Func{TinyLife.Options,Microsoft.Xna.Framework.Input.Buttons}
      description: A function that returns the button that should be displayed.
    - id: positionOffset
      type: Microsoft.Xna.Framework.Vector2
      description: The position offset for the image.
    - id: size
      type: System.Nullable{Microsoft.Xna.Framework.Vector2}
      description: The size of the image, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the image to be 12 pixels big.
    - id: shouldHide
      type: System.Func{System.Boolean}
      description: A function that determines whether the hint should currently be hidden, or null to only hide it when gamepad controls are not currently being used.
    return:
      type: MLEM.Ui.Elements.Image
      description: The created gamepad hint image.
    content.vb: Public Shared Function GamepadHint(anchor As Anchor, button As Func(Of Options, Buttons), positionOffset As Vector2 = Nothing, size As Vector2? = Nothing, shouldHide As Func(Of Boolean) = Nothing) As Image
  overload: TinyLife.Uis.Menus.GamepadHint*
  nameWithType.vb: Menus.GamepadHint(Anchor, Func(Of Options, Buttons), Vector2, Vector2?, Func(Of Boolean))
  fullName.vb: TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor, System.Func(Of TinyLife.Options, Microsoft.Xna.Framework.Input.Buttons), Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2?, System.Func(Of Boolean))
  name.vb: GamepadHint(Anchor, Func(Of Options, Buttons), Vector2, Vector2?, Func(Of Boolean))
- uid: TinyLife.Uis.Menus.MenuBackground(System.Single,System.Single,System.Single,System.Single)
  commentId: M:TinyLife.Uis.Menus.MenuBackground(System.Single,System.Single,System.Single,System.Single)
  id: MenuBackground(System.Single,System.Single,System.Single,System.Single)
  parent: TinyLife.Uis.Menus
  langs:
  - csharp
  - vb
  name: MenuBackground(float, float, float, float)
  nameWithType: Menus.MenuBackground(float, float, float, float)
  fullName: TinyLife.Uis.Menus.MenuBackground(float, float, float, float)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: Returns a <xref href="MLEM.Textures.NinePatch" data-throw-if-not-resolved="false"></xref> that contains a menu background texture region, based on the given data.
  example: []
  syntax:
    content: public static NinePatch MenuBackground(float x, float y, float width = 1, float height = 1)
    parameters:
    - id: x
      type: System.Single
      description: The x coordinate of the menu background section to return, which is expected to be between 0 and 1.
    - id: y
      type: System.Single
      description: The y coordinate of the menu background section to return, which is expected to be between 0 and 1.
    - id: width
      type: System.Single
      description: The width of the menu background section to return, which is expected to be between 1 and 2.
    - id: height
      type: System.Single
      description: The height of the menu background section to return, which is expected to be between 1 and 2.
    return:
      type: MLEM.Textures.NinePatch
      description: A <xref href="MLEM.Textures.NinePatch" data-throw-if-not-resolved="false"></xref> that contains a menu background texture region.
    content.vb: Public Shared Function MenuBackground(x As Single, y As Single, width As Single = 1, height As Single = 1) As NinePatch
  overload: TinyLife.Uis.Menus.MenuBackground*
  nameWithType.vb: Menus.MenuBackground(Single, Single, Single, Single)
  fullName.vb: TinyLife.Uis.Menus.MenuBackground(Single, Single, Single, Single)
  name.vb: MenuBackground(Single, Single, Single, Single)
- uid: TinyLife.Uis.Menus.CreateLotPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean,System.Nullable{System.Int32})
  commentId: M:TinyLife.Uis.Menus.CreateLotPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean,System.Nullable{System.Int32})
  id: CreateLotPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean,System.Nullable{System.Int32})
  parent: TinyLife.Uis.Menus
  langs:
  - csharp
  - vb
  name: CreateLotPreview(Map, string, Point, float, Color, bool, int?)
  nameWithType: Menus.CreateLotPreview(Map, string, Point, float, Color, bool, int?)
  fullName: TinyLife.Uis.Menus.CreateLotPreview(TinyLife.World.Map, string, Microsoft.Xna.Framework.Point, float, Microsoft.Xna.Framework.Color, bool, int?)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: A helper method to create a <xref href="Microsoft.Xna.Framework.Graphics.Texture2D" data-throw-if-not-resolved="false"></xref> instance that contains a rendered preview of an <xref href="TinyLife.World.ExportedLot" data-throw-if-not-resolved="false"></xref> at the given file path.
  example: []
  syntax:
    content: public static Func<Texture2D> CreateLotPreview(Map map, string fileName, Point size, float tileScale, Color backgroundColor, bool async = true, int? currentFloor = null)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to mock rendering the lot on.
    - id: fileName
      type: System.String
      description: The file name of the <xref href="TinyLife.World.ExportedLot" data-throw-if-not-resolved="false"></xref> file.
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size of the texture that should be returned.
    - id: tileScale
      type: System.Single
      description: The scale that tiles should be rendered with.
    - id: backgroundColor
      type: Microsoft.Xna.Framework.Color
      description: The background color to use for the texture.
    - id: async
      type: System.Boolean
      description: Whether the <xref href="TinyLife.World.ExportedLot" data-throw-if-not-resolved="false"></xref> should be loaded from disk asynchronously.
    - id: currentFloor
      type: System.Nullable{System.Int32}
      description: The currently selected floor, floors above which will not be drawn.
    return:
      type: System.Func{Microsoft.Xna.Framework.Graphics.Texture2D}
      description: A function that gathers the generated texture. When first invoked, it is generated. Subsequent calls will return the same generated texture.
    content.vb: Public Shared Function CreateLotPreview(map As Map, fileName As String, size As Point, tileScale As Single, backgroundColor As Color, async As Boolean = True, currentFloor As Integer? = Nothing) As Func(Of Texture2D)
  overload: TinyLife.Uis.Menus.CreateLotPreview*
  nameWithType.vb: Menus.CreateLotPreview(Map, String, Point, Single, Color, Boolean, Integer?)
  fullName.vb: TinyLife.Uis.Menus.CreateLotPreview(TinyLife.World.Map, String, Microsoft.Xna.Framework.Point, Single, Microsoft.Xna.Framework.Color, Boolean, Integer?)
  name.vb: CreateLotPreview(Map, String, Point, Single, Color, Boolean, Integer?)
- uid: TinyLife.Uis.Menus.CreateLotPreview(TinyLife.World.ExportedLot,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Nullable{System.Int32})
  commentId: M:TinyLife.Uis.Menus.CreateLotPreview(TinyLife.World.ExportedLot,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Nullable{System.Int32})
  id: CreateLotPreview(TinyLife.World.ExportedLot,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Nullable{System.Int32})
  parent: TinyLife.Uis.Menus
  langs:
  - csharp
  - vb
  name: CreateLotPreview(ExportedLot, Point, float, Color, int?)
  nameWithType: Menus.CreateLotPreview(ExportedLot, Point, float, Color, int?)
  fullName: TinyLife.Uis.Menus.CreateLotPreview(TinyLife.World.ExportedLot, Microsoft.Xna.Framework.Point, float, Microsoft.Xna.Framework.Color, int?)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: A helper method to create a <xref href="Microsoft.Xna.Framework.Graphics.Texture2D" data-throw-if-not-resolved="false"></xref> instance that contains a rendered preview of the given <xref href="TinyLife.World.ExportedLot" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static RenderTarget2D CreateLotPreview(ExportedLot lot, Point size, float tileScale, Color backgroundColor, int? currentFloor = null)
    parameters:
    - id: lot
      type: TinyLife.World.ExportedLot
      description: The exported lot of which to generate a preview. <xref href="TinyLife.World.ExportedLot.ValidateForPreview(TinyLife.World.Map)" data-throw-if-not-resolved="false"></xref> should have been called prior to this method being called.
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size of the texture that should be returned.
    - id: tileScale
      type: System.Single
      description: The scale that tiles should be rendered with.
    - id: backgroundColor
      type: Microsoft.Xna.Framework.Color
      description: The background color to use for the texture.
    - id: currentFloor
      type: System.Nullable{System.Int32}
      description: The currently selected floor, floors above which will not be drawn.
    return:
      type: Microsoft.Xna.Framework.Graphics.RenderTarget2D
      description: The generated texture.
    content.vb: Public Shared Function CreateLotPreview(lot As ExportedLot, size As Point, tileScale As Single, backgroundColor As Color, currentFloor As Integer? = Nothing) As RenderTarget2D
  overload: TinyLife.Uis.Menus.CreateLotPreview*
  nameWithType.vb: Menus.CreateLotPreview(ExportedLot, Point, Single, Color, Integer?)
  fullName.vb: TinyLife.Uis.Menus.CreateLotPreview(TinyLife.World.ExportedLot, Microsoft.Xna.Framework.Point, Single, Microsoft.Xna.Framework.Color, Integer?)
  name.vb: CreateLotPreview(ExportedLot, Point, Single, Color, Integer?)
- uid: TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean)
  commentId: M:TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean)
  id: CreateHouseholdPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean)
  parent: TinyLife.Uis.Menus
  langs:
  - csharp
  - vb
  name: CreateHouseholdPreview(Map, string, Point, float, Color, bool)
  nameWithType: Menus.CreateHouseholdPreview(Map, string, Point, float, Color, bool)
  fullName: TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map, string, Microsoft.Xna.Framework.Point, float, Microsoft.Xna.Framework.Color, bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: A helper method that creates a preview of an <xref href="TinyLife.World.ExportedHousehold" data-throw-if-not-resolved="false"></xref> at the given file path.
  example: []
  syntax:
    content: public static Func<Texture2D> CreateHouseholdPreview(Map map, string fileName, Point size, float scale, Color backgroundColor, bool async = true)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to create the household preview on.
    - id: fileName
      type: System.String
      description: The file name to load the <xref href="TinyLife.World.ExportedHousehold" data-throw-if-not-resolved="false"></xref> from.
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size of the resulting preview image, in pixels.
    - id: scale
      type: System.Single
      description: The scale that the household is drawn onto the preview image with.
    - id: backgroundColor
      type: Microsoft.Xna.Framework.Color
      description: The color to use for the background of the preview image.
    - id: async
      type: System.Boolean
      description: Whether the <xref href="TinyLife.World.ExportedHousehold" data-throw-if-not-resolved="false"></xref> should be loaded from disk asynchronously.
    return:
      type: System.Func{Microsoft.Xna.Framework.Graphics.Texture2D}
      description: A function that gathers the generated texture. When first invoked, it is generated. Subsequent calls will return the same generated texture.
    content.vb: Public Shared Function CreateHouseholdPreview(map As Map, fileName As String, size As Point, scale As Single, backgroundColor As Color, async As Boolean = True) As Func(Of Texture2D)
  overload: TinyLife.Uis.Menus.CreateHouseholdPreview*
  nameWithType.vb: Menus.CreateHouseholdPreview(Map, String, Point, Single, Color, Boolean)
  fullName.vb: TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map, String, Microsoft.Xna.Framework.Point, Single, Microsoft.Xna.Framework.Color, Boolean)
  name.vb: CreateHouseholdPreview(Map, String, Point, Single, Color, Boolean)
- uid: TinyLife.Uis.Menus.CreateHouseholdPreview(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike},Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color)
  commentId: M:TinyLife.Uis.Menus.CreateHouseholdPreview(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike},Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color)
  id: CreateHouseholdPreview(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike},Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color)
  parent: TinyLife.Uis.Menus
  langs:
  - csharp
  - vb
  name: CreateHouseholdPreview(IEnumerable<PersonLike>, Point, float, Color)
  nameWithType: Menus.CreateHouseholdPreview(IEnumerable<PersonLike>, Point, float, Color)
  fullName: TinyLife.Uis.Menus.CreateHouseholdPreview(System.Collections.Generic.IEnumerable<TinyLife.Objects.PersonLike>, Microsoft.Xna.Framework.Point, float, Microsoft.Xna.Framework.Color)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: A helper method that creates a preview of the given <xref href="TinyLife.World.ExportedHousehold" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static RenderTarget2D CreateHouseholdPreview(IEnumerable<PersonLike> people, Point size, float scale, Color backgroundColor)
    parameters:
    - id: people
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
      description: The people that are part of the household. <xref href="TinyLife.World.ExportedHousehold.ValidatePeople(TinyLife.World.Map)" data-throw-if-not-resolved="false"></xref> should have been called on this collection before this method is called.
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size of the resulting preview image, in pixels.
    - id: scale
      type: System.Single
      description: The scale that the household is drawn onto the preview image with.
    - id: backgroundColor
      type: Microsoft.Xna.Framework.Color
      description: The color to use for the background of the preview image.
    return:
      type: Microsoft.Xna.Framework.Graphics.RenderTarget2D
      description: The generated texture.
    content.vb: Public Shared Function CreateHouseholdPreview(people As IEnumerable(Of PersonLike), size As Point, scale As Single, backgroundColor As Color) As RenderTarget2D
  overload: TinyLife.Uis.Menus.CreateHouseholdPreview*
  nameWithType.vb: Menus.CreateHouseholdPreview(IEnumerable(Of PersonLike), Point, Single, Color)
  fullName.vb: TinyLife.Uis.Menus.CreateHouseholdPreview(System.Collections.Generic.IEnumerable(Of TinyLife.Objects.PersonLike), Microsoft.Xna.Framework.Point, Single, Microsoft.Xna.Framework.Color)
  name.vb: CreateHouseholdPreview(IEnumerable(Of PersonLike), Point, Single, Color)
references:
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  isExternal: true
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  href: TinyLife.html
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Uis.Menus.IsTransitioning
  commentId: M:TinyLife.Uis.Menus.IsTransitioning
  href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_IsTransitioning
  name: IsTransitioning()
  nameWithType: Menus.IsTransitioning()
  fullName: TinyLife.Uis.Menus.IsTransitioning()
  spec.csharp:
  - uid: TinyLife.Uis.Menus.IsTransitioning
    name: IsTransitioning
    href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_IsTransitioning
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.Menus.IsTransitioning
    name: IsTransitioning
    href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_IsTransitioning
  - name: (
  - name: )
- uid: TinyLife.Uis.Menus.TransitionType
  commentId: T:TinyLife.Uis.Menus.TransitionType
  parent: TinyLife.Uis
  href: TinyLife.Uis.Menus.html
  name: Menus.TransitionType
  nameWithType: Menus.TransitionType
  fullName: TinyLife.Uis.Menus.TransitionType
  spec.csharp:
  - uid: TinyLife.Uis.Menus
    name: Menus
    href: TinyLife.Uis.Menus.html
  - name: .
  - uid: TinyLife.Uis.Menus.TransitionType
    name: TransitionType
    href: TinyLife.Uis.Menus.TransitionType.html
  spec.vb:
  - uid: TinyLife.Uis.Menus
    name: Menus
    href: TinyLife.Uis.Menus.html
  - name: .
  - uid: TinyLife.Uis.Menus.TransitionType
    name: TransitionType
    href: TinyLife.Uis.Menus.TransitionType.html
- uid: TinyLife.Uis.Menus.Transition*
  commentId: Overload:TinyLife.Uis.Menus.Transition
  href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_Transition_System_Action_System_Action_TinyLife_Uis_Menus_TransitionType_TinyLife_Uis_Menus_TransitionType_System_Single_System_Single_System_Single_System_Nullable_Microsoft_Xna_Framework_Color__
  name: Transition
  nameWithType: Menus.Transition
  fullName: TinyLife.Uis.Menus.Transition
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Nullable{Microsoft.Xna.Framework.Color}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: Microsoft.Xna.Framework.Color?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Uis.Menus.Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.Uis.Menus.Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  isExternal: true
  href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_Transition_System_Action_System_Action_TinyLife_Uis_Menus_TransitionType_TinyLife_Uis_Menus_TransitionType_System_Single_System_Single_System_Single_System_Nullable_Microsoft_Xna_Framework_Color__
  name: Transition(Action, Action, TransitionType, TransitionType, float, float, float, Color?)
  nameWithType: Menus.Transition(Action, Action, Menus.TransitionType, Menus.TransitionType, float, float, float, Color?)
  fullName: TinyLife.Uis.Menus.Transition(System.Action, System.Action, TinyLife.Uis.Menus.TransitionType, TinyLife.Uis.Menus.TransitionType, float, float, float, Microsoft.Xna.Framework.Color?)
  nameWithType.vb: Menus.Transition(Action, Action, Menus.TransitionType, Menus.TransitionType, Single, Single, Single, Color?)
  fullName.vb: TinyLife.Uis.Menus.Transition(System.Action, System.Action, TinyLife.Uis.Menus.TransitionType, TinyLife.Uis.Menus.TransitionType, Single, Single, Single, Microsoft.Xna.Framework.Color?)
  name.vb: Transition(Action, Action, TransitionType, TransitionType, Single, Single, Single, Color?)
  spec.csharp:
  - uid: TinyLife.Uis.Menus.Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Transition
    href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_Transition_System_Action_System_Action_TinyLife_Uis_Menus_TransitionType_TinyLife_Uis_Menus_TransitionType_System_Single_System_Single_System_Single_System_Nullable_Microsoft_Xna_Framework_Color__
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Menus.TransitionType
    name: TransitionType
    href: TinyLife.Uis.Menus.TransitionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Menus.TransitionType
    name: TransitionType
    href: TinyLife.Uis.Menus.TransitionType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.Menus.Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Transition
    href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_Transition_System_Action_System_Action_TinyLife_Uis_Menus_TransitionType_TinyLife_Uis_Menus_TransitionType_System_Single_System_Single_System_Single_System_Nullable_Microsoft_Xna_Framework_Color__
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Menus.TransitionType
    name: TransitionType
    href: TinyLife.Uis.Menus.TransitionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Menus.TransitionType
    name: TransitionType
    href: TinyLife.Uis.Menus.TransitionType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
- uid: TinyLife.Uis.Menus.IsTransitioning*
  commentId: Overload:TinyLife.Uis.Menus.IsTransitioning
  href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_IsTransitioning
  name: IsTransitioning
  nameWithType: Menus.IsTransitioning
  fullName: TinyLife.Uis.Menus.IsTransitioning
- uid: Microsoft.Xna.Framework.Input.Buttons
  commentId: T:Microsoft.Xna.Framework.Input.Buttons
  parent: Microsoft.Xna.Framework.Input
  isExternal: true
  name: Buttons
  nameWithType: Buttons
  fullName: Microsoft.Xna.Framework.Input.Buttons
- uid: TinyLife.Uis.Menus.GamepadHint*
  commentId: Overload:TinyLife.Uis.Menus.GamepadHint
  href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_GamepadHint_MLEM_Ui_Anchor_System_Func_TinyLife_Options_Microsoft_Xna_Framework_Input_Buttons__Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Func_System_Boolean__
  name: GamepadHint
  nameWithType: Menus.GamepadHint
  fullName: TinyLife.Uis.Menus.GamepadHint
- uid: MLEM.Ui.Anchor
  commentId: T:MLEM.Ui.Anchor
  parent: MLEM.Ui
  isExternal: true
  name: Anchor
  nameWithType: Anchor
  fullName: MLEM.Ui.Anchor
- uid: System.Func{TinyLife.Options,Microsoft.Xna.Framework.Input.Buttons}
  commentId: T:System.Func{TinyLife.Options,Microsoft.Xna.Framework.Input.Buttons}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Options, Buttons>
  nameWithType: Func<Options, Buttons>
  fullName: System.Func<TinyLife.Options, Microsoft.Xna.Framework.Input.Buttons>
  nameWithType.vb: Func(Of Options, Buttons)
  fullName.vb: System.Func(Of TinyLife.Options, Microsoft.Xna.Framework.Input.Buttons)
  name.vb: Func(Of Options, Buttons)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Options
    name: Options
    href: TinyLife.Options.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Input.Buttons
    name: Buttons
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Options
    name: Options
    href: TinyLife.Options.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Input.Buttons
    name: Buttons
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.Nullable{Microsoft.Xna.Framework.Vector2}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: Microsoft.Xna.Framework.Vector2?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<bool>
  nameWithType: Func<bool>
  fullName: System.Func<bool>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Ui.Elements.Image
  commentId: T:MLEM.Ui.Elements.Image
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: MLEM.Ui.Elements.Image
- uid: Microsoft.Xna.Framework.Input
  commentId: N:Microsoft.Xna.Framework.Input
  isExternal: true
  name: Microsoft.Xna.Framework.Input
  nameWithType: Microsoft.Xna.Framework.Input
  fullName: Microsoft.Xna.Framework.Input
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Input
    name: Input
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Input
    name: Input
    isExternal: true
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: MLEM.Textures.NinePatch
  commentId: T:MLEM.Textures.NinePatch
  parent: MLEM.Textures
  isExternal: true
  name: NinePatch
  nameWithType: NinePatch
  fullName: MLEM.Textures.NinePatch
- uid: TinyLife.Uis.Menus.MenuBackground*
  commentId: Overload:TinyLife.Uis.Menus.MenuBackground
  href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_MenuBackground_System_Single_System_Single_System_Single_System_Single_
  name: MenuBackground
  nameWithType: Menus.MenuBackground
  fullName: TinyLife.Uis.Menus.MenuBackground
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: Microsoft.Xna.Framework.Graphics.Texture2D
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: Microsoft.Xna.Framework.Graphics.Texture2D
- uid: TinyLife.World.ExportedLot
  commentId: T:TinyLife.World.ExportedLot
  parent: TinyLife.World
  href: TinyLife.World.ExportedLot.html
  name: ExportedLot
  nameWithType: ExportedLot
  fullName: TinyLife.World.ExportedLot
- uid: TinyLife.Uis.Menus.CreateLotPreview*
  commentId: Overload:TinyLife.Uis.Menus.CreateLotPreview
  href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_CreateLotPreview_TinyLife_World_Map_System_String_Microsoft_Xna_Framework_Point_System_Single_Microsoft_Xna_Framework_Color_System_Boolean_System_Nullable_System_Int32__
  name: CreateLotPreview
  nameWithType: Menus.CreateLotPreview
  fullName: TinyLife.Uis.Menus.CreateLotPreview
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Func{Microsoft.Xna.Framework.Graphics.Texture2D}
  commentId: T:System.Func{Microsoft.Xna.Framework.Graphics.Texture2D}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<Texture2D>
  nameWithType: Func<Texture2D>
  fullName: System.Func<Microsoft.Xna.Framework.Graphics.Texture2D>
  nameWithType.vb: Func(Of Texture2D)
  fullName.vb: System.Func(Of Microsoft.Xna.Framework.Graphics.Texture2D)
  name.vb: Func(Of Texture2D)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: Microsoft.Xna.Framework.Graphics.Texture2D
    name: Texture2D
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.World.ExportedLot.ValidateForPreview(TinyLife.World.Map)
  commentId: M:TinyLife.World.ExportedLot.ValidateForPreview(TinyLife.World.Map)
  href: TinyLife.World.ExportedLot.html#TinyLife_World_ExportedLot_ValidateForPreview_TinyLife_World_Map_
  name: ValidateForPreview(Map)
  nameWithType: ExportedLot.ValidateForPreview(Map)
  fullName: TinyLife.World.ExportedLot.ValidateForPreview(TinyLife.World.Map)
  spec.csharp:
  - uid: TinyLife.World.ExportedLot.ValidateForPreview(TinyLife.World.Map)
    name: ValidateForPreview
    href: TinyLife.World.ExportedLot.html#TinyLife_World_ExportedLot_ValidateForPreview_TinyLife_World_Map_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: )
  spec.vb:
  - uid: TinyLife.World.ExportedLot.ValidateForPreview(TinyLife.World.Map)
    name: ValidateForPreview
    href: TinyLife.World.ExportedLot.html#TinyLife_World_ExportedLot_ValidateForPreview_TinyLife_World_Map_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: )
- uid: Microsoft.Xna.Framework.Graphics.RenderTarget2D
  commentId: T:Microsoft.Xna.Framework.Graphics.RenderTarget2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: RenderTarget2D
  nameWithType: RenderTarget2D
  fullName: Microsoft.Xna.Framework.Graphics.RenderTarget2D
- uid: TinyLife.World.ExportedHousehold
  commentId: T:TinyLife.World.ExportedHousehold
  parent: TinyLife.World
  href: TinyLife.World.ExportedHousehold.html
  name: ExportedHousehold
  nameWithType: ExportedHousehold
  fullName: TinyLife.World.ExportedHousehold
- uid: TinyLife.Uis.Menus.CreateHouseholdPreview*
  commentId: Overload:TinyLife.Uis.Menus.CreateHouseholdPreview
  href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_CreateHouseholdPreview_TinyLife_World_Map_System_String_Microsoft_Xna_Framework_Point_System_Single_Microsoft_Xna_Framework_Color_System_Boolean_
  name: CreateHouseholdPreview
  nameWithType: Menus.CreateHouseholdPreview
  fullName: TinyLife.Uis.Menus.CreateHouseholdPreview
- uid: TinyLife.World.ExportedHousehold.ValidatePeople(TinyLife.World.Map)
  commentId: M:TinyLife.World.ExportedHousehold.ValidatePeople(TinyLife.World.Map)
  href: TinyLife.World.ExportedHousehold.html#TinyLife_World_ExportedHousehold_ValidatePeople_TinyLife_World_Map_
  name: ValidatePeople(Map)
  nameWithType: ExportedHousehold.ValidatePeople(Map)
  fullName: TinyLife.World.ExportedHousehold.ValidatePeople(TinyLife.World.Map)
  spec.csharp:
  - uid: TinyLife.World.ExportedHousehold.ValidatePeople(TinyLife.World.Map)
    name: ValidatePeople
    href: TinyLife.World.ExportedHousehold.html#TinyLife_World_ExportedHousehold_ValidatePeople_TinyLife_World_Map_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: )
  spec.vb:
  - uid: TinyLife.World.ExportedHousehold.ValidatePeople(TinyLife.World.Map)
    name: ValidatePeople
    href: TinyLife.World.ExportedHousehold.html#TinyLife_World_ExportedHousehold_ValidatePeople_TinyLife_World_Map_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<PersonLike>
  nameWithType: IEnumerable<PersonLike>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.PersonLike>
  nameWithType.vb: IEnumerable(Of PersonLike)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.PersonLike)
  name.vb: IEnumerable(Of PersonLike)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
