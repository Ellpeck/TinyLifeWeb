### YamlMime:ManagedReference
items:
- uid: TinyLife.Tools.Tool
  commentId: T:TinyLife.Tools.Tool
  id: Tool
  parent: TinyLife.Tools
  children:
  - TinyLife.Tools.Tool.#ctor(System.String,MLEM.Textures.TextureRegion,System.Boolean)
  - TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  - TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,System.Collections.Generic.IEnumerable{MLEM.Textures.TextureRegion},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  - TinyLife.Tools.Tool.BuildTools
  - TinyLife.Tools.Tool.CanPlaceForTooltip
  - TinyLife.Tools.Tool.CanSwitchGameModes
  - TinyLife.Tools.Tool.CanUndoRedo(System.Boolean)
  - TinyLife.Tools.Tool.Closed
  - TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme,Microsoft.Xna.Framework.Color,System.Action{System.Int32},System.Func{System.Int32,System.Boolean},System.String)
  - TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorSettings,System.Action{System.Int32,System.Int32},System.Func{System.Int32,System.Int32,System.Boolean},TinyLife.LnCategory)
  - TinyLife.Tools.Tool.CurrentFloor
  - TinyLife.Tools.Tool.DisplayAsTab
  - TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean)
  - TinyLife.Tools.Tool.FurnitureTool
  - TinyLife.Tools.Tool.GetMouseCursor
  - TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
  - TinyLife.Tools.Tool.Input
  - TinyLife.Tools.Tool.IsCopyPressed
  - TinyLife.Tools.Tool.IsOnLot(Microsoft.Xna.Framework.Point)
  - TinyLife.Tools.Tool.IsRotateCcwPressed
  - TinyLife.Tools.Tool.IsRotateCwPressed
  - TinyLife.Tools.Tool.Map
  - TinyLife.Tools.Tool.Money
  - TinyLife.Tools.Tool.MousePos
  - TinyLife.Tools.Tool.MoveTool
  - TinyLife.Tools.Tool.Name
  - TinyLife.Tools.Tool.OnButtonCreated(MLEM.Ui.Elements.Button)
  - TinyLife.Tools.Tool.OnClosed
  - TinyLife.Tools.Tool.OnDraw
  - TinyLife.Tools.Tool.OnInitBuildModeUi
  - TinyLife.Tools.Tool.OnOpened
  - TinyLife.Tools.Tool.OnUpdate
  - TinyLife.Tools.Tool.Opened
  - TinyLife.Tools.Tool.PlayModeTool
  - TinyLife.Tools.Tool.RemoveTool
  - TinyLife.Tools.Tool.SelectFirstContentItem
  - TinyLife.Tools.Tool.SelectedObject
  - TinyLife.Tools.Tool.SelectedRoof
  - TinyLife.Tools.Tool.SelectedStairs
  - TinyLife.Tools.Tool.SelectedWall
  - TinyLife.Tools.Tool.ShouldHighlightSelectedObject(System.Object)
  - TinyLife.Tools.Tool.Texture
  - TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime,System.Boolean)
  langs:
  - csharp
  - vb
  name: Tool
  nameWithType: Tool
  fullName: TinyLife.Tools.Tool
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    A tool is a type of game mode that is currently active.

    Tools are split up into the <xref href="TinyLife.Tools.Tool.PlayModeTool" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Tools.Tool.BuildTools" data-throw-if-not-resolved="false"></xref>, the latter of which holds all tools that can be found in the build menu.
  example: []
  syntax:
    content: public class Tool
    content.vb: Public Class Tool
  inheritance:
  - System.Object
  derivedClasses:
  - TinyLife.Tools.ColorTool
  - TinyLife.Tools.FenceTool
  - TinyLife.Tools.FurnitureTool
  - TinyLife.Tools.LotTool
  - TinyLife.Tools.MoveLotTool
  - TinyLife.Tools.MoveTool
  - TinyLife.Tools.OpeningTool
  - TinyLife.Tools.PlayModeTool
  - TinyLife.Tools.RemoveTool
  - TinyLife.Tools.RoofTool
  - TinyLife.Tools.StairsTool
  - TinyLife.Tools.TileTool
  - TinyLife.Tools.WallTool
  - TinyLife.Tools.WallpaperTool
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Tools.Tool.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Tools.Tool.RemoveTool
  commentId: F:TinyLife.Tools.Tool.RemoveTool
  id: RemoveTool
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: RemoveTool
  nameWithType: Tool.RemoveTool
  fullName: TinyLife.Tools.Tool.RemoveTool
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: The <xref href="TinyLife.Tools.Tool.RemoveTool" data-throw-if-not-resolved="false"></xref> singleton, which is activated using the Remove tab in the build menu or by holding the control key.
  example: []
  syntax:
    content: public static readonly RemoveTool RemoveTool
    return:
      type: TinyLife.Tools.RemoveTool
    content.vb: Public Shared ReadOnly RemoveTool As RemoveTool
- uid: TinyLife.Tools.Tool.MoveTool
  commentId: F:TinyLife.Tools.Tool.MoveTool
  id: MoveTool
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: MoveTool
  nameWithType: Tool.MoveTool
  fullName: TinyLife.Tools.Tool.MoveTool
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: The <xref href="TinyLife.Tools.Tool.MoveTool" data-throw-if-not-resolved="false"></xref> singleton
  example: []
  syntax:
    content: public static readonly MoveTool MoveTool
    return:
      type: TinyLife.Tools.MoveTool
    content.vb: Public Shared ReadOnly MoveTool As MoveTool
- uid: TinyLife.Tools.Tool.PlayModeTool
  commentId: F:TinyLife.Tools.Tool.PlayModeTool
  id: PlayModeTool
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: PlayModeTool
  nameWithType: Tool.PlayModeTool
  fullName: TinyLife.Tools.Tool.PlayModeTool
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: The <xref href="TinyLife.Tools.Tool.PlayModeTool" data-throw-if-not-resolved="false"></xref> singleton, which is activated when build mode is inactive.
  example: []
  syntax:
    content: public static readonly PlayModeTool PlayModeTool
    return:
      type: TinyLife.Tools.PlayModeTool
    content.vb: Public Shared ReadOnly PlayModeTool As PlayModeTool
- uid: TinyLife.Tools.Tool.FurnitureTool
  commentId: F:TinyLife.Tools.Tool.FurnitureTool
  id: FurnitureTool
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: FurnitureTool
  nameWithType: Tool.FurnitureTool
  fullName: TinyLife.Tools.Tool.FurnitureTool
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: The <xref href="TinyLife.Tools.Tool.FurnitureTool" data-throw-if-not-resolved="false"></xref> singleton.
  example: []
  syntax:
    content: public static readonly FurnitureTool FurnitureTool
    return:
      type: TinyLife.Tools.FurnitureTool
    content.vb: Public Shared ReadOnly FurnitureTool As FurnitureTool
- uid: TinyLife.Tools.Tool.BuildTools
  commentId: F:TinyLife.Tools.Tool.BuildTools
  id: BuildTools
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: BuildTools
  nameWithType: Tool.BuildTools
  fullName: TinyLife.Tools.Tool.BuildTools
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    A set of <xref href="TinyLife.Tools.Tool" data-throw-if-not-resolved="false"></xref> instances that can be activated using the build mode menu.

    All tools in this list are automatically added to the menu.
  example: []
  syntax:
    content: public static readonly List<Tool> BuildTools
    return:
      type: System.Collections.Generic.List{TinyLife.Tools.Tool}
    content.vb: Public Shared ReadOnly BuildTools As List(Of Tool)
- uid: TinyLife.Tools.Tool.SelectedObject
  commentId: P:TinyLife.Tools.Tool.SelectedObject
  id: SelectedObject
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: SelectedObject
  nameWithType: Tool.SelectedObject
  fullName: TinyLife.Tools.Tool.SelectedObject
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    The <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref> that is currently below the mouse, or null if there is none.

    This object selection mechanic uses pixel-perfect collision based on the object's rendered texture.
  example: []
  syntax:
    content: public static MapObject SelectedObject { get; }
    parameters: []
    return:
      type: TinyLife.Objects.MapObject
    content.vb: Public Shared ReadOnly Property SelectedObject As MapObject
  overload: TinyLife.Tools.Tool.SelectedObject*
- uid: TinyLife.Tools.Tool.SelectedWall
  commentId: P:TinyLife.Tools.Tool.SelectedWall
  id: SelectedWall
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: SelectedWall
  nameWithType: Tool.SelectedWall
  fullName: TinyLife.Tools.Tool.SelectedWall
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    The <xref href="TinyLife.Objects.WallLike" data-throw-if-not-resolved="false"></xref> that is currently below the mouse, or null if there is none.

    This object selection mechanic uses pixel-perfect collision based on the wall's rendered texture.
  example: []
  syntax:
    content: public static WallLike SelectedWall { get; }
    parameters: []
    return:
      type: TinyLife.Objects.WallLike
    content.vb: Public Shared ReadOnly Property SelectedWall As WallLike
  overload: TinyLife.Tools.Tool.SelectedWall*
- uid: TinyLife.Tools.Tool.SelectedRoof
  commentId: P:TinyLife.Tools.Tool.SelectedRoof
  id: SelectedRoof
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: SelectedRoof
  nameWithType: Tool.SelectedRoof
  fullName: TinyLife.Tools.Tool.SelectedRoof
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    The <xref href="TinyLife.World.Roof" data-throw-if-not-resolved="false"></xref> that is currently below the mouse, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there is none.

    This object selection mechanic uses pixel-perfect collision based on the roof's rendered texture.
  example: []
  syntax:
    content: public static Roof SelectedRoof { get; }
    parameters: []
    return:
      type: TinyLife.World.Roof
    content.vb: Public Shared ReadOnly Property SelectedRoof As Roof
  overload: TinyLife.Tools.Tool.SelectedRoof*
- uid: TinyLife.Tools.Tool.SelectedStairs
  commentId: P:TinyLife.Tools.Tool.SelectedStairs
  id: SelectedStairs
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: SelectedStairs
  nameWithType: Tool.SelectedStairs
  fullName: TinyLife.Tools.Tool.SelectedStairs
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    The <xref href="TinyLife.World.Stairs" data-throw-if-not-resolved="false"></xref> object that is currently below the mouse, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> is there is none.

    This object selection mechanic uses pixel-perfect collision based on the stairs' rendered texture.
  example: []
  syntax:
    content: public static Stairs SelectedStairs { get; }
    parameters: []
    return:
      type: TinyLife.World.Stairs
    content.vb: Public Shared ReadOnly Property SelectedStairs As Stairs
  overload: TinyLife.Tools.Tool.SelectedStairs*
- uid: TinyLife.Tools.Tool.IsRotateCwPressed
  commentId: P:TinyLife.Tools.Tool.IsRotateCwPressed
  id: IsRotateCwPressed
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: IsRotateCwPressed
  nameWithType: Tool.IsRotateCwPressed
  fullName: TinyLife.Tools.Tool.IsRotateCwPressed
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    Returns whether a keybind or button combination is pressed that indicates that an object should be rotated clockwise now.

    This should be queried after <xref href="TinyLife.Tools.Tool.IsRotateCcwPressed" data-throw-if-not-resolved="false"></xref>, since this doesn't check for any modifier keys.
  example: []
  syntax:
    content: public static bool IsRotateCwPressed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsRotateCwPressed As Boolean
  overload: TinyLife.Tools.Tool.IsRotateCwPressed*
- uid: TinyLife.Tools.Tool.IsRotateCcwPressed
  commentId: P:TinyLife.Tools.Tool.IsRotateCcwPressed
  id: IsRotateCcwPressed
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: IsRotateCcwPressed
  nameWithType: Tool.IsRotateCcwPressed
  fullName: TinyLife.Tools.Tool.IsRotateCcwPressed
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    Returns whether a keybind or button combination is pressed that indicates that an object should be rotated clockwise now.

    This should be queried before <xref href="TinyLife.Tools.Tool.IsRotateCwPressed" data-throw-if-not-resolved="false"></xref>, since this checks for modifier keys being pressed.
  example: []
  syntax:
    content: public static bool IsRotateCcwPressed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsRotateCcwPressed As Boolean
  overload: TinyLife.Tools.Tool.IsRotateCcwPressed*
- uid: TinyLife.Tools.Tool.IsCopyPressed
  commentId: P:TinyLife.Tools.Tool.IsCopyPressed
  id: IsCopyPressed
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: IsCopyPressed
  nameWithType: Tool.IsCopyPressed
  fullName: TinyLife.Tools.Tool.IsCopyPressed
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: Returns whether a keybind or button combination is pressed that indicates that an object should be copied.
  example: []
  syntax:
    content: public static bool IsCopyPressed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsCopyPressed As Boolean
  overload: TinyLife.Tools.Tool.IsCopyPressed*
- uid: TinyLife.Tools.Tool.OnOpened
  commentId: E:TinyLife.Tools.Tool.OnOpened
  id: OnOpened
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: OnOpened
  nameWithType: Tool.OnOpened
  fullName: TinyLife.Tools.Tool.OnOpened
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: An event that is invoked when a <xref href="TinyLife.Tools.Tool" data-throw-if-not-resolved="false"></xref> is <xref href="TinyLife.Tools.Tool.Opened" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static event Action<Tool> OnOpened
    return:
      type: System.Action{TinyLife.Tools.Tool}
    content.vb: Public Shared Event OnOpened As Action(Of Tool)
- uid: TinyLife.Tools.Tool.OnClosed
  commentId: E:TinyLife.Tools.Tool.OnClosed
  id: OnClosed
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: OnClosed
  nameWithType: Tool.OnClosed
  fullName: TinyLife.Tools.Tool.OnClosed
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: An event that is invoked when a <xref href="TinyLife.Tools.Tool" data-throw-if-not-resolved="false"></xref> is <xref href="TinyLife.Tools.Tool.Closed" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static event Action<Tool> OnClosed
    return:
      type: System.Action{TinyLife.Tools.Tool}
    content.vb: Public Shared Event OnClosed As Action(Of Tool)
- uid: TinyLife.Tools.Tool.OnUpdate
  commentId: E:TinyLife.Tools.Tool.OnUpdate
  id: OnUpdate
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: OnUpdate
  nameWithType: Tool.OnUpdate
  fullName: TinyLife.Tools.Tool.OnUpdate
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: An event that is invoked when a <xref href="TinyLife.Tools.Tool" data-throw-if-not-resolved="false"></xref> is updated in <xref href="TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>. The <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">bool</a> passed contains whether the cursor is currently on the game's ui, using <xref href="TinyLife.GameImpl.IsCursorOnUi" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static event Action<Tool, GameTime, bool> OnUpdate
    return:
      type: System.Action{TinyLife.Tools.Tool,Microsoft.Xna.Framework.GameTime,System.Boolean}
    content.vb: Public Shared Event OnUpdate As Action(Of Tool, GameTime, Boolean)
- uid: TinyLife.Tools.Tool.OnDraw
  commentId: E:TinyLife.Tools.Tool.OnDraw
  id: OnDraw
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: OnDraw
  nameWithType: Tool.OnDraw
  fullName: TinyLife.Tools.Tool.OnDraw
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: An event that is invoked when a <xref href="TinyLife.Tools.Tool" data-throw-if-not-resolved="false"></xref> is drawn in <xref href="TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime%2cMicrosoft.Xna.Framework.Graphics.SpriteBatch%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>. The <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">bool</a> passed contains whether the cursor is currently on the game's ui, using <xref href="TinyLife.GameImpl.IsCursorOnUi" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static event Action<Tool, GameTime, SpriteBatch, bool> OnDraw
    return:
      type: System.Action{TinyLife.Tools.Tool,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean}
    content.vb: Public Shared Event OnDraw As Action(Of Tool, GameTime, SpriteBatch, Boolean)
- uid: TinyLife.Tools.Tool.OnInitBuildModeUi
  commentId: E:TinyLife.Tools.Tool.OnInitBuildModeUi
  id: OnInitBuildModeUi
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: OnInitBuildModeUi
  nameWithType: Tool.OnInitBuildModeUi
  fullName: TinyLife.Tools.Tool.OnInitBuildModeUi
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: An event that is invoked when a <xref href="TinyLife.Tools.Tool" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel%2cMLEM.Ui.Elements.Panel)" data-throw-if-not-resolved="false"></xref> method is called.
  example: []
  syntax:
    content: public static event Action<Tool, Panel, Panel> OnInitBuildModeUi
    return:
      type: System.Action{TinyLife.Tools.Tool,MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel}
    content.vb: Public Shared Event OnInitBuildModeUi As Action(Of Tool, Panel, Panel)
- uid: TinyLife.Tools.Tool.Input
  commentId: P:TinyLife.Tools.Tool.Input
  id: Input
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: Tool.Input
  fullName: TinyLife.Tools.Tool.Input
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: This game's input handler. This can easily be accessed through <xref href="MLEM.Startup.MlemGame.Input" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected static InputHandler Input { get; }
    parameters: []
    return:
      type: MLEM.Input.InputHandler
    content.vb: Protected Shared ReadOnly Property Input As InputHandler
  overload: TinyLife.Tools.Tool.Input*
- uid: TinyLife.Tools.Tool.Map
  commentId: P:TinyLife.Tools.Tool.Map
  id: Map
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: Tool.Map
  fullName: TinyLife.Tools.Tool.Map
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    The map that the game's <xref href="TinyLife.GameImpl.Camera" data-throw-if-not-resolved="false"></xref> is currently on.

    If no maps are loaded (ie we're not in game), this property returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: protected static Map Map { get; }
    parameters: []
    return:
      type: TinyLife.World.Map
    content.vb: Protected Shared ReadOnly Property Map As Map
  overload: TinyLife.Tools.Tool.Map*
- uid: TinyLife.Tools.Tool.Money
  commentId: P:TinyLife.Tools.Tool.Money
  id: Money
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: Money
  nameWithType: Tool.Money
  fullName: TinyLife.Tools.Tool.Money
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: The money that this household has, rounded by two digits after the decimal point
  example: []
  syntax:
    content: protected static float Money { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Protected Shared Property Money As Single
  overload: TinyLife.Tools.Tool.Money*
- uid: TinyLife.Tools.Tool.CurrentFloor
  commentId: P:TinyLife.Tools.Tool.CurrentFloor
  id: CurrentFloor
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: CurrentFloor
  nameWithType: Tool.CurrentFloor
  fullName: TinyLife.Tools.Tool.CurrentFloor
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    The floor that the game's camera is currently focused on.

    For the active lot, all floors that are above the current floor are hidden, and all floors below the current floor are always displayed.
  example: []
  syntax:
    content: protected static int CurrentFloor { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected Shared ReadOnly Property CurrentFloor As Integer
  overload: TinyLife.Tools.Tool.CurrentFloor*
- uid: TinyLife.Tools.Tool.Name
  commentId: F:TinyLife.Tools.Tool.Name
  id: Name
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Tool.Name
  fullName: TinyLife.Tools.Tool.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: The name of this tool, which is used for localization.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Tools.Tool.Texture
  commentId: F:TinyLife.Tools.Tool.Texture
  id: Texture
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: Tool.Texture
  fullName: TinyLife.Tools.Tool.Texture
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: The texture region that should be used to display this tool in the build menu
  example: []
  syntax:
    content: public readonly TextureRegion Texture
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Texture As TextureRegion
- uid: TinyLife.Tools.Tool.DisplayAsTab
  commentId: F:TinyLife.Tools.Tool.DisplayAsTab
  id: DisplayAsTab
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: DisplayAsTab
  nameWithType: Tool.DisplayAsTab
  fullName: TinyLife.Tools.Tool.DisplayAsTab
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: Whether or not this tool should be displayed as a tab (like the <xref href="TinyLife.Tools.Tool.RemoveTool" data-throw-if-not-resolved="false"></xref>) or a button in the build menu
  example: []
  syntax:
    content: public readonly bool DisplayAsTab
    return:
      type: System.Boolean
    content.vb: Public ReadOnly DisplayAsTab As Boolean
- uid: TinyLife.Tools.Tool.MousePos
  commentId: F:TinyLife.Tools.Tool.MousePos
  id: MousePos
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: MousePos
  nameWithType: Tool.MousePos
  fullName: TinyLife.Tools.Tool.MousePos
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    The position of the mouse in world coordinates.

    This position is set every <xref href="TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> call.
  example: []
  syntax:
    content: protected Vector2 MousePos
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Protected MousePos As Vector2
- uid: TinyLife.Tools.Tool.#ctor(System.String,MLEM.Textures.TextureRegion,System.Boolean)
  commentId: M:TinyLife.Tools.Tool.#ctor(System.String,MLEM.Textures.TextureRegion,System.Boolean)
  id: '#ctor(System.String,MLEM.Textures.TextureRegion,System.Boolean)'
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: Tool(string, TextureRegion, bool)
  nameWithType: Tool.Tool(string, TextureRegion, bool)
  fullName: TinyLife.Tools.Tool.Tool(string, MLEM.Textures.TextureRegion, bool)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: Creates a new tool with the given settings
  example: []
  syntax:
    content: public Tool(string name, TextureRegion texture, bool displayAsTab = false)
    parameters:
    - id: name
      type: System.String
      description: The name of this tool, which is used for localization, and should start with the mod's id.
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The texture of the tool icon
    - id: displayAsTab
      type: System.Boolean
      description: Wheteher or not this tool should display as a tab. Defaults to false.
    content.vb: Public Sub New(name As String, texture As TextureRegion, displayAsTab As Boolean = False)
  overload: TinyLife.Tools.Tool.#ctor*
  nameWithType.vb: Tool.New(String, TextureRegion, Boolean)
  fullName.vb: TinyLife.Tools.Tool.New(String, MLEM.Textures.TextureRegion, Boolean)
  name.vb: New(String, TextureRegion, Boolean)
- uid: TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
  commentId: M:TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
  id: InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: InitBuildModeUi(Panel, Panel)
  nameWithType: Tool.InitBuildModeUi(Panel, Panel)
  fullName: TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel, MLEM.Ui.Elements.Panel)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    Override this method to add custom content to the passed ui elements.

    By default, this method does nothing.
  example: []
  syntax:
    content: protected virtual void InitBuildModeUi(Panel content, Panel zoom)
    parameters:
    - id: content
      type: MLEM.Ui.Elements.Panel
      description: The main content panel. Add custom <xref href="TinyLife.Tools.Tool.BuildModeButton(System.String%2cMLEM.Ui.Elements.Element.GenericCallback%2cMLEM.Ui.Elements.Element.DrawCallback%2cSystem.Single%2cMLEM.Textures.TextureRegion%2cSystem.String%2cSystem.Collections.Generic.IEnumerable%7bSystem.String%7d%2cSystem.Nullable%7bSystem.Single%7d)" data-throw-if-not-resolved="false"></xref> instances here.
    - id: zoom
      type: MLEM.Ui.Elements.Panel
      description: The zoom panel that contains ColorSelection(TinyLife.Utilities.ColorSettings,System.Action&lt;int,int&gt;,System.Func&lt;int,int,bool&gt;) and object previews
    content.vb: Protected Overridable Sub InitBuildModeUi(content As Panel, zoom As Panel)
  overload: TinyLife.Tools.Tool.InitBuildModeUi*
- uid: TinyLife.Tools.Tool.Opened
  commentId: M:TinyLife.Tools.Tool.Opened
  id: Opened
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: Opened()
  nameWithType: Tool.Opened()
  fullName: TinyLife.Tools.Tool.Opened()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    Called when this build tool is opened.

    By default, this method initializes several settings and calls <xref href="TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel%2cMLEM.Ui.Elements.Panel)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void Opened()
    content.vb: Public Overridable Sub Opened()
  overload: TinyLife.Tools.Tool.Opened*
- uid: TinyLife.Tools.Tool.Closed
  commentId: M:TinyLife.Tools.Tool.Closed
  id: Closed
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: Closed()
  nameWithType: Tool.Closed()
  fullName: TinyLife.Tools.Tool.Closed()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    Called when this build tool is closed.

    By default, this method removes its elements from the ui.
  example: []
  syntax:
    content: public virtual void Closed()
    content.vb: Public Overridable Sub Closed()
  overload: TinyLife.Tools.Tool.Closed*
- uid: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime,System.Boolean)
  commentId: M:TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime,System.Boolean)
  id: Update(Microsoft.Xna.Framework.GameTime,System.Boolean)
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: Update(GameTime, bool)
  nameWithType: Tool.Update(GameTime, bool)
  fullName: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    This method is called every update frame for the <xref href="TinyLife.GameImpl.CurrentTool" data-throw-if-not-resolved="false"></xref>.

    By default, this method updates the <xref href="TinyLife.Tools.Tool.MousePos" data-throw-if-not-resolved="false"></xref> and invokes <xref href="TinyLife.Tools.Tool.OnUpdate" data-throw-if-not-resolved="false"></xref>, and also manages the <xref href="TinyLife.Tools.UndoRedoStack" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void Update(GameTime time, bool cursorOnUi)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time
    - id: cursorOnUi
      type: System.Boolean
      description: Whether the cursor is currently covering the ui.
    content.vb: Public Overridable Sub Update(time As GameTime, cursorOnUi As Boolean)
  overload: TinyLife.Tools.Tool.Update*
  nameWithType.vb: Tool.Update(GameTime, Boolean)
  fullName.vb: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime, Boolean)
  name.vb: Update(GameTime, Boolean)
- uid: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean)
  commentId: M:TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean)
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean)
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch, bool)
  nameWithType: Tool.Draw(GameTime, SpriteBatch, bool)
  fullName: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    This method is called every draw frame for the <xref href="TinyLife.GameImpl.CurrentTool" data-throw-if-not-resolved="false"></xref>.

    By default, this method invokes <xref href="TinyLife.Tools.Tool.OnDraw" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void Draw(GameTime time, SpriteBatch batch, bool cursorOnUi)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch used for drawing
    - id: cursorOnUi
      type: System.Boolean
      description: Whether the cursor is currently covering the ui.
    content.vb: Public Overridable Sub Draw(time As GameTime, batch As SpriteBatch, cursorOnUi As Boolean)
  overload: TinyLife.Tools.Tool.Draw*
  nameWithType.vb: Tool.Draw(GameTime, SpriteBatch, Boolean)
  fullName.vb: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Boolean)
  name.vb: Draw(GameTime, SpriteBatch, Boolean)
- uid: TinyLife.Tools.Tool.GetMouseCursor
  commentId: M:TinyLife.Tools.Tool.GetMouseCursor
  id: GetMouseCursor
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: GetMouseCursor()
  nameWithType: Tool.GetMouseCursor()
  fullName: TinyLife.Tools.Tool.GetMouseCursor()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    Returns the <xref href="TinyLife.Uis.CursorType" data-throw-if-not-resolved="false"></xref> that this tool should currently display.

    By default, <xref href="TinyLife.Uis.CursorType.Default" data-throw-if-not-resolved="false"></xref> is returned.
  example: []
  syntax:
    content: public virtual CursorType GetMouseCursor()
    return:
      type: TinyLife.Uis.CursorType
      description: The cursor type
    content.vb: Public Overridable Function GetMouseCursor() As CursorType
  overload: TinyLife.Tools.Tool.GetMouseCursor*
- uid: TinyLife.Tools.Tool.CanPlaceForTooltip
  commentId: M:TinyLife.Tools.Tool.CanPlaceForTooltip
  id: CanPlaceForTooltip
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: CanPlaceForTooltip()
  nameWithType: Tool.CanPlaceForTooltip()
  fullName: TinyLife.Tools.Tool.CanPlaceForTooltip()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: Returns whether or not the tool should currently be considered to be able to place objects for a tooltip displayed to the player.
  example: []
  syntax:
    content: public virtual CanPlaceResult CanPlaceForTooltip()
    return:
      type: TinyLife.Tools.CanPlaceResult
      description: A <xref href="TinyLife.Tools.CanPlaceResult" data-throw-if-not-resolved="false"></xref> that represents whether the tool should be considered to be able to place objects.
    content.vb: Public Overridable Function CanPlaceForTooltip() As CanPlaceResult
  overload: TinyLife.Tools.Tool.CanPlaceForTooltip*
- uid: TinyLife.Tools.Tool.CanSwitchGameModes
  commentId: M:TinyLife.Tools.Tool.CanSwitchGameModes
  id: CanSwitchGameModes
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: CanSwitchGameModes()
  nameWithType: Tool.CanSwitchGameModes()
  fullName: TinyLife.Tools.Tool.CanSwitchGameModes()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: Whether or not the game <xref href="TinyLife.GameImpl.CanSwitchGameModes" data-throw-if-not-resolved="false"></xref> currently, while this tool is selected
  example: []
  syntax:
    content: public virtual bool CanSwitchGameModes()
    return:
      type: System.Boolean
      description: Whether the game can be mode switched right now
    content.vb: Public Overridable Function CanSwitchGameModes() As Boolean
  overload: TinyLife.Tools.Tool.CanSwitchGameModes*
- uid: TinyLife.Tools.Tool.CanUndoRedo(System.Boolean)
  commentId: M:TinyLife.Tools.Tool.CanUndoRedo(System.Boolean)
  id: CanUndoRedo(System.Boolean)
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: CanUndoRedo(bool)
  nameWithType: Tool.CanUndoRedo(bool)
  fullName: TinyLife.Tools.Tool.CanUndoRedo(bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: Returns whether or not the <xref href="TinyLife.Tools.UndoRedoStack" data-throw-if-not-resolved="false"></xref> can currently operate and thus, whether the <xref href="TinyLife.Tools.UndoRedoStack.Undo" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Tools.UndoRedoStack.Redo" data-throw-if-not-resolved="false"></xref> actions can be called.
  example: []
  syntax:
    content: public virtual bool CanUndoRedo(bool cursorOnUi)
    parameters:
    - id: cursorOnUi
      type: System.Boolean
    return:
      type: System.Boolean
      description: Whether the undo or redo commands can be used right now.
    content.vb: Public Overridable Function CanUndoRedo(cursorOnUi As Boolean) As Boolean
  overload: TinyLife.Tools.Tool.CanUndoRedo*
  nameWithType.vb: Tool.CanUndoRedo(Boolean)
  fullName.vb: TinyLife.Tools.Tool.CanUndoRedo(Boolean)
  name.vb: CanUndoRedo(Boolean)
- uid: TinyLife.Tools.Tool.ShouldHighlightSelectedObject(System.Object)
  commentId: M:TinyLife.Tools.Tool.ShouldHighlightSelectedObject(System.Object)
  id: ShouldHighlightSelectedObject(System.Object)
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: ShouldHighlightSelectedObject(object)
  nameWithType: Tool.ShouldHighlightSelectedObject(object)
  fullName: TinyLife.Tools.Tool.ShouldHighlightSelectedObject(object)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    Whether or not the selected object should currently have a white highlight around it.

    This method defaults to return true if <xref href="TinyLife.GameImpl.IsCursorOnUi" data-throw-if-not-resolved="false"></xref> is false.
  example: []
  syntax:
    content: public virtual bool ShouldHighlightSelectedObject(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The selected object, which can be a <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref>, a <xref href="TinyLife.Objects.WallLike" data-throw-if-not-resolved="false"></xref>, a <xref href="TinyLife.World.Roof" data-throw-if-not-resolved="false"></xref> or a <xref href="TinyLife.World.Stairs" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Boolean
      description: Whether or not the selected object should be highlighted
    content.vb: Public Overridable Function ShouldHighlightSelectedObject(obj As Object) As Boolean
  overload: TinyLife.Tools.Tool.ShouldHighlightSelectedObject*
  nameWithType.vb: Tool.ShouldHighlightSelectedObject(Object)
  fullName.vb: TinyLife.Tools.Tool.ShouldHighlightSelectedObject(Object)
  name.vb: ShouldHighlightSelectedObject(Object)
- uid: TinyLife.Tools.Tool.OnButtonCreated(MLEM.Ui.Elements.Button)
  commentId: M:TinyLife.Tools.Tool.OnButtonCreated(MLEM.Ui.Elements.Button)
  id: OnButtonCreated(MLEM.Ui.Elements.Button)
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: OnButtonCreated(Button)
  nameWithType: Tool.OnButtonCreated(Button)
  fullName: TinyLife.Tools.Tool.OnButtonCreated(MLEM.Ui.Elements.Button)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: A method that is called when this tool's build mode button is created.
  example: []
  syntax:
    content: public virtual void OnButtonCreated(Button button)
    parameters:
    - id: button
      type: MLEM.Ui.Elements.Button
      description: The button that was created.
    content.vb: Public Overridable Sub OnButtonCreated(button As Button)
  overload: TinyLife.Tools.Tool.OnButtonCreated*
- uid: TinyLife.Tools.Tool.IsOnLot(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Tools.Tool.IsOnLot(Microsoft.Xna.Framework.Point)
  id: IsOnLot(Microsoft.Xna.Framework.Point)
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: IsOnLot(Point)
  nameWithType: Tool.IsOnLot(Point)
  fullName: TinyLife.Tools.Tool.IsOnLot(Microsoft.Xna.Framework.Point)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: Returns whether or not the passed position is on the currently edited lot (<xref href="TinyLife.GameImpl.CurrentLot" data-throw-if-not-resolved="false"></xref>)
  example: []
  syntax:
    content: public static bool IsOnLot(Point pos)
    parameters:
    - id: pos
      type: Microsoft.Xna.Framework.Point
      description: The position to check
    return:
      type: System.Boolean
      description: Whether or not the position is on the current lot
    content.vb: Public Shared Function IsOnLot(pos As Point) As Boolean
  overload: TinyLife.Tools.Tool.IsOnLot*
- uid: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorSettings,System.Action{System.Int32,System.Int32},System.Func{System.Int32,System.Int32,System.Boolean},TinyLife.LnCategory)
  commentId: M:TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorSettings,System.Action{System.Int32,System.Int32},System.Func{System.Int32,System.Int32,System.Boolean},TinyLife.LnCategory)
  id: ColorSelection(TinyLife.Utilities.ColorSettings,System.Action{System.Int32,System.Int32},System.Func{System.Int32,System.Int32,System.Boolean},TinyLife.LnCategory)
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: ColorSelection(ColorSettings, Action<int, int>, Func<int, int, bool>, LnCategory)
  nameWithType: Tool.ColorSelection(ColorSettings, Action<int, int>, Func<int, int, bool>, LnCategory)
  fullName: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorSettings, System.Action<int, int>, System.Func<int, int, bool>, TinyLife.LnCategory)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    Creates a new <xref href="MLEM.Ui.Elements.Group" data-throw-if-not-resolved="false"></xref> that resembles a set of color selection buttons.

    This method uses ColorSelection(TinyLife.Utilities.ColorSettings,System.Action&lt;int,int&gt;,System.Func&lt;int,int,bool&gt;) to create multiple color selection areas for all the passed <code class="paramref">settings</code>' <xref href="TinyLife.Utilities.ColorSettings.Schemes" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Group ColorSelection(ColorSettings settings, Action<int, int> onPressed, Func<int, int, bool> isSelected, LnCategory previewLnCategory = LnCategory.BuildMode)
    parameters:
    - id: settings
      type: TinyLife.Utilities.ColorSettings
      description: The color settings to create buttons for.
    - id: onPressed
      type: System.Action{System.Int32,System.Int32}
      description: A function that returns the index of the color scheme, as well as the index of the color, that has been pressed.
    - id: isSelected
      type: System.Func{System.Int32,System.Int32,System.Boolean}
      description: A function that determines whether the color scheme with the given index and the color with the given index are selected, which causes a rectangle to be drawn around it.
    - id: previewLnCategory
      type: TinyLife.LnCategory
    return:
      type: MLEM.Ui.Elements.Group
      description: A group of color selection areas with the given settings.
    content.vb: Public Shared Function ColorSelection(settings As ColorSettings, onPressed As Action(Of Integer, Integer), isSelected As Func(Of Integer, Integer, Boolean), previewLnCategory As LnCategory = LnCategory.BuildMode) As Group
  overload: TinyLife.Tools.Tool.ColorSelection*
  nameWithType.vb: Tool.ColorSelection(ColorSettings, Action(Of Integer, Integer), Func(Of Integer, Integer, Boolean), LnCategory)
  fullName.vb: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorSettings, System.Action(Of Integer, Integer), System.Func(Of Integer, Integer, Boolean), TinyLife.LnCategory)
  name.vb: ColorSelection(ColorSettings, Action(Of Integer, Integer), Func(Of Integer, Integer, Boolean), LnCategory)
- uid: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme,Microsoft.Xna.Framework.Color,System.Action{System.Int32},System.Func{System.Int32,System.Boolean},System.String)
  commentId: M:TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme,Microsoft.Xna.Framework.Color,System.Action{System.Int32},System.Func{System.Int32,System.Boolean},System.String)
  id: ColorSelection(TinyLife.Utilities.ColorScheme,Microsoft.Xna.Framework.Color,System.Action{System.Int32},System.Func{System.Int32,System.Boolean},System.String)
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: ColorSelection(ColorScheme, Color, Action<int>, Func<int, bool>, string)
  nameWithType: Tool.ColorSelection(ColorScheme, Color, Action<int>, Func<int, bool>, string)
  fullName: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme, Microsoft.Xna.Framework.Color, System.Action<int>, System.Func<int, bool>, string)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    Creates a new <xref href="MLEM.Ui.Elements.Group" data-throw-if-not-resolved="false"></xref> that resembles a set of color selection buttons.

    This is used by <xref href="TinyLife.Uis.CharacterCreator" data-throw-if-not-resolved="false"></xref>, as well as tools like the <xref href="TinyLife.Tools.Tool.FurnitureTool" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Group ColorSelection(ColorScheme colors, Color modifier, Action<int> onPressed, Func<int, bool> isSelected, string name = null)
    parameters:
    - id: colors
      type: TinyLife.Utilities.ColorScheme
      description: The color scheme to create buttons for
    - id: modifier
      type: Microsoft.Xna.Framework.Color
      description: A color that all colors in the color scheme will be multiplied, which is useful if the object the colors are being applied on is not grayscale.
    - id: onPressed
      type: System.Action{System.Int32}
      description: A function that returns the index of the color that has been pressed
    - id: isSelected
      type: System.Func{System.Int32,System.Boolean}
      description: A function that determines whether the color with the given index is selected, which causes a rectangle to be drawn around it.
    - id: name
      type: System.String
      description: The name to display above this color selection.
    return:
      type: MLEM.Ui.Elements.Group
      description: A group of buttons with the given settings
    content.vb: Public Shared Function ColorSelection(colors As ColorScheme, modifier As Color, onPressed As Action(Of Integer), isSelected As Func(Of Integer, Boolean), name As String = Nothing) As Group
  overload: TinyLife.Tools.Tool.ColorSelection*
  nameWithType.vb: Tool.ColorSelection(ColorScheme, Color, Action(Of Integer), Func(Of Integer, Boolean), String)
  fullName.vb: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme, Microsoft.Xna.Framework.Color, System.Action(Of Integer), System.Func(Of Integer, Boolean), String)
  name.vb: ColorSelection(ColorScheme, Color, Action(Of Integer), Func(Of Integer, Boolean), String)
- uid: TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  commentId: M:TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  id: BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: BuildModeButton(string, GenericCallback, DrawCallback, float, TextureRegion, string, IEnumerable<string>, float?)
  nameWithType: Tool.BuildModeButton(string, Element.GenericCallback, Element.DrawCallback, float, TextureRegion, string, IEnumerable<string>, float?)
  fullName: TinyLife.Tools.Tool.BuildModeButton(string, MLEM.Ui.Elements.Element.GenericCallback, MLEM.Ui.Elements.Element.DrawCallback, float, MLEM.Textures.TextureRegion, string, System.Collections.Generic.IEnumerable<string>, float?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  syntax:
    content: public static Button BuildModeButton(string name, Element.GenericCallback onPressed, Element.DrawCallback onDrawn, float price, TextureRegion icon, string seenId = null, IEnumerable<string> description = null, float? customPrice = null)
    parameters:
    - id: name
      type: System.String
    - id: onPressed
      type: MLEM.Ui.Elements.Element.GenericCallback
    - id: onDrawn
      type: MLEM.Ui.Elements.Element.DrawCallback
    - id: price
      type: System.Single
    - id: icon
      type: MLEM.Textures.TextureRegion
    - id: seenId
      type: System.String
    - id: description
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: customPrice
      type: System.Nullable{System.Single}
    return:
      type: MLEM.Ui.Elements.Button
    content.vb: Public Shared Function BuildModeButton(name As String, onPressed As Element.GenericCallback, onDrawn As Element.DrawCallback, price As Single, icon As TextureRegion, seenId As String = Nothing, description As IEnumerable(Of String) = Nothing, customPrice As Single? = Nothing) As Button
  overload: TinyLife.Tools.Tool.BuildModeButton*
  nameWithType.vb: Tool.BuildModeButton(String, Element.GenericCallback, Element.DrawCallback, Single, TextureRegion, String, IEnumerable(Of String), Single?)
  fullName.vb: TinyLife.Tools.Tool.BuildModeButton(String, MLEM.Ui.Elements.Element.GenericCallback, MLEM.Ui.Elements.Element.DrawCallback, Single, MLEM.Textures.TextureRegion, String, System.Collections.Generic.IEnumerable(Of String), Single?)
  name.vb: BuildModeButton(String, GenericCallback, DrawCallback, Single, TextureRegion, String, IEnumerable(Of String), Single?)
- uid: TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,System.Collections.Generic.IEnumerable{MLEM.Textures.TextureRegion},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  commentId: M:TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,System.Collections.Generic.IEnumerable{MLEM.Textures.TextureRegion},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  id: BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,System.Collections.Generic.IEnumerable{MLEM.Textures.TextureRegion},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: BuildModeButton(string, GenericCallback, DrawCallback, float, IEnumerable<TextureRegion>, string, IEnumerable<string>, float?)
  nameWithType: Tool.BuildModeButton(string, Element.GenericCallback, Element.DrawCallback, float, IEnumerable<TextureRegion>, string, IEnumerable<string>, float?)
  fullName: TinyLife.Tools.Tool.BuildModeButton(string, MLEM.Ui.Elements.Element.GenericCallback, MLEM.Ui.Elements.Element.DrawCallback, float, System.Collections.Generic.IEnumerable<MLEM.Textures.TextureRegion>, string, System.Collections.Generic.IEnumerable<string>, float?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: Creates a new <xref href="MLEM.Ui.Elements.Button" data-throw-if-not-resolved="false"></xref> in the style of each build mode content button, like the ones that display the furniture that can be bought.
  example: []
  syntax:
    content: public static Button BuildModeButton(string name, Element.GenericCallback onPressed, Element.DrawCallback onDrawn, float price, IEnumerable<TextureRegion> icons, string seenId = null, IEnumerable<string> description = null, float? customPrice = null)
    parameters:
    - id: name
      type: System.String
      description: The name that should be displayed when hovering the button.
    - id: onPressed
      type: MLEM.Ui.Elements.Element.GenericCallback
      description: A fucntion that is called when the created button is pressed
    - id: onDrawn
      type: MLEM.Ui.Elements.Element.DrawCallback
      description: A function that is called when the created button is drawn
    - id: price
      type: System.Single
      description: The price that should be displayed for this object
    - id: icons
      type: System.Collections.Generic.IEnumerable{MLEM.Textures.TextureRegion}
    - id: seenId
      type: System.String
      description: A name that can optionally be used for the seen system (<xref href="TinyLife.Options.SeenObjects" data-throw-if-not-resolved="false"></xref>), where a green dot will display next to any build mode buttons containing objects that the player has not seen yet. Usually, the seen id is the object's registry name.
    - id: description
      type: System.Collections.Generic.IEnumerable{System.String}
      description: An optional set of text lines that will be inserted into the tooltip's description part
    - id: customPrice
      type: System.Nullable{System.Single}
      description: The custom price that should be displayed (and used) instead of the <code class="paramref">price</code>. If this value is set, the regular <code class="paramref">price</code> will be displayed as strikethrough
    return:
      type: MLEM.Ui.Elements.Button
      description: A new button with the passed settings
    content.vb: Public Shared Function BuildModeButton(name As String, onPressed As Element.GenericCallback, onDrawn As Element.DrawCallback, price As Single, icons As IEnumerable(Of TextureRegion), seenId As String = Nothing, description As IEnumerable(Of String) = Nothing, customPrice As Single? = Nothing) As Button
  overload: TinyLife.Tools.Tool.BuildModeButton*
  nameWithType.vb: Tool.BuildModeButton(String, Element.GenericCallback, Element.DrawCallback, Single, IEnumerable(Of TextureRegion), String, IEnumerable(Of String), Single?)
  fullName.vb: TinyLife.Tools.Tool.BuildModeButton(String, MLEM.Ui.Elements.Element.GenericCallback, MLEM.Ui.Elements.Element.DrawCallback, Single, System.Collections.Generic.IEnumerable(Of MLEM.Textures.TextureRegion), String, System.Collections.Generic.IEnumerable(Of String), Single?)
  name.vb: BuildModeButton(String, GenericCallback, DrawCallback, Single, IEnumerable(Of TextureRegion), String, IEnumerable(Of String), Single?)
- uid: TinyLife.Tools.Tool.SelectFirstContentItem
  commentId: M:TinyLife.Tools.Tool.SelectFirstContentItem
  id: SelectFirstContentItem
  parent: TinyLife.Tools.Tool
  langs:
  - csharp
  - vb
  name: SelectFirstContentItem()
  nameWithType: Tool.SelectFirstContentItem()
  fullName: TinyLife.Tools.Tool.SelectFirstContentItem()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Tools
  summary: >-
    Causes the first content item in the <xref href="TinyLife.Uis.InGameUi.BuildContent" data-throw-if-not-resolved="false"></xref> menu to be selected.

    If none is available, the world cursor will be selected instead if using a gamepad.
  example: []
  syntax:
    content: protected static void SelectFirstContentItem()
    content.vb: Protected Shared Sub SelectFirstContentItem()
  overload: TinyLife.Tools.Tool.SelectFirstContentItem*
references:
- uid: TinyLife.Tools.Tool.PlayModeTool
  commentId: F:TinyLife.Tools.Tool.PlayModeTool
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_PlayModeTool
  name: PlayModeTool
  nameWithType: Tool.PlayModeTool
  fullName: TinyLife.Tools.Tool.PlayModeTool
- uid: TinyLife.Tools.Tool.BuildTools
  commentId: F:TinyLife.Tools.Tool.BuildTools
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_BuildTools
  name: BuildTools
  nameWithType: Tool.BuildTools
  fullName: TinyLife.Tools.Tool.BuildTools
- uid: TinyLife.Tools
  commentId: N:TinyLife.Tools
  href: TinyLife.html
  name: TinyLife.Tools
  nameWithType: TinyLife.Tools
  fullName: TinyLife.Tools
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Tools
    name: Tools
    href: TinyLife.Tools.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Tools
    name: Tools
    href: TinyLife.Tools.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Tools.Tool.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Tool>(Tool)
  nameWithType: Extensions.JsonCopy<Tool>(Tool)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Tools.Tool>(TinyLife.Tools.Tool)
  nameWithType.vb: Extensions.JsonCopy(Of Tool)(Tool)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Tools.Tool)(TinyLife.Tools.Tool)
  name.vb: JsonCopy(Of Tool)(Tool)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Tools.Tool)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: '>'
  - name: (
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Tools.Tool)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: )
  - name: (
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: )
- uid: TinyLife.Tools.Tool
  commentId: T:TinyLife.Tools.Tool
  parent: TinyLife.Tools
  href: TinyLife.Tools.Tool.html
  name: Tool
  nameWithType: Tool
  fullName: TinyLife.Tools.Tool
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Tools.Tool.RemoveTool
  commentId: F:TinyLife.Tools.Tool.RemoveTool
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_RemoveTool
  name: RemoveTool
  nameWithType: Tool.RemoveTool
  fullName: TinyLife.Tools.Tool.RemoveTool
- uid: TinyLife.Tools.RemoveTool
  commentId: T:TinyLife.Tools.RemoveTool
  parent: TinyLife.Tools
  href: TinyLife.Tools.RemoveTool.html
  name: RemoveTool
  nameWithType: RemoveTool
  fullName: TinyLife.Tools.RemoveTool
- uid: TinyLife.Tools.Tool.MoveTool
  commentId: F:TinyLife.Tools.Tool.MoveTool
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_MoveTool
  name: MoveTool
  nameWithType: Tool.MoveTool
  fullName: TinyLife.Tools.Tool.MoveTool
- uid: TinyLife.Tools.MoveTool
  commentId: T:TinyLife.Tools.MoveTool
  parent: TinyLife.Tools
  href: TinyLife.Tools.MoveTool.html
  name: MoveTool
  nameWithType: MoveTool
  fullName: TinyLife.Tools.MoveTool
- uid: TinyLife.Tools.PlayModeTool
  commentId: T:TinyLife.Tools.PlayModeTool
  parent: TinyLife.Tools
  href: TinyLife.Tools.PlayModeTool.html
  name: PlayModeTool
  nameWithType: PlayModeTool
  fullName: TinyLife.Tools.PlayModeTool
- uid: TinyLife.Tools.Tool.FurnitureTool
  commentId: F:TinyLife.Tools.Tool.FurnitureTool
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_FurnitureTool
  name: FurnitureTool
  nameWithType: Tool.FurnitureTool
  fullName: TinyLife.Tools.Tool.FurnitureTool
- uid: TinyLife.Tools.FurnitureTool
  commentId: T:TinyLife.Tools.FurnitureTool
  parent: TinyLife.Tools
  href: TinyLife.Tools.FurnitureTool.html
  name: FurnitureTool
  nameWithType: FurnitureTool
  fullName: TinyLife.Tools.FurnitureTool
- uid: System.Collections.Generic.List{TinyLife.Tools.Tool}
  commentId: T:System.Collections.Generic.List{TinyLife.Tools.Tool}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Tool>
  nameWithType: List<Tool>
  fullName: System.Collections.Generic.List<TinyLife.Tools.Tool>
  nameWithType.vb: List(Of Tool)
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Tools.Tool)
  name.vb: List(Of Tool)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Tools.Tool.SelectedObject*
  commentId: Overload:TinyLife.Tools.Tool.SelectedObject
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_SelectedObject
  name: SelectedObject
  nameWithType: Tool.SelectedObject
  fullName: TinyLife.Tools.Tool.SelectedObject
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Objects.WallLike
  commentId: T:TinyLife.Objects.WallLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.WallLike.html
  name: WallLike
  nameWithType: WallLike
  fullName: TinyLife.Objects.WallLike
- uid: TinyLife.Tools.Tool.SelectedWall*
  commentId: Overload:TinyLife.Tools.Tool.SelectedWall
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_SelectedWall
  name: SelectedWall
  nameWithType: Tool.SelectedWall
  fullName: TinyLife.Tools.Tool.SelectedWall
- uid: TinyLife.World.Roof
  commentId: T:TinyLife.World.Roof
  parent: TinyLife.World
  href: TinyLife.World.Roof.html
  name: Roof
  nameWithType: Roof
  fullName: TinyLife.World.Roof
- uid: TinyLife.Tools.Tool.SelectedRoof*
  commentId: Overload:TinyLife.Tools.Tool.SelectedRoof
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_SelectedRoof
  name: SelectedRoof
  nameWithType: Tool.SelectedRoof
  fullName: TinyLife.Tools.Tool.SelectedRoof
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.World.Stairs
  commentId: T:TinyLife.World.Stairs
  parent: TinyLife.World
  href: TinyLife.World.Stairs.html
  name: Stairs
  nameWithType: Stairs
  fullName: TinyLife.World.Stairs
- uid: TinyLife.Tools.Tool.SelectedStairs*
  commentId: Overload:TinyLife.Tools.Tool.SelectedStairs
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_SelectedStairs
  name: SelectedStairs
  nameWithType: Tool.SelectedStairs
  fullName: TinyLife.Tools.Tool.SelectedStairs
- uid: TinyLife.Tools.Tool.IsRotateCcwPressed
  commentId: P:TinyLife.Tools.Tool.IsRotateCcwPressed
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_IsRotateCcwPressed
  name: IsRotateCcwPressed
  nameWithType: Tool.IsRotateCcwPressed
  fullName: TinyLife.Tools.Tool.IsRotateCcwPressed
- uid: TinyLife.Tools.Tool.IsRotateCwPressed*
  commentId: Overload:TinyLife.Tools.Tool.IsRotateCwPressed
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_IsRotateCwPressed
  name: IsRotateCwPressed
  nameWithType: Tool.IsRotateCwPressed
  fullName: TinyLife.Tools.Tool.IsRotateCwPressed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Tools.Tool.IsRotateCwPressed
  commentId: P:TinyLife.Tools.Tool.IsRotateCwPressed
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_IsRotateCwPressed
  name: IsRotateCwPressed
  nameWithType: Tool.IsRotateCwPressed
  fullName: TinyLife.Tools.Tool.IsRotateCwPressed
- uid: TinyLife.Tools.Tool.IsRotateCcwPressed*
  commentId: Overload:TinyLife.Tools.Tool.IsRotateCcwPressed
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_IsRotateCcwPressed
  name: IsRotateCcwPressed
  nameWithType: Tool.IsRotateCcwPressed
  fullName: TinyLife.Tools.Tool.IsRotateCcwPressed
- uid: TinyLife.Tools.Tool.IsCopyPressed*
  commentId: Overload:TinyLife.Tools.Tool.IsCopyPressed
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_IsCopyPressed
  name: IsCopyPressed
  nameWithType: Tool.IsCopyPressed
  fullName: TinyLife.Tools.Tool.IsCopyPressed
- uid: TinyLife.Tools.Tool.Opened
  commentId: M:TinyLife.Tools.Tool.Opened
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Opened
  name: Opened()
  nameWithType: Tool.Opened()
  fullName: TinyLife.Tools.Tool.Opened()
  spec.csharp:
  - uid: TinyLife.Tools.Tool.Opened
    name: Opened
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Opened
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.Opened
    name: Opened
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Opened
  - name: (
  - name: )
- uid: System.Action{TinyLife.Tools.Tool}
  commentId: T:System.Action{TinyLife.Tools.Tool}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Tool>
  nameWithType: Action<Tool>
  fullName: System.Action<TinyLife.Tools.Tool>
  nameWithType.vb: Action(Of Tool)
  fullName.vb: System.Action(Of TinyLife.Tools.Tool)
  name.vb: Action(Of Tool)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Tools.Tool.Closed
  commentId: M:TinyLife.Tools.Tool.Closed
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Closed
  name: Closed()
  nameWithType: Tool.Closed()
  fullName: TinyLife.Tools.Tool.Closed()
  spec.csharp:
  - uid: TinyLife.Tools.Tool.Closed
    name: Closed
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Closed
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.Closed
    name: Closed
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Closed
  - name: (
  - name: )
- uid: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime,System.Boolean)
  commentId: M:TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime,System.Boolean)
  parent: TinyLife.Tools.Tool
  isExternal: true
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Update_Microsoft_Xna_Framework_GameTime_System_Boolean_
  name: Update(GameTime, bool)
  nameWithType: Tool.Update(GameTime, bool)
  fullName: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime, bool)
  nameWithType.vb: Tool.Update(GameTime, Boolean)
  fullName.vb: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime, Boolean)
  name.vb: Update(GameTime, Boolean)
  spec.csharp:
  - uid: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime,System.Boolean)
    name: Update
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Update_Microsoft_Xna_Framework_GameTime_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime,System.Boolean)
    name: Update
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Update_Microsoft_Xna_Framework_GameTime_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.GameImpl.IsCursorOnUi
  commentId: M:TinyLife.GameImpl.IsCursorOnUi
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_IsCursorOnUi
  name: IsCursorOnUi()
  nameWithType: GameImpl.IsCursorOnUi()
  fullName: TinyLife.GameImpl.IsCursorOnUi()
  spec.csharp:
  - uid: TinyLife.GameImpl.IsCursorOnUi
    name: IsCursorOnUi
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_IsCursorOnUi
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.GameImpl.IsCursorOnUi
    name: IsCursorOnUi
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_IsCursorOnUi
  - name: (
  - name: )
- uid: System.Action{TinyLife.Tools.Tool,Microsoft.Xna.Framework.GameTime,System.Boolean}
  commentId: T:System.Action{TinyLife.Tools.Tool,Microsoft.Xna.Framework.GameTime,System.Boolean}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<Tool, GameTime, bool>
  nameWithType: Action<Tool, GameTime, bool>
  fullName: System.Action<TinyLife.Tools.Tool, Microsoft.Xna.Framework.GameTime, bool>
  nameWithType.vb: Action(Of Tool, GameTime, Boolean)
  fullName.vb: System.Action(Of TinyLife.Tools.Tool, Microsoft.Xna.Framework.GameTime, Boolean)
  name.vb: Action(Of Tool, GameTime, Boolean)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean)
  commentId: M:TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean)
  parent: TinyLife.Tools.Tool
  isExternal: true
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Boolean_
  name: Draw(GameTime, SpriteBatch, bool)
  nameWithType: Tool.Draw(GameTime, SpriteBatch, bool)
  fullName: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, bool)
  nameWithType.vb: Tool.Draw(GameTime, SpriteBatch, Boolean)
  fullName.vb: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Boolean)
  name.vb: Draw(GameTime, SpriteBatch, Boolean)
  spec.csharp:
  - uid: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean)
    name: Draw
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean)
    name: Draw
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action{TinyLife.Tools.Tool,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean}
  commentId: T:System.Action{TinyLife.Tools.Tool,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean}
  parent: System
  definition: System.Action`4
  href: https://learn.microsoft.com/dotnet/api/system.action-4
  name: Action<Tool, GameTime, SpriteBatch, bool>
  nameWithType: Action<Tool, GameTime, SpriteBatch, bool>
  fullName: System.Action<TinyLife.Tools.Tool, Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, bool>
  nameWithType.vb: Action(Of Tool, GameTime, SpriteBatch, Boolean)
  fullName.vb: System.Action(Of TinyLife.Tools.Tool, Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Boolean)
  name.vb: Action(Of Tool, GameTime, SpriteBatch, Boolean)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: <
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action`4
  commentId: T:System.Action`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-4
  name: Action<T1, T2, T3, T4>
  nameWithType: Action<T1, T2, T3, T4>
  fullName: System.Action<T1, T2, T3, T4>
  nameWithType.vb: Action(Of T1, T2, T3, T4)
  fullName.vb: System.Action(Of T1, T2, T3, T4)
  name.vb: Action(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
- uid: TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
  commentId: M:TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
  parent: TinyLife.Tools.Tool
  isExternal: true
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_InitBuildModeUi_MLEM_Ui_Elements_Panel_MLEM_Ui_Elements_Panel_
  name: InitBuildModeUi(Panel, Panel)
  nameWithType: Tool.InitBuildModeUi(Panel, Panel)
  fullName: TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel, MLEM.Ui.Elements.Panel)
  spec.csharp:
  - uid: TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
    name: InitBuildModeUi
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_InitBuildModeUi_MLEM_Ui_Elements_Panel_MLEM_Ui_Elements_Panel_
  - name: (
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
    name: InitBuildModeUi
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_InitBuildModeUi_MLEM_Ui_Elements_Panel_MLEM_Ui_Elements_Panel_
  - name: (
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: )
- uid: System.Action{TinyLife.Tools.Tool,MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel}
  commentId: T:System.Action{TinyLife.Tools.Tool,MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<Tool, Panel, Panel>
  nameWithType: Action<Tool, Panel, Panel>
  fullName: System.Action<TinyLife.Tools.Tool, MLEM.Ui.Elements.Panel, MLEM.Ui.Elements.Panel>
  nameWithType.vb: Action(Of Tool, Panel, Panel)
  fullName.vb: System.Action(Of TinyLife.Tools.Tool, MLEM.Ui.Elements.Panel, MLEM.Ui.Elements.Panel)
  name.vb: Action(Of Tool, Panel, Panel)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Tools.Tool
    name: Tool
    href: TinyLife.Tools.Tool.html
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: )
- uid: MLEM.Startup.MlemGame.Input
  commentId: P:MLEM.Startup.MlemGame.Input
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: Input
  nameWithType: MlemGame.Input
  fullName: MLEM.Startup.MlemGame.Input
- uid: TinyLife.Tools.Tool.Input*
  commentId: Overload:TinyLife.Tools.Tool.Input
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Input
  name: Input
  nameWithType: Tool.Input
  fullName: TinyLife.Tools.Tool.Input
- uid: MLEM.Input.InputHandler
  commentId: T:MLEM.Input.InputHandler
  parent: MLEM.Input
  isExternal: true
  name: InputHandler
  nameWithType: InputHandler
  fullName: MLEM.Input.InputHandler
- uid: MLEM.Startup.MlemGame
  commentId: T:MLEM.Startup.MlemGame
  parent: MLEM.Startup
  isExternal: true
  name: MlemGame
  nameWithType: MlemGame
  fullName: MLEM.Startup.MlemGame
- uid: MLEM.Input
  commentId: N:MLEM.Input
  isExternal: true
  name: MLEM.Input
  nameWithType: MLEM.Input
  fullName: MLEM.Input
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Input
    name: Input
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Input
    name: Input
    isExternal: true
- uid: MLEM.Startup
  commentId: N:MLEM.Startup
  isExternal: true
  name: MLEM.Startup
  nameWithType: MLEM.Startup
  fullName: MLEM.Startup
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Startup
    name: Startup
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Startup
    name: Startup
    isExternal: true
- uid: TinyLife.GameImpl.Camera
  commentId: P:TinyLife.GameImpl.Camera
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Camera
  name: Camera
  nameWithType: GameImpl.Camera
  fullName: TinyLife.GameImpl.Camera
- uid: TinyLife.Tools.Tool.Map*
  commentId: Overload:TinyLife.Tools.Tool.Map
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Map
  name: Map
  nameWithType: Tool.Map
  fullName: TinyLife.Tools.Tool.Map
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.Tools.Tool.Money*
  commentId: Overload:TinyLife.Tools.Tool.Money
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Money
  name: Money
  nameWithType: Tool.Money
  fullName: TinyLife.Tools.Tool.Money
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Tools.Tool.CurrentFloor*
  commentId: Overload:TinyLife.Tools.Tool.CurrentFloor
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_CurrentFloor
  name: CurrentFloor
  nameWithType: Tool.CurrentFloor
  fullName: TinyLife.Tools.Tool.CurrentFloor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Tools.Tool.#ctor*
  commentId: Overload:TinyLife.Tools.Tool.#ctor
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool__ctor_System_String_MLEM_Textures_TextureRegion_System_Boolean_
  name: Tool
  nameWithType: Tool.Tool
  fullName: TinyLife.Tools.Tool.Tool
  nameWithType.vb: Tool.New
  fullName.vb: TinyLife.Tools.Tool.New
  name.vb: New
- uid: TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  commentId: M:TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  parent: TinyLife.Tools.Tool
  isExternal: true
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_BuildModeButton_System_String_MLEM_Ui_Elements_Element_GenericCallback_MLEM_Ui_Elements_Element_DrawCallback_System_Single_MLEM_Textures_TextureRegion_System_String_System_Collections_Generic_IEnumerable_System_String__System_Nullable_System_Single__
  name: BuildModeButton(string, GenericCallback, DrawCallback, float, TextureRegion, string, IEnumerable<string>, float?)
  nameWithType: Tool.BuildModeButton(string, Element.GenericCallback, Element.DrawCallback, float, TextureRegion, string, IEnumerable<string>, float?)
  fullName: TinyLife.Tools.Tool.BuildModeButton(string, MLEM.Ui.Elements.Element.GenericCallback, MLEM.Ui.Elements.Element.DrawCallback, float, MLEM.Textures.TextureRegion, string, System.Collections.Generic.IEnumerable<string>, float?)
  nameWithType.vb: Tool.BuildModeButton(String, Element.GenericCallback, Element.DrawCallback, Single, TextureRegion, String, IEnumerable(Of String), Single?)
  fullName.vb: TinyLife.Tools.Tool.BuildModeButton(String, MLEM.Ui.Elements.Element.GenericCallback, MLEM.Ui.Elements.Element.DrawCallback, Single, MLEM.Textures.TextureRegion, String, System.Collections.Generic.IEnumerable(Of String), Single?)
  name.vb: BuildModeButton(String, GenericCallback, DrawCallback, Single, TextureRegion, String, IEnumerable(Of String), Single?)
  spec.csharp:
  - uid: TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
    name: BuildModeButton
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_BuildModeButton_System_String_MLEM_Ui_Elements_Element_GenericCallback_MLEM_Ui_Elements_Element_DrawCallback_System_Single_MLEM_Textures_TextureRegion_System_String_System_Collections_Generic_IEnumerable_System_String__System_Nullable_System_Single__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.GenericCallback
    name: GenericCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
    name: BuildModeButton
    href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_BuildModeButton_System_String_MLEM_Ui_Elements_Element_GenericCallback_MLEM_Ui_Elements_Element_DrawCallback_System_Single_MLEM_Textures_TextureRegion_System_String_System_Collections_Generic_IEnumerable_System_String__System_Nullable_System_Single__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.GenericCallback
    name: GenericCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: )
- uid: TinyLife.Tools.Tool.InitBuildModeUi*
  commentId: Overload:TinyLife.Tools.Tool.InitBuildModeUi
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_InitBuildModeUi_MLEM_Ui_Elements_Panel_MLEM_Ui_Elements_Panel_
  name: InitBuildModeUi
  nameWithType: Tool.InitBuildModeUi
  fullName: TinyLife.Tools.Tool.InitBuildModeUi
- uid: MLEM.Ui.Elements.Panel
  commentId: T:MLEM.Ui.Elements.Panel
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Panel
  nameWithType: Panel
  fullName: MLEM.Ui.Elements.Panel
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: TinyLife.Tools.Tool.Opened*
  commentId: Overload:TinyLife.Tools.Tool.Opened
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Opened
  name: Opened
  nameWithType: Tool.Opened
  fullName: TinyLife.Tools.Tool.Opened
- uid: TinyLife.Tools.Tool.Closed*
  commentId: Overload:TinyLife.Tools.Tool.Closed
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Closed
  name: Closed
  nameWithType: Tool.Closed
  fullName: TinyLife.Tools.Tool.Closed
- uid: TinyLife.GameImpl.CurrentTool
  commentId: P:TinyLife.GameImpl.CurrentTool
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentTool
  name: CurrentTool
  nameWithType: GameImpl.CurrentTool
  fullName: TinyLife.GameImpl.CurrentTool
- uid: TinyLife.Tools.Tool.MousePos
  commentId: F:TinyLife.Tools.Tool.MousePos
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_MousePos
  name: MousePos
  nameWithType: Tool.MousePos
  fullName: TinyLife.Tools.Tool.MousePos
- uid: TinyLife.Tools.Tool.OnUpdate
  commentId: E:TinyLife.Tools.Tool.OnUpdate
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_OnUpdate
  name: OnUpdate
  nameWithType: Tool.OnUpdate
  fullName: TinyLife.Tools.Tool.OnUpdate
- uid: TinyLife.Tools.UndoRedoStack
  commentId: T:TinyLife.Tools.UndoRedoStack
  href: TinyLife.Tools.UndoRedoStack.html
  name: UndoRedoStack
  nameWithType: UndoRedoStack
  fullName: TinyLife.Tools.UndoRedoStack
- uid: TinyLife.Tools.Tool.Update*
  commentId: Overload:TinyLife.Tools.Tool.Update
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Update_Microsoft_Xna_Framework_GameTime_System_Boolean_
  name: Update
  nameWithType: Tool.Update
  fullName: TinyLife.Tools.Tool.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: TinyLife.Tools.Tool.OnDraw
  commentId: E:TinyLife.Tools.Tool.OnDraw
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_OnDraw
  name: OnDraw
  nameWithType: Tool.OnDraw
  fullName: TinyLife.Tools.Tool.OnDraw
- uid: TinyLife.Tools.Tool.Draw*
  commentId: Overload:TinyLife.Tools.Tool.Draw
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Boolean_
  name: Draw
  nameWithType: Tool.Draw
  fullName: TinyLife.Tools.Tool.Draw
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: TinyLife.Uis.CursorType
  commentId: T:TinyLife.Uis.CursorType
  parent: TinyLife.Uis
  href: TinyLife.Uis.CursorType.html
  name: CursorType
  nameWithType: CursorType
  fullName: TinyLife.Uis.CursorType
- uid: TinyLife.Uis.CursorType.Default
  commentId: F:TinyLife.Uis.CursorType.Default
  href: TinyLife.Uis.CursorType.html#TinyLife_Uis_CursorType_Default
  name: Default
  nameWithType: CursorType.Default
  fullName: TinyLife.Uis.CursorType.Default
- uid: TinyLife.Tools.Tool.GetMouseCursor*
  commentId: Overload:TinyLife.Tools.Tool.GetMouseCursor
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_GetMouseCursor
  name: GetMouseCursor
  nameWithType: Tool.GetMouseCursor
  fullName: TinyLife.Tools.Tool.GetMouseCursor
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  href: TinyLife.html
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
- uid: TinyLife.Tools.CanPlaceResult
  commentId: T:TinyLife.Tools.CanPlaceResult
  parent: TinyLife.Tools
  href: TinyLife.Tools.CanPlaceResult.html
  name: CanPlaceResult
  nameWithType: CanPlaceResult
  fullName: TinyLife.Tools.CanPlaceResult
- uid: TinyLife.Tools.Tool.CanPlaceForTooltip*
  commentId: Overload:TinyLife.Tools.Tool.CanPlaceForTooltip
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_CanPlaceForTooltip
  name: CanPlaceForTooltip
  nameWithType: Tool.CanPlaceForTooltip
  fullName: TinyLife.Tools.Tool.CanPlaceForTooltip
- uid: TinyLife.GameImpl.CanSwitchGameModes
  commentId: M:TinyLife.GameImpl.CanSwitchGameModes
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CanSwitchGameModes
  name: CanSwitchGameModes()
  nameWithType: GameImpl.CanSwitchGameModes()
  fullName: TinyLife.GameImpl.CanSwitchGameModes()
  spec.csharp:
  - uid: TinyLife.GameImpl.CanSwitchGameModes
    name: CanSwitchGameModes
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_CanSwitchGameModes
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.GameImpl.CanSwitchGameModes
    name: CanSwitchGameModes
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_CanSwitchGameModes
  - name: (
  - name: )
- uid: TinyLife.Tools.Tool.CanSwitchGameModes*
  commentId: Overload:TinyLife.Tools.Tool.CanSwitchGameModes
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_CanSwitchGameModes
  name: CanSwitchGameModes
  nameWithType: Tool.CanSwitchGameModes
  fullName: TinyLife.Tools.Tool.CanSwitchGameModes
- uid: TinyLife.Tools.UndoRedoStack.Undo
  commentId: M:TinyLife.Tools.UndoRedoStack.Undo
  href: TinyLife.Tools.UndoRedoStack.html#TinyLife_Tools_UndoRedoStack_Undo
  name: Undo()
  nameWithType: UndoRedoStack.Undo()
  fullName: TinyLife.Tools.UndoRedoStack.Undo()
  spec.csharp:
  - uid: TinyLife.Tools.UndoRedoStack.Undo
    name: Undo
    href: TinyLife.Tools.UndoRedoStack.html#TinyLife_Tools_UndoRedoStack_Undo
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.UndoRedoStack.Undo
    name: Undo
    href: TinyLife.Tools.UndoRedoStack.html#TinyLife_Tools_UndoRedoStack_Undo
  - name: (
  - name: )
- uid: TinyLife.Tools.UndoRedoStack.Redo
  commentId: M:TinyLife.Tools.UndoRedoStack.Redo
  href: TinyLife.Tools.UndoRedoStack.html#TinyLife_Tools_UndoRedoStack_Redo
  name: Redo()
  nameWithType: UndoRedoStack.Redo()
  fullName: TinyLife.Tools.UndoRedoStack.Redo()
  spec.csharp:
  - uid: TinyLife.Tools.UndoRedoStack.Redo
    name: Redo
    href: TinyLife.Tools.UndoRedoStack.html#TinyLife_Tools_UndoRedoStack_Redo
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.UndoRedoStack.Redo
    name: Redo
    href: TinyLife.Tools.UndoRedoStack.html#TinyLife_Tools_UndoRedoStack_Redo
  - name: (
  - name: )
- uid: TinyLife.Tools.Tool.CanUndoRedo*
  commentId: Overload:TinyLife.Tools.Tool.CanUndoRedo
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_CanUndoRedo_System_Boolean_
  name: CanUndoRedo
  nameWithType: Tool.CanUndoRedo
  fullName: TinyLife.Tools.Tool.CanUndoRedo
- uid: TinyLife.Tools.Tool.ShouldHighlightSelectedObject*
  commentId: Overload:TinyLife.Tools.Tool.ShouldHighlightSelectedObject
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_ShouldHighlightSelectedObject_System_Object_
  name: ShouldHighlightSelectedObject
  nameWithType: Tool.ShouldHighlightSelectedObject
  fullName: TinyLife.Tools.Tool.ShouldHighlightSelectedObject
- uid: TinyLife.Tools.Tool.OnButtonCreated*
  commentId: Overload:TinyLife.Tools.Tool.OnButtonCreated
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_OnButtonCreated_MLEM_Ui_Elements_Button_
  name: OnButtonCreated
  nameWithType: Tool.OnButtonCreated
  fullName: TinyLife.Tools.Tool.OnButtonCreated
- uid: MLEM.Ui.Elements.Button
  commentId: T:MLEM.Ui.Elements.Button
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Button
  nameWithType: Button
  fullName: MLEM.Ui.Elements.Button
- uid: TinyLife.GameImpl.CurrentLot
  commentId: P:TinyLife.GameImpl.CurrentLot
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentLot
  name: CurrentLot
  nameWithType: GameImpl.CurrentLot
  fullName: TinyLife.GameImpl.CurrentLot
- uid: TinyLife.Tools.Tool.IsOnLot*
  commentId: Overload:TinyLife.Tools.Tool.IsOnLot
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_IsOnLot_Microsoft_Xna_Framework_Point_
  name: IsOnLot
  nameWithType: Tool.IsOnLot
  fullName: TinyLife.Tools.Tool.IsOnLot
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: MLEM.Ui.Elements.Group
  commentId: T:MLEM.Ui.Elements.Group
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Group
  nameWithType: Group
  fullName: MLEM.Ui.Elements.Group
- uid: TinyLife.Utilities.ColorSettings.Schemes
  commentId: F:TinyLife.Utilities.ColorSettings.Schemes
  href: TinyLife.Utilities.ColorSettings.html#TinyLife_Utilities_ColorSettings_Schemes
  name: Schemes
  nameWithType: ColorSettings.Schemes
  fullName: TinyLife.Utilities.ColorSettings.Schemes
- uid: TinyLife.Tools.Tool.ColorSelection*
  commentId: Overload:TinyLife.Tools.Tool.ColorSelection
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_ColorSelection_TinyLife_Utilities_ColorSettings_System_Action_System_Int32_System_Int32__System_Func_System_Int32_System_Int32_System_Boolean__TinyLife_LnCategory_
  name: ColorSelection
  nameWithType: Tool.ColorSelection
  fullName: TinyLife.Tools.Tool.ColorSelection
- uid: TinyLife.Utilities.ColorSettings
  commentId: T:TinyLife.Utilities.ColorSettings
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.ColorSettings.html
  name: ColorSettings
  nameWithType: ColorSettings
  fullName: TinyLife.Utilities.ColorSettings
- uid: System.Action{System.Int32,System.Int32}
  commentId: T:System.Action{System.Int32,System.Int32}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<int, int>
  nameWithType: Action<int, int>
  fullName: System.Action<int, int>
  nameWithType.vb: Action(Of Integer, Integer)
  fullName.vb: System.Action(Of Integer, Integer)
  name.vb: Action(Of Integer, Integer)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Func{System.Int32,System.Int32,System.Boolean}
  commentId: T:System.Func{System.Int32,System.Int32,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<int, int, bool>
  nameWithType: Func<int, int, bool>
  fullName: System.Func<int, int, bool>
  nameWithType.vb: Func(Of Integer, Integer, Boolean)
  fullName.vb: System.Func(Of Integer, Integer, Boolean)
  name.vb: Func(Of Integer, Integer, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.LnCategory
  commentId: T:TinyLife.LnCategory
  parent: TinyLife
  href: TinyLife.LnCategory.html
  name: LnCategory
  nameWithType: LnCategory
  fullName: TinyLife.LnCategory
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.Uis.CharacterCreator
  commentId: T:TinyLife.Uis.CharacterCreator
  parent: TinyLife.Uis
  href: TinyLife.Uis.CharacterCreator.html
  name: CharacterCreator
  nameWithType: CharacterCreator
  fullName: TinyLife.Uis.CharacterCreator
- uid: TinyLife.Utilities.ColorScheme
  commentId: T:TinyLife.Utilities.ColorScheme
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.ColorScheme.html
  name: ColorScheme
  nameWithType: ColorScheme
  fullName: TinyLife.Utilities.ColorScheme
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: System.Action{System.Int32}
  commentId: T:System.Action{System.Int32}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<int>
  nameWithType: Action<int>
  fullName: System.Action<int>
  nameWithType.vb: Action(Of Integer)
  fullName.vb: System.Action(Of Integer)
  name.vb: Action(Of Integer)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Func{System.Int32,System.Boolean}
  commentId: T:System.Func{System.Int32,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<int, bool>
  nameWithType: Func<int, bool>
  fullName: System.Func<int, bool>
  nameWithType.vb: Func(Of Integer, Boolean)
  fullName.vb: System.Func(Of Integer, Boolean)
  name.vb: Func(Of Integer, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Tools.Tool.BuildModeButton*
  commentId: Overload:TinyLife.Tools.Tool.BuildModeButton
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_BuildModeButton_System_String_MLEM_Ui_Elements_Element_GenericCallback_MLEM_Ui_Elements_Element_DrawCallback_System_Single_MLEM_Textures_TextureRegion_System_String_System_Collections_Generic_IEnumerable_System_String__System_Nullable_System_Single__
  name: BuildModeButton
  nameWithType: Tool.BuildModeButton
  fullName: TinyLife.Tools.Tool.BuildModeButton
- uid: MLEM.Ui.Elements.Element.GenericCallback
  commentId: T:MLEM.Ui.Elements.Element.GenericCallback
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element.GenericCallback
  nameWithType: Element.GenericCallback
  fullName: MLEM.Ui.Elements.Element.GenericCallback
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements.Element.GenericCallback
    name: GenericCallback
    isExternal: true
  spec.vb:
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements.Element.GenericCallback
    name: GenericCallback
    isExternal: true
- uid: MLEM.Ui.Elements.Element.DrawCallback
  commentId: T:MLEM.Ui.Elements.Element.DrawCallback
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element.DrawCallback
  nameWithType: Element.DrawCallback
  fullName: MLEM.Ui.Elements.Element.DrawCallback
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
  spec.vb:
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Options.SeenObjects
  commentId: F:TinyLife.Options.SeenObjects
  href: TinyLife.Options.html#TinyLife_Options_SeenObjects
  name: SeenObjects
  nameWithType: Options.SeenObjects
  fullName: TinyLife.Options.SeenObjects
- uid: System.Collections.Generic.IEnumerable{MLEM.Textures.TextureRegion}
  commentId: T:System.Collections.Generic.IEnumerable{MLEM.Textures.TextureRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TextureRegion>
  nameWithType: IEnumerable<TextureRegion>
  fullName: System.Collections.Generic.IEnumerable<MLEM.Textures.TextureRegion>
  nameWithType.vb: IEnumerable(Of TextureRegion)
  fullName.vb: System.Collections.Generic.IEnumerable(Of MLEM.Textures.TextureRegion)
  name.vb: IEnumerable(Of TextureRegion)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: TinyLife.Uis.InGameUi.BuildContent
  commentId: P:TinyLife.Uis.InGameUi.BuildContent
  href: TinyLife.Uis.InGameUi.html#TinyLife_Uis_InGameUi_BuildContent
  name: BuildContent
  nameWithType: InGameUi.BuildContent
  fullName: TinyLife.Uis.InGameUi.BuildContent
- uid: TinyLife.Tools.Tool.SelectFirstContentItem*
  commentId: Overload:TinyLife.Tools.Tool.SelectFirstContentItem
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_SelectFirstContentItem
  name: SelectFirstContentItem
  nameWithType: Tool.SelectFirstContentItem
  fullName: TinyLife.Tools.Tool.SelectFirstContentItem
