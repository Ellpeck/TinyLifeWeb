### YamlMime:ManagedReference
items:
- uid: TinyLife.Uis.Notifications
  commentId: T:TinyLife.Uis.Notifications
  id: Notifications
  parent: TinyLife.Uis
  children:
  - TinyLife.Uis.Notifications.AchievementIcon
  - TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  - TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon,System.String,TinyLife.Uis.NotifType,System.Boolean)
  - TinyLife.Uis.Notifications.BillsIcon
  - TinyLife.Uis.Notifications.CheatsIcon
  - TinyLife.Uis.Notifications.DeathIcon
  - TinyLife.Uis.Notifications.DebugIcon
  - TinyLife.Uis.Notifications.ErrorIcon
  - TinyLife.Uis.Notifications.Icons
  - TinyLife.Uis.Notifications.JobIcon
  - TinyLife.Uis.Notifications.MailIcon
  - TinyLife.Uis.Notifications.MaxHistoryLength
  - TinyLife.Uis.Notifications.NewspaperIcon
  - TinyLife.Uis.Notifications.RegisterIcon(System.String,MLEM.Textures.TextureRegion)
  - TinyLife.Uis.Notifications.RestoreIcon
  - TinyLife.Uis.Notifications.SkillIcons
  - TinyLife.Uis.Notifications.SpeechIcon
  - TinyLife.Uis.Notifications.SteamIcon
  - TinyLife.Uis.Notifications.UpgradeIcon
  - TinyLife.Uis.Notifications.WrenchIcon
  langs:
  - csharp
  - vb
  name: Notifications
  nameWithType: Notifications
  fullName: TinyLife.Uis.Notifications
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: >-
    This class holds information about the current and past notifications that are displayed in the top center of the screen.

    To create custom notifications, use <xref href="TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject%2cSystem.String%2cTinyLife.Uis.NotifType%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon%2cSystem.String%2cTinyLife.Uis.NotifType%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class Notifications
    content.vb: Public Module Notifications
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TinyLife.Uis.Notifications.MaxHistoryLength
  commentId: F:TinyLife.Uis.Notifications.MaxHistoryLength
  id: MaxHistoryLength
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: MaxHistoryLength
  nameWithType: Notifications.MaxHistoryLength
  fullName: TinyLife.Uis.Notifications.MaxHistoryLength
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: The maximum amount of entries that can be in the notification history before the oldest entries start being deleted.
  example: []
  syntax:
    content: public const int MaxHistoryLength = 1024
    return:
      type: System.Int32
    content.vb: Public Const MaxHistoryLength As Integer = 1024
- uid: TinyLife.Uis.Notifications.Icons
  commentId: F:TinyLife.Uis.Notifications.Icons
  id: Icons
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: Icons
  nameWithType: Notifications.Icons
  fullName: TinyLife.Uis.Notifications.Icons
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: The registry of icons registered using <xref href="TinyLife.Uis.Notifications.RegisterIcon(System.String%2cMLEM.Textures.TextureRegion)" data-throw-if-not-resolved="false"></xref>. Can be used to gather modded icons for display in <xref href="TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon%2cSystem.String%2cTinyLife.Uis.NotifType%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, Notifications.Icon> Icons
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Uis.Notifications.Icon}
    content.vb: Public Shared ReadOnly Icons As ReadOnlyDictionary(Of String, Notifications.Icon)
- uid: TinyLife.Uis.Notifications.CheatsIcon
  commentId: F:TinyLife.Uis.Notifications.CheatsIcon
  id: CheatsIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: CheatsIcon
  nameWithType: Notifications.CheatsIcon
  fullName: TinyLife.Uis.Notifications.CheatsIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon CheatsIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly CheatsIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.DebugIcon
  commentId: F:TinyLife.Uis.Notifications.DebugIcon
  id: DebugIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: DebugIcon
  nameWithType: Notifications.DebugIcon
  fullName: TinyLife.Uis.Notifications.DebugIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon DebugIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly DebugIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.ErrorIcon
  commentId: F:TinyLife.Uis.Notifications.ErrorIcon
  id: ErrorIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: ErrorIcon
  nameWithType: Notifications.ErrorIcon
  fullName: TinyLife.Uis.Notifications.ErrorIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon ErrorIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly ErrorIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.MailIcon
  commentId: F:TinyLife.Uis.Notifications.MailIcon
  id: MailIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: MailIcon
  nameWithType: Notifications.MailIcon
  fullName: TinyLife.Uis.Notifications.MailIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon MailIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly MailIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.JobIcon
  commentId: F:TinyLife.Uis.Notifications.JobIcon
  id: JobIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: JobIcon
  nameWithType: Notifications.JobIcon
  fullName: TinyLife.Uis.Notifications.JobIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon JobIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly JobIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.NewspaperIcon
  commentId: F:TinyLife.Uis.Notifications.NewspaperIcon
  id: NewspaperIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: NewspaperIcon
  nameWithType: Notifications.NewspaperIcon
  fullName: TinyLife.Uis.Notifications.NewspaperIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon NewspaperIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly NewspaperIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.BillsIcon
  commentId: F:TinyLife.Uis.Notifications.BillsIcon
  id: BillsIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: BillsIcon
  nameWithType: Notifications.BillsIcon
  fullName: TinyLife.Uis.Notifications.BillsIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon BillsIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly BillsIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.AchievementIcon
  commentId: F:TinyLife.Uis.Notifications.AchievementIcon
  id: AchievementIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: AchievementIcon
  nameWithType: Notifications.AchievementIcon
  fullName: TinyLife.Uis.Notifications.AchievementIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon AchievementIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly AchievementIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.DeathIcon
  commentId: F:TinyLife.Uis.Notifications.DeathIcon
  id: DeathIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: DeathIcon
  nameWithType: Notifications.DeathIcon
  fullName: TinyLife.Uis.Notifications.DeathIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon DeathIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly DeathIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.SteamIcon
  commentId: F:TinyLife.Uis.Notifications.SteamIcon
  id: SteamIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: SteamIcon
  nameWithType: Notifications.SteamIcon
  fullName: TinyLife.Uis.Notifications.SteamIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon SteamIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly SteamIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.WrenchIcon
  commentId: F:TinyLife.Uis.Notifications.WrenchIcon
  id: WrenchIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: WrenchIcon
  nameWithType: Notifications.WrenchIcon
  fullName: TinyLife.Uis.Notifications.WrenchIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon WrenchIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly WrenchIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.UpgradeIcon
  commentId: F:TinyLife.Uis.Notifications.UpgradeIcon
  id: UpgradeIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: UpgradeIcon
  nameWithType: Notifications.UpgradeIcon
  fullName: TinyLife.Uis.Notifications.UpgradeIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon UpgradeIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly UpgradeIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.SpeechIcon
  commentId: F:TinyLife.Uis.Notifications.SpeechIcon
  id: SpeechIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: SpeechIcon
  nameWithType: Notifications.SpeechIcon
  fullName: TinyLife.Uis.Notifications.SpeechIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon SpeechIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly SpeechIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.RestoreIcon
  commentId: F:TinyLife.Uis.Notifications.RestoreIcon
  id: RestoreIcon
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: RestoreIcon
  nameWithType: Notifications.RestoreIcon
  fullName: TinyLife.Uis.Notifications.RestoreIcon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly Notifications.Icon RestoreIcon
    return:
      type: TinyLife.Uis.Notifications.Icon
    content.vb: Public Shared ReadOnly RestoreIcon As Notifications.Icon
- uid: TinyLife.Uis.Notifications.SkillIcons
  commentId: P:TinyLife.Uis.Notifications.SkillIcons
  id: SkillIcons
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: SkillIcons
  nameWithType: Notifications.SkillIcons
  fullName: TinyLife.Uis.Notifications.SkillIcons
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static Dictionary<SkillType, Notifications.Icon> SkillIcons { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{TinyLife.Skills.SkillType,TinyLife.Uis.Notifications.Icon}
    content.vb: Public Shared Property SkillIcons As Dictionary(Of SkillType, Notifications.Icon)
  overload: TinyLife.Uis.Notifications.SkillIcons*
- uid: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  commentId: M:TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  id: Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: Add(MapObject, string, NotifType, bool)
  nameWithType: Notifications.Add(MapObject, string, NotifType, bool)
  fullName: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject, string, TinyLife.Uis.NotifType, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: >-
    Adds a new notification related to the given map object.

    The passed object is also the one that will be displayed in the notification.
  example: []
  syntax:
    content: public static void Add(MapObject obj, string content, NotifType type = NotifType.Info, bool center = false)
    parameters:
    - id: obj
      type: TinyLife.Objects.MapObject
      description: The map object that this notification relates to
    - id: content
      type: System.String
      description: The content of the notification. Should be localized using <xref href="TinyLife.Localization" data-throw-if-not-resolved="false"></xref>
    - id: type
      type: TinyLife.Uis.NotifType
      description: The type that this notification should have, which determines the color of its background
    - id: center
      type: System.Boolean
      description: Whether the notification should be displayed as a splash notification in the center of the screen, rather than in the notification area on the side.
    content.vb: Public Shared Sub Add(obj As MapObject, content As String, type As NotifType = NotifType.Info, center As Boolean = False)
  overload: TinyLife.Uis.Notifications.Add*
  nameWithType.vb: Notifications.Add(MapObject, String, NotifType, Boolean)
  fullName.vb: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject, String, TinyLife.Uis.NotifType, Boolean)
  name.vb: Add(MapObject, String, NotifType, Boolean)
- uid: TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon,System.String,TinyLife.Uis.NotifType,System.Boolean)
  commentId: M:TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon,System.String,TinyLife.Uis.NotifType,System.Boolean)
  id: Add(TinyLife.Uis.Notifications.Icon,System.String,TinyLife.Uis.NotifType,System.Boolean)
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: Add(Icon, string, NotifType, bool)
  nameWithType: Notifications.Add(Notifications.Icon, string, NotifType, bool)
  fullName: TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon, string, TinyLife.Uis.NotifType, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: >-
    Adds a new notification related to nothing.

    The passed icon is displayed instead of an object.
  example: []
  syntax:
    content: public static void Add(Notifications.Icon icon, string content, NotifType type = NotifType.Info, bool center = false)
    parameters:
    - id: icon
      type: TinyLife.Uis.Notifications.Icon
      description: The icon that should be displayed in the notification
    - id: content
      type: System.String
      description: The content of the notification. Should be localized using <xref href="TinyLife.Localization" data-throw-if-not-resolved="false"></xref>
    - id: type
      type: TinyLife.Uis.NotifType
      description: The type that this notification should have, which determines the color of its background
    - id: center
      type: System.Boolean
      description: Whether the notification should be displayed as a splash notification in the center of the screen, rather than in the notification area on the side.
    content.vb: Public Shared Sub Add(icon As Notifications.Icon, content As String, type As NotifType = NotifType.Info, center As Boolean = False)
  overload: TinyLife.Uis.Notifications.Add*
  nameWithType.vb: Notifications.Add(Notifications.Icon, String, NotifType, Boolean)
  fullName.vb: TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon, String, TinyLife.Uis.NotifType, Boolean)
  name.vb: Add(Icon, String, NotifType, Boolean)
- uid: TinyLife.Uis.Notifications.RegisterIcon(System.String,MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.Uis.Notifications.RegisterIcon(System.String,MLEM.Textures.TextureRegion)
  id: RegisterIcon(System.String,MLEM.Textures.TextureRegion)
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: RegisterIcon(string, TextureRegion)
  nameWithType: Notifications.RegisterIcon(string, TextureRegion)
  fullName: TinyLife.Uis.Notifications.RegisterIcon(string, MLEM.Textures.TextureRegion)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: >-
    Registers an icon that can be used as a notification icon in <xref href="TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon%2cSystem.String%2cTinyLife.Uis.NotifType%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    Icons are registered so that notification instances remember them when the game is closed and loaded again.
  example: []
  syntax:
    content: public static Notifications.Icon RegisterIcon(string name, TextureRegion texture)
    parameters:
    - id: name
      type: System.String
      description: The name of the icon to register.
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The texture that the icon should display.
    return:
      type: TinyLife.Uis.Notifications.Icon
      description: The <code class="paramref">name</code>, for registering and immediately storing in a variable.
    content.vb: Public Shared Function RegisterIcon(name As String, texture As TextureRegion) As Notifications.Icon
  overload: TinyLife.Uis.Notifications.RegisterIcon*
  nameWithType.vb: Notifications.RegisterIcon(String, TextureRegion)
  fullName.vb: TinyLife.Uis.Notifications.RegisterIcon(String, MLEM.Textures.TextureRegion)
  name.vb: RegisterIcon(String, TextureRegion)
references:
- uid: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  commentId: M:TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  isExternal: true
  href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_TinyLife_Objects_MapObject_System_String_TinyLife_Uis_NotifType_System_Boolean_
  name: Add(MapObject, string, NotifType, bool)
  nameWithType: Notifications.Add(MapObject, string, NotifType, bool)
  fullName: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject, string, TinyLife.Uis.NotifType, bool)
  nameWithType.vb: Notifications.Add(MapObject, String, NotifType, Boolean)
  fullName.vb: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject, String, TinyLife.Uis.NotifType, Boolean)
  name.vb: Add(MapObject, String, NotifType, Boolean)
  spec.csharp:
  - uid: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
    name: Add
    href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_TinyLife_Objects_MapObject_System_String_TinyLife_Uis_NotifType_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
    name: Add
    href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_TinyLife_Objects_MapObject_System_String_TinyLife_Uis_NotifType_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon,System.String,TinyLife.Uis.NotifType,System.Boolean)
  commentId: M:TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon,System.String,TinyLife.Uis.NotifType,System.Boolean)
  isExternal: true
  href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_TinyLife_Uis_Notifications_Icon_System_String_TinyLife_Uis_NotifType_System_Boolean_
  name: Add(Icon, string, NotifType, bool)
  nameWithType: Notifications.Add(Notifications.Icon, string, NotifType, bool)
  fullName: TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon, string, TinyLife.Uis.NotifType, bool)
  nameWithType.vb: Notifications.Add(Notifications.Icon, String, NotifType, Boolean)
  fullName.vb: TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon, String, TinyLife.Uis.NotifType, Boolean)
  name.vb: Add(Icon, String, NotifType, Boolean)
  spec.csharp:
  - uid: TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon,System.String,TinyLife.Uis.NotifType,System.Boolean)
    name: Add
    href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_TinyLife_Uis_Notifications_Icon_System_String_TinyLife_Uis_NotifType_System_Boolean_
  - name: (
  - uid: TinyLife.Uis.Notifications.Icon
    name: Icon
    href: TinyLife.Uis.Notifications.Icon.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.Notifications.Add(TinyLife.Uis.Notifications.Icon,System.String,TinyLife.Uis.NotifType,System.Boolean)
    name: Add
    href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_TinyLife_Uis_Notifications_Icon_System_String_TinyLife_Uis_NotifType_System_Boolean_
  - name: (
  - uid: TinyLife.Uis.Notifications.Icon
    name: Icon
    href: TinyLife.Uis.Notifications.Icon.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  href: TinyLife.html
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Uis.Notifications.RegisterIcon(System.String,MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.Uis.Notifications.RegisterIcon(System.String,MLEM.Textures.TextureRegion)
  isExternal: true
  href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_RegisterIcon_System_String_MLEM_Textures_TextureRegion_
  name: RegisterIcon(string, TextureRegion)
  nameWithType: Notifications.RegisterIcon(string, TextureRegion)
  fullName: TinyLife.Uis.Notifications.RegisterIcon(string, MLEM.Textures.TextureRegion)
  nameWithType.vb: Notifications.RegisterIcon(String, TextureRegion)
  fullName.vb: TinyLife.Uis.Notifications.RegisterIcon(String, MLEM.Textures.TextureRegion)
  name.vb: RegisterIcon(String, TextureRegion)
  spec.csharp:
  - uid: TinyLife.Uis.Notifications.RegisterIcon(System.String,MLEM.Textures.TextureRegion)
    name: RegisterIcon
    href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_RegisterIcon_System_String_MLEM_Textures_TextureRegion_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.Notifications.RegisterIcon(System.String,MLEM.Textures.TextureRegion)
    name: RegisterIcon
    href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_RegisterIcon_System_String_MLEM_Textures_TextureRegion_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Uis.Notifications.Icon}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Uis.Notifications.Icon}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, Notifications.Icon>
  nameWithType: ReadOnlyDictionary<string, Notifications.Icon>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Uis.Notifications.Icon>
  nameWithType.vb: ReadOnlyDictionary(Of String, Notifications.Icon)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Uis.Notifications.Icon)
  name.vb: ReadOnlyDictionary(Of String, Notifications.Icon)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Notifications
    name: Notifications
    href: TinyLife.Uis.Notifications.html
  - name: .
  - uid: TinyLife.Uis.Notifications.Icon
    name: Icon
    href: TinyLife.Uis.Notifications.Icon.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Notifications
    name: Notifications
    href: TinyLife.Uis.Notifications.html
  - name: .
  - uid: TinyLife.Uis.Notifications.Icon
    name: Icon
    href: TinyLife.Uis.Notifications.Icon.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.Uis.Notifications.Icon
  commentId: T:TinyLife.Uis.Notifications.Icon
  parent: TinyLife.Uis
  href: TinyLife.Uis.Notifications.html
  name: Notifications.Icon
  nameWithType: Notifications.Icon
  fullName: TinyLife.Uis.Notifications.Icon
  spec.csharp:
  - uid: TinyLife.Uis.Notifications
    name: Notifications
    href: TinyLife.Uis.Notifications.html
  - name: .
  - uid: TinyLife.Uis.Notifications.Icon
    name: Icon
    href: TinyLife.Uis.Notifications.Icon.html
  spec.vb:
  - uid: TinyLife.Uis.Notifications
    name: Notifications
    href: TinyLife.Uis.Notifications.html
  - name: .
  - uid: TinyLife.Uis.Notifications.Icon
    name: Icon
    href: TinyLife.Uis.Notifications.Icon.html
- uid: TinyLife.Uis.Notifications.SkillIcons*
  commentId: Overload:TinyLife.Uis.Notifications.SkillIcons
  href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_SkillIcons
  name: SkillIcons
  nameWithType: Notifications.SkillIcons
  fullName: TinyLife.Uis.Notifications.SkillIcons
- uid: System.Collections.Generic.Dictionary{TinyLife.Skills.SkillType,TinyLife.Uis.Notifications.Icon}
  commentId: T:System.Collections.Generic.Dictionary{TinyLife.Skills.SkillType,TinyLife.Uis.Notifications.Icon}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<SkillType, Notifications.Icon>
  nameWithType: Dictionary<SkillType, Notifications.Icon>
  fullName: System.Collections.Generic.Dictionary<TinyLife.Skills.SkillType, TinyLife.Uis.Notifications.Icon>
  nameWithType.vb: Dictionary(Of SkillType, Notifications.Icon)
  fullName.vb: System.Collections.Generic.Dictionary(Of TinyLife.Skills.SkillType, TinyLife.Uis.Notifications.Icon)
  name.vb: Dictionary(Of SkillType, Notifications.Icon)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Notifications
    name: Notifications
    href: TinyLife.Uis.Notifications.html
  - name: .
  - uid: TinyLife.Uis.Notifications.Icon
    name: Icon
    href: TinyLife.Uis.Notifications.Icon.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Notifications
    name: Notifications
    href: TinyLife.Uis.Notifications.html
  - name: .
  - uid: TinyLife.Uis.Notifications.Icon
    name: Icon
    href: TinyLife.Uis.Notifications.Icon.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Localization
  commentId: T:TinyLife.Localization
  href: TinyLife.Localization.html
  name: Localization
  nameWithType: Localization
  fullName: TinyLife.Localization
- uid: TinyLife.Uis.Notifications.Add*
  commentId: Overload:TinyLife.Uis.Notifications.Add
  href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_TinyLife_Objects_MapObject_System_String_TinyLife_Uis_NotifType_System_Boolean_
  name: Add
  nameWithType: Notifications.Add
  fullName: TinyLife.Uis.Notifications.Add
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Uis.NotifType
  commentId: T:TinyLife.Uis.NotifType
  parent: TinyLife.Uis
  href: TinyLife.Uis.NotifType.html
  name: NotifType
  nameWithType: NotifType
  fullName: TinyLife.Uis.NotifType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Uis.Notifications.RegisterIcon*
  commentId: Overload:TinyLife.Uis.Notifications.RegisterIcon
  href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_RegisterIcon_System_String_MLEM_Textures_TextureRegion_
  name: RegisterIcon
  nameWithType: Notifications.RegisterIcon
  fullName: TinyLife.Uis.Notifications.RegisterIcon
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
