### YamlMime:ManagedReference
items:
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  id: SkillType
  parent: TinyLife.Skills
  children:
  - TinyLife.Skills.SkillType.#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,TinyLife.Skills.SkillCategory)
  - TinyLife.Skills.SkillType.AdditionalEarnedActions
  - TinyLife.Skills.SkillType.AllCategories
  - TinyLife.Skills.SkillType.Baking
  - TinyLife.Skills.SkillType.Categories
  - TinyLife.Skills.SkillType.Charisma
  - TinyLife.Skills.SkillType.Cleaning
  - TinyLife.Skills.SkillType.Communication
  - TinyLife.Skills.SkillType.Cooking
  - TinyLife.Skills.SkillType.DrinkMixing
  - TinyLife.Skills.SkillType.Fitness
  - TinyLife.Skills.SkillType.Gaming
  - TinyLife.Skills.SkillType.GetMaxLevel(TinyLife.Objects.AgeGroup)
  - TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
  - TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Skills.SkillType.Humor
  - TinyLife.Skills.SkillType.MaxLevel
  - TinyLife.Skills.SkillType.MaxLevelMultipliers
  - TinyLife.Skills.SkillType.Name
  - TinyLife.Skills.SkillType.OnGetRandomQuality
  - TinyLife.Skills.SkillType.OnRandomQuality
  - TinyLife.Skills.SkillType.Painting
  - TinyLife.Skills.SkillType.Potty
  - TinyLife.Skills.SkillType.Programming
  - TinyLife.Skills.SkillType.Reading
  - TinyLife.Skills.SkillType.Reasoning
  - TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
  - TinyLife.Skills.SkillType.Repair
  - TinyLife.Skills.SkillType.RequiredAges
  - TinyLife.Skills.SkillType.RequiredPersonType
  - TinyLife.Skills.SkillType.RewardPersonality
  - TinyLife.Skills.SkillType.RewardSkills
  - TinyLife.Skills.SkillType.Texture
  - TinyLife.Skills.SkillType.Tinkering
  - TinyLife.Skills.SkillType.Types
  - TinyLife.Skills.SkillType.Woodworking
  - TinyLife.Skills.SkillType.Writing
  langs:
  - csharp
  - vb
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    A skill is an ability that a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> can have which influences their behavior in some way.

    The SkillType class contains underlying data for a <xref href="TinyLife.Skills.Skill" data-throw-if-not-resolved="false"></xref> instance, like its name and maximum level.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(MigratingStaticJsonConverter<SkillType>), new object[] { typeof(SkillType), "PrivateTypes", true })]

      public class SkillType
    content.vb: >-
      <JsonConverter(GetType(MigratingStaticJsonConverter(Of SkillType)), New Object() { GetType(SkillType), "PrivateTypes", True })>

      Public Class SkillType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Skills.SkillType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Skills.SkillType.AllCategories
  commentId: F:TinyLife.Skills.SkillType.AllCategories
  id: AllCategories
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: AllCategories
  nameWithType: SkillType.AllCategories
  fullName: TinyLife.Skills.SkillType.AllCategories
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: An array containing every defined <xref href="TinyLife.Skills.SkillCategory" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static readonly SkillCategory[] AllCategories
    return:
      type: TinyLife.Skills.SkillCategory[]
    content.vb: Public Shared ReadOnly AllCategories As SkillCategory()
- uid: TinyLife.Skills.SkillType.OnGetRandomQuality
  commentId: E:TinyLife.Skills.SkillType.OnGetRandomQuality
  id: OnGetRandomQuality
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: OnGetRandomQuality
  nameWithType: SkillType.OnGetRandomQuality
  fullName: TinyLife.Skills.SkillType.OnGetRandomQuality
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: An event that is raised in <xref href="TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike%2cSystem.Random%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static event Action<(PersonLike Person, ActionInfo Info, SkillType Skill, Random Random, bool AlwaysAllowAverage, Dictionary<Quality, float> Weights)> OnGetRandomQuality
    return:
      type: System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}}
    content.vb: Public Shared Event OnGetRandomQuality As Action(Of (Person As PersonLike, Info As ActionInfo, Skill As SkillType, Random As Random, AlwaysAllowAverage As Boolean, Weights As Dictionary(Of Quality, Single)))
- uid: TinyLife.Skills.SkillType.OnRandomQuality
  commentId: E:TinyLife.Skills.SkillType.OnRandomQuality
  id: OnRandomQuality
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: OnRandomQuality
  nameWithType: SkillType.OnRandomQuality
  fullName: TinyLife.Skills.SkillType.OnRandomQuality
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: An event that is raised in <xref href="TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike%2cSystem.Random%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean%2cTinyLife.Emotions.IEmotionSource%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> after a quality is chosen.
  example: []
  syntax:
    content: public static event Action<(PersonLike Person, ActionInfo Info, SkillType Skill, bool ModifyEmotions, IEmotionSource Source, Quality Quality)> OnRandomQuality
    return:
      type: System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}}
    content.vb: Public Shared Event OnRandomQuality As Action(Of (Person As PersonLike, Info As ActionInfo, Skill As SkillType, ModifyEmotions As Boolean, Source As IEmotionSource, Quality As Quality))
- uid: TinyLife.Skills.SkillType.Types
  commentId: F:TinyLife.Skills.SkillType.Types
  id: Types
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: SkillType.Types
  fullName: TinyLife.Skills.SkillType.Types
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    A registry of all skill types that exist in the game and mods.

    Use <xref href="TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)" data-throw-if-not-resolved="false"></xref> to register custom skill types.
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, SkillType> Types
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Skills.SkillType}
    content.vb: Public Shared ReadOnly Types As ReadOnlyDictionary(Of String, SkillType)
- uid: TinyLife.Skills.SkillType.Cooking
  commentId: F:TinyLife.Skills.SkillType.Cooking
  id: Cooking
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Cooking
  nameWithType: SkillType.Cooking
  fullName: TinyLife.Skills.SkillType.Cooking
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Cooking
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Cooking As SkillType
- uid: TinyLife.Skills.SkillType.Painting
  commentId: F:TinyLife.Skills.SkillType.Painting
  id: Painting
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Painting
  nameWithType: SkillType.Painting
  fullName: TinyLife.Skills.SkillType.Painting
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Painting
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Painting As SkillType
- uid: TinyLife.Skills.SkillType.Charisma
  commentId: F:TinyLife.Skills.SkillType.Charisma
  id: Charisma
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Charisma
  nameWithType: SkillType.Charisma
  fullName: TinyLife.Skills.SkillType.Charisma
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Charisma
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Charisma As SkillType
- uid: TinyLife.Skills.SkillType.Humor
  commentId: F:TinyLife.Skills.SkillType.Humor
  id: Humor
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Humor
  nameWithType: SkillType.Humor
  fullName: TinyLife.Skills.SkillType.Humor
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Humor
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Humor As SkillType
- uid: TinyLife.Skills.SkillType.Programming
  commentId: F:TinyLife.Skills.SkillType.Programming
  id: Programming
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Programming
  nameWithType: SkillType.Programming
  fullName: TinyLife.Skills.SkillType.Programming
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Programming
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Programming As SkillType
- uid: TinyLife.Skills.SkillType.Repair
  commentId: F:TinyLife.Skills.SkillType.Repair
  id: Repair
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Repair
  nameWithType: SkillType.Repair
  fullName: TinyLife.Skills.SkillType.Repair
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Repair
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Repair As SkillType
- uid: TinyLife.Skills.SkillType.Writing
  commentId: F:TinyLife.Skills.SkillType.Writing
  id: Writing
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Writing
  nameWithType: SkillType.Writing
  fullName: TinyLife.Skills.SkillType.Writing
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Writing
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Writing As SkillType
- uid: TinyLife.Skills.SkillType.Gaming
  commentId: F:TinyLife.Skills.SkillType.Gaming
  id: Gaming
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Gaming
  nameWithType: SkillType.Gaming
  fullName: TinyLife.Skills.SkillType.Gaming
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Gaming
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Gaming As SkillType
- uid: TinyLife.Skills.SkillType.Fitness
  commentId: F:TinyLife.Skills.SkillType.Fitness
  id: Fitness
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Fitness
  nameWithType: SkillType.Fitness
  fullName: TinyLife.Skills.SkillType.Fitness
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Fitness
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Fitness As SkillType
- uid: TinyLife.Skills.SkillType.Cleaning
  commentId: F:TinyLife.Skills.SkillType.Cleaning
  id: Cleaning
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Cleaning
  nameWithType: SkillType.Cleaning
  fullName: TinyLife.Skills.SkillType.Cleaning
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Cleaning
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Cleaning As SkillType
- uid: TinyLife.Skills.SkillType.Baking
  commentId: F:TinyLife.Skills.SkillType.Baking
  id: Baking
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Baking
  nameWithType: SkillType.Baking
  fullName: TinyLife.Skills.SkillType.Baking
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Baking
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Baking As SkillType
- uid: TinyLife.Skills.SkillType.Reasoning
  commentId: F:TinyLife.Skills.SkillType.Reasoning
  id: Reasoning
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Reasoning
  nameWithType: SkillType.Reasoning
  fullName: TinyLife.Skills.SkillType.Reasoning
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Reasoning
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Reasoning As SkillType
- uid: TinyLife.Skills.SkillType.Woodworking
  commentId: F:TinyLife.Skills.SkillType.Woodworking
  id: Woodworking
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Woodworking
  nameWithType: SkillType.Woodworking
  fullName: TinyLife.Skills.SkillType.Woodworking
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Woodworking
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Woodworking As SkillType
- uid: TinyLife.Skills.SkillType.DrinkMixing
  commentId: F:TinyLife.Skills.SkillType.DrinkMixing
  id: DrinkMixing
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: DrinkMixing
  nameWithType: SkillType.DrinkMixing
  fullName: TinyLife.Skills.SkillType.DrinkMixing
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType DrinkMixing
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly DrinkMixing As SkillType
- uid: TinyLife.Skills.SkillType.Tinkering
  commentId: F:TinyLife.Skills.SkillType.Tinkering
  id: Tinkering
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Tinkering
  nameWithType: SkillType.Tinkering
  fullName: TinyLife.Skills.SkillType.Tinkering
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Tinkering
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Tinkering As SkillType
- uid: TinyLife.Skills.SkillType.Reading
  commentId: F:TinyLife.Skills.SkillType.Reading
  id: Reading
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Reading
  nameWithType: SkillType.Reading
  fullName: TinyLife.Skills.SkillType.Reading
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Reading
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Reading As SkillType
- uid: TinyLife.Skills.SkillType.Communication
  commentId: F:TinyLife.Skills.SkillType.Communication
  id: Communication
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Communication
  nameWithType: SkillType.Communication
  fullName: TinyLife.Skills.SkillType.Communication
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Communication
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Communication As SkillType
- uid: TinyLife.Skills.SkillType.Potty
  commentId: F:TinyLife.Skills.SkillType.Potty
  id: Potty
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Potty
  nameWithType: SkillType.Potty
  fullName: TinyLife.Skills.SkillType.Potty
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  syntax:
    content: public static readonly SkillType Potty
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Shared ReadOnly Potty As SkillType
- uid: TinyLife.Skills.SkillType.Name
  commentId: F:TinyLife.Skills.SkillType.Name
  id: Name
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SkillType.Name
  fullName: TinyLife.Skills.SkillType.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: The name of this skill type
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Skills.SkillType.Texture
  commentId: F:TinyLife.Skills.SkillType.Texture
  id: Texture
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: SkillType.Texture
  fullName: TinyLife.Skills.SkillType.Texture
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: The texture region of this skill type's icon
  example: []
  syntax:
    content: public readonly TextureRegion Texture
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Texture As TextureRegion
- uid: TinyLife.Skills.SkillType.MaxLevel
  commentId: F:TinyLife.Skills.SkillType.MaxLevel
  id: MaxLevel
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: MaxLevel
  nameWithType: SkillType.MaxLevel
  fullName: TinyLife.Skills.SkillType.MaxLevel
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    The maximum level that this skill can reach.

    Most skills should default to 5 or 10 for consistency.
  example: []
  syntax:
    content: public readonly int MaxLevel
    return:
      type: System.Int32
    content.vb: Public ReadOnly MaxLevel As Integer
- uid: TinyLife.Skills.SkillType.Categories
  commentId: F:TinyLife.Skills.SkillType.Categories
  id: Categories
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: SkillType.Categories
  fullName: TinyLife.Skills.SkillType.Categories
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    The <xref href="TinyLife.Skills.SkillCategory" data-throw-if-not-resolved="false"></xref> combined flag that this skill type has.

    The skill categories it has are used to determine skill gain from things like the <xref href="TinyLife.PersonalityType.Creative" data-throw-if-not-resolved="false"></xref> personality type.
  example: []
  syntax:
    content: public readonly SkillCategory Categories
    return:
      type: TinyLife.Skills.SkillCategory
    content.vb: Public ReadOnly Categories As SkillCategory
- uid: TinyLife.Skills.SkillType.MaxLevelMultipliers
  commentId: P:TinyLife.Skills.SkillType.MaxLevelMultipliers
  id: MaxLevelMultipliers
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: MaxLevelMultipliers
  nameWithType: SkillType.MaxLevelMultipliers
  fullName: TinyLife.Skills.SkillType.MaxLevelMultipliers
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A function that can optionally return a factor that determines the maximum skill level, based on the <xref href="TinyLife.Skills.SkillType.MaxLevel" data-throw-if-not-resolved="false"></xref> and the <xref href="TinyLife.Objects.AgeGroup" data-throw-if-not-resolved="false"></xref> of a person.
  example: []
  syntax:
    content: public Func<AgeGroup, float> MaxLevelMultipliers { get; init; }
    parameters: []
    return:
      type: System.Func{TinyLife.Objects.AgeGroup,System.Single}
    content.vb: Public Property MaxLevelMultipliers As Func(Of AgeGroup, Single)
  overload: TinyLife.Skills.SkillType.MaxLevelMultipliers*
- uid: TinyLife.Skills.SkillType.RequiredAges
  commentId: P:TinyLife.Skills.SkillType.RequiredAges
  id: RequiredAges
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: RequiredAges
  nameWithType: SkillType.RequiredAges
  fullName: TinyLife.Skills.SkillType.RequiredAges
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    The ages that are required for a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> to be able to have this skill.

    This value defaults to <xref href="TinyLife.Objects.AgeGroup.ChildOrOlder" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AgeGroup RequiredAges { get; init; }
    parameters: []
    return:
      type: TinyLife.Objects.AgeGroup
    content.vb: Public Property RequiredAges As AgeGroup
  overload: TinyLife.Skills.SkillType.RequiredAges*
- uid: TinyLife.Skills.SkillType.RequiredPersonType
  commentId: P:TinyLife.Skills.SkillType.RequiredPersonType
  id: RequiredPersonType
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: RequiredPersonType
  nameWithType: SkillType.RequiredPersonType
  fullName: TinyLife.Skills.SkillType.RequiredPersonType
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    The type of <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> that is able to have this skill.

    This value default to the <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> type.
  example: []
  syntax:
    content: public Type RequiredPersonType { get; init; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property RequiredPersonType As Type
  overload: TinyLife.Skills.SkillType.RequiredPersonType*
- uid: TinyLife.Skills.SkillType.RewardPersonality
  commentId: P:TinyLife.Skills.SkillType.RewardPersonality
  id: RewardPersonality
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: RewardPersonality
  nameWithType: SkillType.RewardPersonality
  fullName: TinyLife.Skills.SkillType.RewardPersonality
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A function that can optionally return a <xref href="TinyLife.PersonalityType" data-throw-if-not-resolved="false"></xref> that should be added to a person when they age up if they have reached a certain set of conditions.
  example: []
  syntax:
    content: public Func<(Skill Skill, AgeGroup LastAge, AgeGroup Age), PersonalityType> RewardPersonality { get; init; }
    parameters: []
    return:
      type: System.Func{System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup},TinyLife.PersonalityType}
    content.vb: Public Property RewardPersonality As Func(Of (Skill As Skill, LastAge As AgeGroup, Age As AgeGroup), PersonalityType)
  overload: TinyLife.Skills.SkillType.RewardPersonality*
- uid: TinyLife.Skills.SkillType.RewardSkills
  commentId: P:TinyLife.Skills.SkillType.RewardSkills
  id: RewardSkills
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: RewardSkills
  nameWithType: SkillType.RewardSkills
  fullName: TinyLife.Skills.SkillType.RewardSkills
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: /// A function that can optionally return a set of <xref href="TinyLife.Skills.Skill" data-throw-if-not-resolved="false"></xref> types and levels that should be added to a person when they age up if they have reached a certain set of conditions.
  example: []
  syntax:
    content: public Func<(Skill Skill, AgeGroup LastAge, AgeGroup Age), IEnumerable<(SkillType Type, int Level)>> RewardSkills { get; init; }
    parameters: []
    return:
      type: System.Func{System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup},System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}}}
    content.vb: Public Property RewardSkills As Func(Of (Skill As Skill, LastAge As AgeGroup, Age As AgeGroup), IEnumerable(Of (Type As SkillType, Level As Integer)))
  overload: TinyLife.Skills.SkillType.RewardSkills*
- uid: TinyLife.Skills.SkillType.AdditionalEarnedActions
  commentId: P:TinyLife.Skills.SkillType.AdditionalEarnedActions
  id: AdditionalEarnedActions
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: AdditionalEarnedActions
  nameWithType: SkillType.AdditionalEarnedActions
  fullName: TinyLife.Skills.SkillType.AdditionalEarnedActions
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    A function that can optionally be used to return a set of action information that is displayed when this skill's level is raised to the given levels.

    This function is used by skills like <xref href="TinyLife.Skills.SkillType.Cooking" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Skills.SkillType.Woodworking" data-throw-if-not-resolved="false"></xref> to display what additional items can now be cooked or crafted.
  example: []
  syntax:
    content: public Func<PersonLike, Skill, IEnumerable<(int Level, string DisplayName)>> AdditionalEarnedActions { get; init; }
    parameters: []
    return:
      type: System.Func{TinyLife.Objects.PersonLike,TinyLife.Skills.Skill,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.String}}}
    content.vb: Public Property AdditionalEarnedActions As Func(Of PersonLike, Skill, IEnumerable(Of (Level As Integer, DisplayName As String)))
  overload: TinyLife.Skills.SkillType.AdditionalEarnedActions*
- uid: TinyLife.Skills.SkillType.#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,TinyLife.Skills.SkillCategory)
  commentId: M:TinyLife.Skills.SkillType.#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,TinyLife.Skills.SkillCategory)
  id: '#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,TinyLife.Skills.SkillCategory)'
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: SkillType(string, TextureRegion, int, SkillCategory)
  nameWithType: SkillType.SkillType(string, TextureRegion, int, SkillCategory)
  fullName: TinyLife.Skills.SkillType.SkillType(string, MLEM.Textures.TextureRegion, int, TinyLife.Skills.SkillCategory)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: Creates a new skill type with the given settings
  example: []
  syntax:
    content: public SkillType(string name, TextureRegion texture, int maxLevel, SkillCategory categories)
    parameters:
    - id: name
      type: System.String
      description: The skill's name
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The skill's icon
    - id: maxLevel
      type: System.Int32
      description: The skill's maximum level. Should be 5 or 10 for consistency.
    - id: categories
      type: TinyLife.Skills.SkillCategory
      description: A combined flag of categories that this skill has
    content.vb: Public Sub New(name As String, texture As TextureRegion, maxLevel As Integer, categories As SkillCategory)
  overload: TinyLife.Skills.SkillType.#ctor*
  nameWithType.vb: SkillType.New(String, TextureRegion, Integer, SkillCategory)
  fullName.vb: TinyLife.Skills.SkillType.New(String, MLEM.Textures.TextureRegion, Integer, TinyLife.Skills.SkillCategory)
  name.vb: New(String, TextureRegion, Integer, SkillCategory)
- uid: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
  commentId: M:TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
  id: GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: GetRandomQuality(PersonLike, Random, ActionInfo, bool, IEmotionSource, bool)
  nameWithType: SkillType.GetRandomQuality(PersonLike, Random, ActionInfo, bool, IEmotionSource, bool)
  fullName: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, bool, TinyLife.Emotions.IEmotionSource, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    Returns a semi-randomly generated <xref href="TinyLife.Skills.Quality" data-throw-if-not-resolved="false"></xref> for the given <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> based on their level of this skill.

    The higher the skill level is, the more likely it is for higher qualities to be returned.

    The returned quality is based on the weights determined by <xref href="TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike%2cSystem.Random%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Quality GetRandomQuality(PersonLike person, Random random, ActionInfo info = null, bool modifyEmotions = true, IEmotionSource source = null, bool alwaysAllowAverage = false)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person that has this skill
    - id: random
      type: System.Random
      description: The random that should be used for calculation
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info to use for determining the random quality. If this is set, <xref href="TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean%2cTinyLife.Skills.SkillType%2cSystem.Random%2cSystem.Boolean%2cSystem.Collections.Generic.Dictionary%7bTinyLife.Skills.Quality%2cSystem.Single%7d)" data-throw-if-not-resolved="false"></xref> will be invoked for all involved objects.
    - id: modifyEmotions
      type: System.Boolean
      description: Whether the given person should receive emotions based on the quality, defaults to true
    - id: source
      type: TinyLife.Emotions.IEmotionSource
      description: The emotion source that modified emotions come from
    - id: alwaysAllowAverage
      type: System.Boolean
      description: Whether or not <xref href="TinyLife.Skills.Quality.Average" data-throw-if-not-resolved="false"></xref> should always be part of the random choice, defaults to false
    return:
      type: TinyLife.Skills.Quality
      description: A random quality based on the person's skill level
    content.vb: Public Function GetRandomQuality(person As PersonLike, random As Random, info As ActionInfo = Nothing, modifyEmotions As Boolean = True, source As IEmotionSource = Nothing, alwaysAllowAverage As Boolean = False) As Quality
  overload: TinyLife.Skills.SkillType.GetRandomQuality*
  nameWithType.vb: SkillType.GetRandomQuality(PersonLike, Random, ActionInfo, Boolean, IEmotionSource, Boolean)
  fullName.vb: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Emotions.IEmotionSource, Boolean)
  name.vb: GetRandomQuality(PersonLike, Random, ActionInfo, Boolean, IEmotionSource, Boolean)
- uid: TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean)
  id: GetRandomQualityWeights(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: GetRandomQualityWeights(PersonLike, Random, ActionInfo, bool)
  nameWithType: SkillType.GetRandomQualityWeights(PersonLike, Random, ActionInfo, bool)
  fullName: TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    Returns a set of <xref href="TinyLife.Skills.Quality" data-throw-if-not-resolved="false"></xref> values and associated weights to be used for determining a random quality for the given <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> using <xref href="TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike%2cSystem.Random%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean%2cTinyLife.Emotions.IEmotionSource%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    Various factors are taken into account, such as the <code class="paramref">person</code>'s skill level, <xref href="TinyLife.Objects.PersonLike.PersonalityTypes" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Objects.PersonLike.Emotion" data-throw-if-not-resolved="false"></xref>, the return values of <xref href="TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean%2cTinyLife.Skills.SkillType%2cSystem.Random%2cSystem.Boolean%2cSystem.Collections.Generic.Dictionary%7bTinyLife.Skills.Quality%2cSystem.Single%7d)" data-throw-if-not-resolved="false"></xref> of all of the <code class="paramref">info</code>'s involved objects, and the <xref href="TinyLife.Skills.SkillType.OnGetRandomQuality" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public Dictionary<Quality, float> GetRandomQualityWeights(PersonLike person, Random random, ActionInfo info = null, bool alwaysAllowAverage = false)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person that has this skill
    - id: random
      type: System.Random
      description: The random that should be used for calculation
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info to use for determining the random quality. If this is set, <xref href="TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean%2cTinyLife.Skills.SkillType%2cSystem.Random%2cSystem.Boolean%2cSystem.Collections.Generic.Dictionary%7bTinyLife.Skills.Quality%2cSystem.Single%7d)" data-throw-if-not-resolved="false"></xref> will be invoked for all involved objects.
    - id: alwaysAllowAverage
      type: System.Boolean
      description: Whether or not <xref href="TinyLife.Skills.Quality.Average" data-throw-if-not-resolved="false"></xref> should always be part of the random choice, defaults to false
    return:
      type: System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}
      description: A set of qualities along with weights that represent their likelihood of being chosen.
    content.vb: Public Function GetRandomQualityWeights(person As PersonLike, random As Random, info As ActionInfo = Nothing, alwaysAllowAverage As Boolean = False) As Dictionary(Of Quality, Single)
  overload: TinyLife.Skills.SkillType.GetRandomQualityWeights*
  nameWithType.vb: SkillType.GetRandomQualityWeights(PersonLike, Random, ActionInfo, Boolean)
  fullName.vb: TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, Boolean)
  name.vb: GetRandomQualityWeights(PersonLike, Random, ActionInfo, Boolean)
- uid: TinyLife.Skills.SkillType.GetMaxLevel(TinyLife.Objects.AgeGroup)
  commentId: M:TinyLife.Skills.SkillType.GetMaxLevel(TinyLife.Objects.AgeGroup)
  id: GetMaxLevel(TinyLife.Objects.AgeGroup)
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: GetMaxLevel(AgeGroup)
  nameWithType: SkillType.GetMaxLevel(AgeGroup)
  fullName: TinyLife.Skills.SkillType.GetMaxLevel(TinyLife.Objects.AgeGroup)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: Returns the maximum level for the given <xref href="TinyLife.Objects.AgeGroup" data-throw-if-not-resolved="false"></xref>, which the <xref href="TinyLife.Skills.SkillType.MaxLevel" data-throw-if-not-resolved="false"></xref> multiplied by the corresponding <xref href="TinyLife.Skills.SkillType.MaxLevelMultipliers" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int GetMaxLevel(AgeGroup age)
    parameters:
    - id: age
      type: TinyLife.Objects.AgeGroup
      description: The age group
    return:
      type: System.Int32
      description: The maximum level
    content.vb: Public Function GetMaxLevel(age As AgeGroup) As Integer
  overload: TinyLife.Skills.SkillType.GetMaxLevel*
- uid: TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
  commentId: M:TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
  id: Register(TinyLife.Skills.SkillType)
  parent: TinyLife.Skills.SkillType
  langs:
  - csharp
  - vb
  name: Register(SkillType)
  nameWithType: SkillType.Register(SkillType)
  fullName: TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: Registers a new <xref href="TinyLife.Skills.SkillType" data-throw-if-not-resolved="false"></xref> to the <xref href="TinyLife.Skills.SkillType.Types" data-throw-if-not-resolved="false"></xref> registry
  example: []
  syntax:
    content: public static SkillType Register(SkillType type)
    parameters:
    - id: type
      type: TinyLife.Skills.SkillType
      description: The type to register
    return:
      type: TinyLife.Skills.SkillType
      description: The registered type, for chaining
    content.vb: Public Shared Function Register(type As SkillType) As SkillType
  overload: TinyLife.Skills.SkillType.Register*
references:
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Skills.Skill
  commentId: T:TinyLife.Skills.Skill
  parent: TinyLife.Skills
  href: TinyLife.Skills.Skill.html
  name: Skill
  nameWithType: Skill
  fullName: TinyLife.Skills.Skill
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Skills.SkillType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<SkillType>(SkillType)
  nameWithType: Extensions.JsonCopy<SkillType>(SkillType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.SkillType>(TinyLife.Skills.SkillType)
  nameWithType.vb: Extensions.JsonCopy(Of SkillType)(SkillType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.SkillType)(TinyLife.Skills.SkillType)
  name.vb: JsonCopy(Of SkillType)(SkillType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.SkillType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: '>'
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.SkillType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: )
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Skills.SkillCategory
  commentId: T:TinyLife.Skills.SkillCategory
  parent: TinyLife.Skills
  href: TinyLife.Skills.SkillCategory.html
  name: SkillCategory
  nameWithType: SkillCategory
  fullName: TinyLife.Skills.SkillCategory
- uid: TinyLife.Skills.SkillCategory[]
  isExternal: true
  href: TinyLife.Skills.SkillCategory.html
  name: SkillCategory[]
  nameWithType: SkillCategory[]
  fullName: TinyLife.Skills.SkillCategory[]
  nameWithType.vb: SkillCategory()
  fullName.vb: TinyLife.Skills.SkillCategory()
  name.vb: SkillCategory()
  spec.csharp:
  - uid: TinyLife.Skills.SkillCategory
    name: SkillCategory
    href: TinyLife.Skills.SkillCategory.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Skills.SkillCategory
    name: SkillCategory
    href: TinyLife.Skills.SkillCategory.html
  - name: (
  - name: )
- uid: TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQualityWeights_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_
  name: GetRandomQualityWeights(PersonLike, Random, ActionInfo, bool)
  nameWithType: SkillType.GetRandomQualityWeights(PersonLike, Random, ActionInfo, bool)
  fullName: TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, bool)
  nameWithType.vb: SkillType.GetRandomQualityWeights(PersonLike, Random, ActionInfo, Boolean)
  fullName.vb: TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, Boolean)
  name.vb: GetRandomQualityWeights(PersonLike, Random, ActionInfo, Boolean)
  spec.csharp:
  - uid: TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean)
    name: GetRandomQualityWeights
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQualityWeights_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.SkillType.GetRandomQualityWeights(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean)
    name: GetRandomQualityWeights
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQualityWeights_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}}
  commentId: T:System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<(PersonLike Person, ActionInfo Info, SkillType Skill, Random Random, bool AlwaysAllowAverage, Dictionary<Quality, float> Weights)>
  nameWithType: Action<(PersonLike Person, ActionInfo Info, SkillType Skill, Random Random, bool AlwaysAllowAverage, Dictionary<Quality, float> Weights)>
  fullName: System.Action<(TinyLife.Objects.PersonLike Person, TinyLife.Actions.ActionInfo Info, TinyLife.Skills.SkillType Skill, System.Random Random, bool AlwaysAllowAverage, System.Collections.Generic.Dictionary<TinyLife.Skills.Quality, float> Weights)>
  nameWithType.vb: Action(Of (Person As PersonLike, Info As ActionInfo, Skill As SkillType, Random As Random, AlwaysAllowAverage As Boolean, Weights As Dictionary(Of Quality, Single)))
  fullName.vb: System.Action(Of (Person As TinyLife.Objects.PersonLike, Info As TinyLife.Actions.ActionInfo, Skill As TinyLife.Skills.SkillType, Random As System.Random, AlwaysAllowAverage As Boolean, Weights As System.Collections.Generic.Dictionary(Of TinyLife.Skills.Quality, Single)))
  name.vb: Action(Of (Person As PersonLike, Info As ActionInfo, Skill As SkillType, Random As Random, AlwaysAllowAverage As Boolean, Weights As Dictionary(Of Quality, Single)))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.info
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.Skill
    name: Skill
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.skill
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.Random
    name: Random
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.random
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.AlwaysAllowAverage
    name: AlwaysAllowAverage
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.alwaysallowaverage
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.Weights
    name: Weights
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.weights
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.person
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.info
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.Skill
    name: Skill
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.skill
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.Random
    name: Random
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.random
  - name: " "
  - name: As
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.AlwaysAllowAverage
    name: AlwaysAllowAverage
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.alwaysallowaverage
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}}.Weights
    name: Weights
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.random,system.boolean,system.collections.generic.dictionary-tinylife.skills.quality,system.single--.weights
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
  commentId: M:TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
  isExternal: true
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQuality_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Emotions_IEmotionSource_System_Boolean_
  name: GetRandomQuality(PersonLike, Random, ActionInfo, bool, IEmotionSource, bool)
  nameWithType: SkillType.GetRandomQuality(PersonLike, Random, ActionInfo, bool, IEmotionSource, bool)
  fullName: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, bool, TinyLife.Emotions.IEmotionSource, bool)
  nameWithType.vb: SkillType.GetRandomQuality(PersonLike, Random, ActionInfo, Boolean, IEmotionSource, Boolean)
  fullName.vb: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Emotions.IEmotionSource, Boolean)
  name.vb: GetRandomQuality(PersonLike, Random, ActionInfo, Boolean, IEmotionSource, Boolean)
  spec.csharp:
  - uid: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: GetRandomQuality
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQuality_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: GetRandomQuality
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQuality_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}}
  commentId: T:System.Action{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<(PersonLike Person, ActionInfo Info, SkillType Skill, bool ModifyEmotions, IEmotionSource Source, Quality Quality)>
  nameWithType: Action<(PersonLike Person, ActionInfo Info, SkillType Skill, bool ModifyEmotions, IEmotionSource Source, Quality Quality)>
  fullName: System.Action<(TinyLife.Objects.PersonLike Person, TinyLife.Actions.ActionInfo Info, TinyLife.Skills.SkillType Skill, bool ModifyEmotions, TinyLife.Emotions.IEmotionSource Source, TinyLife.Skills.Quality Quality)>
  nameWithType.vb: Action(Of (Person As PersonLike, Info As ActionInfo, Skill As SkillType, ModifyEmotions As Boolean, Source As IEmotionSource, Quality As Quality))
  fullName.vb: System.Action(Of (Person As TinyLife.Objects.PersonLike, Info As TinyLife.Actions.ActionInfo, Skill As TinyLife.Skills.SkillType, ModifyEmotions As Boolean, Source As TinyLife.Emotions.IEmotionSource, Quality As TinyLife.Skills.Quality))
  name.vb: Action(Of (Person As PersonLike, Info As ActionInfo, Skill As SkillType, ModifyEmotions As Boolean, Source As IEmotionSource, Quality As Quality))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.info
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.Skill
    name: Skill
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.skill
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.ModifyEmotions
    name: ModifyEmotions
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.modifyemotions
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.Source
    name: Source
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.source
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.Quality
    name: Quality
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.quality
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.person
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.info
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.Skill
    name: Skill
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.skill
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.ModifyEmotions
    name: ModifyEmotions
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.modifyemotions
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.Source
    name: Source
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.source
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Boolean,TinyLife.Emotions.IEmotionSource,TinyLife.Skills.Quality}.Quality
    name: Quality
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.actions.actioninfo,tinylife.skills.skilltype,system.boolean,tinylife.emotions.iemotionsource,tinylife.skills.quality-.quality
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: )
  - name: )
- uid: TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
  commentId: M:TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Register_TinyLife_Skills_SkillType_
  name: Register(SkillType)
  nameWithType: SkillType.Register(SkillType)
  fullName: TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
  spec.csharp:
  - uid: TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
    name: Register
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Register_TinyLife_Skills_SkillType_
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.SkillType.Register(TinyLife.Skills.SkillType)
    name: Register
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Register_TinyLife_Skills_SkillType_
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Skills.SkillType}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Skills.SkillType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, SkillType>
  nameWithType: ReadOnlyDictionary<string, SkillType>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Skills.SkillType>
  nameWithType.vb: ReadOnlyDictionary(Of String, SkillType)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Skills.SkillType)
  name.vb: ReadOnlyDictionary(Of String, SkillType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  href: TinyLife.Skills.SkillType.html
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.PersonalityType.Creative
  commentId: F:TinyLife.PersonalityType.Creative
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_Creative
  name: Creative
  nameWithType: PersonalityType.Creative
  fullName: TinyLife.PersonalityType.Creative
- uid: TinyLife.Skills.SkillType.MaxLevel
  commentId: F:TinyLife.Skills.SkillType.MaxLevel
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_MaxLevel
  name: MaxLevel
  nameWithType: SkillType.MaxLevel
  fullName: TinyLife.Skills.SkillType.MaxLevel
- uid: TinyLife.Objects.AgeGroup
  commentId: T:TinyLife.Objects.AgeGroup
  parent: TinyLife.Objects
  href: TinyLife.Objects.AgeGroup.html
  name: AgeGroup
  nameWithType: AgeGroup
  fullName: TinyLife.Objects.AgeGroup
- uid: TinyLife.Skills.SkillType.MaxLevelMultipliers*
  commentId: Overload:TinyLife.Skills.SkillType.MaxLevelMultipliers
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_MaxLevelMultipliers
  name: MaxLevelMultipliers
  nameWithType: SkillType.MaxLevelMultipliers
  fullName: TinyLife.Skills.SkillType.MaxLevelMultipliers
- uid: System.Func{TinyLife.Objects.AgeGroup,System.Single}
  commentId: T:System.Func{TinyLife.Objects.AgeGroup,System.Single}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<AgeGroup, float>
  nameWithType: Func<AgeGroup, float>
  fullName: System.Func<TinyLife.Objects.AgeGroup, float>
  nameWithType.vb: Func(Of AgeGroup, Single)
  fullName.vb: System.Func(Of TinyLife.Objects.AgeGroup, Single)
  name.vb: Func(Of AgeGroup, Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Objects.AgeGroup.ChildOrOlder
  commentId: F:TinyLife.Objects.AgeGroup.ChildOrOlder
  href: TinyLife.Objects.AgeGroup.html#TinyLife_Objects_AgeGroup_ChildOrOlder
  name: ChildOrOlder
  nameWithType: AgeGroup.ChildOrOlder
  fullName: TinyLife.Objects.AgeGroup.ChildOrOlder
- uid: TinyLife.Skills.SkillType.RequiredAges*
  commentId: Overload:TinyLife.Skills.SkillType.RequiredAges
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_RequiredAges
  name: RequiredAges
  nameWithType: SkillType.RequiredAges
  fullName: TinyLife.Skills.SkillType.RequiredAges
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Skills.SkillType.RequiredPersonType*
  commentId: Overload:TinyLife.Skills.SkillType.RequiredPersonType
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_RequiredPersonType
  name: RequiredPersonType
  nameWithType: SkillType.RequiredPersonType
  fullName: TinyLife.Skills.SkillType.RequiredPersonType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TinyLife.PersonalityType
  commentId: T:TinyLife.PersonalityType
  parent: TinyLife
  href: TinyLife.PersonalityType.html
  name: PersonalityType
  nameWithType: PersonalityType
  fullName: TinyLife.PersonalityType
- uid: TinyLife.Skills.SkillType.RewardPersonality*
  commentId: Overload:TinyLife.Skills.SkillType.RewardPersonality
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_RewardPersonality
  name: RewardPersonality
  nameWithType: SkillType.RewardPersonality
  fullName: TinyLife.Skills.SkillType.RewardPersonality
- uid: System.Func{System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup},TinyLife.PersonalityType}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup},TinyLife.PersonalityType}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(Skill Skill, AgeGroup LastAge, AgeGroup Age), PersonalityType>
  nameWithType: Func<(Skill Skill, AgeGroup LastAge, AgeGroup Age), PersonalityType>
  fullName: System.Func<(TinyLife.Skills.Skill Skill, TinyLife.Objects.AgeGroup LastAge, TinyLife.Objects.AgeGroup Age), TinyLife.PersonalityType>
  nameWithType.vb: Func(Of (Skill As Skill, LastAge As AgeGroup, Age As AgeGroup), PersonalityType)
  fullName.vb: System.Func(Of (Skill As TinyLife.Skills.Skill, LastAge As TinyLife.Objects.AgeGroup, Age As TinyLife.Objects.AgeGroup), TinyLife.PersonalityType)
  name.vb: Func(Of (Skill As Skill, LastAge As AgeGroup, Age As AgeGroup), PersonalityType)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.Skill
    name: Skill
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.skill
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.LastAge
    name: LastAge
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.lastage
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.Age
    name: Age
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.age
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.Skill
    name: Skill
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.skill
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.LastAge
    name: LastAge
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.lastage
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.Age
    name: Age
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.age
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: )
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.Skills.SkillType.RewardSkills*
  commentId: Overload:TinyLife.Skills.SkillType.RewardSkills
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_RewardSkills
  name: RewardSkills
  nameWithType: SkillType.RewardSkills
  fullName: TinyLife.Skills.SkillType.RewardSkills
- uid: System.Func{System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup},System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}}}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup},System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(Skill Skill, AgeGroup LastAge, AgeGroup Age), IEnumerable<(SkillType Type, int Level)>>
  nameWithType: Func<(Skill Skill, AgeGroup LastAge, AgeGroup Age), IEnumerable<(SkillType Type, int Level)>>
  fullName: System.Func<(TinyLife.Skills.Skill Skill, TinyLife.Objects.AgeGroup LastAge, TinyLife.Objects.AgeGroup Age), System.Collections.Generic.IEnumerable<(TinyLife.Skills.SkillType Type, int Level)>>
  nameWithType.vb: Func(Of (Skill As Skill, LastAge As AgeGroup, Age As AgeGroup), IEnumerable(Of (Type As SkillType, Level As Integer)))
  fullName.vb: System.Func(Of (Skill As TinyLife.Skills.Skill, LastAge As TinyLife.Objects.AgeGroup, Age As TinyLife.Objects.AgeGroup), System.Collections.Generic.IEnumerable(Of (Type As TinyLife.Skills.SkillType, Level As Integer)))
  name.vb: Func(Of (Skill As Skill, LastAge As AgeGroup, Age As AgeGroup), IEnumerable(Of (Type As SkillType, Level As Integer)))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.Skill
    name: Skill
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.skill
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.LastAge
    name: LastAge
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.lastage
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.Age
    name: Age
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.age
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Level
    name: Level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.level
  - name: )
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.Skill
    name: Skill
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.skill
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.LastAge
    name: LastAge
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.lastage
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.Skill,TinyLife.Objects.AgeGroup,TinyLife.Objects.AgeGroup}.Age
    name: Age
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skill,tinylife.objects.agegroup,tinylife.objects.agegroup-.age
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.type
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Level
    name: Level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.level
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
  - name: )
- uid: TinyLife.Skills.SkillType.Cooking
  commentId: F:TinyLife.Skills.SkillType.Cooking
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Cooking
  name: Cooking
  nameWithType: SkillType.Cooking
  fullName: TinyLife.Skills.SkillType.Cooking
- uid: TinyLife.Skills.SkillType.Woodworking
  commentId: F:TinyLife.Skills.SkillType.Woodworking
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Woodworking
  name: Woodworking
  nameWithType: SkillType.Woodworking
  fullName: TinyLife.Skills.SkillType.Woodworking
- uid: TinyLife.Skills.SkillType.AdditionalEarnedActions*
  commentId: Overload:TinyLife.Skills.SkillType.AdditionalEarnedActions
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_AdditionalEarnedActions
  name: AdditionalEarnedActions
  nameWithType: SkillType.AdditionalEarnedActions
  fullName: TinyLife.Skills.SkillType.AdditionalEarnedActions
- uid: System.Func{TinyLife.Objects.PersonLike,TinyLife.Skills.Skill,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.String}}}
  commentId: T:System.Func{TinyLife.Objects.PersonLike,TinyLife.Skills.Skill,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.String}}}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<PersonLike, Skill, IEnumerable<(int Level, string DisplayName)>>
  nameWithType: Func<PersonLike, Skill, IEnumerable<(int Level, string DisplayName)>>
  fullName: System.Func<TinyLife.Objects.PersonLike, TinyLife.Skills.Skill, System.Collections.Generic.IEnumerable<(int Level, string DisplayName)>>
  nameWithType.vb: Func(Of PersonLike, Skill, IEnumerable(Of (Level As Integer, DisplayName As String)))
  fullName.vb: System.Func(Of TinyLife.Objects.PersonLike, TinyLife.Skills.Skill, System.Collections.Generic.IEnumerable(Of (Level As Integer, DisplayName As String)))
  name.vb: Func(Of PersonLike, Skill, IEnumerable(Of (Level As Integer, DisplayName As String)))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.String}.Level
    name: Level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.string-.level
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.String}.DisplayName
    name: DisplayName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.string-.displayname
  - name: )
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Int32,System.String}.Level
    name: Level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.string-.level
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.String}.DisplayName
    name: DisplayName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.string-.displayname
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Skills.SkillType.#ctor*
  commentId: Overload:TinyLife.Skills.SkillType.#ctor
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType__ctor_System_String_MLEM_Textures_TextureRegion_System_Int32_TinyLife_Skills_SkillCategory_
  name: SkillType
  nameWithType: SkillType.SkillType
  fullName: TinyLife.Skills.SkillType.SkillType
  nameWithType.vb: SkillType.New
  fullName.vb: TinyLife.Skills.SkillType.New
  name.vb: New
- uid: TinyLife.Skills.Quality
  commentId: T:TinyLife.Skills.Quality
  parent: TinyLife.Skills
  href: TinyLife.Skills.Quality.html
  name: Quality
  nameWithType: Quality
  fullName: TinyLife.Skills.Quality
- uid: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  commentId: M:TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnRandomQuality_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Random_System_Boolean_System_Collections_Generic_Dictionary_TinyLife_Skills_Quality_System_Single__
  name: OnRandomQuality(PersonLike, ActionInfo, bool, SkillType, Random, bool, Dictionary<Quality, float>)
  nameWithType: MapObject.OnRandomQuality(PersonLike, ActionInfo, bool, SkillType, Random, bool, Dictionary<Quality, float>)
  fullName: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.Skills.SkillType, System.Random, bool, System.Collections.Generic.Dictionary<TinyLife.Skills.Quality, float>)
  nameWithType.vb: MapObject.OnRandomQuality(PersonLike, ActionInfo, Boolean, SkillType, Random, Boolean, Dictionary(Of Quality, Single))
  fullName.vb: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Skills.SkillType, System.Random, Boolean, System.Collections.Generic.Dictionary(Of TinyLife.Skills.Quality, Single))
  name.vb: OnRandomQuality(PersonLike, ActionInfo, Boolean, SkillType, Random, Boolean, Dictionary(Of Quality, Single))
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
    name: OnRandomQuality
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnRandomQuality_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Random_System_Boolean_System_Collections_Generic_Dictionary_TinyLife_Skills_Quality_System_Single__
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
    name: OnRandomQuality
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnRandomQuality_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Random_System_Boolean_System_Collections_Generic_Dictionary_TinyLife_Skills_Quality_System_Single__
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: TinyLife.Skills.Quality.Average
  commentId: F:TinyLife.Skills.Quality.Average
  href: TinyLife.Skills.Quality.html#TinyLife_Skills_Quality_Average
  name: Average
  nameWithType: Quality.Average
  fullName: TinyLife.Skills.Quality.Average
- uid: TinyLife.Skills.SkillType.GetRandomQuality*
  commentId: Overload:TinyLife.Skills.SkillType.GetRandomQuality
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQuality_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Emotions_IEmotionSource_System_Boolean_
  name: GetRandomQuality
  nameWithType: SkillType.GetRandomQuality
  fullName: TinyLife.Skills.SkillType.GetRandomQuality
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionInfo.html
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Emotions.IEmotionSource
  commentId: T:TinyLife.Emotions.IEmotionSource
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.IEmotionSource.html
  name: IEmotionSource
  nameWithType: IEmotionSource
  fullName: TinyLife.Emotions.IEmotionSource
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  href: TinyLife.html
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
- uid: TinyLife.Objects.PersonLike.PersonalityTypes
  commentId: F:TinyLife.Objects.PersonLike.PersonalityTypes
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_PersonalityTypes
  name: PersonalityTypes
  nameWithType: PersonLike.PersonalityTypes
  fullName: TinyLife.Objects.PersonLike.PersonalityTypes
- uid: TinyLife.Objects.PersonLike.Emotion
  commentId: P:TinyLife.Objects.PersonLike.Emotion
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Emotion
  name: Emotion
  nameWithType: PersonLike.Emotion
  fullName: TinyLife.Objects.PersonLike.Emotion
- uid: TinyLife.Skills.SkillType.OnGetRandomQuality
  commentId: E:TinyLife.Skills.SkillType.OnGetRandomQuality
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_OnGetRandomQuality
  name: OnGetRandomQuality
  nameWithType: SkillType.OnGetRandomQuality
  fullName: TinyLife.Skills.SkillType.OnGetRandomQuality
- uid: TinyLife.Skills.SkillType.GetRandomQualityWeights*
  commentId: Overload:TinyLife.Skills.SkillType.GetRandomQualityWeights
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQualityWeights_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_
  name: GetRandomQualityWeights
  nameWithType: SkillType.GetRandomQualityWeights
  fullName: TinyLife.Skills.SkillType.GetRandomQualityWeights
- uid: System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}
  commentId: T:System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Quality, float>
  nameWithType: Dictionary<Quality, float>
  fullName: System.Collections.Generic.Dictionary<TinyLife.Skills.Quality, float>
  nameWithType.vb: Dictionary(Of Quality, Single)
  fullName.vb: System.Collections.Generic.Dictionary(Of TinyLife.Skills.Quality, Single)
  name.vb: Dictionary(Of Quality, Single)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Skills.SkillType.MaxLevelMultipliers
  commentId: P:TinyLife.Skills.SkillType.MaxLevelMultipliers
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_MaxLevelMultipliers
  name: MaxLevelMultipliers
  nameWithType: SkillType.MaxLevelMultipliers
  fullName: TinyLife.Skills.SkillType.MaxLevelMultipliers
- uid: TinyLife.Skills.SkillType.GetMaxLevel*
  commentId: Overload:TinyLife.Skills.SkillType.GetMaxLevel
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetMaxLevel_TinyLife_Objects_AgeGroup_
  name: GetMaxLevel
  nameWithType: SkillType.GetMaxLevel
  fullName: TinyLife.Skills.SkillType.GetMaxLevel
- uid: TinyLife.Skills.SkillType.Types
  commentId: F:TinyLife.Skills.SkillType.Types
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Types
  name: Types
  nameWithType: SkillType.Types
  fullName: TinyLife.Skills.SkillType.Types
- uid: TinyLife.Skills.SkillType.Register*
  commentId: Overload:TinyLife.Skills.SkillType.Register
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Register_TinyLife_Skills_SkillType_
  name: Register
  nameWithType: SkillType.Register
  fullName: TinyLife.Skills.SkillType.Register
