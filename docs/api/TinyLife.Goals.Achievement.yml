### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.Achievement
  commentId: T:TinyLife.Goals.Achievement
  id: Achievement
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.Achievement.#ctor(TinyLife.Goals.AchievementType,TinyLife.Goals.GoalSet)
  - TinyLife.Goals.Achievement.Complete
  - TinyLife.Goals.Achievement.Completed
  - TinyLife.Goals.Achievement.CreateElement
  - TinyLife.Goals.Achievement.Goals
  - TinyLife.Goals.Achievement.Type
  - TinyLife.Goals.Achievement.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Goals.Achievement.Validate
  langs:
  - csharp
  - vb
  name: Achievement
  nameWithType: Achievement
  fullName: TinyLife.Goals.Achievement
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A class that contains a <xref href="TinyLife.Goals.AchievementType" data-throw-if-not-resolved="false"></xref> and represents an achievement that can be gained by the player, either through a <xref href="TinyLife.Goals.GoalSet" data-throw-if-not-resolved="false"></xref> or through <xref href="TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)" data-throw-if-not-resolved="false"></xref>.

    The game's default achievements are also available on Steam and other platforms, and get completed automatically when their in-game counterparts are completed.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Achievement
    content.vb: >-
      <DataContract>

      Public Class Achievement
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.Achievement.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Achievement.Type
  commentId: F:TinyLife.Goals.Achievement.Type
  id: Type
  parent: TinyLife.Goals.Achievement
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Achievement.Type
  fullName: TinyLife.Goals.Achievement.Type
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: This achievement instance's underlying <xref href="TinyLife.Goals.AchievementType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly AchievementType Type
    return:
      type: TinyLife.Goals.AchievementType
    content.vb: >-
      <DataMember>

      Public ReadOnly Type As AchievementType
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Achievement.Goals
  commentId: P:TinyLife.Goals.Achievement.Goals
  id: Goals
  parent: TinyLife.Goals.Achievement
  langs:
  - csharp
  - vb
  name: Goals
  nameWithType: Achievement.Goals
  fullName: TinyLife.Goals.Achievement.Goals
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The <xref href="TinyLife.Goals.GoalSet" data-throw-if-not-resolved="false"></xref> that this achievement is trying to complete, or null if the underlying <xref href="TinyLife.Goals.Achievement.Type" data-throw-if-not-resolved="false"></xref> does not contain a set of <xref href="TinyLife.Goals.AchievementType.Goals" data-throw-if-not-resolved="false"></xref> or this achievement is <xref href="TinyLife.Goals.Achievement.Completed" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public GoalSet Goals { get; protected set; }
    parameters: []
    return:
      type: TinyLife.Goals.GoalSet
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public Property Goals As GoalSet
  overload: TinyLife.Goals.Achievement.Goals*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Goals.Achievement.Completed
  commentId: P:TinyLife.Goals.Achievement.Completed
  id: Completed
  parent: TinyLife.Goals.Achievement
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: Achievement.Completed
  fullName: TinyLife.Goals.Achievement.Completed
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Stores whether this achievement has already been completed in the current save file.

    By default, when this is set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, <xref href="TinyLife.Goals.Achievement.Goals" data-throw-if-not-resolved="false"></xref> is also set to null.
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public bool Completed { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public Property Completed As Boolean
  overload: TinyLife.Goals.Achievement.Completed*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Goals.Achievement.#ctor(TinyLife.Goals.AchievementType,TinyLife.Goals.GoalSet)
  commentId: M:TinyLife.Goals.Achievement.#ctor(TinyLife.Goals.AchievementType,TinyLife.Goals.GoalSet)
  id: '#ctor(TinyLife.Goals.AchievementType,TinyLife.Goals.GoalSet)'
  parent: TinyLife.Goals.Achievement
  langs:
  - csharp
  - vb
  name: Achievement(AchievementType, GoalSet)
  nameWithType: Achievement.Achievement(AchievementType, GoalSet)
  fullName: TinyLife.Goals.Achievement.Achievement(TinyLife.Goals.AchievementType, TinyLife.Goals.GoalSet)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Creates a new achievement with the given settings.

    This constructor is called by <xref href="TinyLife.Goals.AchievementType.Construct" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Achievement(AchievementType type, GoalSet goals = null)
    parameters:
    - id: type
      type: TinyLife.Goals.AchievementType
      description: This achievement instance's underlying <xref href="TinyLife.Goals.AchievementType" data-throw-if-not-resolved="false"></xref>.
    - id: goals
      type: TinyLife.Goals.GoalSet
      description: The <xref href="TinyLife.Goals.GoalSet" data-throw-if-not-resolved="false"></xref> that this achievement is trying to complete.
    content.vb: Public Sub New(type As AchievementType, goals As GoalSet = Nothing)
  overload: TinyLife.Goals.Achievement.#ctor*
  nameWithType.vb: Achievement.New(AchievementType, GoalSet)
  fullName.vb: TinyLife.Goals.Achievement.New(TinyLife.Goals.AchievementType, TinyLife.Goals.GoalSet)
  name.vb: New(AchievementType, GoalSet)
- uid: TinyLife.Goals.Achievement.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Goals.Achievement.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Goals.Achievement
  langs:
  - csharp
  - vb
  name: Update(GameTime, TimeSpan, float)
  nameWithType: Achievement.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Goals.Achievement.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Updates this achievement, querying its <xref href="TinyLife.Goals.Achievement.Goals" data-throw-if-not-resolved="false"></xref> and completing it if necessary.

    This method is called every update frame.
  example: []
  syntax:
    content: public virtual void Update(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time.
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed since the last update, in in-game time.
    - id: speedMultiplier
      type: System.Single
      description: The speed multiplier that time is currently passing with.
    content.vb: Public Overridable Sub Update(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.Goals.Achievement.Update*
  nameWithType.vb: Achievement.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Goals.Achievement.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
- uid: TinyLife.Goals.Achievement.CreateElement
  commentId: M:TinyLife.Goals.Achievement.CreateElement
  id: CreateElement
  parent: TinyLife.Goals.Achievement
  langs:
  - csharp
  - vb
  name: CreateElement()
  nameWithType: Achievement.CreateElement()
  fullName: TinyLife.Goals.Achievement.CreateElement()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Creates the <xref href="MLEM.Ui.Elements.Element" data-throw-if-not-resolved="false"></xref> that is used to display this achievement.

    Custom implementations can display custom progress or other custom information.
  example: []
  syntax:
    content: public virtual Element CreateElement()
    return:
      type: MLEM.Ui.Elements.Element
      description: The element used to display this achievement.
    content.vb: Public Overridable Function CreateElement() As Element
  overload: TinyLife.Goals.Achievement.CreateElement*
- uid: TinyLife.Goals.Achievement.Validate
  commentId: M:TinyLife.Goals.Achievement.Validate
  id: Validate
  parent: TinyLife.Goals.Achievement
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Achievement.Validate()
  fullName: TinyLife.Goals.Achievement.Validate()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Validates this achievement when loading from disk, validating its <xref href="TinyLife.Goals.Achievement.Goals" data-throw-if-not-resolved="false"></xref> and returning whether the validation was successful.
  example: []
  syntax:
    content: public virtual bool Validate()
    return:
      type: System.Boolean
      description: Whether this achievement is valid.
    content.vb: Public Overridable Function Validate() As Boolean
  overload: TinyLife.Goals.Achievement.Validate*
- uid: TinyLife.Goals.Achievement.Complete
  commentId: M:TinyLife.Goals.Achievement.Complete
  id: Complete
  parent: TinyLife.Goals.Achievement
  langs:
  - csharp
  - vb
  name: Complete()
  nameWithType: Achievement.Complete()
  fullName: TinyLife.Goals.Achievement.Complete()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Completes this achievement. If <xref href="TinyLife.Goals.Achievement.Completed" data-throw-if-not-resolved="false"></xref> is already true, this method should do nothing.

    Note that this method completes an achievement even if its <xref href="TinyLife.Goals.Achievement.Goals" data-throw-if-not-resolved="false"></xref> are not met yet.
  example: []
  syntax:
    content: public virtual void Complete()
    content.vb: Public Overridable Sub Complete()
  overload: TinyLife.Goals.Achievement.Complete*
references:
- uid: TinyLife.Goals.AchievementType
  commentId: T:TinyLife.Goals.AchievementType
  parent: TinyLife.Goals
  href: TinyLife.Goals.AchievementType.html
  name: AchievementType
  nameWithType: AchievementType
  fullName: TinyLife.Goals.AchievementType
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalSet.html
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
- uid: TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
  commentId: M:TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CompleteAchievement_TinyLife_Goals_AchievementType_
  name: CompleteAchievement(AchievementType)
  nameWithType: GameImpl.CompleteAchievement(AchievementType)
  fullName: TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
  spec.csharp:
  - uid: TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
    name: CompleteAchievement
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_CompleteAchievement_TinyLife_Goals_AchievementType_
  - name: (
  - uid: TinyLife.Goals.AchievementType
    name: AchievementType
    href: TinyLife.Goals.AchievementType.html
  - name: )
  spec.vb:
  - uid: TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
    name: CompleteAchievement
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_CompleteAchievement_TinyLife_Goals_AchievementType_
  - name: (
  - uid: TinyLife.Goals.AchievementType
    name: AchievementType
    href: TinyLife.Goals.AchievementType.html
  - name: )
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Goals.Achievement.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Achievement>(Achievement)
  nameWithType: Extensions.JsonCopy<Achievement>(Achievement)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.Achievement>(TinyLife.Goals.Achievement)
  nameWithType.vb: Extensions.JsonCopy(Of Achievement)(Achievement)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.Achievement)(TinyLife.Goals.Achievement)
  name.vb: JsonCopy(Of Achievement)(Achievement)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.Achievement)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Goals.Achievement
    name: Achievement
    href: TinyLife.Goals.Achievement.html
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.Achievement
    name: Achievement
    href: TinyLife.Goals.Achievement.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.Achievement)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Achievement
    name: Achievement
    href: TinyLife.Goals.Achievement.html
  - name: )
  - name: (
  - uid: TinyLife.Goals.Achievement
    name: Achievement
    href: TinyLife.Goals.Achievement.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Goals.Achievement.Type
  commentId: F:TinyLife.Goals.Achievement.Type
  href: TinyLife.Goals.Achievement.html#TinyLife_Goals_Achievement_Type
  name: Type
  nameWithType: Achievement.Type
  fullName: TinyLife.Goals.Achievement.Type
- uid: TinyLife.Goals.AchievementType.Goals
  commentId: F:TinyLife.Goals.AchievementType.Goals
  href: TinyLife.Goals.AchievementType.html#TinyLife_Goals_AchievementType_Goals
  name: Goals
  nameWithType: AchievementType.Goals
  fullName: TinyLife.Goals.AchievementType.Goals
- uid: TinyLife.Goals.Achievement.Completed
  commentId: P:TinyLife.Goals.Achievement.Completed
  href: TinyLife.Goals.Achievement.html#TinyLife_Goals_Achievement_Completed
  name: Completed
  nameWithType: Achievement.Completed
  fullName: TinyLife.Goals.Achievement.Completed
- uid: TinyLife.Goals.Achievement.Goals*
  commentId: Overload:TinyLife.Goals.Achievement.Goals
  href: TinyLife.Goals.Achievement.html#TinyLife_Goals_Achievement_Goals
  name: Goals
  nameWithType: Achievement.Goals
  fullName: TinyLife.Goals.Achievement.Goals
- uid: TinyLife.Goals.Achievement.Goals
  commentId: P:TinyLife.Goals.Achievement.Goals
  href: TinyLife.Goals.Achievement.html#TinyLife_Goals_Achievement_Goals
  name: Goals
  nameWithType: Achievement.Goals
  fullName: TinyLife.Goals.Achievement.Goals
- uid: TinyLife.Goals.Achievement.Completed*
  commentId: Overload:TinyLife.Goals.Achievement.Completed
  href: TinyLife.Goals.Achievement.html#TinyLife_Goals_Achievement_Completed
  name: Completed
  nameWithType: Achievement.Completed
  fullName: TinyLife.Goals.Achievement.Completed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Goals.AchievementType.Construct
  commentId: M:TinyLife.Goals.AchievementType.Construct
  href: TinyLife.Goals.AchievementType.html#TinyLife_Goals_AchievementType_Construct
  name: Construct()
  nameWithType: AchievementType.Construct()
  fullName: TinyLife.Goals.AchievementType.Construct()
  spec.csharp:
  - uid: TinyLife.Goals.AchievementType.Construct
    name: Construct
    href: TinyLife.Goals.AchievementType.html#TinyLife_Goals_AchievementType_Construct
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.AchievementType.Construct
    name: Construct
    href: TinyLife.Goals.AchievementType.html#TinyLife_Goals_AchievementType_Construct
  - name: (
  - name: )
- uid: TinyLife.Goals.Achievement.#ctor*
  commentId: Overload:TinyLife.Goals.Achievement.#ctor
  href: TinyLife.Goals.Achievement.html#TinyLife_Goals_Achievement__ctor_TinyLife_Goals_AchievementType_TinyLife_Goals_GoalSet_
  name: Achievement
  nameWithType: Achievement.Achievement
  fullName: TinyLife.Goals.Achievement.Achievement
  nameWithType.vb: Achievement.New
  fullName.vb: TinyLife.Goals.Achievement.New
  name.vb: New
- uid: TinyLife.Goals.Achievement.Update*
  commentId: Overload:TinyLife.Goals.Achievement.Update
  href: TinyLife.Goals.Achievement.html#TinyLife_Goals_Achievement_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: Update
  nameWithType: Achievement.Update
  fullName: TinyLife.Goals.Achievement.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: TinyLife.Goals.Achievement.CreateElement*
  commentId: Overload:TinyLife.Goals.Achievement.CreateElement
  href: TinyLife.Goals.Achievement.html#TinyLife_Goals_Achievement_CreateElement
  name: CreateElement
  nameWithType: Achievement.CreateElement
  fullName: TinyLife.Goals.Achievement.CreateElement
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: TinyLife.Goals.Achievement.Validate*
  commentId: Overload:TinyLife.Goals.Achievement.Validate
  href: TinyLife.Goals.Achievement.html#TinyLife_Goals_Achievement_Validate
  name: Validate
  nameWithType: Achievement.Validate
  fullName: TinyLife.Goals.Achievement.Validate
- uid: TinyLife.Goals.Achievement.Complete*
  commentId: Overload:TinyLife.Goals.Achievement.Complete
  href: TinyLife.Goals.Achievement.html#TinyLife_Goals_Achievement_Complete
  name: Complete
  nameWithType: Achievement.Complete
  fullName: TinyLife.Goals.Achievement.Complete
