### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.AutoGoalInfo
  commentId: T:TinyLife.Goals.AutoGoalInfo
  id: AutoGoalInfo
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.AutoGoalInfo.#ctor(System.String,TinyLife.Goals.GoalTrigger[],System.Func{System.Object,System.Boolean},System.Func{TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo,TinyLife.Goals.Goal})
  - TinyLife.Goals.AutoGoalInfo.Amount``1(System.String,System.Single,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  - TinyLife.Goals.AutoGoalInfo.Condition
  - TinyLife.Goals.AutoGoalInfo.Conditioned``1(System.String,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  - TinyLife.Goals.AutoGoalInfo.Distinct``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Func{``0,System.String},System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  - TinyLife.Goals.AutoGoalInfo.Distinct``1(System.String,System.Int32,System.Func{``0,System.String},System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  - TinyLife.Goals.AutoGoalInfo.Timed``1(System.String,System.TimeSpan,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  - TinyLife.Goals.AutoGoalInfo.Triggers
  langs:
  - csharp
  - vb
  name: AutoGoalInfo
  nameWithType: AutoGoalInfo
  fullName: TinyLife.Goals.AutoGoalInfo
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A <xref href="TinyLife.Goals.GoalInfo" data-throw-if-not-resolved="false"></xref> for an auto-triggered goal, specifically a <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref>.

    To construct a new auto goal info, use the provided static methods in this class.
  example: []
  syntax:
    content: 'public class AutoGoalInfo : GoalInfo, IGenericDataHolder'
    content.vb: Public Class AutoGoalInfo Inherits GoalInfo Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  - TinyLife.Goals.GoalInfo
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.Goals.GoalInfo.Name
  - TinyLife.Goals.GoalInfo.Construct(TinyLife.Goals.GoalSet)
  - MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.AutoGoalInfo.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Goals.AutoGoalInfo.Triggers
  commentId: F:TinyLife.Goals.AutoGoalInfo.Triggers
  id: Triggers
  parent: TinyLife.Goals.AutoGoalInfo
  langs:
  - csharp
  - vb
  name: Triggers
  nameWithType: AutoGoalInfo.Triggers
  fullName: TinyLife.Goals.AutoGoalInfo.Triggers
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A set of <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> instances that trigger this auto goal.

    This value is used in <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly GoalTrigger[] Triggers
    return:
      type: TinyLife.Goals.GoalTrigger[]
    content.vb: Public ReadOnly Triggers As GoalTrigger()
- uid: TinyLife.Goals.AutoGoalInfo.Condition
  commentId: F:TinyLife.Goals.AutoGoalInfo.Condition
  id: Condition
  parent: TinyLife.Goals.AutoGoalInfo
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: AutoGoalInfo.Condition
  fullName: TinyLife.Goals.AutoGoalInfo.Condition
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A condition, which takes in an object and returns whether this auto goal can be triggered.

    This value is used in <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly Func<object, bool> Condition
    return:
      type: System.Func{System.Object,System.Boolean}
    content.vb: Public ReadOnly Condition As Func(Of Object, Boolean)
- uid: TinyLife.Goals.AutoGoalInfo.#ctor(System.String,TinyLife.Goals.GoalTrigger[],System.Func{System.Object,System.Boolean},System.Func{TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo,TinyLife.Goals.Goal})
  commentId: M:TinyLife.Goals.AutoGoalInfo.#ctor(System.String,TinyLife.Goals.GoalTrigger[],System.Func{System.Object,System.Boolean},System.Func{TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo,TinyLife.Goals.Goal})
  id: '#ctor(System.String,TinyLife.Goals.GoalTrigger[],System.Func{System.Object,System.Boolean},System.Func{TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo,TinyLife.Goals.Goal})'
  parent: TinyLife.Goals.AutoGoalInfo
  langs:
  - csharp
  - vb
  name: AutoGoalInfo(string, GoalTrigger[], Func<object, bool>, Func<GoalSet, AutoGoalInfo, Goal>)
  nameWithType: AutoGoalInfo.AutoGoalInfo(string, GoalTrigger[], Func<object, bool>, Func<GoalSet, AutoGoalInfo, Goal>)
  fullName: TinyLife.Goals.AutoGoalInfo.AutoGoalInfo(string, TinyLife.Goals.GoalTrigger[], System.Func<object, bool>, System.Func<TinyLife.Goals.GoalSet, TinyLife.Goals.AutoGoalInfo, TinyLife.Goals.Goal>)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Creates a new auto goal info with the given settings.

    To create a new auto goal info of an API-provided type, use any of the static methods in this class.
  example: []
  syntax:
    content: protected AutoGoalInfo(string name, GoalTrigger[] triggers, Func<object, bool> condition, Func<GoalSet, AutoGoalInfo, Goal> constructor)
    parameters:
    - id: name
      type: System.String
      description: The name of the goal
    - id: triggers
      type: TinyLife.Goals.GoalTrigger[]
      description: A set of <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> instances which represents the triggers that this goal should react to
    - id: condition
      type: System.Func{System.Object,System.Boolean}
      description: A condition that determines whether the goal should be triggered or advanced
    - id: constructor
      type: System.Func{TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo,TinyLife.Goals.Goal}
      description: The function that should be called to construct a goal instance
    content.vb: Protected Sub New(name As String, triggers As GoalTrigger(), condition As Func(Of Object, Boolean), constructor As Func(Of GoalSet, AutoGoalInfo, Goal))
  overload: TinyLife.Goals.AutoGoalInfo.#ctor*
  nameWithType.vb: AutoGoalInfo.New(String, GoalTrigger(), Func(Of Object, Boolean), Func(Of GoalSet, AutoGoalInfo, Goal))
  fullName.vb: TinyLife.Goals.AutoGoalInfo.New(String, TinyLife.Goals.GoalTrigger(), System.Func(Of Object, Boolean), System.Func(Of TinyLife.Goals.GoalSet, TinyLife.Goals.AutoGoalInfo, TinyLife.Goals.Goal))
  name.vb: New(String, GoalTrigger(), Func(Of Object, Boolean), Func(Of GoalSet, AutoGoalInfo, Goal))
- uid: TinyLife.Goals.AutoGoalInfo.Timed``1(System.String,System.TimeSpan,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  commentId: M:TinyLife.Goals.AutoGoalInfo.Timed``1(System.String,System.TimeSpan,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  id: Timed``1(System.String,System.TimeSpan,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  parent: TinyLife.Goals.AutoGoalInfo
  langs:
  - csharp
  - vb
  name: Timed<T>(string, TimeSpan, Func<T, bool>, params GoalTrigger[])
  nameWithType: AutoGoalInfo.Timed<T>(string, TimeSpan, Func<T, bool>, params GoalTrigger[])
  fullName: TinyLife.Goals.AutoGoalInfo.Timed<T>(string, System.TimeSpan, System.Func<T, bool>, params TinyLife.Goals.GoalTrigger[])
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Creates a new timed auto goal info which will construct a <xref href="TinyLife.Goals.TimedGoal" data-throw-if-not-resolved="false"></xref>

    Check <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> documentation to see if the given <code class="paramref">triggers</code> are compatible with the type parameter <code class="typeparamref">T</code> and this type of goal.
  example: []
  syntax:
    content: public static AutoGoalInfo Timed<T>(string name, TimeSpan goalTime, Func<T, bool> condition = null, params GoalTrigger[] triggers)
    parameters:
    - id: name
      type: System.String
      description: The name of the goal
    - id: goalTime
      type: System.TimeSpan
      description: The total time until this goal is considered completed
    - id: condition
      type: System.Func{{T},System.Boolean}
      description: A condition that determines whether the goal should be triggered or advanced
    - id: triggers
      type: TinyLife.Goals.GoalTrigger[]
      description: A set of <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> instances which represents the triggers that this goal should react to
    typeParameters:
    - id: T
      description: The type of object that this goal is related to. See the documentation for the chosen <code class="paramref">triggers</code> for compatibility between goal objects and goal triggers
    return:
      type: TinyLife.Goals.AutoGoalInfo
      description: An auto goal info with the given settings
    content.vb: Public Shared Function Timed(Of T)(name As String, goalTime As TimeSpan, condition As Func(Of T, Boolean) = Nothing, ParamArray triggers As GoalTrigger()) As AutoGoalInfo
  overload: TinyLife.Goals.AutoGoalInfo.Timed*
  nameWithType.vb: AutoGoalInfo.Timed(Of T)(String, TimeSpan, Func(Of T, Boolean), ParamArray GoalTrigger())
  fullName.vb: TinyLife.Goals.AutoGoalInfo.Timed(Of T)(String, System.TimeSpan, System.Func(Of T, Boolean), ParamArray TinyLife.Goals.GoalTrigger())
  name.vb: Timed(Of T)(String, TimeSpan, Func(Of T, Boolean), ParamArray GoalTrigger())
- uid: TinyLife.Goals.AutoGoalInfo.Amount``1(System.String,System.Single,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  commentId: M:TinyLife.Goals.AutoGoalInfo.Amount``1(System.String,System.Single,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  id: Amount``1(System.String,System.Single,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  parent: TinyLife.Goals.AutoGoalInfo
  langs:
  - csharp
  - vb
  name: Amount<T>(string, float, Func<T, bool>, params GoalTrigger[])
  nameWithType: AutoGoalInfo.Amount<T>(string, float, Func<T, bool>, params GoalTrigger[])
  fullName: TinyLife.Goals.AutoGoalInfo.Amount<T>(string, float, System.Func<T, bool>, params TinyLife.Goals.GoalTrigger[])
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Creates a new amount-based auto goal info which will construct an <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref>

    Check <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> documentation to see if the given <code class="paramref">triggers</code> are compatible with the type parameter <code class="typeparamref">T</code> and this type of goal.
  example: []
  syntax:
    content: public static AutoGoalInfo Amount<T>(string name, float goalAmount, Func<T, bool> condition = null, params GoalTrigger[] triggers)
    parameters:
    - id: name
      type: System.String
      description: The name of the goal
    - id: goalAmount
      type: System.Single
      description: The total amount that needs to be reached until this goal is completed
    - id: condition
      type: System.Func{{T},System.Boolean}
      description: A condition that determines whether the goal should be triggered or advanced
    - id: triggers
      type: TinyLife.Goals.GoalTrigger[]
      description: A set of <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> instances which represents the triggers that this goal should react to
    typeParameters:
    - id: T
      description: The type of object that this goal is related to. See the documentation for the chosen <code class="paramref">triggers</code> for compatibility between goal objects and goal triggers
    return:
      type: TinyLife.Goals.AutoGoalInfo
      description: An auto goal info with the given settings
    content.vb: Public Shared Function Amount(Of T)(name As String, goalAmount As Single, condition As Func(Of T, Boolean) = Nothing, ParamArray triggers As GoalTrigger()) As AutoGoalInfo
  overload: TinyLife.Goals.AutoGoalInfo.Amount*
  nameWithType.vb: AutoGoalInfo.Amount(Of T)(String, Single, Func(Of T, Boolean), ParamArray GoalTrigger())
  fullName.vb: TinyLife.Goals.AutoGoalInfo.Amount(Of T)(String, Single, System.Func(Of T, Boolean), ParamArray TinyLife.Goals.GoalTrigger())
  name.vb: Amount(Of T)(String, Single, Func(Of T, Boolean), ParamArray GoalTrigger())
- uid: TinyLife.Goals.AutoGoalInfo.Distinct``1(System.String,System.Int32,System.Func{``0,System.String},System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  commentId: M:TinyLife.Goals.AutoGoalInfo.Distinct``1(System.String,System.Int32,System.Func{``0,System.String},System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  id: Distinct``1(System.String,System.Int32,System.Func{``0,System.String},System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  parent: TinyLife.Goals.AutoGoalInfo
  langs:
  - csharp
  - vb
  name: Distinct<T>(string, int, Func<T, string>, Func<T, bool>, params GoalTrigger[])
  nameWithType: AutoGoalInfo.Distinct<T>(string, int, Func<T, string>, Func<T, bool>, params GoalTrigger[])
  fullName: TinyLife.Goals.AutoGoalInfo.Distinct<T>(string, int, System.Func<T, string>, System.Func<T, bool>, params TinyLife.Goals.GoalTrigger[])
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Creates a new auto goal info which will construct a <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref>.

    This method creates a distinct goal that requires a set of distinctly named objects and that is completed when the <code class="paramref">goalItemAmount</code> is reached.

    Check <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> documentation to see if the given <code class="paramref">triggers</code> are compatible with the type parameter <code class="typeparamref">T</code> and this type of goal.
  example: []
  syntax:
    content: public static AutoGoalInfo Distinct<T>(string name, int goalItemAmount, Func<T, string> goalItemNameSelector, Func<T, bool> condition = null, params GoalTrigger[] triggers)
    parameters:
    - id: name
      type: System.String
      description: The name of the goal
    - id: goalItemAmount
      type: System.Int32
      description: The amount of distinct items that need to be triggered for this goal to be completed
    - id: goalItemNameSelector
      type: System.Func{{T},System.String}
      description: A function that determines the distinct name of an object that this goal has been triggered for
    - id: condition
      type: System.Func{{T},System.Boolean}
      description: A condition that determines whether the goal should be triggered or advanced
    - id: triggers
      type: TinyLife.Goals.GoalTrigger[]
      description: A set of <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> instances which represents the triggers that this goal should react to
    typeParameters:
    - id: T
      description: The type of object that this goal is related to. See the documentation for the chosen <code class="paramref">triggers</code> for compatibility between goal objects and goal triggers
    return:
      type: TinyLife.Goals.AutoGoalInfo
      description: An auto goal info with the given settings
    content.vb: Public Shared Function Distinct(Of T)(name As String, goalItemAmount As Integer, goalItemNameSelector As Func(Of T, String), condition As Func(Of T, Boolean) = Nothing, ParamArray triggers As GoalTrigger()) As AutoGoalInfo
  overload: TinyLife.Goals.AutoGoalInfo.Distinct*
  nameWithType.vb: AutoGoalInfo.Distinct(Of T)(String, Integer, Func(Of T, String), Func(Of T, Boolean), ParamArray GoalTrigger())
  fullName.vb: TinyLife.Goals.AutoGoalInfo.Distinct(Of T)(String, Integer, System.Func(Of T, String), System.Func(Of T, Boolean), ParamArray TinyLife.Goals.GoalTrigger())
  name.vb: Distinct(Of T)(String, Integer, Func(Of T, String), Func(Of T, Boolean), ParamArray GoalTrigger())
- uid: TinyLife.Goals.AutoGoalInfo.Distinct``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Func{``0,System.String},System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  commentId: M:TinyLife.Goals.AutoGoalInfo.Distinct``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Func{``0,System.String},System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  id: Distinct``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Func{``0,System.String},System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  parent: TinyLife.Goals.AutoGoalInfo
  langs:
  - csharp
  - vb
  name: Distinct<T>(string, IEnumerable<string>, Func<T, string>, Func<T, bool>, params GoalTrigger[])
  nameWithType: AutoGoalInfo.Distinct<T>(string, IEnumerable<string>, Func<T, string>, Func<T, bool>, params GoalTrigger[])
  fullName: TinyLife.Goals.AutoGoalInfo.Distinct<T>(string, System.Collections.Generic.IEnumerable<string>, System.Func<T, string>, System.Func<T, bool>, params TinyLife.Goals.GoalTrigger[])
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Creates a new auto goal info which will construct a <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref>.

    This method creates a distinct goal that requires a set of distinctly named objects and that is completed when the set of objects matches the <code class="paramref">goalItems</code> exactly.

    Check <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> documentation to see if the given <code class="paramref">triggers</code> are compatible with the type parameter <code class="typeparamref">T</code> and this type of goal.
  example: []
  syntax:
    content: public static AutoGoalInfo Distinct<T>(string name, IEnumerable<string> goalItems, Func<T, string> goalItemNameSelector, Func<T, bool> condition = null, params GoalTrigger[] triggers)
    parameters:
    - id: name
      type: System.String
      description: The name of the goal
    - id: goalItems
      type: System.Collections.Generic.IEnumerable{System.String}
      description: A set of items that this goal has to be triggered for for the goal to be completed
    - id: goalItemNameSelector
      type: System.Func{{T},System.String}
      description: A function that determines the distinct name of an object that this goal has been triggered for
    - id: condition
      type: System.Func{{T},System.Boolean}
      description: A condition that determines whether the goal should be triggered or advanced
    - id: triggers
      type: TinyLife.Goals.GoalTrigger[]
      description: A set of <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> instances which represents the triggers that this goal should react to
    typeParameters:
    - id: T
      description: The type of object that this goal is related to. See the documentation for the chosen <code class="paramref">triggers</code> for compatibility between goal objects and goal triggers
    return:
      type: TinyLife.Goals.AutoGoalInfo
      description: An auto goal info with the given settings
    content.vb: Public Shared Function Distinct(Of T)(name As String, goalItems As IEnumerable(Of String), goalItemNameSelector As Func(Of T, String), condition As Func(Of T, Boolean) = Nothing, ParamArray triggers As GoalTrigger()) As AutoGoalInfo
  overload: TinyLife.Goals.AutoGoalInfo.Distinct*
  nameWithType.vb: AutoGoalInfo.Distinct(Of T)(String, IEnumerable(Of String), Func(Of T, String), Func(Of T, Boolean), ParamArray GoalTrigger())
  fullName.vb: TinyLife.Goals.AutoGoalInfo.Distinct(Of T)(String, System.Collections.Generic.IEnumerable(Of String), System.Func(Of T, String), System.Func(Of T, Boolean), ParamArray TinyLife.Goals.GoalTrigger())
  name.vb: Distinct(Of T)(String, IEnumerable(Of String), Func(Of T, String), Func(Of T, Boolean), ParamArray GoalTrigger())
- uid: TinyLife.Goals.AutoGoalInfo.Conditioned``1(System.String,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  commentId: M:TinyLife.Goals.AutoGoalInfo.Conditioned``1(System.String,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  id: Conditioned``1(System.String,System.Func{``0,System.Boolean},TinyLife.Goals.GoalTrigger[])
  parent: TinyLife.Goals.AutoGoalInfo
  langs:
  - csharp
  - vb
  name: Conditioned<T>(string, Func<T, bool>, params GoalTrigger[])
  nameWithType: AutoGoalInfo.Conditioned<T>(string, Func<T, bool>, params GoalTrigger[])
  fullName: TinyLife.Goals.AutoGoalInfo.Conditioned<T>(string, System.Func<T, bool>, params TinyLife.Goals.GoalTrigger[])
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Creates a new auto goal info which will construct a <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>.

    Check <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> documentation to see if the given <code class="paramref">triggers</code> are compatible with the type parameter <code class="typeparamref">T</code> and this type of goal.
  example: []
  syntax:
    content: public static AutoGoalInfo Conditioned<T>(string name, Func<T, bool> condition = null, params GoalTrigger[] triggers)
    parameters:
    - id: name
      type: System.String
      description: The name of the goal
    - id: condition
      type: System.Func{{T},System.Boolean}
      description: A condition that determines whether the goal should be triggered or advanced
    - id: triggers
      type: TinyLife.Goals.GoalTrigger[]
      description: A set of <xref href="TinyLife.Goals.GoalTrigger" data-throw-if-not-resolved="false"></xref> instances which represents the triggers that this goal should react to
    typeParameters:
    - id: T
      description: The type of object that this goal is related to. See the documentation for the chosen <code class="paramref">triggers</code> for compatibility between goal objects and goal triggers
    return:
      type: TinyLife.Goals.AutoGoalInfo
      description: An auto goal info with the given settings
    content.vb: Public Shared Function Conditioned(Of T)(name As String, condition As Func(Of T, Boolean) = Nothing, ParamArray triggers As GoalTrigger()) As AutoGoalInfo
  overload: TinyLife.Goals.AutoGoalInfo.Conditioned*
  nameWithType.vb: AutoGoalInfo.Conditioned(Of T)(String, Func(Of T, Boolean), ParamArray GoalTrigger())
  fullName.vb: TinyLife.Goals.AutoGoalInfo.Conditioned(Of T)(String, System.Func(Of T, Boolean), ParamArray TinyLife.Goals.GoalTrigger())
  name.vb: Conditioned(Of T)(String, Func(Of T, Boolean), ParamArray GoalTrigger())
references:
- uid: TinyLife.Goals.GoalInfo
  commentId: T:TinyLife.Goals.GoalInfo
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalInfo.html
  name: GoalInfo
  nameWithType: GoalInfo
  fullName: TinyLife.Goals.GoalInfo
- uid: TinyLife.Goals.AmountGoal
  commentId: T:TinyLife.Goals.AmountGoal
  href: TinyLife.Goals.AmountGoal.html
  name: AmountGoal
  nameWithType: AmountGoal
  fullName: TinyLife.Goals.AmountGoal
- uid: TinyLife.Goals.ConditionedGoal
  commentId: T:TinyLife.Goals.ConditionedGoal
  href: TinyLife.Goals.ConditionedGoal.html
  name: ConditionedGoal
  nameWithType: ConditionedGoal
  fullName: TinyLife.Goals.ConditionedGoal
- uid: TinyLife.Goals.DistinctGoal`1
  commentId: T:TinyLife.Goals.DistinctGoal`1
  href: TinyLife.Goals.DistinctGoal-1.html
  name: DistinctGoal<T>
  nameWithType: DistinctGoal<T>
  fullName: TinyLife.Goals.DistinctGoal<T>
  nameWithType.vb: DistinctGoal(Of T)
  fullName.vb: TinyLife.Goals.DistinctGoal(Of T)
  name.vb: DistinctGoal(Of T)
  spec.csharp:
  - uid: TinyLife.Goals.DistinctGoal`1
    name: DistinctGoal
    href: TinyLife.Goals.DistinctGoal-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.DistinctGoal`1
    name: DistinctGoal
    href: TinyLife.Goals.DistinctGoal-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Goals.GoalInfo.Name
  commentId: F:TinyLife.Goals.GoalInfo.Name
  parent: TinyLife.Goals.GoalInfo
  href: TinyLife.Goals.GoalInfo.html#TinyLife_Goals_GoalInfo_Name
  name: Name
  nameWithType: GoalInfo.Name
  fullName: TinyLife.Goals.GoalInfo.Name
- uid: TinyLife.Goals.GoalInfo.Construct(TinyLife.Goals.GoalSet)
  commentId: M:TinyLife.Goals.GoalInfo.Construct(TinyLife.Goals.GoalSet)
  parent: TinyLife.Goals.GoalInfo
  href: TinyLife.Goals.GoalInfo.html#TinyLife_Goals_GoalInfo_Construct_TinyLife_Goals_GoalSet_
  name: Construct(GoalSet)
  nameWithType: GoalInfo.Construct(GoalSet)
  fullName: TinyLife.Goals.GoalInfo.Construct(TinyLife.Goals.GoalSet)
  spec.csharp:
  - uid: TinyLife.Goals.GoalInfo.Construct(TinyLife.Goals.GoalSet)
    name: Construct
    href: TinyLife.Goals.GoalInfo.html#TinyLife_Goals_GoalInfo_Construct_TinyLife_Goals_GoalSet_
  - name: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    href: TinyLife.Goals.GoalSet.html
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.GoalInfo.Construct(TinyLife.Goals.GoalSet)
    name: Construct
    href: TinyLife.Goals.GoalInfo.html#TinyLife_Goals_GoalInfo_Construct_TinyLife_Goals_GoalSet_
  - name: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    href: TinyLife.Goals.GoalSet.html
  - name: )
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Misc.GenericDataHolder
  definition: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: GenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(string)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Goals.AutoGoalInfo.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<AutoGoalInfo>(AutoGoalInfo)
  nameWithType: Extensions.JsonCopy<AutoGoalInfo>(AutoGoalInfo)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.AutoGoalInfo>(TinyLife.Goals.AutoGoalInfo)
  nameWithType.vb: Extensions.JsonCopy(Of AutoGoalInfo)(AutoGoalInfo)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.AutoGoalInfo)(TinyLife.Goals.AutoGoalInfo)
  name.vb: JsonCopy(Of AutoGoalInfo)(AutoGoalInfo)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.AutoGoalInfo)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Goals.AutoGoalInfo
    name: AutoGoalInfo
    href: TinyLife.Goals.AutoGoalInfo.html
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.AutoGoalInfo
    name: AutoGoalInfo
    href: TinyLife.Goals.AutoGoalInfo.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.AutoGoalInfo)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.AutoGoalInfo
    name: AutoGoalInfo
    href: TinyLife.Goals.AutoGoalInfo.html
  - name: )
  - name: (
  - uid: TinyLife.Goals.AutoGoalInfo
    name: AutoGoalInfo
    href: TinyLife.Goals.AutoGoalInfo.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Goals.GoalTrigger
  commentId: T:TinyLife.Goals.GoalTrigger
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalTrigger.html
  name: GoalTrigger
  nameWithType: GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger
- uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  commentId: M:TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  isExternal: true
  href: TinyLife.Goals.IGoalTriggerable.html#TinyLife_Goals_IGoalTriggerable_Trigger_TinyLife_Goals_IGoalTriggerable_System_Object_TinyLife_Goals_GoalTrigger_System_Object___
  name: Trigger(IGoalTriggerable, object, GoalTrigger, object[])
  nameWithType: IGoalTriggerable.Trigger(IGoalTriggerable, object, GoalTrigger, object[])
  fullName: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable, object, TinyLife.Goals.GoalTrigger, object[])
  nameWithType.vb: IGoalTriggerable.Trigger(IGoalTriggerable, Object, GoalTrigger, Object())
  fullName.vb: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable, Object, TinyLife.Goals.GoalTrigger, Object())
  name.vb: Trigger(IGoalTriggerable, Object, GoalTrigger, Object())
  spec.csharp:
  - uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
    name: Trigger
    href: TinyLife.Goals.IGoalTriggerable.html#TinyLife_Goals_IGoalTriggerable_Trigger_TinyLife_Goals_IGoalTriggerable_System_Object_TinyLife_Goals_GoalTrigger_System_Object___
  - name: (
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
    href: TinyLife.Goals.IGoalTriggerable.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
    name: Trigger
    href: TinyLife.Goals.IGoalTriggerable.html#TinyLife_Goals_IGoalTriggerable_Trigger_TinyLife_Goals_IGoalTriggerable_System_Object_TinyLife_Goals_GoalTrigger_System_Object___
  - name: (
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
    href: TinyLife.Goals.IGoalTriggerable.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: TinyLife.Goals.GoalTrigger[]
  isExternal: true
  href: TinyLife.Goals.GoalTrigger.html
  name: GoalTrigger[]
  nameWithType: GoalTrigger[]
  fullName: TinyLife.Goals.GoalTrigger[]
  nameWithType.vb: GoalTrigger()
  fullName.vb: TinyLife.Goals.GoalTrigger()
  name.vb: GoalTrigger()
  spec.csharp:
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: (
  - name: )
- uid: System.Func{System.Object,System.Boolean}
  commentId: T:System.Func{System.Object,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<object, bool>
  nameWithType: Func<object, bool>
  fullName: System.Func<object, bool>
  nameWithType.vb: Func(Of Object, Boolean)
  fullName.vb: System.Func(Of Object, Boolean)
  name.vb: Func(Of Object, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Goals.AutoGoalInfo.#ctor*
  commentId: Overload:TinyLife.Goals.AutoGoalInfo.#ctor
  href: TinyLife.Goals.AutoGoalInfo.html#TinyLife_Goals_AutoGoalInfo__ctor_System_String_TinyLife_Goals_GoalTrigger___System_Func_System_Object_System_Boolean__System_Func_TinyLife_Goals_GoalSet_TinyLife_Goals_AutoGoalInfo_TinyLife_Goals_Goal__
  name: AutoGoalInfo
  nameWithType: AutoGoalInfo.AutoGoalInfo
  fullName: TinyLife.Goals.AutoGoalInfo.AutoGoalInfo
  nameWithType.vb: AutoGoalInfo.New
  fullName.vb: TinyLife.Goals.AutoGoalInfo.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Func{TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo,TinyLife.Goals.Goal}
  commentId: T:System.Func{TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo,TinyLife.Goals.Goal}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<GoalSet, AutoGoalInfo, Goal>
  nameWithType: Func<GoalSet, AutoGoalInfo, Goal>
  fullName: System.Func<TinyLife.Goals.GoalSet, TinyLife.Goals.AutoGoalInfo, TinyLife.Goals.Goal>
  nameWithType.vb: Func(Of GoalSet, AutoGoalInfo, Goal)
  fullName.vb: System.Func(Of TinyLife.Goals.GoalSet, TinyLife.Goals.AutoGoalInfo, TinyLife.Goals.Goal)
  name.vb: Func(Of GoalSet, AutoGoalInfo, Goal)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    href: TinyLife.Goals.GoalSet.html
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.AutoGoalInfo
    name: AutoGoalInfo
    href: TinyLife.Goals.AutoGoalInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.Goal
    name: Goal
    href: TinyLife.Goals.Goal.html
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    href: TinyLife.Goals.GoalSet.html
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.AutoGoalInfo
    name: AutoGoalInfo
    href: TinyLife.Goals.AutoGoalInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.Goal
    name: Goal
    href: TinyLife.Goals.Goal.html
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Goals.TimedGoal
  commentId: T:TinyLife.Goals.TimedGoal
  href: TinyLife.Goals.TimedGoal.html
  name: TimedGoal
  nameWithType: TimedGoal
  fullName: TinyLife.Goals.TimedGoal
- uid: TinyLife.Goals.AutoGoalInfo.Timed*
  commentId: Overload:TinyLife.Goals.AutoGoalInfo.Timed
  href: TinyLife.Goals.AutoGoalInfo.html#TinyLife_Goals_AutoGoalInfo_Timed__1_System_String_System_TimeSpan_System_Func___0_System_Boolean__TinyLife_Goals_GoalTrigger___
  name: Timed
  nameWithType: AutoGoalInfo.Timed
  fullName: TinyLife.Goals.AutoGoalInfo.Timed
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, bool>
  nameWithType: Func<T, bool>
  fullName: System.Func<T, bool>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Goals.AutoGoalInfo
  commentId: T:TinyLife.Goals.AutoGoalInfo
  parent: TinyLife.Goals
  href: TinyLife.Goals.AutoGoalInfo.html
  name: AutoGoalInfo
  nameWithType: AutoGoalInfo
  fullName: TinyLife.Goals.AutoGoalInfo
- uid: TinyLife.Goals.AutoGoalInfo.Amount*
  commentId: Overload:TinyLife.Goals.AutoGoalInfo.Amount
  href: TinyLife.Goals.AutoGoalInfo.html#TinyLife_Goals_AutoGoalInfo_Amount__1_System_String_System_Single_System_Func___0_System_Boolean__TinyLife_Goals_GoalTrigger___
  name: Amount
  nameWithType: AutoGoalInfo.Amount
  fullName: TinyLife.Goals.AutoGoalInfo.Amount
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Goals.AutoGoalInfo.Distinct*
  commentId: Overload:TinyLife.Goals.AutoGoalInfo.Distinct
  href: TinyLife.Goals.AutoGoalInfo.html#TinyLife_Goals_AutoGoalInfo_Distinct__1_System_String_System_Int32_System_Func___0_System_String__System_Func___0_System_Boolean__TinyLife_Goals_GoalTrigger___
  name: Distinct
  nameWithType: AutoGoalInfo.Distinct
  fullName: TinyLife.Goals.AutoGoalInfo.Distinct
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Func{{T},System.String}
  commentId: T:System.Func{``0,System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, string>
  nameWithType: Func<T, string>
  fullName: System.Func<T, string>
  nameWithType.vb: Func(Of T, String)
  fullName.vb: System.Func(Of T, String)
  name.vb: Func(Of T, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Goals.AutoGoalInfo.Conditioned*
  commentId: Overload:TinyLife.Goals.AutoGoalInfo.Conditioned
  href: TinyLife.Goals.AutoGoalInfo.html#TinyLife_Goals_AutoGoalInfo_Conditioned__1_System_String_System_Func___0_System_Boolean__TinyLife_Goals_GoalTrigger___
  name: Conditioned
  nameWithType: AutoGoalInfo.Conditioned
  fullName: TinyLife.Goals.AutoGoalInfo.Conditioned
