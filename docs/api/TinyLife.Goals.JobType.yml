### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.JobType
  commentId: T:TinyLife.Goals.JobType
  id: JobType
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.JobType.#ctor(System.String,MLEM.Textures.TextureRegion,System.Single,System.ValueTuple{System.Int32,System.Int32},System.DayOfWeek[])
  - TinyLife.Goals.JobType.Businessperson
  - TinyLife.Goals.JobType.CanGetRaise
  - TinyLife.Goals.JobType.CanQuitOrBeFired
  - TinyLife.Goals.JobType.ChoicePrompts
  - TinyLife.Goals.JobType.Construct(TinyLife.Objects.Person,System.Int32)
  - TinyLife.Goals.JobType.DailyTaskImportance
  - TinyLife.Goals.JobType.DailyTasks
  - TinyLife.Goals.JobType.Doctor
  - TinyLife.Goals.JobType.Firefighter
  - TinyLife.Goals.JobType.GetDefaultHourlyPay(TinyLife.Objects.Person)
  - TinyLife.Goals.JobType.GetDisplayName(System.Nullable{System.Int32})
  - TinyLife.Goals.JobType.GetRequiredPromotionSkills(TinyLife.Goals.Job)
  - TinyLife.Goals.JobType.HasSpecialLocalization
  - TinyLife.Goals.JobType.HourlyPay
  - TinyLife.Goals.JobType.Icon
  - TinyLife.Goals.JobType.IsTimeToWork(System.TimeSpan)
  - TinyLife.Goals.JobType.MaxLevel
  - TinyLife.Goals.JobType.Migrations
  - TinyLife.Goals.JobType.Name
  - TinyLife.Goals.JobType.OffWorkDays
  - TinyLife.Goals.JobType.OnLevelChanged(TinyLife.Goals.Job,System.Int32)
  - TinyLife.Goals.JobType.OnRaiseReceived(TinyLife.Goals.Job)
  - TinyLife.Goals.JobType.OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  - TinyLife.Goals.JobType.OnWorkHoursOver(TinyLife.Goals.Job)
  - TinyLife.Goals.JobType.OnWorkStarted(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  - TinyLife.Goals.JobType.OnWorkStartsInAnHour(TinyLife.Goals.Job)
  - TinyLife.Goals.JobType.PrimarySchoolStudent
  - TinyLife.Goals.JobType.Programmer
  - TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
  - TinyLife.Goals.JobType.RequiredAges
  - TinyLife.Goals.JobType.RequiredPromotionSkills
  - TinyLife.Goals.JobType.RetailWorker
  - TinyLife.Goals.JobType.Scientist
  - TinyLife.Goals.JobType.SourceString
  - TinyLife.Goals.JobType.Teacher
  - TinyLife.Goals.JobType.ToScheduleString(System.Nullable{System.TimeSpan})
  - TinyLife.Goals.JobType.Types
  - TinyLife.Goals.JobType.UpdateWorking(TinyLife.Goals.Job,TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
  - TinyLife.Goals.JobType.WorkHours
  langs:
  - csharp
  - vb
  name: JobType
  nameWithType: JobType
  fullName: TinyLife.Goals.JobType
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A job type is a singleton containing various kinds of data for a <xref href="TinyLife.Goals.Job" data-throw-if-not-resolved="false"></xref> instance.

    New jobs can be registered using <xref href="TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(MigratingStaticJsonConverter<JobType>), new object[] { typeof(JobType), "PrivateTypes", true })]

      public class JobType : GenericDataHolder, IGenericDataHolder, IEmotionSource
    content.vb: >-
      <JsonConverter(GetType(MigratingStaticJsonConverter(Of JobType)), New Object() { GetType(JobType), "PrivateTypes", True })>

      Public Class JobType Inherits GenericDataHolder Implements IGenericDataHolder, IEmotionSource
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  derivedClasses:
  - TinyLife.Goals.StudentJobType
  implements:
  - MLEM.Misc.IGenericDataHolder
  - TinyLife.Emotions.IEmotionSource
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.JobType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Goals.JobType.Types
  commentId: F:TinyLife.Goals.JobType.Types
  id: Types
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: JobType.Types
  fullName: TinyLife.Goals.JobType.Types
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A registry of all <xref href="TinyLife.Goals.JobType" data-throw-if-not-resolved="false"></xref> instances in the game and mods.

    Register new jobs using <xref href="TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, JobType> Types
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Goals.JobType}
    content.vb: Public Shared ReadOnly Types As ReadOnlyDictionary(Of String, JobType)
- uid: TinyLife.Goals.JobType.PrimarySchoolStudent
  commentId: F:TinyLife.Goals.JobType.PrimarySchoolStudent
  id: PrimarySchoolStudent
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: PrimarySchoolStudent
  nameWithType: JobType.PrimarySchoolStudent
  fullName: TinyLife.Goals.JobType.PrimarySchoolStudent
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly JobType PrimarySchoolStudent
    return:
      type: TinyLife.Goals.JobType
    content.vb: Public Shared ReadOnly PrimarySchoolStudent As JobType
- uid: TinyLife.Goals.JobType.Businessperson
  commentId: F:TinyLife.Goals.JobType.Businessperson
  id: Businessperson
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Businessperson
  nameWithType: JobType.Businessperson
  fullName: TinyLife.Goals.JobType.Businessperson
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly JobType Businessperson
    return:
      type: TinyLife.Goals.JobType
    content.vb: Public Shared ReadOnly Businessperson As JobType
- uid: TinyLife.Goals.JobType.Firefighter
  commentId: F:TinyLife.Goals.JobType.Firefighter
  id: Firefighter
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Firefighter
  nameWithType: JobType.Firefighter
  fullName: TinyLife.Goals.JobType.Firefighter
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly JobType Firefighter
    return:
      type: TinyLife.Goals.JobType
    content.vb: Public Shared ReadOnly Firefighter As JobType
- uid: TinyLife.Goals.JobType.Doctor
  commentId: F:TinyLife.Goals.JobType.Doctor
  id: Doctor
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Doctor
  nameWithType: JobType.Doctor
  fullName: TinyLife.Goals.JobType.Doctor
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly JobType Doctor
    return:
      type: TinyLife.Goals.JobType
    content.vb: Public Shared ReadOnly Doctor As JobType
- uid: TinyLife.Goals.JobType.Programmer
  commentId: F:TinyLife.Goals.JobType.Programmer
  id: Programmer
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Programmer
  nameWithType: JobType.Programmer
  fullName: TinyLife.Goals.JobType.Programmer
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly JobType Programmer
    return:
      type: TinyLife.Goals.JobType
    content.vb: Public Shared ReadOnly Programmer As JobType
- uid: TinyLife.Goals.JobType.RetailWorker
  commentId: F:TinyLife.Goals.JobType.RetailWorker
  id: RetailWorker
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: RetailWorker
  nameWithType: JobType.RetailWorker
  fullName: TinyLife.Goals.JobType.RetailWorker
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly JobType RetailWorker
    return:
      type: TinyLife.Goals.JobType
    content.vb: Public Shared ReadOnly RetailWorker As JobType
- uid: TinyLife.Goals.JobType.Teacher
  commentId: F:TinyLife.Goals.JobType.Teacher
  id: Teacher
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Teacher
  nameWithType: JobType.Teacher
  fullName: TinyLife.Goals.JobType.Teacher
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly JobType Teacher
    return:
      type: TinyLife.Goals.JobType
    content.vb: Public Shared ReadOnly Teacher As JobType
- uid: TinyLife.Goals.JobType.Scientist
  commentId: F:TinyLife.Goals.JobType.Scientist
  id: Scientist
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Scientist
  nameWithType: JobType.Scientist
  fullName: TinyLife.Goals.JobType.Scientist
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly JobType Scientist
    return:
      type: TinyLife.Goals.JobType
    content.vb: Public Shared ReadOnly Scientist As JobType
- uid: TinyLife.Goals.JobType.Name
  commentId: F:TinyLife.Goals.JobType.Name
  id: Name
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: JobType.Name
  fullName: TinyLife.Goals.JobType.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The name of this job type
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Goals.JobType.Icon
  commentId: F:TinyLife.Goals.JobType.Icon
  id: Icon
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: JobType.Icon
  fullName: TinyLife.Goals.JobType.Icon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: This job type's icon.
  example: []
  syntax:
    content: public readonly TextureRegion Icon
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Icon As TextureRegion
- uid: TinyLife.Goals.JobType.HourlyPay
  commentId: F:TinyLife.Goals.JobType.HourlyPay
  id: HourlyPay
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: HourlyPay
  nameWithType: JobType.HourlyPay
  fullName: TinyLife.Goals.JobType.HourlyPay
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The amount of tiny bucks that being at the job for an hour pays.

    To get a modified default hourly pay that also takes <xref href="TinyLife.PerSaveOptions.Difficulty" data-throw-if-not-resolved="false"></xref> into account, use <xref href="TinyLife.Goals.JobType.GetDefaultHourlyPay(TinyLife.Objects.Person)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly float HourlyPay
    return:
      type: System.Single
    content.vb: Public ReadOnly HourlyPay As Single
- uid: TinyLife.Goals.JobType.WorkHours
  commentId: F:TinyLife.Goals.JobType.WorkHours
  id: WorkHours
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: WorkHours
  nameWithType: JobType.WorkHours
  fullName: TinyLife.Goals.JobType.WorkHours
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A <xref href="System.Range" data-throw-if-not-resolved="false"></xref> of hours that this job requires each day.

    Note that the minimum (Start) value is inclusive, but the maximum (End) value is exclusive.
  example: []
  syntax:
    content: public readonly (int Start, int End) WorkHours
    return:
      type: System.ValueTuple{System.Int32,System.Int32}
    content.vb: Public ReadOnly WorkHours As (Start As Integer, [End] As Integer)
- uid: TinyLife.Goals.JobType.OffWorkDays
  commentId: F:TinyLife.Goals.JobType.OffWorkDays
  id: OffWorkDays
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: OffWorkDays
  nameWithType: JobType.OffWorkDays
  fullName: TinyLife.Goals.JobType.OffWorkDays
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A set of <xref href="System.DayOfWeek" data-throw-if-not-resolved="false"></xref> values which are days off of this job.

    On days contained in this list, the <xref href="TinyLife.Goals.JobType.WorkHours" data-throw-if-not-resolved="false"></xref> don't apply.
  example: []
  syntax:
    content: public readonly DayOfWeek[] OffWorkDays
    return:
      type: System.DayOfWeek[]
    content.vb: Public ReadOnly OffWorkDays As DayOfWeek()
- uid: TinyLife.Goals.JobType.RequiredPromotionSkills
  commentId: P:TinyLife.Goals.JobType.RequiredPromotionSkills
  id: RequiredPromotionSkills
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: RequiredPromotionSkills
  nameWithType: JobType.RequiredPromotionSkills
  fullName: TinyLife.Goals.JobType.RequiredPromotionSkills
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A set of skills and their level curves that are required for promotion to the next <xref href="TinyLife.Goals.Job.Level" data-throw-if-not-resolved="false"></xref> of this job type.

    The level curve is a multiplier for the job's current <xref href="TinyLife.Goals.Job.Level" data-throw-if-not-resolved="false"></xref> that yields the required skill level. Specifically, the required skill level for any given job level is calculated as <code>(curve * (jobLevel + 1)).Floor()</code>.
  example: []
  syntax:
    content: public (SkillType Type, float LevelCurve)[] RequiredPromotionSkills { get; init; }
    parameters: []
    return:
      type: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}[]
    content.vb: Public Property RequiredPromotionSkills As (Type As SkillType, LevelCurve As Single)()
  overload: TinyLife.Goals.JobType.RequiredPromotionSkills*
- uid: TinyLife.Goals.JobType.MaxLevel
  commentId: P:TinyLife.Goals.JobType.MaxLevel
  id: MaxLevel
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: MaxLevel
  nameWithType: JobType.MaxLevel
  fullName: TinyLife.Goals.JobType.MaxLevel
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The maximum level of this job, which defaults to 9
  example: []
  syntax:
    content: public int MaxLevel { get; init; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxLevel As Integer
  overload: TinyLife.Goals.JobType.MaxLevel*
- uid: TinyLife.Goals.JobType.HasSpecialLocalization
  commentId: P:TinyLife.Goals.JobType.HasSpecialLocalization
  id: HasSpecialLocalization
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: HasSpecialLocalization
  nameWithType: JobType.HasSpecialLocalization
  fullName: TinyLife.Goals.JobType.HasSpecialLocalization
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Whether this job has special localization info for promotion, demotion, going to work and getting home from work.

    This value defaults to false.
  example: []
  syntax:
    content: public bool HasSpecialLocalization { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasSpecialLocalization As Boolean
  overload: TinyLife.Goals.JobType.HasSpecialLocalization*
- uid: TinyLife.Goals.JobType.RequiredAges
  commentId: P:TinyLife.Goals.JobType.RequiredAges
  id: RequiredAges
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: RequiredAges
  nameWithType: JobType.RequiredAges
  fullName: TinyLife.Goals.JobType.RequiredAges
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The set of ages that a person can have to be able to do this job.

    This value defaults to ~Child, which is all age groups except for <xref href="TinyLife.Objects.AgeGroup.Child" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AgeGroup RequiredAges { get; init; }
    parameters: []
    return:
      type: TinyLife.Objects.AgeGroup
    content.vb: Public Property RequiredAges As AgeGroup
  overload: TinyLife.Goals.JobType.RequiredAges*
- uid: TinyLife.Goals.JobType.CanQuitOrBeFired
  commentId: P:TinyLife.Goals.JobType.CanQuitOrBeFired
  id: CanQuitOrBeFired
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: CanQuitOrBeFired
  nameWithType: JobType.CanQuitOrBeFired
  fullName: TinyLife.Goals.JobType.CanQuitOrBeFired
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Whether a person can quit this job or be fired from it.

    This value defaults to true.
  example: []
  syntax:
    content: public bool CanQuitOrBeFired { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanQuitOrBeFired As Boolean
  overload: TinyLife.Goals.JobType.CanQuitOrBeFired*
- uid: TinyLife.Goals.JobType.CanGetRaise
  commentId: P:TinyLife.Goals.JobType.CanGetRaise
  id: CanGetRaise
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: CanGetRaise
  nameWithType: JobType.CanGetRaise
  fullName: TinyLife.Goals.JobType.CanGetRaise
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Whether a person can get a raise in this job.

    This value defaults to true.
  example: []
  syntax:
    content: public bool CanGetRaise { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanGetRaise As Boolean
  overload: TinyLife.Goals.JobType.CanGetRaise*
- uid: TinyLife.Goals.JobType.DailyTasks
  commentId: P:TinyLife.Goals.JobType.DailyTasks
  id: DailyTasks
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: DailyTasks
  nameWithType: JobType.DailyTasks
  fullName: TinyLife.Goals.JobType.DailyTasks
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A <xref href="TinyLife.Goals.GoalSetInfo" data-throw-if-not-resolved="false"></xref> that determines the daily tasks for this job type.

    This value defaults to null, meaning the job will have no daily tasks.
  example: []
  syntax:
    content: public GoalSetInfo DailyTasks { get; init; }
    parameters: []
    return:
      type: TinyLife.Goals.GoalSetInfo
    content.vb: Public Property DailyTasks As GoalSetInfo
  overload: TinyLife.Goals.JobType.DailyTasks*
- uid: TinyLife.Goals.JobType.DailyTaskImportance
  commentId: P:TinyLife.Goals.JobType.DailyTaskImportance
  id: DailyTaskImportance
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: DailyTaskImportance
  nameWithType: JobType.DailyTaskImportance
  fullName: TinyLife.Goals.JobType.DailyTaskImportance
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The importance of the <xref href="TinyLife.Goals.JobType.DailyTasks" data-throw-if-not-resolved="false"></xref> for job progress.

    This value defaults to 0.25, meaning the completion of this job's daily tasks make up 25% of the performance gained the next day.
  example: []
  syntax:
    content: public float DailyTaskImportance { get; init; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property DailyTaskImportance As Single
  overload: TinyLife.Goals.JobType.DailyTaskImportance*
- uid: TinyLife.Goals.JobType.ChoicePrompts
  commentId: P:TinyLife.Goals.JobType.ChoicePrompts
  id: ChoicePrompts
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: ChoicePrompts
  nameWithType: JobType.ChoicePrompts
  fullName: TinyLife.Goals.JobType.ChoicePrompts
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: A set of <xref href="TinyLife.Actions.ChoicePromptInfo" data-throw-if-not-resolved="false"></xref> instances that will randomly be displayed throughout this job type's work day.
  example: []
  syntax:
    content: public ChoicePromptInfo[] ChoicePrompts { get; init; }
    parameters: []
    return:
      type: TinyLife.Actions.ChoicePromptInfo[]
    content.vb: Public Property ChoicePrompts As ChoicePromptInfo()
  overload: TinyLife.Goals.JobType.ChoicePrompts*
- uid: TinyLife.Goals.JobType.Migrations
  commentId: P:TinyLife.Goals.JobType.Migrations
  id: Migrations
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Migrations
  nameWithType: JobType.Migrations
  fullName: TinyLife.Goals.JobType.Migrations
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The set of migrations that should be applied to <xref href="TinyLife.Goals.Job" data-throw-if-not-resolved="false"></xref> instances of this type when loading from disk.
  example: []
  syntax:
    content: public List<Migration<Job>> Migrations { get; init; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Goals.Job}}
    content.vb: Public Property Migrations As List(Of Migration(Of Job))
  overload: TinyLife.Goals.JobType.Migrations*
- uid: TinyLife.Goals.JobType.SourceString
  commentId: P:TinyLife.Goals.JobType.SourceString
  id: SourceString
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: SourceString
  nameWithType: JobType.SourceString
  fullName: TinyLife.Goals.JobType.SourceString
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: A (localized) string that is displayed when hovering over an <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> that has this source
  example: []
  syntax:
    content: public string SourceString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SourceString As String
  overload: TinyLife.Goals.JobType.SourceString*
  implements:
  - TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.Goals.JobType.#ctor(System.String,MLEM.Textures.TextureRegion,System.Single,System.ValueTuple{System.Int32,System.Int32},System.DayOfWeek[])
  commentId: M:TinyLife.Goals.JobType.#ctor(System.String,MLEM.Textures.TextureRegion,System.Single,System.ValueTuple{System.Int32,System.Int32},System.DayOfWeek[])
  id: '#ctor(System.String,MLEM.Textures.TextureRegion,System.Single,System.ValueTuple{System.Int32,System.Int32},System.DayOfWeek[])'
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: JobType(string, TextureRegion, float, (int Start, int End), params DayOfWeek[])
  nameWithType: JobType.JobType(string, TextureRegion, float, (int Start, int End), params DayOfWeek[])
  fullName: TinyLife.Goals.JobType.JobType(string, MLEM.Textures.TextureRegion, float, (int Start, int End), params System.DayOfWeek[])
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Creates a new job type with the given settings
  example: []
  syntax:
    content: public JobType(string name, TextureRegion icon, float hourlyPay, (int Start, int End) workHours, params DayOfWeek[] offWorkDays)
    parameters:
    - id: name
      type: System.String
      description: The name of the job
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: This job type's icon.
    - id: hourlyPay
      type: System.Single
      description: The hourly wage that this job yields
    - id: workHours
      type: System.ValueTuple{System.Int32,System.Int32}
      description: A range of hours to work each day
    - id: offWorkDays
      type: System.DayOfWeek[]
      description: The days of the week that are off work
    content.vb: Public Sub New(name As String, icon As TextureRegion, hourlyPay As Single, workHours As (Start As Integer, [End] As Integer), ParamArray offWorkDays As DayOfWeek())
  overload: TinyLife.Goals.JobType.#ctor*
  nameWithType.vb: JobType.New(String, TextureRegion, Single, (Start As Integer, End As Integer), ParamArray DayOfWeek())
  fullName.vb: TinyLife.Goals.JobType.New(String, MLEM.Textures.TextureRegion, Single, (Start As Integer, End As Integer), ParamArray System.DayOfWeek())
  name.vb: New(String, TextureRegion, Single, (Start As Integer, End As Integer), ParamArray DayOfWeek())
- uid: TinyLife.Goals.JobType.Construct(TinyLife.Objects.Person,System.Int32)
  commentId: M:TinyLife.Goals.JobType.Construct(TinyLife.Objects.Person,System.Int32)
  id: Construct(TinyLife.Objects.Person,System.Int32)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Construct(Person, int)
  nameWithType: JobType.Construct(Person, int)
  fullName: TinyLife.Goals.JobType.Construct(TinyLife.Objects.Person, int)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Creates a new <xref href="TinyLife.Goals.Job" data-throw-if-not-resolved="false"></xref> from this type's information
  example: []
  syntax:
    content: public Job Construct(Person person, int level = 0)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person that should have the job
    - id: level
      type: System.Int32
      description: The level to start this job with, defaults to 0
    return:
      type: TinyLife.Goals.Job
      description: A new job instance
    content.vb: Public Function Construct(person As Person, level As Integer = 0) As Job
  overload: TinyLife.Goals.JobType.Construct*
  nameWithType.vb: JobType.Construct(Person, Integer)
  fullName.vb: TinyLife.Goals.JobType.Construct(TinyLife.Objects.Person, Integer)
  name.vb: Construct(Person, Integer)
- uid: TinyLife.Goals.JobType.IsTimeToWork(System.TimeSpan)
  commentId: M:TinyLife.Goals.JobType.IsTimeToWork(System.TimeSpan)
  id: IsTimeToWork(System.TimeSpan)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: IsTimeToWork(TimeSpan)
  nameWithType: JobType.IsTimeToWork(TimeSpan)
  fullName: TinyLife.Goals.JobType.IsTimeToWork(System.TimeSpan)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Returns whether the given time (or the game's current time) is in the bounds of <xref href="TinyLife.Goals.JobType.WorkHours" data-throw-if-not-resolved="false"></xref> and outside of the bounds of <xref href="TinyLife.Goals.JobType.OffWorkDays" data-throw-if-not-resolved="false"></xref>. Note that this method does not check additional criteria like whether a person is on vacation, based on <xref href="TinyLife.Goals.Job.DaysOnVacation" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual bool IsTimeToWork(TimeSpan time)
    parameters:
    - id: time
      type: System.TimeSpan
      description: The current time.
    return:
      type: System.Boolean
      description: true if it is time to work, false otherwise
    content.vb: Public Overridable Function IsTimeToWork(time As TimeSpan) As Boolean
  overload: TinyLife.Goals.JobType.IsTimeToWork*
- uid: TinyLife.Goals.JobType.ToScheduleString(System.Nullable{System.TimeSpan})
  commentId: M:TinyLife.Goals.JobType.ToScheduleString(System.Nullable{System.TimeSpan})
  id: ToScheduleString(System.Nullable{System.TimeSpan})
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: ToScheduleString(TimeSpan?)
  nameWithType: JobType.ToScheduleString(TimeSpan?)
  fullName: TinyLife.Goals.JobType.ToScheduleString(System.TimeSpan?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Returns a string representation of the schedule.

    The string includes a line that states the <xref href="TinyLife.Goals.JobType.WorkHours" data-throw-if-not-resolved="false"></xref> and a line that states the <xref href="TinyLife.Goals.JobType.OffWorkDays" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual string ToScheduleString(TimeSpan? currentTime = null)
    parameters:
    - id: currentTime
      type: System.Nullable{System.TimeSpan}
    return:
      type: System.String
      description: A string representation of this job's schedule
    content.vb: Public Overridable Function ToScheduleString(currentTime As TimeSpan? = Nothing) As String
  overload: TinyLife.Goals.JobType.ToScheduleString*
- uid: TinyLife.Goals.JobType.GetDisplayName(System.Nullable{System.Int32})
  commentId: M:TinyLife.Goals.JobType.GetDisplayName(System.Nullable{System.Int32})
  id: GetDisplayName(System.Nullable{System.Int32})
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: GetDisplayName(int?)
  nameWithType: JobType.GetDisplayName(int?)
  fullName: TinyLife.Goals.JobType.GetDisplayName(int?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Returns the display name of this <xref href="TinyLife.Goals.JobType" data-throw-if-not-resolved="false"></xref>, based on the given <code class="paramref">level</code>.

    If no level is given, the job's regular name, without the level-based suffix, is returned.
  example: []
  syntax:
    content: public virtual string GetDisplayName(int? level = null)
    parameters:
    - id: level
      type: System.Nullable{System.Int32}
      description: The level
    return:
      type: System.String
      description: A localized string representing this job's name
    content.vb: Public Overridable Function GetDisplayName(level As Integer? = Nothing) As String
  overload: TinyLife.Goals.JobType.GetDisplayName*
  nameWithType.vb: JobType.GetDisplayName(Integer?)
  fullName.vb: TinyLife.Goals.JobType.GetDisplayName(Integer?)
  name.vb: GetDisplayName(Integer?)
- uid: TinyLife.Goals.JobType.GetRequiredPromotionSkills(TinyLife.Goals.Job)
  commentId: M:TinyLife.Goals.JobType.GetRequiredPromotionSkills(TinyLife.Goals.Job)
  id: GetRequiredPromotionSkills(TinyLife.Goals.Job)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: GetRequiredPromotionSkills(Job)
  nameWithType: JobType.GetRequiredPromotionSkills(Job)
  fullName: TinyLife.Goals.JobType.GetRequiredPromotionSkills(TinyLife.Goals.Job)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Returns the set of skills and levels that are required to promote from the given <code class="paramref">job</code>'s <xref href="TinyLife.Goals.Job.Level" data-throw-if-not-resolved="false"></xref> to the next level
  example: []
  syntax:
    content: public virtual IEnumerable<(SkillType Type, int Level)> GetRequiredPromotionSkills(Job job)
    parameters:
    - id: job
      type: TinyLife.Goals.Job
      description: The current job
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}}
      description: A set of skill types and their required levels for promotion
    content.vb: Public Overridable Function GetRequiredPromotionSkills(job As Job) As IEnumerable(Of (Type As SkillType, Level As Integer))
  overload: TinyLife.Goals.JobType.GetRequiredPromotionSkills*
- uid: TinyLife.Goals.JobType.OnWorkStartsInAnHour(TinyLife.Goals.Job)
  commentId: M:TinyLife.Goals.JobType.OnWorkStartsInAnHour(TinyLife.Goals.Job)
  id: OnWorkStartsInAnHour(TinyLife.Goals.Job)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: OnWorkStartsInAnHour(Job)
  nameWithType: JobType.OnWorkStartsInAnHour(Job)
  fullName: TinyLife.Goals.JobType.OnWorkStartsInAnHour(TinyLife.Goals.Job)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A method that is called when the given <xref href="TinyLife.Goals.Job" data-throw-if-not-resolved="false"></xref> instance starts work in an hour for this job.

    By default, a notification is displayed that instructs the person to head to work soon.
  example: []
  syntax:
    content: public virtual void OnWorkStartsInAnHour(Job job)
    parameters:
    - id: job
      type: TinyLife.Goals.Job
      description: The job instance
    content.vb: Public Overridable Sub OnWorkStartsInAnHour(job As Job)
  overload: TinyLife.Goals.JobType.OnWorkStartsInAnHour*
- uid: TinyLife.Goals.JobType.OnWorkHoursOver(TinyLife.Goals.Job)
  commentId: M:TinyLife.Goals.JobType.OnWorkHoursOver(TinyLife.Goals.Job)
  id: OnWorkHoursOver(TinyLife.Goals.Job)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: OnWorkHoursOver(Job)
  nameWithType: JobType.OnWorkHoursOver(Job)
  fullName: TinyLife.Goals.JobType.OnWorkHoursOver(TinyLife.Goals.Job)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A method that is called when the work hours for the given <xref href="TinyLife.Goals.Job" data-throw-if-not-resolved="false"></xref> instance are over for this job.

    Note that this method is also called if the person didn't go to work, is on vacation, or left early.

    By default, the <xref href="TinyLife.Goals.JobType.DailyTasks" data-throw-if-not-resolved="false"></xref> are reset.
  example: []
  syntax:
    content: public virtual void OnWorkHoursOver(Job job)
    parameters:
    - id: job
      type: TinyLife.Goals.Job
      description: The job instance
    content.vb: Public Overridable Sub OnWorkHoursOver(job As Job)
  overload: TinyLife.Goals.JobType.OnWorkHoursOver*
- uid: TinyLife.Goals.JobType.OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  commentId: M:TinyLife.Goals.JobType.OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  id: OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: OnWorkFinished(Job, WorkAction)
  nameWithType: JobType.OnWorkFinished(Job, WorkAction)
  fullName: TinyLife.Goals.JobType.OnWorkFinished(TinyLife.Goals.Job, TinyLife.Actions.WorkAction)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A method that is called when a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> finishes a <xref href="TinyLife.Actions.WorkAction" data-throw-if-not-resolved="false"></xref> for this job.

    By default, some emotion modifiers are randomly applied.
  example: []
  syntax:
    content: public virtual void OnWorkFinished(Job job, WorkAction action)
    parameters:
    - id: job
      type: TinyLife.Goals.Job
      description: The job instance
    - id: action
      type: TinyLife.Actions.WorkAction
      description: The work action that was completed
    content.vb: Public Overridable Sub OnWorkFinished(job As Job, action As WorkAction)
  overload: TinyLife.Goals.JobType.OnWorkFinished*
- uid: TinyLife.Goals.JobType.OnWorkStarted(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  commentId: M:TinyLife.Goals.JobType.OnWorkStarted(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  id: OnWorkStarted(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: OnWorkStarted(Job, WorkAction)
  nameWithType: JobType.OnWorkStarted(Job, WorkAction)
  fullName: TinyLife.Goals.JobType.OnWorkStarted(TinyLife.Goals.Job, TinyLife.Actions.WorkAction)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A method that is called when a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> starts a <xref href="TinyLife.Actions.WorkAction" data-throw-if-not-resolved="false"></xref> for this job.

    By default, this method does nothing.
  example: []
  syntax:
    content: public virtual void OnWorkStarted(Job job, WorkAction action)
    parameters:
    - id: job
      type: TinyLife.Goals.Job
      description: The job instance
    - id: action
      type: TinyLife.Actions.WorkAction
      description: The work action that was started
    content.vb: Public Overridable Sub OnWorkStarted(job As Job, action As WorkAction)
  overload: TinyLife.Goals.JobType.OnWorkStarted*
- uid: TinyLife.Goals.JobType.OnLevelChanged(TinyLife.Goals.Job,System.Int32)
  commentId: M:TinyLife.Goals.JobType.OnLevelChanged(TinyLife.Goals.Job,System.Int32)
  id: OnLevelChanged(TinyLife.Goals.Job,System.Int32)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: OnLevelChanged(Job, int)
  nameWithType: JobType.OnLevelChanged(Job, int)
  fullName: TinyLife.Goals.JobType.OnLevelChanged(TinyLife.Goals.Job, int)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A method that is called when a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> is promoted or demoted for this job.

    By default, some emotion modifiers are applied.
  example: []
  syntax:
    content: public virtual void OnLevelChanged(Job job, int levelDifference)
    parameters:
    - id: job
      type: TinyLife.Goals.Job
      description: The job instance
    - id: levelDifference
      type: System.Int32
      description: The level difference that was applied. If the person was demoted, this value is -1, else it is 1.
    content.vb: Public Overridable Sub OnLevelChanged(job As Job, levelDifference As Integer)
  overload: TinyLife.Goals.JobType.OnLevelChanged*
  nameWithType.vb: JobType.OnLevelChanged(Job, Integer)
  fullName.vb: TinyLife.Goals.JobType.OnLevelChanged(TinyLife.Goals.Job, Integer)
  name.vb: OnLevelChanged(Job, Integer)
- uid: TinyLife.Goals.JobType.OnRaiseReceived(TinyLife.Goals.Job)
  commentId: M:TinyLife.Goals.JobType.OnRaiseReceived(TinyLife.Goals.Job)
  id: OnRaiseReceived(TinyLife.Goals.Job)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: OnRaiseReceived(Job)
  nameWithType: JobType.OnRaiseReceived(Job)
  fullName: TinyLife.Goals.JobType.OnRaiseReceived(TinyLife.Goals.Job)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A method that is called when a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> receives a raise using <xref href="TinyLife.Goals.Job.GetRaise" data-throw-if-not-resolved="false"></xref>.

    By default, some emotion modifiers are applied.
  example: []
  syntax:
    content: public virtual void OnRaiseReceived(Job job)
    parameters:
    - id: job
      type: TinyLife.Goals.Job
      description: The job instance
    content.vb: Public Overridable Sub OnRaiseReceived(job As Job)
  overload: TinyLife.Goals.JobType.OnRaiseReceived*
- uid: TinyLife.Goals.JobType.UpdateWorking(TinyLife.Goals.Job,TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Goals.JobType.UpdateWorking(TinyLife.Goals.Job,TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
  id: UpdateWorking(TinyLife.Goals.Job,TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: UpdateWorking(Job, WorkAction, TimeSpan, float)
  nameWithType: JobType.UpdateWorking(Job, WorkAction, TimeSpan, float)
  fullName: TinyLife.Goals.JobType.UpdateWorking(TinyLife.Goals.Job, TinyLife.Actions.WorkAction, System.TimeSpan, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Updates this job type's <xref href="TinyLife.Goals.Job" data-throw-if-not-resolved="false"></xref> instance. By default, this method causes students to gain skills in <xref href="TinyLife.Goals.StudentJobType" data-throw-if-not-resolved="false"></xref>.

    This is called in <xref href="TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void UpdateWorking(Job job, WorkAction action, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: job
      type: TinyLife.Goals.Job
      description: The job instance.
    - id: action
      type: TinyLife.Actions.WorkAction
      description: The action that is currently being executed.
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed in game since the last update.
    - id: speedMultiplier
      type: System.Single
      description: The game's current speed multiplier.
    content.vb: Public Overridable Sub UpdateWorking(job As Job, action As WorkAction, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.Goals.JobType.UpdateWorking*
  nameWithType.vb: JobType.UpdateWorking(Job, WorkAction, TimeSpan, Single)
  fullName.vb: TinyLife.Goals.JobType.UpdateWorking(TinyLife.Goals.Job, TinyLife.Actions.WorkAction, System.TimeSpan, Single)
  name.vb: UpdateWorking(Job, WorkAction, TimeSpan, Single)
- uid: TinyLife.Goals.JobType.GetDefaultHourlyPay(TinyLife.Objects.Person)
  commentId: M:TinyLife.Goals.JobType.GetDefaultHourlyPay(TinyLife.Objects.Person)
  id: GetDefaultHourlyPay(TinyLife.Objects.Person)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: GetDefaultHourlyPay(Person)
  nameWithType: JobType.GetDefaultHourlyPay(Person)
  fullName: TinyLife.Goals.JobType.GetDefaultHourlyPay(TinyLife.Objects.Person)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Returns the default hourly pay for this job type, based on the <xref href="TinyLife.Goals.JobType.HourlyPay" data-throw-if-not-resolved="false"></xref>, as well as the passed <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Objects.PersonLike.Difficulty" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual float GetDefaultHourlyPay(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person for which to return the default hourly pay.
    return:
      type: System.Single
      description: The default hourly pay for the given person.
    content.vb: Public Overridable Function GetDefaultHourlyPay(person As Person) As Single
  overload: TinyLife.Goals.JobType.GetDefaultHourlyPay*
- uid: TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
  commentId: M:TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
  id: Register(TinyLife.Goals.JobType)
  parent: TinyLife.Goals.JobType
  langs:
  - csharp
  - vb
  name: Register(JobType)
  nameWithType: JobType.Register(JobType)
  fullName: TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Registers the given job type to the <xref href="TinyLife.Goals.JobType.Types" data-throw-if-not-resolved="false"></xref> registry
  example: []
  syntax:
    content: public static JobType Register(JobType type)
    parameters:
    - id: type
      type: TinyLife.Goals.JobType
      description: The type to register
    return:
      type: TinyLife.Goals.JobType
    content.vb: Public Shared Function Register(type As JobType) As JobType
  overload: TinyLife.Goals.JobType.Register*
references:
- uid: TinyLife.Goals.Job
  commentId: T:TinyLife.Goals.Job
  parent: TinyLife.Goals
  href: TinyLife.Goals.Job.html
  name: Job
  nameWithType: Job
  fullName: TinyLife.Goals.Job
- uid: TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
  commentId: M:TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_Register_TinyLife_Goals_JobType_
  name: Register(JobType)
  nameWithType: JobType.Register(JobType)
  fullName: TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
  spec.csharp:
  - uid: TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
    name: Register
    href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_Register_TinyLife_Goals_JobType_
  - name: (
  - uid: TinyLife.Goals.JobType
    name: JobType
    href: TinyLife.Goals.JobType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
    name: Register
    href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_Register_TinyLife_Goals_JobType_
  - name: (
  - uid: TinyLife.Goals.JobType
    name: JobType
    href: TinyLife.Goals.JobType.html
  - name: )
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Emotions.IEmotionSource
  commentId: T:TinyLife.Emotions.IEmotionSource
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.IEmotionSource.html
  name: IEmotionSource
  nameWithType: IEmotionSource
  fullName: TinyLife.Emotions.IEmotionSource
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Misc.GenericDataHolder
  definition: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: GenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(string)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Goals.JobType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<JobType>(JobType)
  nameWithType: Extensions.JsonCopy<JobType>(JobType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.JobType>(TinyLife.Goals.JobType)
  nameWithType.vb: Extensions.JsonCopy(Of JobType)(JobType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.JobType)(TinyLife.Goals.JobType)
  name.vb: JsonCopy(Of JobType)(JobType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.JobType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Goals.JobType
    name: JobType
    href: TinyLife.Goals.JobType.html
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.JobType
    name: JobType
    href: TinyLife.Goals.JobType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.JobType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.JobType
    name: JobType
    href: TinyLife.Goals.JobType.html
  - name: )
  - name: (
  - uid: TinyLife.Goals.JobType
    name: JobType
    href: TinyLife.Goals.JobType.html
  - name: )
- uid: TinyLife.Goals.JobType
  commentId: T:TinyLife.Goals.JobType
  parent: TinyLife.Goals
  href: TinyLife.Goals.JobType.html
  name: JobType
  nameWithType: JobType
  fullName: TinyLife.Goals.JobType
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  href: TinyLife.html
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Goals.JobType}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Goals.JobType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, JobType>
  nameWithType: ReadOnlyDictionary<string, JobType>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Goals.JobType>
  nameWithType.vb: ReadOnlyDictionary(Of String, JobType)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Goals.JobType)
  name.vb: ReadOnlyDictionary(Of String, JobType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.JobType
    name: JobType
    href: TinyLife.Goals.JobType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.JobType
    name: JobType
    href: TinyLife.Goals.JobType.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.PerSaveOptions.Difficulty
  commentId: F:TinyLife.PerSaveOptions.Difficulty
  href: TinyLife.PerSaveOptions.html#TinyLife_PerSaveOptions_Difficulty
  name: Difficulty
  nameWithType: PerSaveOptions.Difficulty
  fullName: TinyLife.PerSaveOptions.Difficulty
- uid: TinyLife.Goals.JobType.GetDefaultHourlyPay(TinyLife.Objects.Person)
  commentId: M:TinyLife.Goals.JobType.GetDefaultHourlyPay(TinyLife.Objects.Person)
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_GetDefaultHourlyPay_TinyLife_Objects_Person_
  name: GetDefaultHourlyPay(Person)
  nameWithType: JobType.GetDefaultHourlyPay(Person)
  fullName: TinyLife.Goals.JobType.GetDefaultHourlyPay(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Goals.JobType.GetDefaultHourlyPay(TinyLife.Objects.Person)
    name: GetDefaultHourlyPay
    href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_GetDefaultHourlyPay_TinyLife_Objects_Person_
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.GetDefaultHourlyPay(TinyLife.Objects.Person)
    name: GetDefaultHourlyPay
    href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_GetDefaultHourlyPay_TinyLife_Objects_Person_
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Range
  commentId: T:System.Range
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.range
  name: Range
  nameWithType: Range
  fullName: System.Range
- uid: System.ValueTuple{System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int Start, int End)
  nameWithType: (int Start, int End)
  fullName: (int Start, int End)
  nameWithType.vb: (Start As Integer, End As Integer)
  fullName.vb: (Start As Integer, End As Integer)
  name.vb: (Start As Integer, End As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Start
    name: Start
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.start
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.End
    name: End
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.end
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.Start
    name: Start
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.start
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.End
    name: End
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.end
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.DayOfWeek
  commentId: T:System.DayOfWeek
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.dayofweek
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: TinyLife.Goals.JobType.WorkHours
  commentId: F:TinyLife.Goals.JobType.WorkHours
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_WorkHours
  name: WorkHours
  nameWithType: JobType.WorkHours
  fullName: TinyLife.Goals.JobType.WorkHours
- uid: System.DayOfWeek[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.dayofweek
  name: DayOfWeek[]
  nameWithType: DayOfWeek[]
  fullName: System.DayOfWeek[]
  nameWithType.vb: DayOfWeek()
  fullName.vb: System.DayOfWeek()
  name.vb: DayOfWeek()
  spec.csharp:
  - uid: System.DayOfWeek
    name: DayOfWeek
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.dayofweek
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.DayOfWeek
    name: DayOfWeek
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.dayofweek
  - name: (
  - name: )
- uid: TinyLife.Goals.Job.Level
  commentId: P:TinyLife.Goals.Job.Level
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Level
  name: Level
  nameWithType: Job.Level
  fullName: TinyLife.Goals.Job.Level
- uid: TinyLife.Goals.JobType.RequiredPromotionSkills*
  commentId: Overload:TinyLife.Goals.JobType.RequiredPromotionSkills
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_RequiredPromotionSkills
  name: RequiredPromotionSkills
  nameWithType: JobType.RequiredPromotionSkills
  fullName: TinyLife.Goals.JobType.RequiredPromotionSkills
- uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}[]
  isExternal: true
  href: TinyLife.Skills.SkillType.html
  name: (SkillType Type, float Amount)[]
  nameWithType: (SkillType Type, float Amount)[]
  fullName: (TinyLife.Skills.SkillType Type, float Amount)[]
  nameWithType.vb: (Type As SkillType, Amount As Single)()
  fullName.vb: (Type As TinyLife.Skills.SkillType, Amount As Single)()
  name.vb: (Type As SkillType, Amount As Single)()
  spec.csharp:
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.type
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.amount
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.type
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.amount
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: (
  - name: )
- uid: TinyLife.Goals.JobType.MaxLevel*
  commentId: Overload:TinyLife.Goals.JobType.MaxLevel
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_MaxLevel
  name: MaxLevel
  nameWithType: JobType.MaxLevel
  fullName: TinyLife.Goals.JobType.MaxLevel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Goals.JobType.HasSpecialLocalization*
  commentId: Overload:TinyLife.Goals.JobType.HasSpecialLocalization
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_HasSpecialLocalization
  name: HasSpecialLocalization
  nameWithType: JobType.HasSpecialLocalization
  fullName: TinyLife.Goals.JobType.HasSpecialLocalization
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.AgeGroup.Child
  commentId: F:TinyLife.Objects.AgeGroup.Child
  href: TinyLife.Objects.AgeGroup.html#TinyLife_Objects_AgeGroup_Child
  name: Child
  nameWithType: AgeGroup.Child
  fullName: TinyLife.Objects.AgeGroup.Child
- uid: TinyLife.Goals.JobType.RequiredAges*
  commentId: Overload:TinyLife.Goals.JobType.RequiredAges
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_RequiredAges
  name: RequiredAges
  nameWithType: JobType.RequiredAges
  fullName: TinyLife.Goals.JobType.RequiredAges
- uid: TinyLife.Objects.AgeGroup
  commentId: T:TinyLife.Objects.AgeGroup
  parent: TinyLife.Objects
  href: TinyLife.Objects.AgeGroup.html
  name: AgeGroup
  nameWithType: AgeGroup
  fullName: TinyLife.Objects.AgeGroup
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Goals.JobType.CanQuitOrBeFired*
  commentId: Overload:TinyLife.Goals.JobType.CanQuitOrBeFired
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_CanQuitOrBeFired
  name: CanQuitOrBeFired
  nameWithType: JobType.CanQuitOrBeFired
  fullName: TinyLife.Goals.JobType.CanQuitOrBeFired
- uid: TinyLife.Goals.JobType.CanGetRaise*
  commentId: Overload:TinyLife.Goals.JobType.CanGetRaise
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_CanGetRaise
  name: CanGetRaise
  nameWithType: JobType.CanGetRaise
  fullName: TinyLife.Goals.JobType.CanGetRaise
- uid: TinyLife.Goals.GoalSetInfo
  commentId: T:TinyLife.Goals.GoalSetInfo
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalSetInfo.html
  name: GoalSetInfo
  nameWithType: GoalSetInfo
  fullName: TinyLife.Goals.GoalSetInfo
- uid: TinyLife.Goals.JobType.DailyTasks*
  commentId: Overload:TinyLife.Goals.JobType.DailyTasks
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_DailyTasks
  name: DailyTasks
  nameWithType: JobType.DailyTasks
  fullName: TinyLife.Goals.JobType.DailyTasks
- uid: TinyLife.Goals.JobType.DailyTasks
  commentId: P:TinyLife.Goals.JobType.DailyTasks
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_DailyTasks
  name: DailyTasks
  nameWithType: JobType.DailyTasks
  fullName: TinyLife.Goals.JobType.DailyTasks
- uid: TinyLife.Goals.JobType.DailyTaskImportance*
  commentId: Overload:TinyLife.Goals.JobType.DailyTaskImportance
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_DailyTaskImportance
  name: DailyTaskImportance
  nameWithType: JobType.DailyTaskImportance
  fullName: TinyLife.Goals.JobType.DailyTaskImportance
- uid: TinyLife.Actions.ChoicePromptInfo
  commentId: T:TinyLife.Actions.ChoicePromptInfo
  parent: TinyLife.Actions
  href: TinyLife.Actions.ChoicePromptInfo.html
  name: ChoicePromptInfo
  nameWithType: ChoicePromptInfo
  fullName: TinyLife.Actions.ChoicePromptInfo
- uid: TinyLife.Goals.JobType.ChoicePrompts*
  commentId: Overload:TinyLife.Goals.JobType.ChoicePrompts
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_ChoicePrompts
  name: ChoicePrompts
  nameWithType: JobType.ChoicePrompts
  fullName: TinyLife.Goals.JobType.ChoicePrompts
- uid: TinyLife.Actions.ChoicePromptInfo[]
  isExternal: true
  href: TinyLife.Actions.ChoicePromptInfo.html
  name: ChoicePromptInfo[]
  nameWithType: ChoicePromptInfo[]
  fullName: TinyLife.Actions.ChoicePromptInfo[]
  nameWithType.vb: ChoicePromptInfo()
  fullName.vb: TinyLife.Actions.ChoicePromptInfo()
  name.vb: ChoicePromptInfo()
  spec.csharp:
  - uid: TinyLife.Actions.ChoicePromptInfo
    name: ChoicePromptInfo
    href: TinyLife.Actions.ChoicePromptInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Actions.ChoicePromptInfo
    name: ChoicePromptInfo
    href: TinyLife.Actions.ChoicePromptInfo.html
  - name: (
  - name: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: TinyLife.Goals.JobType.Migrations*
  commentId: Overload:TinyLife.Goals.JobType.Migrations
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_Migrations
  name: Migrations
  nameWithType: JobType.Migrations
  fullName: TinyLife.Goals.JobType.Migrations
- uid: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Goals.Job}}
  commentId: T:System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Goals.Job}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Migration<Job>>
  nameWithType: List<Migration<Job>>
  fullName: System.Collections.Generic.List<TinyLife.Utilities.Migration<TinyLife.Goals.Job>>
  nameWithType.vb: List(Of Migration(Of Job))
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Utilities.Migration(Of TinyLife.Goals.Job))
  name.vb: List(Of Migration(Of Job))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: <
  - uid: TinyLife.Goals.Job
    name: Job
    href: TinyLife.Goals.Job.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Job
    name: Job
    href: TinyLife.Goals.Job.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Emotions.EmotionModifier
  commentId: T:TinyLife.Emotions.EmotionModifier
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionModifier.html
  name: EmotionModifier
  nameWithType: EmotionModifier
  fullName: TinyLife.Emotions.EmotionModifier
- uid: TinyLife.Goals.JobType.SourceString*
  commentId: Overload:TinyLife.Goals.JobType.SourceString
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_SourceString
  name: SourceString
  nameWithType: JobType.SourceString
  fullName: TinyLife.Goals.JobType.SourceString
- uid: TinyLife.Emotions.IEmotionSource.SourceString
  commentId: P:TinyLife.Emotions.IEmotionSource.SourceString
  parent: TinyLife.Emotions.IEmotionSource
  href: TinyLife.Emotions.IEmotionSource.html#TinyLife_Emotions_IEmotionSource_SourceString
  name: SourceString
  nameWithType: IEmotionSource.SourceString
  fullName: TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.Goals.JobType.#ctor*
  commentId: Overload:TinyLife.Goals.JobType.#ctor
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType__ctor_System_String_MLEM_Textures_TextureRegion_System_Single_System_ValueTuple_System_Int32_System_Int32__System_DayOfWeek___
  name: JobType
  nameWithType: JobType.JobType
  fullName: TinyLife.Goals.JobType.JobType
  nameWithType.vb: JobType.New
  fullName.vb: TinyLife.Goals.JobType.New
  name.vb: New
- uid: TinyLife.Goals.JobType.Construct*
  commentId: Overload:TinyLife.Goals.JobType.Construct
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_Construct_TinyLife_Objects_Person_System_Int32_
  name: Construct
  nameWithType: JobType.Construct
  fullName: TinyLife.Goals.JobType.Construct
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Goals.JobType.OffWorkDays
  commentId: F:TinyLife.Goals.JobType.OffWorkDays
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_OffWorkDays
  name: OffWorkDays
  nameWithType: JobType.OffWorkDays
  fullName: TinyLife.Goals.JobType.OffWorkDays
- uid: TinyLife.Goals.Job.DaysOnVacation
  commentId: P:TinyLife.Goals.Job.DaysOnVacation
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_DaysOnVacation
  name: DaysOnVacation
  nameWithType: Job.DaysOnVacation
  fullName: TinyLife.Goals.Job.DaysOnVacation
- uid: TinyLife.Goals.JobType.IsTimeToWork*
  commentId: Overload:TinyLife.Goals.JobType.IsTimeToWork
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_IsTimeToWork_System_TimeSpan_
  name: IsTimeToWork
  nameWithType: JobType.IsTimeToWork
  fullName: TinyLife.Goals.JobType.IsTimeToWork
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.Goals.JobType.ToScheduleString*
  commentId: Overload:TinyLife.Goals.JobType.ToScheduleString
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_ToScheduleString_System_Nullable_System_TimeSpan__
  name: ToScheduleString
  nameWithType: JobType.ToScheduleString
  fullName: TinyLife.Goals.JobType.ToScheduleString
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Goals.JobType.GetDisplayName*
  commentId: Overload:TinyLife.Goals.JobType.GetDisplayName
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_GetDisplayName_System_Nullable_System_Int32__
  name: GetDisplayName
  nameWithType: JobType.GetDisplayName
  fullName: TinyLife.Goals.JobType.GetDisplayName
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: TinyLife.Goals.JobType.GetRequiredPromotionSkills*
  commentId: Overload:TinyLife.Goals.JobType.GetRequiredPromotionSkills
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_GetRequiredPromotionSkills_TinyLife_Goals_Job_
  name: GetRequiredPromotionSkills
  nameWithType: JobType.GetRequiredPromotionSkills
  fullName: TinyLife.Goals.JobType.GetRequiredPromotionSkills
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(SkillType Type, int Level)>
  nameWithType: IEnumerable<(SkillType Type, int Level)>
  fullName: System.Collections.Generic.IEnumerable<(TinyLife.Skills.SkillType Type, int Level)>
  nameWithType.vb: IEnumerable(Of (Type As SkillType, Level As Integer))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (Type As TinyLife.Skills.SkillType, Level As Integer))
  name.vb: IEnumerable(Of (Type As SkillType, Level As Integer))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Level
    name: Level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.level
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.type
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Level
    name: Level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.level
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Goals.JobType.OnWorkStartsInAnHour*
  commentId: Overload:TinyLife.Goals.JobType.OnWorkStartsInAnHour
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_OnWorkStartsInAnHour_TinyLife_Goals_Job_
  name: OnWorkStartsInAnHour
  nameWithType: JobType.OnWorkStartsInAnHour
  fullName: TinyLife.Goals.JobType.OnWorkStartsInAnHour
- uid: TinyLife.Goals.JobType.OnWorkHoursOver*
  commentId: Overload:TinyLife.Goals.JobType.OnWorkHoursOver
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_OnWorkHoursOver_TinyLife_Goals_Job_
  name: OnWorkHoursOver
  nameWithType: JobType.OnWorkHoursOver
  fullName: TinyLife.Goals.JobType.OnWorkHoursOver
- uid: TinyLife.Actions.WorkAction
  commentId: T:TinyLife.Actions.WorkAction
  parent: TinyLife.Actions
  href: TinyLife.Actions.WorkAction.html
  name: WorkAction
  nameWithType: WorkAction
  fullName: TinyLife.Actions.WorkAction
- uid: TinyLife.Goals.JobType.OnWorkFinished*
  commentId: Overload:TinyLife.Goals.JobType.OnWorkFinished
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_OnWorkFinished_TinyLife_Goals_Job_TinyLife_Actions_WorkAction_
  name: OnWorkFinished
  nameWithType: JobType.OnWorkFinished
  fullName: TinyLife.Goals.JobType.OnWorkFinished
- uid: TinyLife.Goals.JobType.OnWorkStarted*
  commentId: Overload:TinyLife.Goals.JobType.OnWorkStarted
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_OnWorkStarted_TinyLife_Goals_Job_TinyLife_Actions_WorkAction_
  name: OnWorkStarted
  nameWithType: JobType.OnWorkStarted
  fullName: TinyLife.Goals.JobType.OnWorkStarted
- uid: TinyLife.Goals.JobType.OnLevelChanged*
  commentId: Overload:TinyLife.Goals.JobType.OnLevelChanged
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_OnLevelChanged_TinyLife_Goals_Job_System_Int32_
  name: OnLevelChanged
  nameWithType: JobType.OnLevelChanged
  fullName: TinyLife.Goals.JobType.OnLevelChanged
- uid: TinyLife.Goals.Job.GetRaise
  commentId: M:TinyLife.Goals.Job.GetRaise
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_GetRaise
  name: GetRaise()
  nameWithType: Job.GetRaise()
  fullName: TinyLife.Goals.Job.GetRaise()
  spec.csharp:
  - uid: TinyLife.Goals.Job.GetRaise
    name: GetRaise
    href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_GetRaise
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.Job.GetRaise
    name: GetRaise
    href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_GetRaise
  - name: (
  - name: )
- uid: TinyLife.Goals.JobType.OnRaiseReceived*
  commentId: Overload:TinyLife.Goals.JobType.OnRaiseReceived
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_OnRaiseReceived_TinyLife_Goals_Job_
  name: OnRaiseReceived
  nameWithType: JobType.OnRaiseReceived
  fullName: TinyLife.Goals.JobType.OnRaiseReceived
- uid: TinyLife.Goals.StudentJobType
  commentId: T:TinyLife.Goals.StudentJobType
  href: TinyLife.Goals.StudentJobType.html
  name: StudentJobType
  nameWithType: StudentJobType
  fullName: TinyLife.Goals.StudentJobType
- uid: TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
  isExternal: true
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_UpdateWorking_TinyLife_Actions_WorkAction_System_TimeSpan_System_Single_
  name: UpdateWorking(WorkAction, TimeSpan, float)
  nameWithType: Job.UpdateWorking(WorkAction, TimeSpan, float)
  fullName: TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction, System.TimeSpan, float)
  nameWithType.vb: Job.UpdateWorking(WorkAction, TimeSpan, Single)
  fullName.vb: TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction, System.TimeSpan, Single)
  name.vb: UpdateWorking(WorkAction, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
    name: UpdateWorking
    href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_UpdateWorking_TinyLife_Actions_WorkAction_System_TimeSpan_System_Single_
  - name: (
  - uid: TinyLife.Actions.WorkAction
    name: WorkAction
    href: TinyLife.Actions.WorkAction.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
    name: UpdateWorking
    href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_UpdateWorking_TinyLife_Actions_WorkAction_System_TimeSpan_System_Single_
  - name: (
  - uid: TinyLife.Actions.WorkAction
    name: WorkAction
    href: TinyLife.Actions.WorkAction.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Goals.JobType.UpdateWorking*
  commentId: Overload:TinyLife.Goals.JobType.UpdateWorking
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_UpdateWorking_TinyLife_Goals_Job_TinyLife_Actions_WorkAction_System_TimeSpan_System_Single_
  name: UpdateWorking
  nameWithType: JobType.UpdateWorking
  fullName: TinyLife.Goals.JobType.UpdateWorking
- uid: TinyLife.Goals.JobType.HourlyPay
  commentId: F:TinyLife.Goals.JobType.HourlyPay
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_HourlyPay
  name: HourlyPay
  nameWithType: JobType.HourlyPay
  fullName: TinyLife.Goals.JobType.HourlyPay
- uid: TinyLife.Objects.PersonLike.Difficulty
  commentId: P:TinyLife.Objects.PersonLike.Difficulty
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Difficulty
  name: Difficulty
  nameWithType: PersonLike.Difficulty
  fullName: TinyLife.Objects.PersonLike.Difficulty
- uid: TinyLife.Goals.JobType.GetDefaultHourlyPay*
  commentId: Overload:TinyLife.Goals.JobType.GetDefaultHourlyPay
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_GetDefaultHourlyPay_TinyLife_Objects_Person_
  name: GetDefaultHourlyPay
  nameWithType: JobType.GetDefaultHourlyPay
  fullName: TinyLife.Goals.JobType.GetDefaultHourlyPay
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Goals.JobType.Types
  commentId: F:TinyLife.Goals.JobType.Types
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_Types
  name: Types
  nameWithType: JobType.Types
  fullName: TinyLife.Goals.JobType.Types
- uid: TinyLife.Goals.JobType.Register*
  commentId: Overload:TinyLife.Goals.JobType.Register
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_Register_TinyLife_Goals_JobType_
  name: Register
  nameWithType: JobType.Register
  fullName: TinyLife.Goals.JobType.Register
