### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.LifeGoal.Instance
  commentId: T:TinyLife.Goals.LifeGoal.Instance
  id: LifeGoal.Instance
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.LifeGoal.Instance.#ctor(TinyLife.Objects.Person,TinyLife.Goals.LifeGoal,System.Int32)
  - TinyLife.Goals.LifeGoal.Instance.Advance
  - TinyLife.Goals.LifeGoal.Instance.Completed
  - TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  - TinyLife.Goals.LifeGoal.Instance.Goal
  - TinyLife.Goals.LifeGoal.Instance.Person
  - TinyLife.Goals.LifeGoal.Instance.Stage
  - TinyLife.Goals.LifeGoal.Instance.StageIndex
  - TinyLife.Goals.LifeGoal.Instance.Update
  - TinyLife.Goals.LifeGoal.Instance.Validate(TinyLife.Objects.Person)
  langs:
  - csharp
  - vb
  name: LifeGoal.Instance
  nameWithType: LifeGoal.Instance
  fullName: TinyLife.Goals.LifeGoal.Instance
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: A class used to represent a currently active/ongoing <xref href="TinyLife.Goals.LifeGoal" data-throw-if-not-resolved="false"></xref> instance
  example: []
  syntax:
    content: >-
      [DataContract]

      public class LifeGoal.Instance
    content.vb: >-
      <DataContract>

      Public Class LifeGoal.Instance
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.LifeGoal.Instance.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.LifeGoal.Instance.Goal
  commentId: F:TinyLife.Goals.LifeGoal.Instance.Goal
  id: Goal
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Goal
  nameWithType: LifeGoal.Instance.Goal
  fullName: TinyLife.Goals.LifeGoal.Instance.Goal
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The underlying <xref href="TinyLife.Goals.LifeGoal" data-throw-if-not-resolved="false"></xref> that this instance is tracking
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly LifeGoal Goal
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: >-
      <DataMember>

      Public ReadOnly Goal As LifeGoal
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  commentId: P:TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  id: CurrentGoals
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: CurrentGoals
  nameWithType: LifeGoal.Instance.CurrentGoals
  fullName: TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The <xref href="TinyLife.Goals.GoalSet" data-throw-if-not-resolved="false"></xref> instance that represents the currently active stage of this life goal instance
  example: []
  syntax:
    content: >-
      [DataMember]

      public GoalSet CurrentGoals { get; }
    parameters: []
    return:
      type: TinyLife.Goals.GoalSet
    content.vb: >-
      <DataMember>

      Public Property CurrentGoals As GoalSet
  overload: TinyLife.Goals.LifeGoal.Instance.CurrentGoals*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.LifeGoal.Instance.StageIndex
  commentId: P:TinyLife.Goals.LifeGoal.Instance.StageIndex
  id: StageIndex
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: StageIndex
  nameWithType: LifeGoal.Instance.StageIndex
  fullName: TinyLife.Goals.LifeGoal.Instance.StageIndex
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The index in the <xref href="TinyLife.Goals.LifeGoal.Stages" data-throw-if-not-resolved="false"></xref> array that the <xref href="TinyLife.Goals.LifeGoal.Instance.CurrentGoals" data-throw-if-not-resolved="false"></xref> are created from.

    To get the <xref href="TinyLife.Goals.GoalSetInfo" data-throw-if-not-resolved="false"></xref> for this stage, use <xref href="TinyLife.Goals.LifeGoal.Instance.Stage" data-throw-if-not-resolved="false"></xref>.

    If this value is greater than the length of <xref href="TinyLife.Goals.LifeGoal.Stages" data-throw-if-not-resolved="false"></xref>, this life goal is <xref href="TinyLife.Goals.LifeGoal.Instance.Completed" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int StageIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property StageIndex As Integer
  overload: TinyLife.Goals.LifeGoal.Instance.StageIndex*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.LifeGoal.Instance.Person
  commentId: P:TinyLife.Goals.LifeGoal.Instance.Person
  id: Person
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Person
  nameWithType: LifeGoal.Instance.Person
  fullName: TinyLife.Goals.LifeGoal.Instance.Person
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The person that is currently working on this life goal
  example: []
  syntax:
    content: public Person Person { get; }
    parameters: []
    return:
      type: TinyLife.Objects.Person
    content.vb: Public Property Person As Person
  overload: TinyLife.Goals.LifeGoal.Instance.Person*
- uid: TinyLife.Goals.LifeGoal.Instance.Stage
  commentId: P:TinyLife.Goals.LifeGoal.Instance.Stage
  id: Stage
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Stage
  nameWithType: LifeGoal.Instance.Stage
  fullName: TinyLife.Goals.LifeGoal.Instance.Stage
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The <xref href="TinyLife.Goals.GoalSetInfo" data-throw-if-not-resolved="false"></xref> that the <xref href="TinyLife.Goals.LifeGoal.Instance.CurrentGoals" data-throw-if-not-resolved="false"></xref> are created from.

    If this value is null, this life goal is <xref href="TinyLife.Goals.LifeGoal.Instance.Completed" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public GoalSetInfo Stage { get; }
    parameters: []
    return:
      type: TinyLife.Goals.GoalSetInfo
    content.vb: Public ReadOnly Property Stage As GoalSetInfo
  overload: TinyLife.Goals.LifeGoal.Instance.Stage*
- uid: TinyLife.Goals.LifeGoal.Instance.Completed
  commentId: P:TinyLife.Goals.LifeGoal.Instance.Completed
  id: Completed
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: LifeGoal.Instance.Completed
  fullName: TinyLife.Goals.LifeGoal.Instance.Completed
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Returns whether this life goal is considered complete, which is when <xref href="TinyLife.Goals.LifeGoal.Instance.Stage" data-throw-if-not-resolved="false"></xref> is null.
  example: []
  syntax:
    content: public bool Completed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Completed As Boolean
  overload: TinyLife.Goals.LifeGoal.Instance.Completed*
- uid: TinyLife.Goals.LifeGoal.Instance.#ctor(TinyLife.Objects.Person,TinyLife.Goals.LifeGoal,System.Int32)
  commentId: M:TinyLife.Goals.LifeGoal.Instance.#ctor(TinyLife.Objects.Person,TinyLife.Goals.LifeGoal,System.Int32)
  id: '#ctor(TinyLife.Objects.Person,TinyLife.Goals.LifeGoal,System.Int32)'
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Instance(Person, LifeGoal, int)
  nameWithType: LifeGoal.Instance.Instance(Person, LifeGoal, int)
  fullName: TinyLife.Goals.LifeGoal.Instance.Instance(TinyLife.Objects.Person, TinyLife.Goals.LifeGoal, int)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Creates a new life goal instance from the given <xref href="TinyLife.Goals.LifeGoal" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Instance(Person person, LifeGoal goal, int stage = 0)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person to work on this life goal
    - id: goal
      type: TinyLife.Goals.LifeGoal
      description: The life goal information
    - id: stage
      type: System.Int32
      description: The stage to start out in, or 0 by default
    content.vb: Public Sub New(person As Person, goal As LifeGoal, stage As Integer = 0)
  overload: TinyLife.Goals.LifeGoal.Instance.#ctor*
  nameWithType.vb: LifeGoal.Instance.New(Person, LifeGoal, Integer)
  fullName.vb: TinyLife.Goals.LifeGoal.Instance.New(TinyLife.Objects.Person, TinyLife.Goals.LifeGoal, Integer)
  name.vb: New(Person, LifeGoal, Integer)
- uid: TinyLife.Goals.LifeGoal.Instance.Update
  commentId: M:TinyLife.Goals.LifeGoal.Instance.Update
  id: Update
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: LifeGoal.Instance.Update()
  fullName: TinyLife.Goals.LifeGoal.Instance.Update()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Updates this life goal, causing <xref href="TinyLife.Goals.LifeGoal.Instance.Advance" data-throw-if-not-resolved="false"></xref> to be called if the <xref href="TinyLife.Goals.LifeGoal.Instance.CurrentGoals" data-throw-if-not-resolved="false"></xref> are completed
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: TinyLife.Goals.LifeGoal.Instance.Update*
- uid: TinyLife.Goals.LifeGoal.Instance.Advance
  commentId: M:TinyLife.Goals.LifeGoal.Instance.Advance
  id: Advance
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Advance()
  nameWithType: LifeGoal.Instance.Advance()
  fullName: TinyLife.Goals.LifeGoal.Instance.Advance()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Forces this life goal to be advanced, regardless of whether the <xref href="TinyLife.Goals.LifeGoal.Instance.CurrentGoals" data-throw-if-not-resolved="false"></xref> are completed+
  example: []
  syntax:
    content: public void Advance()
    content.vb: Public Sub Advance()
  overload: TinyLife.Goals.LifeGoal.Instance.Advance*
- uid: TinyLife.Goals.LifeGoal.Instance.Validate(TinyLife.Objects.Person)
  commentId: M:TinyLife.Goals.LifeGoal.Instance.Validate(TinyLife.Objects.Person)
  id: Validate(TinyLife.Objects.Person)
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Validate(Person)
  nameWithType: LifeGoal.Instance.Validate(Person)
  fullName: TinyLife.Goals.LifeGoal.Instance.Validate(TinyLife.Objects.Person)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Validates this life goal instance and the underlying <xref href="TinyLife.Goals.LifeGoal.Instance.CurrentGoals" data-throw-if-not-resolved="false"></xref> when loading from disk
  example: []
  syntax:
    content: public bool Validate(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person who is working on this life goal
    return:
      type: System.Boolean
      description: Whether this life goal is considered valid
    content.vb: Public Function Validate(person As Person) As Boolean
  overload: TinyLife.Goals.LifeGoal.Instance.Validate*
references:
- uid: TinyLife.Goals.LifeGoal
  commentId: T:TinyLife.Goals.LifeGoal
  parent: TinyLife.Goals
  href: TinyLife.Goals.LifeGoal.html
  name: LifeGoal
  nameWithType: LifeGoal
  fullName: TinyLife.Goals.LifeGoal
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Goals.LifeGoal.Instance.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Instance>(Instance)
  nameWithType: Extensions.JsonCopy<LifeGoal.Instance>(LifeGoal.Instance)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.LifeGoal.Instance>(TinyLife.Goals.LifeGoal.Instance)
  nameWithType.vb: Extensions.JsonCopy(Of LifeGoal.Instance)(LifeGoal.Instance)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.LifeGoal.Instance)(TinyLife.Goals.LifeGoal.Instance)
  name.vb: JsonCopy(Of Instance)(Instance)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.LifeGoal.Instance)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Goals.LifeGoal.Instance
    name: Instance
    href: TinyLife.Goals.LifeGoal.Instance.html
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.LifeGoal.Instance
    name: Instance
    href: TinyLife.Goals.LifeGoal.Instance.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.LifeGoal.Instance)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.LifeGoal.Instance
    name: Instance
    href: TinyLife.Goals.LifeGoal.Instance.html
  - name: )
  - name: (
  - uid: TinyLife.Goals.LifeGoal.Instance
    name: Instance
    href: TinyLife.Goals.LifeGoal.Instance.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalSet.html
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
- uid: TinyLife.Goals.LifeGoal.Instance.CurrentGoals*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_CurrentGoals
  name: CurrentGoals
  nameWithType: LifeGoal.Instance.CurrentGoals
  fullName: TinyLife.Goals.LifeGoal.Instance.CurrentGoals
- uid: TinyLife.Goals.LifeGoal.Stages
  commentId: F:TinyLife.Goals.LifeGoal.Stages
  href: TinyLife.Goals.LifeGoal.html#TinyLife_Goals_LifeGoal_Stages
  name: Stages
  nameWithType: LifeGoal.Stages
  fullName: TinyLife.Goals.LifeGoal.Stages
- uid: TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  commentId: P:TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_CurrentGoals
  name: CurrentGoals
  nameWithType: LifeGoal.Instance.CurrentGoals
  fullName: TinyLife.Goals.LifeGoal.Instance.CurrentGoals
- uid: TinyLife.Goals.GoalSetInfo
  commentId: T:TinyLife.Goals.GoalSetInfo
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalSetInfo.html
  name: GoalSetInfo
  nameWithType: GoalSetInfo
  fullName: TinyLife.Goals.GoalSetInfo
- uid: TinyLife.Goals.LifeGoal.Instance.Stage
  commentId: P:TinyLife.Goals.LifeGoal.Instance.Stage
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Stage
  name: Stage
  nameWithType: LifeGoal.Instance.Stage
  fullName: TinyLife.Goals.LifeGoal.Instance.Stage
- uid: TinyLife.Goals.LifeGoal.Instance.Completed
  commentId: P:TinyLife.Goals.LifeGoal.Instance.Completed
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Completed
  name: Completed
  nameWithType: LifeGoal.Instance.Completed
  fullName: TinyLife.Goals.LifeGoal.Instance.Completed
- uid: TinyLife.Goals.LifeGoal.Instance.StageIndex*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.StageIndex
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_StageIndex
  name: StageIndex
  nameWithType: LifeGoal.Instance.StageIndex
  fullName: TinyLife.Goals.LifeGoal.Instance.StageIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Goals.LifeGoal.Instance.Person*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Person
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Person
  name: Person
  nameWithType: LifeGoal.Instance.Person
  fullName: TinyLife.Goals.LifeGoal.Instance.Person
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Goals.LifeGoal.Instance.Stage*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Stage
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Stage
  name: Stage
  nameWithType: LifeGoal.Instance.Stage
  fullName: TinyLife.Goals.LifeGoal.Instance.Stage
- uid: TinyLife.Goals.LifeGoal.Instance.Completed*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Completed
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Completed
  name: Completed
  nameWithType: LifeGoal.Instance.Completed
  fullName: TinyLife.Goals.LifeGoal.Instance.Completed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Goals.LifeGoal.Instance.#ctor*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.#ctor
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance__ctor_TinyLife_Objects_Person_TinyLife_Goals_LifeGoal_System_Int32_
  name: Instance
  nameWithType: LifeGoal.Instance.Instance
  fullName: TinyLife.Goals.LifeGoal.Instance.Instance
  nameWithType.vb: LifeGoal.Instance.New
  fullName.vb: TinyLife.Goals.LifeGoal.Instance.New
  name.vb: New
- uid: TinyLife.Goals.LifeGoal.Instance.Advance
  commentId: M:TinyLife.Goals.LifeGoal.Instance.Advance
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Advance
  name: Advance()
  nameWithType: LifeGoal.Instance.Advance()
  fullName: TinyLife.Goals.LifeGoal.Instance.Advance()
  spec.csharp:
  - uid: TinyLife.Goals.LifeGoal.Instance.Advance
    name: Advance
    href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Advance
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.LifeGoal.Instance.Advance
    name: Advance
    href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Advance
  - name: (
  - name: )
- uid: TinyLife.Goals.LifeGoal.Instance.Update*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Update
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Update
  name: Update
  nameWithType: LifeGoal.Instance.Update
  fullName: TinyLife.Goals.LifeGoal.Instance.Update
- uid: TinyLife.Goals.LifeGoal.Instance.Advance*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Advance
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Advance
  name: Advance
  nameWithType: LifeGoal.Instance.Advance
  fullName: TinyLife.Goals.LifeGoal.Instance.Advance
- uid: TinyLife.Goals.LifeGoal.Instance.Validate*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Validate
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Validate_TinyLife_Objects_Person_
  name: Validate
  nameWithType: LifeGoal.Instance.Validate
  fullName: TinyLife.Goals.LifeGoal.Instance.Validate
