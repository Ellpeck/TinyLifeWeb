### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.Particle
  commentId: T:TinyLife.Objects.Particle
  id: Particle
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.Particle.#ctor(MLEM.Animations.SpriteAnimation,System.TimeSpan,Microsoft.Xna.Framework.Vector2,System.Single)
  - TinyLife.Objects.Particle.#ctor(MLEM.Textures.TextureRegion,System.TimeSpan,Microsoft.Xna.Framework.Vector2,System.Single)
  - TinyLife.Objects.Particle.Alpha
  - TinyLife.Objects.Particle.AmbientFallingLeaves
  - TinyLife.Objects.Particle.Animation
  - TinyLife.Objects.Particle.Color
  - TinyLife.Objects.Particle.DeathAnimation
  - TinyLife.Objects.Particle.DepthOffset
  - TinyLife.Objects.Particle.DepthPosOffset
  - TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  - TinyLife.Objects.Particle.Floor
  - TinyLife.Objects.Particle.ForceOutside
  - TinyLife.Objects.Particle.Friction
  - TinyLife.Objects.Particle.Gravity
  - TinyLife.Objects.Particle.IgnoreParentDrawPos
  - TinyLife.Objects.Particle.LifeAnimation
  - TinyLife.Objects.Particle.Light
  - TinyLife.Objects.Particle.Map
  - TinyLife.Objects.Particle.Motion
  - TinyLife.Objects.Particle.OnAdded
  - TinyLife.Objects.Particle.OnParticleUpdate
  - TinyLife.Objects.Particle.OnRemoved
  - TinyLife.Objects.Particle.OnSpawnAmbientParticles
  - TinyLife.Objects.Particle.OnUpdate
  - TinyLife.Objects.Particle.ParentInfo
  - TinyLife.Objects.Particle.Position
  - TinyLife.Objects.Particle.Random
  - TinyLife.Objects.Particle.Remove
  - TinyLife.Objects.Particle.Scale
  - TinyLife.Objects.Particle.ScreenPosOffset
  - TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  - TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,TinyLife.Objects.Particle)
  - TinyLife.Objects.Particle.SpawnAnimation
  - TinyLife.Objects.Particle.SpriteEffects
  - TinyLife.Objects.Particle.TimeLived
  - TinyLife.Objects.Particle.TimeToLive
  - TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Objects.Particle.UpdateWhenPaused
  - TinyLife.Objects.Particle.VisualMotion
  - TinyLife.Objects.Particle.VisualWorldOffset
  langs:
  - csharp
  - vb
  name: Particle
  nameWithType: Particle
  fullName: TinyLife.Objects.Particle
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A particle is a <xref href="MLEM.Animations.SpriteAnimation" data-throw-if-not-resolved="false"></xref> that can be moved and displayed in world space.

    A particle is simply a <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref> that does not collide or interact directly with the world, but has all of the same properties.

    A new particle can be added for display using <xref href="TinyLife.Objects.Particle.Spawn(TinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Func%7bMicrosoft.Xna.Framework.Vector2%2cTinyLife.Objects.Particle%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class Particle
    content.vb: Public Class Particle
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.Particle.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.Particle.AmbientFallingLeaves
  commentId: F:TinyLife.Objects.Particle.AmbientFallingLeaves
  id: AmbientFallingLeaves
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: AmbientFallingLeaves
  nameWithType: Particle.AmbientFallingLeaves
  fullName: TinyLife.Objects.Particle.AmbientFallingLeaves
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A set of conditions for <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> instances that should optionally display the falling leaves particles that default trees do.

    The minimum and maximum spawn heights and horizontal coordinates are in relation to the furniture's position in the world, with all offsets being multiplied by <xref href="TinyLife.Utilities.TextureHandler.TileSize" data-throw-if-not-resolved="false"></xref>.

    To add additional furniture that displays falling leaves, simply add to this collection.
  example: []
  syntax:
    content: public static readonly Dictionary<FurnitureType, (float MinSpawnHeight, float MaxSpawnHeight, float MinSpawnX, float MaxSpawnX, float Chance)> AmbientFallingLeaves
    return:
      type: System.Collections.Generic.Dictionary{TinyLife.Objects.FurnitureType,System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}}
    content.vb: Public Shared ReadOnly AmbientFallingLeaves As Dictionary(Of FurnitureType, (MinSpawnHeight As Single, MaxSpawnHeight As Single, MinSpawnX As Single, MaxSpawnX As Single, Chance As Single))
- uid: TinyLife.Objects.Particle.OnParticleUpdate
  commentId: E:TinyLife.Objects.Particle.OnParticleUpdate
  id: OnParticleUpdate
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: OnParticleUpdate
  nameWithType: Particle.OnParticleUpdate
  fullName: TinyLife.Objects.Particle.OnParticleUpdate
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: An event that is raised when a <xref href="TinyLife.Objects.Particle" data-throw-if-not-resolved="false"></xref> is updated in <xref href="TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static event ObjectUpdateDelegate<Particle> OnParticleUpdate
    return:
      type: TinyLife.World.ObjectUpdateDelegate{TinyLife.Objects.Particle}
    content.vb: Public Shared Event OnParticleUpdate As ObjectUpdateDelegate(Of Particle)
- uid: TinyLife.Objects.Particle.OnSpawnAmbientParticles
  commentId: E:TinyLife.Objects.Particle.OnSpawnAmbientParticles
  id: OnSpawnAmbientParticles
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: OnSpawnAmbientParticles
  nameWithType: Particle.OnSpawnAmbientParticles
  fullName: TinyLife.Objects.Particle.OnSpawnAmbientParticles
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: An event that is raised when ambient particles for the game are spawned.
  example: []
  syntax:
    content: public static event Particle.SpawnAmbientParticlesDelegate OnSpawnAmbientParticles
    return:
      type: TinyLife.Objects.Particle.SpawnAmbientParticlesDelegate
    content.vb: Public Shared Event OnSpawnAmbientParticles As Particle.SpawnAmbientParticlesDelegate
- uid: TinyLife.Objects.Particle.Random
  commentId: F:TinyLife.Objects.Particle.Random
  id: Random
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Random
  nameWithType: Particle.Random
  fullName: TinyLife.Objects.Particle.Random
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The random instance that is used for all particle-related random operations.
  example: []
  syntax:
    content: protected static readonly Random Random
    return:
      type: System.Random
    content.vb: Protected Shared ReadOnly Random As Random
- uid: TinyLife.Objects.Particle.Map
  commentId: P:TinyLife.Objects.Particle.Map
  id: Map
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: Particle.Map
  fullName: TinyLife.Objects.Particle.Map
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The map that the game is currently on. This always returns <xref href="TinyLife.GameImpl.CurrentMap" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected static Map Map { get; }
    parameters: []
    return:
      type: TinyLife.World.Map
    content.vb: Protected Shared ReadOnly Property Map As Map
  overload: TinyLife.Objects.Particle.Map*
- uid: TinyLife.Objects.Particle.Friction
  commentId: F:TinyLife.Objects.Particle.Friction
  id: Friction
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Friction
  nameWithType: Particle.Friction
  fullName: TinyLife.Objects.Particle.Friction
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The friction that is applied to this particle's <xref href="TinyLife.Objects.Particle.Motion" data-throw-if-not-resolved="false"></xref> every <xref href="TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> frame
  example: []
  syntax:
    content: public Vector2 Friction
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Friction As Vector2
- uid: TinyLife.Objects.Particle.TimeToLive
  commentId: F:TinyLife.Objects.Particle.TimeToLive
  id: TimeToLive
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: TimeToLive
  nameWithType: Particle.TimeToLive
  fullName: TinyLife.Objects.Particle.TimeToLive
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The amount of real time that this particle should stay alive for until it disappears
  example: []
  syntax:
    content: public TimeSpan TimeToLive
    return:
      type: System.TimeSpan
    content.vb: Public TimeToLive As TimeSpan
- uid: TinyLife.Objects.Particle.Position
  commentId: F:TinyLife.Objects.Particle.Position
  id: Position
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Particle.Position
  fullName: TinyLife.Objects.Particle.Position
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The position in the world of this particle
  example: []
  syntax:
    content: public Vector2 Position
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Position As Vector2
- uid: TinyLife.Objects.Particle.Floor
  commentId: F:TinyLife.Objects.Particle.Floor
  id: Floor
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Floor
  nameWithType: Particle.Floor
  fullName: TinyLife.Objects.Particle.Floor
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The floor that this particle is on.
  example: []
  syntax:
    content: public float Floor
    return:
      type: System.Single
    content.vb: Public Floor As Single
- uid: TinyLife.Objects.Particle.Motion
  commentId: F:TinyLife.Objects.Particle.Motion
  id: Motion
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Motion
  nameWithType: Particle.Motion
  fullName: TinyLife.Objects.Particle.Motion
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The amount that this particle's <xref href="TinyLife.Objects.Particle.Position" data-throw-if-not-resolved="false"></xref> is modified by each <xref href="TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> frame
  example: []
  syntax:
    content: public Vector2 Motion
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Motion As Vector2
- uid: TinyLife.Objects.Particle.DepthOffset
  commentId: F:TinyLife.Objects.Particle.DepthOffset
  id: DepthOffset
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: DepthOffset
  nameWithType: Particle.DepthOffset
  fullName: TinyLife.Objects.Particle.DepthOffset
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A value that is passed to <xref href="TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Single%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> as the depth offset when the particle's depth is calculated.
  example: []
  syntax:
    content: public float DepthOffset
    return:
      type: System.Single
    content.vb: Public DepthOffset As Single
- uid: TinyLife.Objects.Particle.Gravity
  commentId: F:TinyLife.Objects.Particle.Gravity
  id: Gravity
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Gravity
  nameWithType: Particle.Gravity
  fullName: TinyLife.Objects.Particle.Gravity
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The particle's gravity, which determines how much its <xref href="TinyLife.Objects.Particle.VisualMotion" data-throw-if-not-resolved="false"></xref> is affected every <xref href="TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> frame. Defaults to 0.
  example: []
  syntax:
    content: public float Gravity
    return:
      type: System.Single
    content.vb: Public Gravity As Single
- uid: TinyLife.Objects.Particle.VisualMotion
  commentId: F:TinyLife.Objects.Particle.VisualMotion
  id: VisualMotion
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: VisualMotion
  nameWithType: Particle.VisualMotion
  fullName: TinyLife.Objects.Particle.VisualMotion
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The motion that this particle's <xref href="TinyLife.Objects.Particle.VisualWorldOffset" data-throw-if-not-resolved="false"></xref> is moved by every update frame.

    If <xref href="TinyLife.Objects.Particle.Gravity" data-throw-if-not-resolved="false"></xref> is set, this value is modified every update frame as well.

    This value is not affected by <xref href="TinyLife.Objects.Particle.Friction" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Vector2 VisualMotion
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public VisualMotion As Vector2
- uid: TinyLife.Objects.Particle.ScreenPosOffset
  commentId: F:TinyLife.Objects.Particle.ScreenPosOffset
  id: ScreenPosOffset
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: ScreenPosOffset
  nameWithType: Particle.ScreenPosOffset
  fullName: TinyLife.Objects.Particle.ScreenPosOffset
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An offset from this particle's screen-space draw position, also in screen space.

    This is added to the final draw position in <xref href="TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime%2cMicrosoft.Xna.Framework.Graphics.SpriteBatch)" data-throw-if-not-resolved="false"></xref>, after <xref href="TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> has already been called.
  example: []
  syntax:
    content: public Vector2 ScreenPosOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ScreenPosOffset As Vector2
- uid: TinyLife.Objects.Particle.VisualWorldOffset
  commentId: F:TinyLife.Objects.Particle.VisualWorldOffset
  id: VisualWorldOffset
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: VisualWorldOffset
  nameWithType: Particle.VisualWorldOffset
  fullName: TinyLife.Objects.Particle.VisualWorldOffset
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An offset from this particle's world-space draw position, also in world space.

    This is translated to screen space using <xref href="TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> and added to the final draw position in <xref href="TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime%2cMicrosoft.Xna.Framework.Graphics.SpriteBatch)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Vector2 VisualWorldOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public VisualWorldOffset As Vector2
- uid: TinyLife.Objects.Particle.DepthPosOffset
  commentId: F:TinyLife.Objects.Particle.DepthPosOffset
  id: DepthPosOffset
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: DepthPosOffset
  nameWithType: Particle.DepthPosOffset
  fullName: TinyLife.Objects.Particle.DepthPosOffset
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: An offset that is applied to this particle's <xref href="TinyLife.Objects.Particle.Position" data-throw-if-not-resolved="false"></xref>, in world space, for depth calculations.
  example: []
  syntax:
    content: public Vector2 DepthPosOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public DepthPosOffset As Vector2
- uid: TinyLife.Objects.Particle.ParentInfo
  commentId: F:TinyLife.Objects.Particle.ParentInfo
  id: ParentInfo
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: ParentInfo
  nameWithType: Particle.ParentInfo
  fullName: TinyLife.Objects.Particle.ParentInfo
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A <xref href="TinyLife.Objects.Particle.ParentInfo" data-throw-if-not-resolved="false"></xref> that contains the object that this particle should be rendered in relation to.
  example: []
  syntax:
    content: public ParentInfo ParentInfo
    return:
      type: TinyLife.Objects.ParentInfo
    content.vb: Public ParentInfo As ParentInfo
- uid: TinyLife.Objects.Particle.IgnoreParentDrawPos
  commentId: F:TinyLife.Objects.Particle.IgnoreParentDrawPos
  id: IgnoreParentDrawPos
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: IgnoreParentDrawPos
  nameWithType: Particle.IgnoreParentDrawPos
  fullName: TinyLife.Objects.Particle.IgnoreParentDrawPos
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: This value indicates whether the visual position of the <xref href="TinyLife.Objects.Particle.ParentInfo" data-throw-if-not-resolved="false"></xref> should be ignored when drawing.
  example: []
  syntax:
    content: public bool IgnoreParentDrawPos
    return:
      type: System.Boolean
    content.vb: Public IgnoreParentDrawPos As Boolean
- uid: TinyLife.Objects.Particle.UpdateWhenPaused
  commentId: F:TinyLife.Objects.Particle.UpdateWhenPaused
  id: UpdateWhenPaused
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: UpdateWhenPaused
  nameWithType: Particle.UpdateWhenPaused
  fullName: TinyLife.Objects.Particle.UpdateWhenPaused
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This value indicates whether this particle's <xref href="TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> method should still be called when the game is paused.

    This should be set to true when spawning particles in build mode, as the game is paused during that time.
  example: []
  syntax:
    content: public bool UpdateWhenPaused
    return:
      type: System.Boolean
    content.vb: Public UpdateWhenPaused As Boolean
- uid: TinyLife.Objects.Particle.Color
  commentId: F:TinyLife.Objects.Particle.Color
  id: Color
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Particle.Color
  fullName: TinyLife.Objects.Particle.Color
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The color to render this particle with, or <xref href="Microsoft.Xna.Framework.Color.White" data-throw-if-not-resolved="false"></xref> by default.
  example: []
  syntax:
    content: public Color Color
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public Color As Color
- uid: TinyLife.Objects.Particle.SpriteEffects
  commentId: F:TinyLife.Objects.Particle.SpriteEffects
  id: SpriteEffects
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: SpriteEffects
  nameWithType: Particle.SpriteEffects
  fullName: TinyLife.Objects.Particle.SpriteEffects
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The <xref href="TinyLife.Objects.Particle.SpriteEffects" data-throw-if-not-resolved="false"></xref> that should be applied when drawing this particle.
  example: []
  syntax:
    content: public SpriteEffects SpriteEffects
    return:
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
    content.vb: Public SpriteEffects As SpriteEffects
- uid: TinyLife.Objects.Particle.ForceOutside
  commentId: F:TinyLife.Objects.Particle.ForceOutside
  id: ForceOutside
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: ForceOutside
  nameWithType: Particle.ForceOutside
  fullName: TinyLife.Objects.Particle.ForceOutside
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Whether this particle should always be displayed as if it were outside (rather than in the room its <xref href="TinyLife.Objects.Particle.Position" data-throw-if-not-resolved="false"></xref> is in).

    This field is used for particles like chimney smoke, which always draw above the room on the outside.
  example: []
  syntax:
    content: public bool ForceOutside
    return:
      type: System.Boolean
    content.vb: Public ForceOutside As Boolean
- uid: TinyLife.Objects.Particle.OnUpdate
  commentId: F:TinyLife.Objects.Particle.OnUpdate
  id: OnUpdate
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: OnUpdate
  nameWithType: Particle.OnUpdate
  fullName: TinyLife.Objects.Particle.OnUpdate
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is raised when this particle is updated in <xref href="TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.

    Note that <xref href="TinyLife.Objects.Particle.OnParticleUpdate" data-throw-if-not-resolved="false"></xref> is invoked for all particles, whereas this event is just invoked for this particle.
  example: []
  syntax:
    content: public Particle.UpdateDelegate OnUpdate
    return:
      type: TinyLife.Objects.Particle.UpdateDelegate
    content.vb: Public OnUpdate As Particle.UpdateDelegate
- uid: TinyLife.Objects.Particle.Light
  commentId: F:TinyLife.Objects.Particle.Light
  id: Light
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Light
  nameWithType: Particle.Light
  fullName: TinyLife.Objects.Particle.Light
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The light that this particle should display, which is automatically added and removed from the <xref href="TinyLife.Objects.Particle.Map" data-throw-if-not-resolved="false"></xref>.

    The light's <xref href="TinyLife.Objects.Light.Scale" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.Light.Position" data-throw-if-not-resolved="false"></xref> will be set automatically based on this particle.
  example: []
  syntax:
    content: public Light Light
    return:
      type: TinyLife.Objects.Light
    content.vb: Public Light As Light
- uid: TinyLife.Objects.Particle.Scale
  commentId: F:TinyLife.Objects.Particle.Scale
  id: Scale
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: Particle.Scale
  fullName: TinyLife.Objects.Particle.Scale
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The scale that this particle should display with.
  example: []
  syntax:
    content: public float Scale
    return:
      type: System.Single
    content.vb: Public Scale As Single
- uid: TinyLife.Objects.Particle.Alpha
  commentId: F:TinyLife.Objects.Particle.Alpha
  id: Alpha
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Alpha
  nameWithType: Particle.Alpha
  fullName: TinyLife.Objects.Particle.Alpha
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The alpha that this particle should draw with.
  example: []
  syntax:
    content: public float Alpha
    return:
      type: System.Single
    content.vb: Public Alpha As Single
- uid: TinyLife.Objects.Particle.LifeAnimation
  commentId: F:TinyLife.Objects.Particle.LifeAnimation
  id: LifeAnimation
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: LifeAnimation
  nameWithType: Particle.LifeAnimation
  fullName: TinyLife.Objects.Particle.LifeAnimation
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: An action that can be used to animate any part of the particle over its lifespan. The passed <xref href="System.Single" data-throw-if-not-resolved="false"></xref> is the percentage of the particle's lifespan that has passed.
  example: []
  syntax:
    content: public Action<Particle, float> LifeAnimation
    return:
      type: System.Action{TinyLife.Objects.Particle,System.Single}
    content.vb: Public LifeAnimation As Action(Of Particle, Single)
- uid: TinyLife.Objects.Particle.SpawnAnimation
  commentId: F:TinyLife.Objects.Particle.SpawnAnimation
  id: SpawnAnimation
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: SpawnAnimation
  nameWithType: Particle.SpawnAnimation
  fullName: TinyLife.Objects.Particle.SpawnAnimation
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: An action that can be used to animate any part of the particle over the first part of its lifespan. The passed <xref href="System.Single" data-throw-if-not-resolved="false"></xref> is the percentage of the given <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that has passed.
  example: []
  syntax:
    content: public (TimeSpan, Action<Particle, float>) SpawnAnimation
    return:
      type: System.ValueTuple{System.TimeSpan,System.Action{TinyLife.Objects.Particle,System.Single}}
    content.vb: Public SpawnAnimation As (TimeSpan, Action(Of Particle, Single))
- uid: TinyLife.Objects.Particle.DeathAnimation
  commentId: F:TinyLife.Objects.Particle.DeathAnimation
  id: DeathAnimation
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: DeathAnimation
  nameWithType: Particle.DeathAnimation
  fullName: TinyLife.Objects.Particle.DeathAnimation
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: An action that can be used to animate any part of the particle over the last part of its lifespan. The passed <xref href="System.Single" data-throw-if-not-resolved="false"></xref> is the percentage of the given <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that has passed, where the end of the timespan marks the despawning of the particle.
  example: []
  syntax:
    content: public (TimeSpan, Action<Particle, float>) DeathAnimation
    return:
      type: System.ValueTuple{System.TimeSpan,System.Action{TinyLife.Objects.Particle,System.Single}}
    content.vb: Public DeathAnimation As (TimeSpan, Action(Of Particle, Single))
- uid: TinyLife.Objects.Particle.Animation
  commentId: F:TinyLife.Objects.Particle.Animation
  id: Animation
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Animation
  nameWithType: Particle.Animation
  fullName: TinyLife.Objects.Particle.Animation
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The <xref href="MLEM.Animations.SpriteAnimation" data-throw-if-not-resolved="false"></xref> that this particle displays over its lifespan
  example: []
  syntax:
    content: protected readonly SpriteAnimation Animation
    return:
      type: MLEM.Animations.SpriteAnimation
    content.vb: Protected ReadOnly Animation As SpriteAnimation
- uid: TinyLife.Objects.Particle.TimeLived
  commentId: F:TinyLife.Objects.Particle.TimeLived
  id: TimeLived
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: TimeLived
  nameWithType: Particle.TimeLived
  fullName: TinyLife.Objects.Particle.TimeLived
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The amount of real time that this particle has lived for.

    This time span will always be lower than or equal to <xref href="TinyLife.Objects.Particle.TimeToLive" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected TimeSpan TimeLived
    return:
      type: System.TimeSpan
    content.vb: Protected TimeLived As TimeSpan
- uid: TinyLife.Objects.Particle.#ctor(MLEM.Textures.TextureRegion,System.TimeSpan,Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:TinyLife.Objects.Particle.#ctor(MLEM.Textures.TextureRegion,System.TimeSpan,Microsoft.Xna.Framework.Vector2,System.Single)
  id: '#ctor(MLEM.Textures.TextureRegion,System.TimeSpan,Microsoft.Xna.Framework.Vector2,System.Single)'
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Particle(TextureRegion, TimeSpan, Vector2, float)
  nameWithType: Particle.Particle(TextureRegion, TimeSpan, Vector2, float)
  fullName: TinyLife.Objects.Particle.Particle(MLEM.Textures.TextureRegion, System.TimeSpan, Microsoft.Xna.Framework.Vector2, float)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new particle with the given settings
  example: []
  syntax:
    content: public Particle(TextureRegion region, TimeSpan timeToLive, Vector2 position, float floor)
    parameters:
    - id: region
      type: MLEM.Textures.TextureRegion
      description: The texture that this particle should display with
    - id: timeToLive
      type: System.TimeSpan
      description: The amount of real time that this particle should stay alive for
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position that this particle should have, in world space
    - id: floor
      type: System.Single
      description: The floor that this particle is on.
    content.vb: Public Sub New(region As TextureRegion, timeToLive As TimeSpan, position As Vector2, floor As Single)
  overload: TinyLife.Objects.Particle.#ctor*
  nameWithType.vb: Particle.New(TextureRegion, TimeSpan, Vector2, Single)
  fullName.vb: TinyLife.Objects.Particle.New(MLEM.Textures.TextureRegion, System.TimeSpan, Microsoft.Xna.Framework.Vector2, Single)
  name.vb: New(TextureRegion, TimeSpan, Vector2, Single)
- uid: TinyLife.Objects.Particle.#ctor(MLEM.Animations.SpriteAnimation,System.TimeSpan,Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:TinyLife.Objects.Particle.#ctor(MLEM.Animations.SpriteAnimation,System.TimeSpan,Microsoft.Xna.Framework.Vector2,System.Single)
  id: '#ctor(MLEM.Animations.SpriteAnimation,System.TimeSpan,Microsoft.Xna.Framework.Vector2,System.Single)'
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Particle(SpriteAnimation, TimeSpan, Vector2, float)
  nameWithType: Particle.Particle(SpriteAnimation, TimeSpan, Vector2, float)
  fullName: TinyLife.Objects.Particle.Particle(MLEM.Animations.SpriteAnimation, System.TimeSpan, Microsoft.Xna.Framework.Vector2, float)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new particle with the given settings
  example: []
  syntax:
    content: public Particle(SpriteAnimation animation, TimeSpan timeToLive, Vector2 position, float floor)
    parameters:
    - id: animation
      type: MLEM.Animations.SpriteAnimation
      description: The animation that this particle should display with
    - id: timeToLive
      type: System.TimeSpan
      description: The amount of real time that this particle should stay alive for
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position that this particle should have, in world space
    - id: floor
      type: System.Single
      description: The floor that this particle is on.
    content.vb: Public Sub New(animation As SpriteAnimation, timeToLive As TimeSpan, position As Vector2, floor As Single)
  overload: TinyLife.Objects.Particle.#ctor*
  nameWithType.vb: Particle.New(SpriteAnimation, TimeSpan, Vector2, Single)
  fullName.vb: TinyLife.Objects.Particle.New(MLEM.Animations.SpriteAnimation, System.TimeSpan, Microsoft.Xna.Framework.Vector2, Single)
  name.vb: New(SpriteAnimation, TimeSpan, Vector2, Single)
- uid: TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Update(GameTime, TimeSpan, float)
  nameWithType: Particle.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The update method, which is called every update frame by the underlying <xref href="TinyLife.Objects.Particle.Map" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public virtual void Update(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed since the last call
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overridable Sub Update(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.Objects.Particle.Update*
  nameWithType.vb: Particle.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
- uid: TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch)
  nameWithType: Particle.Draw(GameTime, SpriteBatch)
  fullName: TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Draws this particle on the current <xref href="TinyLife.Objects.Particle.Map" data-throw-if-not-resolved="false"></xref>, at the current <xref href="TinyLife.Objects.Particle.Position" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void Draw(GameTime time, SpriteBatch batch)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current time
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing
    content.vb: Public Overridable Sub Draw(time As GameTime, batch As SpriteBatch)
  overload: TinyLife.Objects.Particle.Draw*
- uid: TinyLife.Objects.Particle.Remove
  commentId: M:TinyLife.Objects.Particle.Remove
  id: Remove
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Remove()
  nameWithType: Particle.Remove()
  fullName: TinyLife.Objects.Particle.Remove()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Removes this particle from the list of particles and calls its <xref href="TinyLife.Objects.Particle.OnRemoved" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public void Remove()
    content.vb: Public Sub Remove()
  overload: TinyLife.Objects.Particle.Remove*
- uid: TinyLife.Objects.Particle.OnRemoved
  commentId: M:TinyLife.Objects.Particle.OnRemoved
  id: OnRemoved
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: OnRemoved()
  nameWithType: Particle.OnRemoved()
  fullName: TinyLife.Objects.Particle.OnRemoved()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: This method is called when a particle is removed in <xref href="TinyLife.Objects.Particle.Remove" data-throw-if-not-resolved="false"></xref>, or when the camera rotation or viewed map changes.
  example: []
  syntax:
    content: protected virtual void OnRemoved()
    content.vb: Protected Overridable Sub OnRemoved()
  overload: TinyLife.Objects.Particle.OnRemoved*
- uid: TinyLife.Objects.Particle.OnAdded
  commentId: M:TinyLife.Objects.Particle.OnAdded
  id: OnAdded
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: OnAdded()
  nameWithType: Particle.OnAdded()
  fullName: TinyLife.Objects.Particle.OnAdded()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: This method is called when a particle is successfully spawned in <xref href="TinyLife.Objects.Particle.Spawn(TinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Func%7bMicrosoft.Xna.Framework.Vector2%2cTinyLife.Objects.Particle%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected virtual void OnAdded()
    content.vb: Protected Overridable Sub OnAdded()
  overload: TinyLife.Objects.Particle.OnAdded*
- uid: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  commentId: M:TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  id: Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Spawn(Map, Vector2, Func<Vector2, Particle>)
  nameWithType: Particle.Spawn(Map, Vector2, Func<Vector2, Particle>)
  fullName: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, System.Func<Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Spawns a new particle with the given settings.

    The particle is only spawned if the resulting display position would currently be visible for the <xref href="TinyLife.GameImpl.Camera" data-throw-if-not-resolved="false"></xref>.

    If the particle's spawning behavior is very simple, consider using <xref href="TinyLife.Objects.Particle.Spawn(TinyLife.World.Map%2cTinyLife.Objects.Particle)" data-throw-if-not-resolved="false"></xref> instead, as it does not require a potential closure to be created.
  example: []
  syntax:
    content: public static bool Spawn(Map map, Vector2 position, Func<Vector2, Particle> particleFunction)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to spawn on.
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position in world space that the particle should be spawned at.
    - id: particleFunction
      type: System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle}
      description: A function that is invoked if the particle can be spawned. Can return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, in which case no particle is spawned and this method returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    return:
      type: System.Boolean
    content.vb: Public Shared Function Spawn(map As Map, position As Vector2, particleFunction As Func(Of Vector2, Particle)) As Boolean
  overload: TinyLife.Objects.Particle.Spawn*
  nameWithType.vb: Particle.Spawn(Map, Vector2, Func(Of Vector2, Particle))
  fullName.vb: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, System.Func(Of Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle))
  name.vb: Spawn(Map, Vector2, Func(Of Vector2, Particle))
- uid: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,TinyLife.Objects.Particle)
  commentId: M:TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,TinyLife.Objects.Particle)
  id: Spawn(TinyLife.World.Map,TinyLife.Objects.Particle)
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Spawn(Map, Particle)
  nameWithType: Particle.Spawn(Map, Particle)
  fullName: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map, TinyLife.Objects.Particle)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Spawns a new particle with the given settings.

    The particle is only spawned if the resulting display position would currently be visible for the <xref href="TinyLife.GameImpl.Camera" data-throw-if-not-resolved="false"></xref>.

    If the particle's spawning behavior is very complex, consider using <xref href="TinyLife.Objects.Particle.Spawn(TinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Func%7bMicrosoft.Xna.Framework.Vector2%2cTinyLife.Objects.Particle%7d)" data-throw-if-not-resolved="false"></xref> instead, as it only causes a new particle instance to be created if the particle can actually be spawned.
  example: []
  syntax:
    content: public static bool Spawn(Map map, Particle particle)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to spawn on.
    - id: particle
      type: TinyLife.Objects.Particle
      description: The particle to spawn.
    return:
      type: System.Boolean
    content.vb: Public Shared Function Spawn(map As Map, particle As Particle) As Boolean
  overload: TinyLife.Objects.Particle.Spawn*
references:
- uid: MLEM.Animations.SpriteAnimation
  commentId: T:MLEM.Animations.SpriteAnimation
  parent: MLEM.Animations
  isExternal: true
  name: SpriteAnimation
  nameWithType: SpriteAnimation
  fullName: MLEM.Animations.SpriteAnimation
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  commentId: M:TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  isExternal: true
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Spawn_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Func_Microsoft_Xna_Framework_Vector2_TinyLife_Objects_Particle__
  name: Spawn(Map, Vector2, Func<Vector2, Particle>)
  nameWithType: Particle.Spawn(Map, Vector2, Func<Vector2, Particle>)
  fullName: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, System.Func<Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle>)
  nameWithType.vb: Particle.Spawn(Map, Vector2, Func(Of Vector2, Particle))
  fullName.vb: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, System.Func(Of Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle))
  name.vb: Spawn(Map, Vector2, Func(Of Vector2, Particle))
  spec.csharp:
  - uid: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
    name: Spawn
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Spawn_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Func_Microsoft_Xna_Framework_Vector2_TinyLife_Objects_Particle__
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
    name: Spawn
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Spawn_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Func_Microsoft_Xna_Framework_Vector2_TinyLife_Objects_Particle__
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: )
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Objects.Particle.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Particle>(Particle)
  nameWithType: Extensions.JsonCopy<Particle>(Particle)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Particle>(TinyLife.Objects.Particle)
  nameWithType.vb: Extensions.JsonCopy(Of Particle)(Particle)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Particle)(TinyLife.Objects.Particle)
  name.vb: JsonCopy(Of Particle)(Particle)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Particle)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Particle)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: )
- uid: MLEM.Animations
  commentId: N:MLEM.Animations
  isExternal: true
  name: MLEM.Animations
  nameWithType: MLEM.Animations
  fullName: MLEM.Animations
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Animations
    name: Animations
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Animations
    name: Animations
    isExternal: true
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.FurnitureType
  commentId: T:TinyLife.Objects.FurnitureType
  parent: TinyLife.Objects
  href: TinyLife.Objects.FurnitureType.html
  name: FurnitureType
  nameWithType: FurnitureType
  fullName: TinyLife.Objects.FurnitureType
- uid: TinyLife.Utilities.TextureHandler.TileSize
  commentId: P:TinyLife.Utilities.TextureHandler.TileSize
  href: TinyLife.Utilities.TextureHandler.html#TinyLife_Utilities_TextureHandler_TileSize
  name: TileSize
  nameWithType: TextureHandler.TileSize
  fullName: TinyLife.Utilities.TextureHandler.TileSize
- uid: System.Collections.Generic.Dictionary{TinyLife.Objects.FurnitureType,System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}}
  commentId: T:System.Collections.Generic.Dictionary{TinyLife.Objects.FurnitureType,System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<FurnitureType, (float MinSpawnHeight, float MaxSpawnHeight, float MinSpawnX, float MaxSpawnX, float Chance)>
  nameWithType: Dictionary<FurnitureType, (float MinSpawnHeight, float MaxSpawnHeight, float MinSpawnX, float MaxSpawnX, float Chance)>
  fullName: System.Collections.Generic.Dictionary<TinyLife.Objects.FurnitureType, (float MinSpawnHeight, float MaxSpawnHeight, float MinSpawnX, float MaxSpawnX, float Chance)>
  nameWithType.vb: Dictionary(Of FurnitureType, (MinSpawnHeight As Single, MaxSpawnHeight As Single, MinSpawnX As Single, MaxSpawnX As Single, Chance As Single))
  fullName.vb: System.Collections.Generic.Dictionary(Of TinyLife.Objects.FurnitureType, (MinSpawnHeight As Single, MaxSpawnHeight As Single, MinSpawnX As Single, MaxSpawnX As Single, Chance As Single))
  name.vb: Dictionary(Of FurnitureType, (MinSpawnHeight As Single, MaxSpawnHeight As Single, MinSpawnX As Single, MaxSpawnX As Single, Chance As Single))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: ','
  - name: " "
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.MinSpawnHeight
    name: MinSpawnHeight
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.minspawnheight
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.MaxSpawnHeight
    name: MaxSpawnHeight
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.maxspawnheight
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.MinSpawnX
    name: MinSpawnX
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.minspawnx
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.MaxSpawnX
    name: MaxSpawnX
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.maxspawnx
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.Chance
    name: Chance
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.chance
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: ','
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.MinSpawnHeight
    name: MinSpawnHeight
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.minspawnheight
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.MaxSpawnHeight
    name: MaxSpawnHeight
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.maxspawnheight
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.MinSpawnX
    name: MinSpawnX
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.minspawnx
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.MaxSpawnX
    name: MaxSpawnX
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.maxspawnx
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.Chance
    name: Chance
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.chance
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Objects.Particle
  commentId: T:TinyLife.Objects.Particle
  parent: TinyLife.Objects
  href: TinyLife.Objects.Particle.html
  name: Particle
  nameWithType: Particle
  fullName: TinyLife.Objects.Particle
- uid: TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  isExternal: true
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: Update(GameTime, TimeSpan, float)
  nameWithType: Particle.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: Particle.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.World.ObjectUpdateDelegate{TinyLife.Objects.Particle}
  commentId: T:TinyLife.World.ObjectUpdateDelegate{TinyLife.Objects.Particle}
  parent: TinyLife.World
  definition: TinyLife.World.ObjectUpdateDelegate`1
  href: TinyLife.World.ObjectUpdateDelegate-1.html
  name: ObjectUpdateDelegate<Particle>
  nameWithType: ObjectUpdateDelegate<Particle>
  fullName: TinyLife.World.ObjectUpdateDelegate<TinyLife.Objects.Particle>
  nameWithType.vb: ObjectUpdateDelegate(Of Particle)
  fullName.vb: TinyLife.World.ObjectUpdateDelegate(Of TinyLife.Objects.Particle)
  name.vb: ObjectUpdateDelegate(Of Particle)
  spec.csharp:
  - uid: TinyLife.World.ObjectUpdateDelegate`1
    name: ObjectUpdateDelegate
    href: TinyLife.World.ObjectUpdateDelegate-1.html
  - name: <
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: '>'
  spec.vb:
  - uid: TinyLife.World.ObjectUpdateDelegate`1
    name: ObjectUpdateDelegate
    href: TinyLife.World.ObjectUpdateDelegate-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: )
- uid: TinyLife.World.ObjectUpdateDelegate`1
  commentId: T:TinyLife.World.ObjectUpdateDelegate`1
  href: TinyLife.World.ObjectUpdateDelegate-1.html
  name: ObjectUpdateDelegate<T>
  nameWithType: ObjectUpdateDelegate<T>
  fullName: TinyLife.World.ObjectUpdateDelegate<T>
  nameWithType.vb: ObjectUpdateDelegate(Of T)
  fullName.vb: TinyLife.World.ObjectUpdateDelegate(Of T)
  name.vb: ObjectUpdateDelegate(Of T)
  spec.csharp:
  - uid: TinyLife.World.ObjectUpdateDelegate`1
    name: ObjectUpdateDelegate
    href: TinyLife.World.ObjectUpdateDelegate-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: TinyLife.World.ObjectUpdateDelegate`1
    name: ObjectUpdateDelegate
    href: TinyLife.World.ObjectUpdateDelegate-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.Objects.Particle.SpawnAmbientParticlesDelegate
  commentId: T:TinyLife.Objects.Particle.SpawnAmbientParticlesDelegate
  parent: TinyLife.Objects
  href: TinyLife.Objects.Particle.html
  name: Particle.SpawnAmbientParticlesDelegate
  nameWithType: Particle.SpawnAmbientParticlesDelegate
  fullName: TinyLife.Objects.Particle.SpawnAmbientParticlesDelegate
  spec.csharp:
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: .
  - uid: TinyLife.Objects.Particle.SpawnAmbientParticlesDelegate
    name: SpawnAmbientParticlesDelegate
    href: TinyLife.Objects.Particle.SpawnAmbientParticlesDelegate.html
  spec.vb:
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: .
  - uid: TinyLife.Objects.Particle.SpawnAmbientParticlesDelegate
    name: SpawnAmbientParticlesDelegate
    href: TinyLife.Objects.Particle.SpawnAmbientParticlesDelegate.html
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: TinyLife.GameImpl.CurrentMap
  commentId: P:TinyLife.GameImpl.CurrentMap
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentMap
  name: CurrentMap
  nameWithType: GameImpl.CurrentMap
  fullName: TinyLife.GameImpl.CurrentMap
- uid: TinyLife.Objects.Particle.Map*
  commentId: Overload:TinyLife.Objects.Particle.Map
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Map
  name: Map
  nameWithType: Particle.Map
  fullName: TinyLife.Objects.Particle.Map
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.Objects.Particle.Motion
  commentId: F:TinyLife.Objects.Particle.Motion
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Motion
  name: Motion
  nameWithType: Particle.Motion
  fullName: TinyLife.Objects.Particle.Motion
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Objects.Particle.Position
  commentId: F:TinyLife.Objects.Particle.Position
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Position
  name: Position
  nameWithType: Particle.Position
  fullName: TinyLife.Objects.Particle.Position
- uid: TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  href: TinyLife.World.Map.html#TinyLife_World_Map_GetDepth_Microsoft_Xna_Framework_Vector2_System_Single_System_Single_System_Boolean_System_Boolean_System_Boolean_
  name: GetDepth(Vector2, float, float, bool, bool, bool)
  nameWithType: Map.GetDepth(Vector2, float, float, bool, bool, bool)
  fullName: TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2, float, float, bool, bool, bool)
  nameWithType.vb: Map.GetDepth(Vector2, Single, Single, Boolean, Boolean, Boolean)
  fullName.vb: TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2, Single, Single, Boolean, Boolean, Boolean)
  name.vb: GetDepth(Vector2, Single, Single, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)
    name: GetDepth
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetDepth_Microsoft_Xna_Framework_Vector2_System_Single_System_Single_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)
    name: GetDepth
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetDepth_Microsoft_Xna_Framework_Vector2_System_Single_System_Single_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Particle.VisualMotion
  commentId: F:TinyLife.Objects.Particle.VisualMotion
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_VisualMotion
  name: VisualMotion
  nameWithType: Particle.VisualMotion
  fullName: TinyLife.Objects.Particle.VisualMotion
- uid: TinyLife.Objects.Particle.VisualWorldOffset
  commentId: F:TinyLife.Objects.Particle.VisualWorldOffset
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_VisualWorldOffset
  name: VisualWorldOffset
  nameWithType: Particle.VisualWorldOffset
  fullName: TinyLife.Objects.Particle.VisualWorldOffset
- uid: TinyLife.Objects.Particle.Gravity
  commentId: F:TinyLife.Objects.Particle.Gravity
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Gravity
  name: Gravity
  nameWithType: Particle.Gravity
  fullName: TinyLife.Objects.Particle.Gravity
- uid: TinyLife.Objects.Particle.Friction
  commentId: F:TinyLife.Objects.Particle.Friction
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Friction
  name: Friction
  nameWithType: Particle.Friction
  fullName: TinyLife.Objects.Particle.Friction
- uid: TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  isExternal: true
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  name: Draw(GameTime, SpriteBatch)
  nameWithType: Particle.Draw(GameTime, SpriteBatch)
  fullName: TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch)
  spec.csharp:
  - uid: TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
    name: Draw
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
    name: Draw
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: )
- uid: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_ToScreenPos_Microsoft_Xna_Framework_Vector2_System_Single_System_Boolean_System_Boolean_System_Boolean_
  name: ToScreenPos(Vector2, float, bool, bool, bool)
  nameWithType: Extensions.ToScreenPos(Vector2, float, bool, bool, bool)
  fullName: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2, float, bool, bool, bool)
  nameWithType.vb: Extensions.ToScreenPos(Vector2, Single, Boolean, Boolean, Boolean)
  fullName.vb: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2, Single, Boolean, Boolean, Boolean)
  name.vb: ToScreenPos(Vector2, Single, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean,System.Boolean,System.Boolean)
    name: ToScreenPos
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_ToScreenPos_Microsoft_Xna_Framework_Vector2_System_Single_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean,System.Boolean,System.Boolean)
    name: ToScreenPos
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_ToScreenPos_Microsoft_Xna_Framework_Vector2_System_Single_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Particle.ParentInfo
  commentId: F:TinyLife.Objects.Particle.ParentInfo
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_ParentInfo
  name: ParentInfo
  nameWithType: Particle.ParentInfo
  fullName: TinyLife.Objects.Particle.ParentInfo
- uid: TinyLife.Objects.ParentInfo
  commentId: T:TinyLife.Objects.ParentInfo
  parent: TinyLife.Objects
  href: TinyLife.Objects.ParentInfo.html
  name: ParentInfo
  nameWithType: ParentInfo
  fullName: TinyLife.Objects.ParentInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Microsoft.Xna.Framework.Color.White
  commentId: P:Microsoft.Xna.Framework.Color.White
  isExternal: true
  name: White
  nameWithType: Color.White
  fullName: Microsoft.Xna.Framework.Color.White
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: TinyLife.Objects.Particle.SpriteEffects
  commentId: F:TinyLife.Objects.Particle.SpriteEffects
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_SpriteEffects
  name: SpriteEffects
  nameWithType: Particle.SpriteEffects
  fullName: TinyLife.Objects.Particle.SpriteEffects
- uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteEffects
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteEffects
  nameWithType: SpriteEffects
  fullName: Microsoft.Xna.Framework.Graphics.SpriteEffects
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: TinyLife.Objects.Particle.OnParticleUpdate
  commentId: E:TinyLife.Objects.Particle.OnParticleUpdate
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_OnParticleUpdate
  name: OnParticleUpdate
  nameWithType: Particle.OnParticleUpdate
  fullName: TinyLife.Objects.Particle.OnParticleUpdate
- uid: TinyLife.Objects.Particle.UpdateDelegate
  commentId: T:TinyLife.Objects.Particle.UpdateDelegate
  parent: TinyLife.Objects
  href: TinyLife.Objects.Particle.html
  name: Particle.UpdateDelegate
  nameWithType: Particle.UpdateDelegate
  fullName: TinyLife.Objects.Particle.UpdateDelegate
  spec.csharp:
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: .
  - uid: TinyLife.Objects.Particle.UpdateDelegate
    name: UpdateDelegate
    href: TinyLife.Objects.Particle.UpdateDelegate.html
  spec.vb:
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: .
  - uid: TinyLife.Objects.Particle.UpdateDelegate
    name: UpdateDelegate
    href: TinyLife.Objects.Particle.UpdateDelegate.html
- uid: TinyLife.Objects.Particle.Map
  commentId: P:TinyLife.Objects.Particle.Map
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Map
  name: Map
  nameWithType: Particle.Map
  fullName: TinyLife.Objects.Particle.Map
- uid: TinyLife.Objects.Light.Scale
  commentId: F:TinyLife.Objects.Light.Scale
  href: TinyLife.Objects.Light.html#TinyLife_Objects_Light_Scale
  name: Scale
  nameWithType: Light.Scale
  fullName: TinyLife.Objects.Light.Scale
- uid: TinyLife.Objects.Light.Position
  commentId: P:TinyLife.Objects.Light.Position
  href: TinyLife.Objects.Light.html#TinyLife_Objects_Light_Position
  name: Position
  nameWithType: Light.Position
  fullName: TinyLife.Objects.Light.Position
- uid: TinyLife.Objects.Light
  commentId: T:TinyLife.Objects.Light
  parent: TinyLife.Objects
  href: TinyLife.Objects.Light.html
  name: Light
  nameWithType: Light
  fullName: TinyLife.Objects.Light
- uid: System.Action{TinyLife.Objects.Particle,System.Single}
  commentId: T:System.Action{TinyLife.Objects.Particle,System.Single}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<Particle, float>
  nameWithType: Action<Particle, float>
  fullName: System.Action<TinyLife.Objects.Particle, float>
  nameWithType.vb: Action(Of Particle, Single)
  fullName.vb: System.Action(Of TinyLife.Objects.Particle, Single)
  name.vb: Action(Of Particle, Single)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.ValueTuple{System.TimeSpan,System.Action{TinyLife.Objects.Particle,System.Single}}
  commentId: T:System.ValueTuple{System.TimeSpan,System.Action{TinyLife.Objects.Particle,System.Single}}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: (TimeSpan, Action<Particle, float>)
  nameWithType: (TimeSpan, Action<Particle, float>)
  fullName: (System.TimeSpan, System.Action<TinyLife.Objects.Particle, float>)
  nameWithType.vb: (TimeSpan, Action(Of Particle, Single))
  fullName.vb: (System.TimeSpan, System.Action(Of TinyLife.Objects.Particle, Single))
  name.vb: (TimeSpan, Action(Of Particle, Single))
  spec.csharp:
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Objects.Particle.TimeToLive
  commentId: F:TinyLife.Objects.Particle.TimeToLive
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_TimeToLive
  name: TimeToLive
  nameWithType: Particle.TimeToLive
  fullName: TinyLife.Objects.Particle.TimeToLive
- uid: TinyLife.Objects.Particle.#ctor*
  commentId: Overload:TinyLife.Objects.Particle.#ctor
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle__ctor_MLEM_Textures_TextureRegion_System_TimeSpan_Microsoft_Xna_Framework_Vector2_System_Single_
  name: Particle
  nameWithType: Particle.Particle
  fullName: TinyLife.Objects.Particle.Particle
  nameWithType.vb: Particle.New
  fullName.vb: TinyLife.Objects.Particle.New
  name.vb: New
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Speed
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
- uid: TinyLife.Objects.Particle.Update*
  commentId: Overload:TinyLife.Objects.Particle.Update
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: Update
  nameWithType: Particle.Update
  fullName: TinyLife.Objects.Particle.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: TinyLife.Objects.Particle.Draw*
  commentId: Overload:TinyLife.Objects.Particle.Draw
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  name: Draw
  nameWithType: Particle.Draw
  fullName: TinyLife.Objects.Particle.Draw
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: TinyLife.Objects.Particle.OnRemoved
  commentId: M:TinyLife.Objects.Particle.OnRemoved
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_OnRemoved
  name: OnRemoved()
  nameWithType: Particle.OnRemoved()
  fullName: TinyLife.Objects.Particle.OnRemoved()
  spec.csharp:
  - uid: TinyLife.Objects.Particle.OnRemoved
    name: OnRemoved
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_OnRemoved
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Particle.OnRemoved
    name: OnRemoved
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_OnRemoved
  - name: (
  - name: )
- uid: TinyLife.Objects.Particle.Remove*
  commentId: Overload:TinyLife.Objects.Particle.Remove
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Remove
  name: Remove
  nameWithType: Particle.Remove
  fullName: TinyLife.Objects.Particle.Remove
- uid: TinyLife.Objects.Particle.Remove
  commentId: M:TinyLife.Objects.Particle.Remove
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Remove
  name: Remove()
  nameWithType: Particle.Remove()
  fullName: TinyLife.Objects.Particle.Remove()
  spec.csharp:
  - uid: TinyLife.Objects.Particle.Remove
    name: Remove
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Remove
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Particle.Remove
    name: Remove
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Remove
  - name: (
  - name: )
- uid: TinyLife.Objects.Particle.OnRemoved*
  commentId: Overload:TinyLife.Objects.Particle.OnRemoved
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_OnRemoved
  name: OnRemoved
  nameWithType: Particle.OnRemoved
  fullName: TinyLife.Objects.Particle.OnRemoved
- uid: TinyLife.Objects.Particle.OnAdded*
  commentId: Overload:TinyLife.Objects.Particle.OnAdded
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_OnAdded
  name: OnAdded
  nameWithType: Particle.OnAdded
  fullName: TinyLife.Objects.Particle.OnAdded
- uid: TinyLife.GameImpl.Camera
  commentId: P:TinyLife.GameImpl.Camera
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Camera
  name: Camera
  nameWithType: GameImpl.Camera
  fullName: TinyLife.GameImpl.Camera
- uid: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,TinyLife.Objects.Particle)
  commentId: M:TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,TinyLife.Objects.Particle)
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Spawn_TinyLife_World_Map_TinyLife_Objects_Particle_
  name: Spawn(Map, Particle)
  nameWithType: Particle.Spawn(Map, Particle)
  fullName: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map, TinyLife.Objects.Particle)
  spec.csharp:
  - uid: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,TinyLife.Objects.Particle)
    name: Spawn
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Spawn_TinyLife_World_Map_TinyLife_Objects_Particle_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Particle.Spawn(TinyLife.World.Map,TinyLife.Objects.Particle)
    name: Spawn
    href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Spawn_TinyLife_World_Map_TinyLife_Objects_Particle_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: )
- uid: TinyLife.Objects.Particle.Spawn*
  commentId: Overload:TinyLife.Objects.Particle.Spawn
  href: TinyLife.Objects.Particle.html#TinyLife_Objects_Particle_Spawn_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Func_Microsoft_Xna_Framework_Vector2_TinyLife_Objects_Particle__
  name: Spawn
  nameWithType: Particle.Spawn
  fullName: TinyLife.Objects.Particle.Spawn
- uid: System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle}
  commentId: T:System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Vector2, Particle>
  nameWithType: Func<Vector2, Particle>
  fullName: System.Func<Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle>
  nameWithType.vb: Func(Of Vector2, Particle)
  fullName.vb: System.Func(Of Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle)
  name.vb: Func(Of Vector2, Particle)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Particle
    name: Particle
    href: TinyLife.Objects.Particle.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
