### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.Outfit
  commentId: T:TinyLife.Objects.Outfit
  id: Outfit
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.Outfit.#ctor(System.Collections.Generic.Dictionary{TinyLife.Objects.ClothesLayer,TinyLife.Objects.WornClothes})
  - TinyLife.Objects.Outfit.Clothes
  - TinyLife.Objects.Outfit.EnsureIntentionsMatch(System.Int32)
  - TinyLife.Objects.Outfit.GetIntentionPercentage(TinyLife.Objects.ClothesIntention)
  - TinyLife.Objects.Outfit.GetMostFittingStyle
  - TinyLife.Objects.Outfit.Intentions
  - TinyLife.Objects.Outfit.Name
  - TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random,TinyLife.Objects.PersonLike,TinyLife.Objects.ClothesLayer,TinyLife.Objects.ClothesIntention,System.Nullable{TinyLife.Objects.StylePreference},System.Boolean,System.Int32,System.Func{TinyLife.Objects.Clothes,System.Boolean})
  langs:
  - csharp
  - vb
  name: Outfit
  nameWithType: Outfit
  fullName: TinyLife.Objects.Outfit
  type: Class
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: >-
    An outfit is a set of <xref href="TinyLife.Objects.WornClothes" data-throw-if-not-resolved="false"></xref> items for each clothes layer of a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.

    This class is used by <xref href="TinyLife.Objects.PersonLike.Outfits" data-throw-if-not-resolved="false"></xref> and, as a result, <xref href="TinyLife.Objects.PersonLike.CurrentOutfit" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Outfit
    content.vb: >-
      <DataContract>

      Public Class Outfit
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.Outfit.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.Outfit.Clothes
  commentId: F:TinyLife.Objects.Outfit.Clothes
  id: Clothes
  parent: TinyLife.Objects.Outfit
  langs:
  - csharp
  - vb
  name: Clothes
  nameWithType: Outfit.Clothes
  fullName: TinyLife.Objects.Outfit.Clothes
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: >-
    A dictionary that matches a given <xref href="TinyLife.Objects.ClothesLayer" data-throw-if-not-resolved="false"></xref> to the <xref href="TinyLife.Objects.WornClothes" data-throw-if-not-resolved="false"></xref> that a person is wearing on that layer.

    If a layer is not contained in this dictionary, it means that no clothes are being worn on that layer.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly Dictionary<ClothesLayer, WornClothes> Clothes
    return:
      type: System.Collections.Generic.Dictionary{TinyLife.Objects.ClothesLayer,TinyLife.Objects.WornClothes}
    content.vb: >-
      <DataMember>

      Public ReadOnly Clothes As Dictionary(Of ClothesLayer, WornClothes)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.Outfit.Intentions
  commentId: F:TinyLife.Objects.Outfit.Intentions
  id: Intentions
  parent: TinyLife.Objects.Outfit
  langs:
  - csharp
  - vb
  name: Intentions
  nameWithType: Outfit.Intentions
  fullName: TinyLife.Objects.Outfit.Intentions
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: >-
    The <xref href="TinyLife.Objects.ClothesIntention" data-throw-if-not-resolved="false"></xref> flags that the player has set for this outfit.

    This intention always contains <xref href="TinyLife.Objects.ClothesIntention.Everyday" data-throw-if-not-resolved="false"></xref> if this outfit is the first entry in <xref href="TinyLife.Objects.PersonLike.Outfits" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public ClothesIntention Intentions
    return:
      type: TinyLife.Objects.ClothesIntention
    content.vb: >-
      <DataMember>

      Public Intentions As ClothesIntention
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.Outfit.Name
  commentId: F:TinyLife.Objects.Outfit.Name
  id: Name
  parent: TinyLife.Objects.Outfit
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Outfit.Name
  fullName: TinyLife.Objects.Outfit.Name
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: >-
    The name of this outfit, which is used in the UI to identify it.

    If unset or empty, the name will be generated automatically based on this outfit's index in the <xref href="TinyLife.Objects.PersonLike.Outfits" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: >-
      [DataMember]

      public string Name
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Name As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.Outfit.#ctor(System.Collections.Generic.Dictionary{TinyLife.Objects.ClothesLayer,TinyLife.Objects.WornClothes})
  commentId: M:TinyLife.Objects.Outfit.#ctor(System.Collections.Generic.Dictionary{TinyLife.Objects.ClothesLayer,TinyLife.Objects.WornClothes})
  id: '#ctor(System.Collections.Generic.Dictionary{TinyLife.Objects.ClothesLayer,TinyLife.Objects.WornClothes})'
  parent: TinyLife.Objects.Outfit
  langs:
  - csharp
  - vb
  name: Outfit(Dictionary<ClothesLayer, WornClothes>)
  nameWithType: Outfit.Outfit(Dictionary<ClothesLayer, WornClothes>)
  fullName: TinyLife.Objects.Outfit.Outfit(System.Collections.Generic.Dictionary<TinyLife.Objects.ClothesLayer, TinyLife.Objects.WornClothes>)
  type: Constructor
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: Creates a new outfit with the given settings.
  example: []
  syntax:
    content: public Outfit(Dictionary<ClothesLayer, WornClothes> clothes = null)
    parameters:
    - id: clothes
      type: System.Collections.Generic.Dictionary{TinyLife.Objects.ClothesLayer,TinyLife.Objects.WornClothes}
      description: The clothes that this outfit contains, or null to create a new empty <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(clothes As Dictionary(Of ClothesLayer, WornClothes) = Nothing)
  overload: TinyLife.Objects.Outfit.#ctor*
  nameWithType.vb: Outfit.New(Dictionary(Of ClothesLayer, WornClothes))
  fullName.vb: TinyLife.Objects.Outfit.New(System.Collections.Generic.Dictionary(Of TinyLife.Objects.ClothesLayer, TinyLife.Objects.WornClothes))
  name.vb: New(Dictionary(Of ClothesLayer, WornClothes))
- uid: TinyLife.Objects.Outfit.GetIntentionPercentage(TinyLife.Objects.ClothesIntention)
  commentId: M:TinyLife.Objects.Outfit.GetIntentionPercentage(TinyLife.Objects.ClothesIntention)
  id: GetIntentionPercentage(TinyLife.Objects.ClothesIntention)
  parent: TinyLife.Objects.Outfit
  langs:
  - csharp
  - vb
  name: GetIntentionPercentage(ClothesIntention)
  nameWithType: Outfit.GetIntentionPercentage(ClothesIntention)
  fullName: TinyLife.Objects.Outfit.GetIntentionPercentage(TinyLife.Objects.ClothesIntention)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: Returns a value between 0 and 1 that represents how well this outfit matches the given <xref href="TinyLife.Objects.ClothesIntention" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float GetIntentionPercentage(ClothesIntention intention)
    parameters:
    - id: intention
      type: TinyLife.Objects.ClothesIntention
      description: The intention to match the outfit to.
    return:
      type: System.Single
      description: The intention match percentage, between 0 and 1.
    content.vb: Public Function GetIntentionPercentage(intention As ClothesIntention) As Single
  overload: TinyLife.Objects.Outfit.GetIntentionPercentage*
- uid: TinyLife.Objects.Outfit.GetMostFittingStyle
  commentId: M:TinyLife.Objects.Outfit.GetMostFittingStyle
  id: GetMostFittingStyle
  parent: TinyLife.Objects.Outfit
  langs:
  - csharp
  - vb
  name: GetMostFittingStyle()
  nameWithType: Outfit.GetMostFittingStyle()
  fullName: TinyLife.Objects.Outfit.GetMostFittingStyle()
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: >-
    Returns the <xref href="TinyLife.Objects.StylePreference" data-throw-if-not-resolved="false"></xref> that, heuristically, most fits with this outfit.

    The style preference is calculated based on the <xref href="TinyLife.Objects.Clothes.StylePreference" data-throw-if-not-resolved="false"></xref> of the included clothing items, and used when randomly generating additional outfits for a Tiny.
  example: []
  syntax:
    content: public StylePreference GetMostFittingStyle()
    return:
      type: TinyLife.Objects.StylePreference
      description: The most fitting style preference for this outfit.
    content.vb: Public Function GetMostFittingStyle() As StylePreference
  overload: TinyLife.Objects.Outfit.GetMostFittingStyle*
- uid: TinyLife.Objects.Outfit.EnsureIntentionsMatch(System.Int32)
  commentId: M:TinyLife.Objects.Outfit.EnsureIntentionsMatch(System.Int32)
  id: EnsureIntentionsMatch(System.Int32)
  parent: TinyLife.Objects.Outfit
  langs:
  - csharp
  - vb
  name: EnsureIntentionsMatch(int)
  nameWithType: Outfit.EnsureIntentionsMatch(int)
  fullName: TinyLife.Objects.Outfit.EnsureIntentionsMatch(int)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: >-
    Ensures that the <xref href="TinyLife.Objects.Outfit.Intentions" data-throw-if-not-resolved="false"></xref> of this outfit match the required percentages for each layer using <xref href="TinyLife.Utilities.Extensions.GetRequiredMatchPercentage(TinyLife.Objects.ClothesIntention)" data-throw-if-not-resolved="false"></xref>.

    Additionally, if <code class="paramref">outfitIndex</code> is 0, <xref href="TinyLife.Objects.ClothesIntention.Everyday" data-throw-if-not-resolved="false"></xref> is added to <xref href="TinyLife.Objects.Outfit.Intentions" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void EnsureIntentionsMatch(int outfitIndex)
    parameters:
    - id: outfitIndex
      type: System.Int32
      description: The index that this outfit has in <xref href="TinyLife.Objects.PersonLike.Outfits" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub EnsureIntentionsMatch(outfitIndex As Integer)
  overload: TinyLife.Objects.Outfit.EnsureIntentionsMatch*
  nameWithType.vb: Outfit.EnsureIntentionsMatch(Integer)
  fullName.vb: TinyLife.Objects.Outfit.EnsureIntentionsMatch(Integer)
  name.vb: EnsureIntentionsMatch(Integer)
- uid: TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random,TinyLife.Objects.PersonLike,TinyLife.Objects.ClothesLayer,TinyLife.Objects.ClothesIntention,System.Nullable{TinyLife.Objects.StylePreference},System.Boolean,System.Int32,System.Func{TinyLife.Objects.Clothes,System.Boolean})
  commentId: M:TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random,TinyLife.Objects.PersonLike,TinyLife.Objects.ClothesLayer,TinyLife.Objects.ClothesIntention,System.Nullable{TinyLife.Objects.StylePreference},System.Boolean,System.Int32,System.Func{TinyLife.Objects.Clothes,System.Boolean})
  id: SetRandomClothesItem(System.Random,TinyLife.Objects.PersonLike,TinyLife.Objects.ClothesLayer,TinyLife.Objects.ClothesIntention,System.Nullable{TinyLife.Objects.StylePreference},System.Boolean,System.Int32,System.Func{TinyLife.Objects.Clothes,System.Boolean})
  parent: TinyLife.Objects.Outfit
  langs:
  - csharp
  - vb
  name: SetRandomClothesItem(Random, PersonLike, ClothesLayer, ClothesIntention, StylePreference?, bool, int, Func<Clothes, bool>)
  nameWithType: Outfit.SetRandomClothesItem(Random, PersonLike, ClothesLayer, ClothesIntention, StylePreference?, bool, int, Func<Clothes, bool>)
  fullName: TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random, TinyLife.Objects.PersonLike, TinyLife.Objects.ClothesLayer, TinyLife.Objects.ClothesIntention, TinyLife.Objects.StylePreference?, bool, int, System.Func<TinyLife.Objects.Clothes, bool>)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: Sets a random clothes item for this outfit's given <xref href="TinyLife.Objects.ClothesLayer" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void SetRandomClothesItem(Random random, PersonLike person, ClothesLayer layer, ClothesIntention allowedIntentions = ClothesIntention.None, StylePreference? preferredStyle = null, bool keepOldColors = false, int maxPrice = 50, Func<Clothes, bool> additionalConditions = null)
    parameters:
    - id: random
      type: System.Random
      description: The random to use.
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person.
    - id: layer
      type: TinyLife.Objects.ClothesLayer
      description: The layer to set the clothes item for.
    - id: allowedIntentions
      type: TinyLife.Objects.ClothesIntention
      description: The intentions allowed, or <xref href="TinyLife.Objects.ClothesIntention.None" data-throw-if-not-resolved="false"></xref> to allow all intentions.
    - id: preferredStyle
      type: System.Nullable{TinyLife.Objects.StylePreference}
      description: The preferred style to use, which will influence the chosen clothing item based on its <xref href="TinyLife.Objects.Clothes.StylePreference" data-throw-if-not-resolved="false"></xref>. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, all clothing items are considered equally.
    - id: keepOldColors
      type: System.Boolean
      description: Whether old colors should be kept if the new object's <xref href="TinyLife.Utilities.ColorScheme" data-throw-if-not-resolved="false"></xref> matches the old one.
    - id: maxPrice
      type: System.Int32
      description: The maximum price that should be used when setting a random clothes item. Defaults to <xref href="TinyLife.Objects.Clothes.ReferencePrice" data-throw-if-not-resolved="false"></xref>.
    - id: additionalConditions
      type: System.Func{TinyLife.Objects.Clothes,System.Boolean}
      description: An optional set of additional conditions to check for when selecting clothing items.
    content.vb: Public Sub SetRandomClothesItem(random As Random, person As PersonLike, layer As ClothesLayer, allowedIntentions As ClothesIntention = ClothesIntention.None, preferredStyle As StylePreference? = Nothing, keepOldColors As Boolean = False, maxPrice As Integer = 50, additionalConditions As Func(Of Clothes, Boolean) = Nothing)
  overload: TinyLife.Objects.Outfit.SetRandomClothesItem*
  nameWithType.vb: Outfit.SetRandomClothesItem(Random, PersonLike, ClothesLayer, ClothesIntention, StylePreference?, Boolean, Integer, Func(Of Clothes, Boolean))
  fullName.vb: TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random, TinyLife.Objects.PersonLike, TinyLife.Objects.ClothesLayer, TinyLife.Objects.ClothesIntention, TinyLife.Objects.StylePreference?, Boolean, Integer, System.Func(Of TinyLife.Objects.Clothes, Boolean))
  name.vb: SetRandomClothesItem(Random, PersonLike, ClothesLayer, ClothesIntention, StylePreference?, Boolean, Integer, Func(Of Clothes, Boolean))
references:
- uid: TinyLife.Objects.WornClothes
  commentId: T:TinyLife.Objects.WornClothes
  parent: TinyLife.Objects
  href: TinyLife.Objects.WornClothes.html
  name: WornClothes
  nameWithType: WornClothes
  fullName: TinyLife.Objects.WornClothes
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Objects.PersonLike.Outfits
  commentId: F:TinyLife.Objects.PersonLike.Outfits
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Outfits
  name: Outfits
  nameWithType: PersonLike.Outfits
  fullName: TinyLife.Objects.PersonLike.Outfits
- uid: TinyLife.Objects.PersonLike.CurrentOutfit
  commentId: P:TinyLife.Objects.PersonLike.CurrentOutfit
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_CurrentOutfit
  name: CurrentOutfit
  nameWithType: PersonLike.CurrentOutfit
  fullName: TinyLife.Objects.PersonLike.CurrentOutfit
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Objects.Outfit.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Outfit>(Outfit)
  nameWithType: Extensions.JsonCopy<Outfit>(Outfit)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Outfit>(TinyLife.Objects.Outfit)
  nameWithType.vb: Extensions.JsonCopy(Of Outfit)(Outfit)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Outfit)(TinyLife.Objects.Outfit)
  name.vb: JsonCopy(Of Outfit)(Outfit)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Outfit)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.Outfit
    name: Outfit
    href: TinyLife.Objects.Outfit.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.Outfit
    name: Outfit
    href: TinyLife.Objects.Outfit.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Outfit)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Outfit
    name: Outfit
    href: TinyLife.Objects.Outfit.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.Outfit
    name: Outfit
    href: TinyLife.Objects.Outfit.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.ClothesLayer
  commentId: T:TinyLife.Objects.ClothesLayer
  parent: TinyLife.Objects
  href: TinyLife.Objects.ClothesLayer.html
  name: ClothesLayer
  nameWithType: ClothesLayer
  fullName: TinyLife.Objects.ClothesLayer
- uid: System.Collections.Generic.Dictionary{TinyLife.Objects.ClothesLayer,TinyLife.Objects.WornClothes}
  commentId: T:System.Collections.Generic.Dictionary{TinyLife.Objects.ClothesLayer,TinyLife.Objects.WornClothes}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<ClothesLayer, WornClothes>
  nameWithType: Dictionary<ClothesLayer, WornClothes>
  fullName: System.Collections.Generic.Dictionary<TinyLife.Objects.ClothesLayer, TinyLife.Objects.WornClothes>
  nameWithType.vb: Dictionary(Of ClothesLayer, WornClothes)
  fullName.vb: System.Collections.Generic.Dictionary(Of TinyLife.Objects.ClothesLayer, TinyLife.Objects.WornClothes)
  name.vb: Dictionary(Of ClothesLayer, WornClothes)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: TinyLife.Objects.ClothesLayer
    name: ClothesLayer
    href: TinyLife.Objects.ClothesLayer.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.WornClothes
    name: WornClothes
    href: TinyLife.Objects.WornClothes.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.ClothesLayer
    name: ClothesLayer
    href: TinyLife.Objects.ClothesLayer.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.WornClothes
    name: WornClothes
    href: TinyLife.Objects.WornClothes.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Objects.ClothesIntention
  commentId: T:TinyLife.Objects.ClothesIntention
  parent: TinyLife.Objects
  href: TinyLife.Objects.ClothesIntention.html
  name: ClothesIntention
  nameWithType: ClothesIntention
  fullName: TinyLife.Objects.ClothesIntention
- uid: TinyLife.Objects.ClothesIntention.Everyday
  commentId: F:TinyLife.Objects.ClothesIntention.Everyday
  href: TinyLife.Objects.ClothesIntention.html#TinyLife_Objects_ClothesIntention_Everyday
  name: Everyday
  nameWithType: ClothesIntention.Everyday
  fullName: TinyLife.Objects.ClothesIntention.Everyday
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Objects.Outfit.#ctor*
  commentId: Overload:TinyLife.Objects.Outfit.#ctor
  href: TinyLife.Objects.Outfit.html#TinyLife_Objects_Outfit__ctor_System_Collections_Generic_Dictionary_TinyLife_Objects_ClothesLayer_TinyLife_Objects_WornClothes__
  name: Outfit
  nameWithType: Outfit.Outfit
  fullName: TinyLife.Objects.Outfit.Outfit
  nameWithType.vb: Outfit.New
  fullName.vb: TinyLife.Objects.Outfit.New
  name.vb: New
- uid: TinyLife.Objects.Outfit.GetIntentionPercentage*
  commentId: Overload:TinyLife.Objects.Outfit.GetIntentionPercentage
  href: TinyLife.Objects.Outfit.html#TinyLife_Objects_Outfit_GetIntentionPercentage_TinyLife_Objects_ClothesIntention_
  name: GetIntentionPercentage
  nameWithType: Outfit.GetIntentionPercentage
  fullName: TinyLife.Objects.Outfit.GetIntentionPercentage
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Objects.StylePreference
  commentId: T:TinyLife.Objects.StylePreference
  parent: TinyLife.Objects
  href: TinyLife.Objects.StylePreference.html
  name: StylePreference
  nameWithType: StylePreference
  fullName: TinyLife.Objects.StylePreference
- uid: TinyLife.Objects.Clothes.StylePreference
  commentId: F:TinyLife.Objects.Clothes.StylePreference
  href: TinyLife.Objects.Clothes.html#TinyLife_Objects_Clothes_StylePreference
  name: StylePreference
  nameWithType: Clothes.StylePreference
  fullName: TinyLife.Objects.Clothes.StylePreference
- uid: TinyLife.Objects.Outfit.GetMostFittingStyle*
  commentId: Overload:TinyLife.Objects.Outfit.GetMostFittingStyle
  href: TinyLife.Objects.Outfit.html#TinyLife_Objects_Outfit_GetMostFittingStyle
  name: GetMostFittingStyle
  nameWithType: Outfit.GetMostFittingStyle
  fullName: TinyLife.Objects.Outfit.GetMostFittingStyle
- uid: TinyLife.Objects.Outfit.Intentions
  commentId: F:TinyLife.Objects.Outfit.Intentions
  href: TinyLife.Objects.Outfit.html#TinyLife_Objects_Outfit_Intentions
  name: Intentions
  nameWithType: Outfit.Intentions
  fullName: TinyLife.Objects.Outfit.Intentions
- uid: TinyLife.Utilities.Extensions.GetRequiredMatchPercentage(TinyLife.Objects.ClothesIntention)
  commentId: M:TinyLife.Utilities.Extensions.GetRequiredMatchPercentage(TinyLife.Objects.ClothesIntention)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetRequiredMatchPercentage_TinyLife_Objects_ClothesIntention_
  name: GetRequiredMatchPercentage(ClothesIntention)
  nameWithType: Extensions.GetRequiredMatchPercentage(ClothesIntention)
  fullName: TinyLife.Utilities.Extensions.GetRequiredMatchPercentage(TinyLife.Objects.ClothesIntention)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetRequiredMatchPercentage(TinyLife.Objects.ClothesIntention)
    name: GetRequiredMatchPercentage
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetRequiredMatchPercentage_TinyLife_Objects_ClothesIntention_
  - name: (
  - uid: TinyLife.Objects.ClothesIntention
    name: ClothesIntention
    href: TinyLife.Objects.ClothesIntention.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetRequiredMatchPercentage(TinyLife.Objects.ClothesIntention)
    name: GetRequiredMatchPercentage
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetRequiredMatchPercentage_TinyLife_Objects_ClothesIntention_
  - name: (
  - uid: TinyLife.Objects.ClothesIntention
    name: ClothesIntention
    href: TinyLife.Objects.ClothesIntention.html
  - name: )
- uid: TinyLife.Objects.Outfit.EnsureIntentionsMatch*
  commentId: Overload:TinyLife.Objects.Outfit.EnsureIntentionsMatch
  href: TinyLife.Objects.Outfit.html#TinyLife_Objects_Outfit_EnsureIntentionsMatch_System_Int32_
  name: EnsureIntentionsMatch
  nameWithType: Outfit.EnsureIntentionsMatch
  fullName: TinyLife.Objects.Outfit.EnsureIntentionsMatch
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Objects.ClothesIntention.None
  commentId: F:TinyLife.Objects.ClothesIntention.None
  href: TinyLife.Objects.ClothesIntention.html#TinyLife_Objects_ClothesIntention_None
  name: None
  nameWithType: ClothesIntention.None
  fullName: TinyLife.Objects.ClothesIntention.None
- uid: TinyLife.Utilities.ColorScheme
  commentId: T:TinyLife.Utilities.ColorScheme
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.ColorScheme.html
  name: ColorScheme
  nameWithType: ColorScheme
  fullName: TinyLife.Utilities.ColorScheme
- uid: TinyLife.Objects.Clothes.ReferencePrice
  commentId: F:TinyLife.Objects.Clothes.ReferencePrice
  href: TinyLife.Objects.Clothes.html#TinyLife_Objects_Clothes_ReferencePrice
  name: ReferencePrice
  nameWithType: Clothes.ReferencePrice
  fullName: TinyLife.Objects.Clothes.ReferencePrice
- uid: TinyLife.Objects.Outfit.SetRandomClothesItem*
  commentId: Overload:TinyLife.Objects.Outfit.SetRandomClothesItem
  href: TinyLife.Objects.Outfit.html#TinyLife_Objects_Outfit_SetRandomClothesItem_System_Random_TinyLife_Objects_PersonLike_TinyLife_Objects_ClothesLayer_TinyLife_Objects_ClothesIntention_System_Nullable_TinyLife_Objects_StylePreference__System_Boolean_System_Int32_System_Func_TinyLife_Objects_Clothes_System_Boolean__
  name: SetRandomClothesItem
  nameWithType: Outfit.SetRandomClothesItem
  fullName: TinyLife.Objects.Outfit.SetRandomClothesItem
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: System.Nullable{TinyLife.Objects.StylePreference}
  commentId: T:System.Nullable{TinyLife.Objects.StylePreference}
  parent: System
  definition: System.Nullable`1
  href: TinyLife.Objects.StylePreference.html
  name: StylePreference?
  nameWithType: StylePreference?
  fullName: TinyLife.Objects.StylePreference?
  spec.csharp:
  - uid: TinyLife.Objects.StylePreference
    name: StylePreference
    href: TinyLife.Objects.StylePreference.html
  - name: '?'
  spec.vb:
  - uid: TinyLife.Objects.StylePreference
    name: StylePreference
    href: TinyLife.Objects.StylePreference.html
  - name: '?'
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Func{TinyLife.Objects.Clothes,System.Boolean}
  commentId: T:System.Func{TinyLife.Objects.Clothes,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Clothes, bool>
  nameWithType: Func<Clothes, bool>
  fullName: System.Func<TinyLife.Objects.Clothes, bool>
  nameWithType.vb: Func(Of Clothes, Boolean)
  fullName.vb: System.Func(Of TinyLife.Objects.Clothes, Boolean)
  name.vb: Func(Of Clothes, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Clothes
    name: Clothes
    href: TinyLife.Objects.Clothes.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Clothes
    name: Clothes
    href: TinyLife.Objects.Clothes.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
