### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.ObjectSpot
  commentId: T:TinyLife.Objects.ObjectSpot
  id: ObjectSpot
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.ObjectSpot.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Predicate{TinyLife.Objects.FurnitureType},System.Single,MLEM.Maths.Direction2[])
  - TinyLife.Objects.ObjectSpot.#ctor(Microsoft.Xna.Framework.Vector2,System.Predicate{TinyLife.Objects.FurnitureType},System.Single,MLEM.Maths.Direction2[])
  - TinyLife.Objects.ObjectSpot.BarSpots(System.Single,System.Single)
  - TinyLife.Objects.ObjectSpot.CounterSpots(System.Boolean,System.Single,System.Single)
  - TinyLife.Objects.ObjectSpot.DeskSpots(System.Single,System.Boolean,System.Single)
  - TinyLife.Objects.ObjectSpot.DoubleShelfSpots(System.Single,System.Single)
  - TinyLife.Objects.ObjectSpot.GetContents``1(TinyLife.Objects.Furniture,System.Boolean)
  - TinyLife.Objects.ObjectSpot.IsContentAllowed(TinyLife.Objects.Furniture,TinyLife.Objects.FurnitureType)
  - TinyLife.Objects.ObjectSpot.IsFurnitureAllowed
  - TinyLife.Objects.ObjectSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point,System.Single)
  - TinyLife.Objects.ObjectSpot.SingleShelfSpots(System.Single,System.Single)
  - TinyLife.Objects.ObjectSpot.TableSpots(Microsoft.Xna.Framework.Point,System.Single,System.Single)
  - TinyLife.Objects.ObjectSpot.TreeSpots(System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: ObjectSpot
  nameWithType: ObjectSpot
  fullName: TinyLife.Objects.ObjectSpot
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An object spot is a <xref href="TinyLife.Objects.AbstractSpot" data-throw-if-not-resolved="false"></xref> extension that is used by <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> to declare a location that another <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> object can be slotted into.

    This behavior is used for things like plates on counters, flower pots on bedside tables etc.
  example: []
  syntax:
    content: 'public class ObjectSpot : AbstractSpot'
    content.vb: Public Class ObjectSpot Inherits AbstractSpot
  inheritance:
  - System.Object
  - TinyLife.Objects.AbstractSpot
  inheritedMembers:
  - TinyLife.Objects.AbstractSpot.YOffset
  - TinyLife.Objects.AbstractSpot.Group
  - TinyLife.Objects.AbstractSpot.VisualDirection
  - TinyLife.Objects.AbstractSpot.DrawLayer
  - TinyLife.Objects.AbstractSpot.IsOnGround
  - TinyLife.Objects.AbstractSpot.ValidDirections
  - TinyLife.Objects.AbstractSpot.Offset
  - TinyLife.Objects.AbstractSpot.VisualOffset
  - TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
  - TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
  - TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture,System.Boolean)
  - TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
  - TinyLife.Objects.AbstractSpot.SortDrawLayers``1({T}[])
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.ObjectSpot.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.ObjectSpot.IsFurnitureAllowed
  commentId: F:TinyLife.Objects.ObjectSpot.IsFurnitureAllowed
  id: IsFurnitureAllowed
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: IsFurnitureAllowed
  nameWithType: ObjectSpot.IsFurnitureAllowed
  fullName: TinyLife.Objects.ObjectSpot.IsFurnitureAllowed
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A predicate that determines if the given <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> is allowed to be put into this object spot.
  example: []
  syntax:
    content: protected readonly Predicate<FurnitureType> IsFurnitureAllowed
    return:
      type: System.Predicate{TinyLife.Objects.FurnitureType}
    content.vb: Protected ReadOnly IsFurnitureAllowed As Predicate(Of FurnitureType)
- uid: TinyLife.Objects.ObjectSpot.#ctor(Microsoft.Xna.Framework.Vector2,System.Predicate{TinyLife.Objects.FurnitureType},System.Single,MLEM.Maths.Direction2[])
  commentId: M:TinyLife.Objects.ObjectSpot.#ctor(Microsoft.Xna.Framework.Vector2,System.Predicate{TinyLife.Objects.FurnitureType},System.Single,MLEM.Maths.Direction2[])
  id: '#ctor(Microsoft.Xna.Framework.Vector2,System.Predicate{TinyLife.Objects.FurnitureType},System.Single,MLEM.Maths.Direction2[])'
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: ObjectSpot(Vector2, Predicate<FurnitureType>, float, params Direction2[])
  nameWithType: ObjectSpot.ObjectSpot(Vector2, Predicate<FurnitureType>, float, params Direction2[])
  fullName: TinyLife.Objects.ObjectSpot.ObjectSpot(Microsoft.Xna.Framework.Vector2, System.Predicate<TinyLife.Objects.FurnitureType>, float, params MLEM.Maths.Direction2[])
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new object spot with the given settings
  example: []
  syntax:
    content: public ObjectSpot(Vector2 offset, Predicate<FurnitureType> isFurnitureAllowed, float yOffset = 0, params Direction2[] validDirections)
    parameters:
    - id: offset
      type: Microsoft.Xna.Framework.Vector2
      description: The offset on both the x and y axis that this spot has
    - id: isFurnitureAllowed
      type: System.Predicate{TinyLife.Objects.FurnitureType}
      description: A predicate that determines if the given <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> is allowed to be put into this spot
    - id: yOffset
      type: System.Single
      description: The offset on the visual y axis
    - id: validDirections
      type: MLEM.Maths.Direction2[]
      description: The directions that this spot can be accessed from
    content.vb: Public Sub New(offset As Vector2, isFurnitureAllowed As Predicate(Of FurnitureType), yOffset As Single = 0, ParamArray validDirections As Direction2())
  overload: TinyLife.Objects.ObjectSpot.#ctor*
  nameWithType.vb: ObjectSpot.New(Vector2, Predicate(Of FurnitureType), Single, ParamArray Direction2())
  fullName.vb: TinyLife.Objects.ObjectSpot.New(Microsoft.Xna.Framework.Vector2, System.Predicate(Of TinyLife.Objects.FurnitureType), Single, ParamArray MLEM.Maths.Direction2())
  name.vb: New(Vector2, Predicate(Of FurnitureType), Single, ParamArray Direction2())
- uid: TinyLife.Objects.ObjectSpot.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Predicate{TinyLife.Objects.FurnitureType},System.Single,MLEM.Maths.Direction2[])
  commentId: M:TinyLife.Objects.ObjectSpot.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Predicate{TinyLife.Objects.FurnitureType},System.Single,MLEM.Maths.Direction2[])
  id: '#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Predicate{TinyLife.Objects.FurnitureType},System.Single,MLEM.Maths.Direction2[])'
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: ObjectSpot(Vector2, Vector2, Predicate<FurnitureType>, float, params Direction2[])
  nameWithType: ObjectSpot.ObjectSpot(Vector2, Vector2, Predicate<FurnitureType>, float, params Direction2[])
  fullName: TinyLife.Objects.ObjectSpot.ObjectSpot(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, System.Predicate<TinyLife.Objects.FurnitureType>, float, params MLEM.Maths.Direction2[])
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new object spot with the given settings
  example: []
  syntax:
    content: public ObjectSpot(Vector2 offset, Vector2 visualOffset, Predicate<FurnitureType> isFurnitureAllowed, float yOffset = 0, params Direction2[] validDirections)
    parameters:
    - id: offset
      type: Microsoft.Xna.Framework.Vector2
      description: The offset on both the x and y axis that this spot has
    - id: visualOffset
      type: Microsoft.Xna.Framework.Vector2
      description: The visual offset on both the x and y axis that this spot has
    - id: isFurnitureAllowed
      type: System.Predicate{TinyLife.Objects.FurnitureType}
      description: A predicate that determines if the given <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> is allowed to be put into this spot
    - id: yOffset
      type: System.Single
      description: The offset on the visual y axis
    - id: validDirections
      type: MLEM.Maths.Direction2[]
      description: The directions that this spot can be accessed from
    content.vb: Public Sub New(offset As Vector2, visualOffset As Vector2, isFurnitureAllowed As Predicate(Of FurnitureType), yOffset As Single = 0, ParamArray validDirections As Direction2())
  overload: TinyLife.Objects.ObjectSpot.#ctor*
  nameWithType.vb: ObjectSpot.New(Vector2, Vector2, Predicate(Of FurnitureType), Single, ParamArray Direction2())
  fullName.vb: TinyLife.Objects.ObjectSpot.New(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, System.Predicate(Of TinyLife.Objects.FurnitureType), Single, ParamArray MLEM.Maths.Direction2())
  name.vb: New(Vector2, Vector2, Predicate(Of FurnitureType), Single, ParamArray Direction2())
- uid: TinyLife.Objects.ObjectSpot.GetContents``1(TinyLife.Objects.Furniture,System.Boolean)
  commentId: M:TinyLife.Objects.ObjectSpot.GetContents``1(TinyLife.Objects.Furniture,System.Boolean)
  id: GetContents``1(TinyLife.Objects.Furniture,System.Boolean)
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: GetContents<T>(Furniture, bool)
  nameWithType: ObjectSpot.GetContents<T>(Furniture, bool)
  fullName: TinyLife.Objects.ObjectSpot.GetContents<T>(TinyLife.Objects.Furniture, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns the <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> objects that are currently slotted into this spot
  example: []
  syntax:
    content: 'public IEnumerable<T> GetContents<T>(Furniture furniture, bool includeGroup = false) where T : Furniture'
    parameters:
    - id: furniture
      type: TinyLife.Objects.Furniture
      description: The furniture that this spot belongs to
    - id: includeGroup
      type: System.Boolean
      description: Whether to include other object spots that have at least one of the same <xref href="TinyLife.Objects.AbstractSpot.Group" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: T
      description: The type the child furnitures are expected to be
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: A set of children of this spot, or an empty set if there are none
    content.vb: Public Function GetContents(Of T As Furniture)(furniture As Furniture, includeGroup As Boolean = False) As IEnumerable(Of T)
  overload: TinyLife.Objects.ObjectSpot.GetContents*
  nameWithType.vb: ObjectSpot.GetContents(Of T)(Furniture, Boolean)
  fullName.vb: TinyLife.Objects.ObjectSpot.GetContents(Of T)(TinyLife.Objects.Furniture, Boolean)
  name.vb: GetContents(Of T)(Furniture, Boolean)
- uid: TinyLife.Objects.ObjectSpot.IsContentAllowed(TinyLife.Objects.Furniture,TinyLife.Objects.FurnitureType)
  commentId: M:TinyLife.Objects.ObjectSpot.IsContentAllowed(TinyLife.Objects.Furniture,TinyLife.Objects.FurnitureType)
  id: IsContentAllowed(TinyLife.Objects.Furniture,TinyLife.Objects.FurnitureType)
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: IsContentAllowed(Furniture, FurnitureType)
  nameWithType: ObjectSpot.IsContentAllowed(Furniture, FurnitureType)
  fullName: TinyLife.Objects.ObjectSpot.IsContentAllowed(TinyLife.Objects.Furniture, TinyLife.Objects.FurnitureType)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns whether the given <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> is allowed on this object spot hosted by the given <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public bool IsContentAllowed(Furniture furniture, FurnitureType content)
    parameters:
    - id: furniture
      type: TinyLife.Objects.Furniture
      description: The furniture that has this object spot.
    - id: content
      type: TinyLife.Objects.FurnitureType
      description: The content to query.
    return:
      type: System.Boolean
      description: Whether the <code class="paramref">content</code> is allowed on the <code class="paramref">furniture</code>.
    content.vb: Public Function IsContentAllowed(furniture As Furniture, content As FurnitureType) As Boolean
  overload: TinyLife.Objects.ObjectSpot.IsContentAllowed*
- uid: TinyLife.Objects.ObjectSpot.TableSpots(Microsoft.Xna.Framework.Point,System.Single,System.Single)
  commentId: M:TinyLife.Objects.ObjectSpot.TableSpots(Microsoft.Xna.Framework.Point,System.Single,System.Single)
  id: TableSpots(Microsoft.Xna.Framework.Point,System.Single,System.Single)
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: TableSpots(Point, float, float)
  nameWithType: ObjectSpot.TableSpots(Point, float, float)
  fullName: TinyLife.Objects.ObjectSpot.TableSpots(Microsoft.Xna.Framework.Point, float, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A helper method to create a set of <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> instances for a table of the given size.

    The resulting set of object spots will have spots for <xref href="TinyLife.Objects.ObjectCategory.Chair" data-throw-if-not-resolved="false"></xref> objects on each side as well as <xref href="TinyLife.Objects.ObjectCategory.SmallObject" data-throw-if-not-resolved="false"></xref> objects on each tile position.
  example: []
  syntax:
    content: public static ObjectSpot[] TableSpots(Point size, float tabletopHeight = -0.625, float drawLayer = 1)
    parameters:
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size that the table has in tiles
    - id: tabletopHeight
      type: System.Single
      description: The height of the tabletops. Defaults to -10 / 16.
    - id: drawLayer
      type: System.Single
      description: The <xref href="TinyLife.Objects.AbstractSpot.DrawLayer" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: TinyLife.Objects.ObjectSpot[]
      description: A set of object spots for the table
    content.vb: Public Shared Function TableSpots(size As Point, tabletopHeight As Single = -0.625, drawLayer As Single = 1) As ObjectSpot()
  overload: TinyLife.Objects.ObjectSpot.TableSpots*
  nameWithType.vb: ObjectSpot.TableSpots(Point, Single, Single)
  fullName.vb: TinyLife.Objects.ObjectSpot.TableSpots(Microsoft.Xna.Framework.Point, Single, Single)
  name.vb: TableSpots(Point, Single, Single)
- uid: TinyLife.Objects.ObjectSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point,System.Single)
  commentId: M:TinyLife.Objects.ObjectSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point,System.Single)
  id: PicnicTableSpots(Microsoft.Xna.Framework.Point,System.Single)
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: PicnicTableSpots(Point, float)
  nameWithType: ObjectSpot.PicnicTableSpots(Point, float)
  fullName: TinyLife.Objects.ObjectSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A helper method that returns an array of <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> instances at locations relevant for picnic-style tables that have attached benches.

    This is used by objects like <xref href="TinyLife.Objects.FurnitureType.SimplePicnicTable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ObjectSpot[] PicnicTableSpots(Point size, float drawLayer = 1)
    parameters:
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size of the picnic table furniture
    - id: drawLayer
      type: System.Single
      description: The <xref href="TinyLife.Objects.AbstractSpot.DrawLayer" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: TinyLife.Objects.ObjectSpot[]
      description: An array of object spots for picnic tables
    content.vb: Public Shared Function PicnicTableSpots(size As Point, drawLayer As Single = 1) As ObjectSpot()
  overload: TinyLife.Objects.ObjectSpot.PicnicTableSpots*
  nameWithType.vb: ObjectSpot.PicnicTableSpots(Point, Single)
  fullName.vb: TinyLife.Objects.ObjectSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point, Single)
  name.vb: PicnicTableSpots(Point, Single)
- uid: TinyLife.Objects.ObjectSpot.CounterSpots(System.Boolean,System.Single,System.Single)
  commentId: M:TinyLife.Objects.ObjectSpot.CounterSpots(System.Boolean,System.Single,System.Single)
  id: CounterSpots(System.Boolean,System.Single,System.Single)
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: CounterSpots(bool, float, float)
  nameWithType: ObjectSpot.CounterSpots(bool, float, float)
  fullName: TinyLife.Objects.ObjectSpot.CounterSpots(bool, float, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A helper method to create a set of <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> instnaces for counters and stoves.

    The resulting set contains a single object spot for <xref href="TinyLife.Objects.ObjectCategory.SmallObject" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.ObjectCategory.CounterObject" data-throw-if-not-resolved="false"></xref> object, or <xref href="TinyLife.Objects.FurnitureType.PreparedFood" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.FurnitureType.Pot" data-throw-if-not-resolved="false"></xref> if <code class="paramref">stove</code> is true.
  example: []
  syntax:
    content: public static ObjectSpot[] CounterSpots(bool stove = false, float yOffset = -0.8125, float drawLayer = 2)
    parameters:
    - id: stove
      type: System.Boolean
      description: Whether the object is a stove (or a counter)
    - id: yOffset
      type: System.Single
      description: The y offset that the countertops should be ad. Defaults to -13 / 16.
    - id: drawLayer
      type: System.Single
      description: The <xref href="TinyLife.Objects.AbstractSpot.DrawLayer" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: TinyLife.Objects.ObjectSpot[]
      description: A set of object spots for the stove or counter
    content.vb: Public Shared Function CounterSpots(stove As Boolean = False, yOffset As Single = -0.8125, drawLayer As Single = 2) As ObjectSpot()
  overload: TinyLife.Objects.ObjectSpot.CounterSpots*
  nameWithType.vb: ObjectSpot.CounterSpots(Boolean, Single, Single)
  fullName.vb: TinyLife.Objects.ObjectSpot.CounterSpots(Boolean, Single, Single)
  name.vb: CounterSpots(Boolean, Single, Single)
- uid: TinyLife.Objects.ObjectSpot.BarSpots(System.Single,System.Single)
  commentId: M:TinyLife.Objects.ObjectSpot.BarSpots(System.Single,System.Single)
  id: BarSpots(System.Single,System.Single)
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: BarSpots(float, float)
  nameWithType: ObjectSpot.BarSpots(float, float)
  fullName: TinyLife.Objects.ObjectSpot.BarSpots(float, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A helper method to create a set of <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> instances for bars
  example: []
  syntax:
    content: public static ObjectSpot[] BarSpots(float yOffset = -0.8125, float drawLayer = 1)
    parameters:
    - id: yOffset
      type: System.Single
    - id: drawLayer
      type: System.Single
    return:
      type: TinyLife.Objects.ObjectSpot[]
      description: A set of object spots for bars
    content.vb: Public Shared Function BarSpots(yOffset As Single = -0.8125, drawLayer As Single = 1) As ObjectSpot()
  overload: TinyLife.Objects.ObjectSpot.BarSpots*
  nameWithType.vb: ObjectSpot.BarSpots(Single, Single)
  fullName.vb: TinyLife.Objects.ObjectSpot.BarSpots(Single, Single)
  name.vb: BarSpots(Single, Single)
- uid: TinyLife.Objects.ObjectSpot.SingleShelfSpots(System.Single,System.Single)
  commentId: M:TinyLife.Objects.ObjectSpot.SingleShelfSpots(System.Single,System.Single)
  id: SingleShelfSpots(System.Single,System.Single)
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: SingleShelfSpots(float, float)
  nameWithType: ObjectSpot.SingleShelfSpots(float, float)
  fullName: TinyLife.Objects.ObjectSpot.SingleShelfSpots(float, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A helper method to create a set of <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> instances for a shelf that can hold one item.
  example: []
  syntax:
    content: public static ObjectSpot[] SingleShelfSpots(float height = -0.8125, float drawLayer = 1)
    parameters:
    - id: height
      type: System.Single
      description: The height of the object's spots. Defaults to -13/16.
    - id: drawLayer
      type: System.Single
      description: The <xref href="TinyLife.Objects.AbstractSpot.DrawLayer" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: TinyLife.Objects.ObjectSpot[]
      description: A set of object spots for single shelves.
    content.vb: Public Shared Function SingleShelfSpots(height As Single = -0.8125, drawLayer As Single = 1) As ObjectSpot()
  overload: TinyLife.Objects.ObjectSpot.SingleShelfSpots*
  nameWithType.vb: ObjectSpot.SingleShelfSpots(Single, Single)
  fullName.vb: TinyLife.Objects.ObjectSpot.SingleShelfSpots(Single, Single)
  name.vb: SingleShelfSpots(Single, Single)
- uid: TinyLife.Objects.ObjectSpot.DoubleShelfSpots(System.Single,System.Single)
  commentId: M:TinyLife.Objects.ObjectSpot.DoubleShelfSpots(System.Single,System.Single)
  id: DoubleShelfSpots(System.Single,System.Single)
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: DoubleShelfSpots(float, float)
  nameWithType: ObjectSpot.DoubleShelfSpots(float, float)
  fullName: TinyLife.Objects.ObjectSpot.DoubleShelfSpots(float, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A helper method to create a set of <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> instances for things that can store two objects side by side (or one big object in the center).

    This method is used by furniture like the <xref href="TinyLife.Objects.FurnitureType.SimpleDrawer" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ObjectSpot[] DoubleShelfSpots(float height = 1, float drawLayer = 1)
    parameters:
    - id: height
      type: System.Single
      description: The height of the object's spots. Defaults to 1.
    - id: drawLayer
      type: System.Single
      description: The <xref href="TinyLife.Objects.AbstractSpot.DrawLayer" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: TinyLife.Objects.ObjectSpot[]
      description: A set of object spots for shelf-like objects
    content.vb: Public Shared Function DoubleShelfSpots(height As Single = 1, drawLayer As Single = 1) As ObjectSpot()
  overload: TinyLife.Objects.ObjectSpot.DoubleShelfSpots*
  nameWithType.vb: ObjectSpot.DoubleShelfSpots(Single, Single)
  fullName.vb: TinyLife.Objects.ObjectSpot.DoubleShelfSpots(Single, Single)
  name.vb: DoubleShelfSpots(Single, Single)
- uid: TinyLife.Objects.ObjectSpot.DeskSpots(System.Single,System.Boolean,System.Single)
  commentId: M:TinyLife.Objects.ObjectSpot.DeskSpots(System.Single,System.Boolean,System.Single)
  id: DeskSpots(System.Single,System.Boolean,System.Single)
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: DeskSpots(float, bool, float)
  nameWithType: ObjectSpot.DeskSpots(float, bool, float)
  fullName: TinyLife.Objects.ObjectSpot.DeskSpots(float, bool, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A helper method to create a set of <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> instances for a desk spot and two chair attachment spots on both sides of the desk, as well as a few spots for decorative objects with the <xref href="TinyLife.Objects.ObjectCategory.SmallObject" data-throw-if-not-resolved="false"></xref> category.
  example: []
  syntax:
    content: public static ObjectSpot[] DeskSpots(float yOffset = -0.625, bool chairs = true, float drawLayer = 1)
    parameters:
    - id: yOffset
      type: System.Single
    - id: chairs
      type: System.Boolean
    - id: drawLayer
      type: System.Single
    return:
      type: TinyLife.Objects.ObjectSpot[]
      description: A set of object spots for desks
    content.vb: Public Shared Function DeskSpots(yOffset As Single = -0.625, chairs As Boolean = True, drawLayer As Single = 1) As ObjectSpot()
  overload: TinyLife.Objects.ObjectSpot.DeskSpots*
  nameWithType.vb: ObjectSpot.DeskSpots(Single, Boolean, Single)
  fullName.vb: TinyLife.Objects.ObjectSpot.DeskSpots(Single, Boolean, Single)
  name.vb: DeskSpots(Single, Boolean, Single)
- uid: TinyLife.Objects.ObjectSpot.TreeSpots(System.Single,System.Single)
  commentId: M:TinyLife.Objects.ObjectSpot.TreeSpots(System.Single,System.Single)
  id: TreeSpots(System.Single,System.Single)
  parent: TinyLife.Objects.ObjectSpot
  langs:
  - csharp
  - vb
  name: TreeSpots(float, float)
  nameWithType: ObjectSpot.TreeSpots(float, float)
  fullName: TinyLife.Objects.ObjectSpot.TreeSpots(float, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A helper method to create a set of <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> instances for trees that can have objects, like the <xref href="TinyLife.Objects.FurnitureType.MapleFairyLights" data-throw-if-not-resolved="false"></xref>, added to them.
  example: []
  syntax:
    content: public static ObjectSpot[] TreeSpots(float yOffset = -2, float drawLayer = 1)
    parameters:
    - id: yOffset
      type: System.Single
      description: The y offset.
    - id: drawLayer
      type: System.Single
      description: The <xref href="TinyLife.Objects.AbstractSpot.DrawLayer" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: TinyLife.Objects.ObjectSpot[]
      description: A set of object spots for trees.
    content.vb: Public Shared Function TreeSpots(yOffset As Single = -2, drawLayer As Single = 1) As ObjectSpot()
  overload: TinyLife.Objects.ObjectSpot.TreeSpots*
  nameWithType.vb: ObjectSpot.TreeSpots(Single, Single)
  fullName.vb: TinyLife.Objects.ObjectSpot.TreeSpots(Single, Single)
  name.vb: TreeSpots(Single, Single)
references:
- uid: TinyLife.Objects.AbstractSpot
  commentId: T:TinyLife.Objects.AbstractSpot
  parent: TinyLife.Objects
  href: TinyLife.Objects.AbstractSpot.html
  name: AbstractSpot
  nameWithType: AbstractSpot
  fullName: TinyLife.Objects.AbstractSpot
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Objects.AbstractSpot.YOffset
  commentId: P:TinyLife.Objects.AbstractSpot.YOffset
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_YOffset
  name: YOffset
  nameWithType: AbstractSpot.YOffset
  fullName: TinyLife.Objects.AbstractSpot.YOffset
- uid: TinyLife.Objects.AbstractSpot.Group
  commentId: P:TinyLife.Objects.AbstractSpot.Group
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_Group
  name: Group
  nameWithType: AbstractSpot.Group
  fullName: TinyLife.Objects.AbstractSpot.Group
- uid: TinyLife.Objects.AbstractSpot.VisualDirection
  commentId: P:TinyLife.Objects.AbstractSpot.VisualDirection
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_VisualDirection
  name: VisualDirection
  nameWithType: AbstractSpot.VisualDirection
  fullName: TinyLife.Objects.AbstractSpot.VisualDirection
- uid: TinyLife.Objects.AbstractSpot.DrawLayer
  commentId: F:TinyLife.Objects.AbstractSpot.DrawLayer
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_DrawLayer
  name: DrawLayer
  nameWithType: AbstractSpot.DrawLayer
  fullName: TinyLife.Objects.AbstractSpot.DrawLayer
- uid: TinyLife.Objects.AbstractSpot.IsOnGround
  commentId: P:TinyLife.Objects.AbstractSpot.IsOnGround
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_IsOnGround
  name: IsOnGround
  nameWithType: AbstractSpot.IsOnGround
  fullName: TinyLife.Objects.AbstractSpot.IsOnGround
- uid: TinyLife.Objects.AbstractSpot.ValidDirections
  commentId: F:TinyLife.Objects.AbstractSpot.ValidDirections
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_ValidDirections
  name: ValidDirections
  nameWithType: AbstractSpot.ValidDirections
  fullName: TinyLife.Objects.AbstractSpot.ValidDirections
- uid: TinyLife.Objects.AbstractSpot.Offset
  commentId: F:TinyLife.Objects.AbstractSpot.Offset
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_Offset
  name: Offset
  nameWithType: AbstractSpot.Offset
  fullName: TinyLife.Objects.AbstractSpot.Offset
- uid: TinyLife.Objects.AbstractSpot.VisualOffset
  commentId: F:TinyLife.Objects.AbstractSpot.VisualOffset
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_VisualOffset
  name: VisualOffset
  nameWithType: AbstractSpot.VisualOffset
  fullName: TinyLife.Objects.AbstractSpot.VisualOffset
- uid: TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
  commentId: M:TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
  parent: TinyLife.Objects.AbstractSpot
  isExternal: true
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetValidDirections_MLEM_Maths_Direction2_
  name: GetValidDirections(Direction2)
  nameWithType: AbstractSpot.GetValidDirections(Direction2)
  fullName: TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
    name: GetValidDirections
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetValidDirections_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
    name: GetValidDirections
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetValidDirections_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
- uid: TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
  commentId: M:TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
  parent: TinyLife.Objects.AbstractSpot
  isExternal: true
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetVisualDirection_MLEM_Maths_Direction2_
  name: GetVisualDirection(Direction2)
  nameWithType: AbstractSpot.GetVisualDirection(Direction2)
  fullName: TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
    name: GetVisualDirection
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetVisualDirection_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
    name: GetVisualDirection
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetVisualDirection_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
- uid: TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture,System.Boolean)
  commentId: M:TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture,System.Boolean)
  parent: TinyLife.Objects.AbstractSpot
  isExternal: true
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetLocation_TinyLife_Objects_Furniture_System_Boolean_
  name: GetLocation(Furniture, bool)
  nameWithType: AbstractSpot.GetLocation(Furniture, bool)
  fullName: TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture, bool)
  nameWithType.vb: AbstractSpot.GetLocation(Furniture, Boolean)
  fullName.vb: TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture, Boolean)
  name.vb: GetLocation(Furniture, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture,System.Boolean)
    name: GetLocation
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetLocation_TinyLife_Objects_Furniture_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture,System.Boolean)
    name: GetLocation
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetLocation_TinyLife_Objects_Furniture_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
  commentId: M:TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_DoGroupsOverlap_TinyLife_Objects_AbstractSpot_
  name: DoGroupsOverlap(AbstractSpot)
  nameWithType: AbstractSpot.DoGroupsOverlap(AbstractSpot)
  fullName: TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
    name: DoGroupsOverlap
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_DoGroupsOverlap_TinyLife_Objects_AbstractSpot_
  - name: (
  - uid: TinyLife.Objects.AbstractSpot
    name: AbstractSpot
    href: TinyLife.Objects.AbstractSpot.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
    name: DoGroupsOverlap
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_DoGroupsOverlap_TinyLife_Objects_AbstractSpot_
  - name: (
  - uid: TinyLife.Objects.AbstractSpot
    name: AbstractSpot
    href: TinyLife.Objects.AbstractSpot.html
  - name: )
- uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1({T}[])
  commentId: M:TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
  parent: TinyLife.Objects.AbstractSpot
  definition: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  name: SortDrawLayers<T>(T[])
  nameWithType: AbstractSpot.SortDrawLayers<T>(T[])
  fullName: TinyLife.Objects.AbstractSpot.SortDrawLayers<T>(T[])
  nameWithType.vb: AbstractSpot.SortDrawLayers(Of T)(T())
  fullName.vb: TinyLife.Objects.AbstractSpot.SortDrawLayers(Of T)(T())
  name.vb: SortDrawLayers(Of T)(T())
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
    name: SortDrawLayers
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
    name: SortDrawLayers
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: (
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Objects.ObjectSpot.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<ObjectSpot>(ObjectSpot)
  nameWithType: Extensions.JsonCopy<ObjectSpot>(ObjectSpot)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.ObjectSpot>(TinyLife.Objects.ObjectSpot)
  nameWithType.vb: Extensions.JsonCopy(Of ObjectSpot)(ObjectSpot)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.ObjectSpot)(TinyLife.Objects.ObjectSpot)
  name.vb: JsonCopy(Of ObjectSpot)(ObjectSpot)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.ObjectSpot)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.ObjectSpot)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
  commentId: M:TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  name: SortDrawLayers<T>(T[])
  nameWithType: AbstractSpot.SortDrawLayers<T>(T[])
  fullName: TinyLife.Objects.AbstractSpot.SortDrawLayers<T>(T[])
  nameWithType.vb: AbstractSpot.SortDrawLayers(Of T)(T())
  fullName.vb: TinyLife.Objects.AbstractSpot.SortDrawLayers(Of T)(T())
  name.vb: SortDrawLayers(Of T)(T())
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
    name: SortDrawLayers
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
    name: SortDrawLayers
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: (
  - name: )
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.FurnitureType
  commentId: T:TinyLife.Objects.FurnitureType
  parent: TinyLife.Objects
  href: TinyLife.Objects.FurnitureType.html
  name: FurnitureType
  nameWithType: FurnitureType
  fullName: TinyLife.Objects.FurnitureType
- uid: System.Predicate{TinyLife.Objects.FurnitureType}
  commentId: T:System.Predicate{TinyLife.Objects.FurnitureType}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<FurnitureType>
  nameWithType: Predicate<FurnitureType>
  fullName: System.Predicate<TinyLife.Objects.FurnitureType>
  nameWithType.vb: Predicate(Of FurnitureType)
  fullName.vb: System.Predicate(Of TinyLife.Objects.FurnitureType)
  name.vb: Predicate(Of FurnitureType)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.ObjectSpot.#ctor*
  commentId: Overload:TinyLife.Objects.ObjectSpot.#ctor
  href: TinyLife.Objects.ObjectSpot.html#TinyLife_Objects_ObjectSpot__ctor_Microsoft_Xna_Framework_Vector2_System_Predicate_TinyLife_Objects_FurnitureType__System_Single_MLEM_Maths_Direction2___
  name: ObjectSpot
  nameWithType: ObjectSpot.ObjectSpot
  fullName: TinyLife.Objects.ObjectSpot.ObjectSpot
  nameWithType.vb: ObjectSpot.New
  fullName.vb: TinyLife.Objects.ObjectSpot.New
  name.vb: New
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Maths.Direction2[]
  isExternal: true
  name: Direction2[]
  nameWithType: Direction2[]
  fullName: MLEM.Maths.Direction2[]
  nameWithType.vb: Direction2()
  fullName.vb: MLEM.Maths.Direction2()
  name.vb: Direction2()
  spec.csharp:
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Objects.ObjectSpot.GetContents*
  commentId: Overload:TinyLife.Objects.ObjectSpot.GetContents
  href: TinyLife.Objects.ObjectSpot.html#TinyLife_Objects_ObjectSpot_GetContents__1_TinyLife_Objects_Furniture_System_Boolean_
  name: GetContents
  nameWithType: ObjectSpot.GetContents
  fullName: TinyLife.Objects.ObjectSpot.GetContents
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Objects.ObjectSpot.IsContentAllowed*
  commentId: Overload:TinyLife.Objects.ObjectSpot.IsContentAllowed
  href: TinyLife.Objects.ObjectSpot.html#TinyLife_Objects_ObjectSpot_IsContentAllowed_TinyLife_Objects_Furniture_TinyLife_Objects_FurnitureType_
  name: IsContentAllowed
  nameWithType: ObjectSpot.IsContentAllowed
  fullName: TinyLife.Objects.ObjectSpot.IsContentAllowed
- uid: TinyLife.Objects.ObjectSpot
  commentId: T:TinyLife.Objects.ObjectSpot
  parent: TinyLife.Objects
  href: TinyLife.Objects.ObjectSpot.html
  name: ObjectSpot
  nameWithType: ObjectSpot
  fullName: TinyLife.Objects.ObjectSpot
- uid: TinyLife.Objects.ObjectCategory.Chair
  commentId: F:TinyLife.Objects.ObjectCategory.Chair
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_Chair
  name: Chair
  nameWithType: ObjectCategory.Chair
  fullName: TinyLife.Objects.ObjectCategory.Chair
- uid: TinyLife.Objects.ObjectCategory.SmallObject
  commentId: F:TinyLife.Objects.ObjectCategory.SmallObject
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_SmallObject
  name: SmallObject
  nameWithType: ObjectCategory.SmallObject
  fullName: TinyLife.Objects.ObjectCategory.SmallObject
- uid: TinyLife.Objects.ObjectSpot.TableSpots*
  commentId: Overload:TinyLife.Objects.ObjectSpot.TableSpots
  href: TinyLife.Objects.ObjectSpot.html#TinyLife_Objects_ObjectSpot_TableSpots_Microsoft_Xna_Framework_Point_System_Single_System_Single_
  name: TableSpots
  nameWithType: ObjectSpot.TableSpots
  fullName: TinyLife.Objects.ObjectSpot.TableSpots
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: TinyLife.Objects.ObjectSpot[]
  isExternal: true
  href: TinyLife.Objects.ObjectSpot.html
  name: ObjectSpot[]
  nameWithType: ObjectSpot[]
  fullName: TinyLife.Objects.ObjectSpot[]
  nameWithType.vb: ObjectSpot()
  fullName.vb: TinyLife.Objects.ObjectSpot()
  name.vb: ObjectSpot()
  spec.csharp:
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: (
  - name: )
- uid: TinyLife.Objects.FurnitureType.SimplePicnicTable
  commentId: F:TinyLife.Objects.FurnitureType.SimplePicnicTable
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_SimplePicnicTable
  name: SimplePicnicTable
  nameWithType: FurnitureType.SimplePicnicTable
  fullName: TinyLife.Objects.FurnitureType.SimplePicnicTable
- uid: TinyLife.Objects.ObjectSpot.PicnicTableSpots*
  commentId: Overload:TinyLife.Objects.ObjectSpot.PicnicTableSpots
  href: TinyLife.Objects.ObjectSpot.html#TinyLife_Objects_ObjectSpot_PicnicTableSpots_Microsoft_Xna_Framework_Point_System_Single_
  name: PicnicTableSpots
  nameWithType: ObjectSpot.PicnicTableSpots
  fullName: TinyLife.Objects.ObjectSpot.PicnicTableSpots
- uid: TinyLife.Objects.ObjectCategory.CounterObject
  commentId: F:TinyLife.Objects.ObjectCategory.CounterObject
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_CounterObject
  name: CounterObject
  nameWithType: ObjectCategory.CounterObject
  fullName: TinyLife.Objects.ObjectCategory.CounterObject
- uid: TinyLife.Objects.FurnitureType.PreparedFood
  commentId: F:TinyLife.Objects.FurnitureType.PreparedFood
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_PreparedFood
  name: PreparedFood
  nameWithType: FurnitureType.PreparedFood
  fullName: TinyLife.Objects.FurnitureType.PreparedFood
- uid: TinyLife.Objects.FurnitureType.Pot
  commentId: F:TinyLife.Objects.FurnitureType.Pot
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Pot
  name: Pot
  nameWithType: FurnitureType.Pot
  fullName: TinyLife.Objects.FurnitureType.Pot
- uid: TinyLife.Objects.ObjectSpot.CounterSpots*
  commentId: Overload:TinyLife.Objects.ObjectSpot.CounterSpots
  href: TinyLife.Objects.ObjectSpot.html#TinyLife_Objects_ObjectSpot_CounterSpots_System_Boolean_System_Single_System_Single_
  name: CounterSpots
  nameWithType: ObjectSpot.CounterSpots
  fullName: TinyLife.Objects.ObjectSpot.CounterSpots
- uid: TinyLife.Objects.ObjectSpot.BarSpots*
  commentId: Overload:TinyLife.Objects.ObjectSpot.BarSpots
  href: TinyLife.Objects.ObjectSpot.html#TinyLife_Objects_ObjectSpot_BarSpots_System_Single_System_Single_
  name: BarSpots
  nameWithType: ObjectSpot.BarSpots
  fullName: TinyLife.Objects.ObjectSpot.BarSpots
- uid: TinyLife.Objects.ObjectSpot.SingleShelfSpots*
  commentId: Overload:TinyLife.Objects.ObjectSpot.SingleShelfSpots
  href: TinyLife.Objects.ObjectSpot.html#TinyLife_Objects_ObjectSpot_SingleShelfSpots_System_Single_System_Single_
  name: SingleShelfSpots
  nameWithType: ObjectSpot.SingleShelfSpots
  fullName: TinyLife.Objects.ObjectSpot.SingleShelfSpots
- uid: TinyLife.Objects.FurnitureType.SimpleDrawer
  commentId: F:TinyLife.Objects.FurnitureType.SimpleDrawer
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_SimpleDrawer
  name: SimpleDrawer
  nameWithType: FurnitureType.SimpleDrawer
  fullName: TinyLife.Objects.FurnitureType.SimpleDrawer
- uid: TinyLife.Objects.ObjectSpot.DoubleShelfSpots*
  commentId: Overload:TinyLife.Objects.ObjectSpot.DoubleShelfSpots
  href: TinyLife.Objects.ObjectSpot.html#TinyLife_Objects_ObjectSpot_DoubleShelfSpots_System_Single_System_Single_
  name: DoubleShelfSpots
  nameWithType: ObjectSpot.DoubleShelfSpots
  fullName: TinyLife.Objects.ObjectSpot.DoubleShelfSpots
- uid: TinyLife.Objects.ObjectSpot.DeskSpots*
  commentId: Overload:TinyLife.Objects.ObjectSpot.DeskSpots
  href: TinyLife.Objects.ObjectSpot.html#TinyLife_Objects_ObjectSpot_DeskSpots_System_Single_System_Boolean_System_Single_
  name: DeskSpots
  nameWithType: ObjectSpot.DeskSpots
  fullName: TinyLife.Objects.ObjectSpot.DeskSpots
- uid: TinyLife.Objects.FurnitureType.MapleFairyLights
  commentId: F:TinyLife.Objects.FurnitureType.MapleFairyLights
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_MapleFairyLights
  name: MapleFairyLights
  nameWithType: FurnitureType.MapleFairyLights
  fullName: TinyLife.Objects.FurnitureType.MapleFairyLights
- uid: TinyLife.Objects.ObjectSpot.TreeSpots*
  commentId: Overload:TinyLife.Objects.ObjectSpot.TreeSpots
  href: TinyLife.Objects.ObjectSpot.html#TinyLife_Objects_ObjectSpot_TreeSpots_System_Single_System_Single_
  name: TreeSpots
  nameWithType: ObjectSpot.TreeSpots
  fullName: TinyLife.Objects.ObjectSpot.TreeSpots
