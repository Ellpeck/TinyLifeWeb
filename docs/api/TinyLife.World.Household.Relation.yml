### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Household.Relation
  commentId: T:TinyLife.World.Household.Relation
  id: Household.Relation
  parent: TinyLife.World
  children:
  - TinyLife.World.Household.Relation.#ctor(TinyLife.GenealogyType,TinyLife.RelationshipType,TinyLife.RomanceType,System.Boolean)
  - TinyLife.World.Household.Relation.Dating
  - TinyLife.World.Household.Relation.GenealogyType
  - TinyLife.World.Household.Relation.RelationshipType
  - TinyLife.World.Household.Relation.RomanceType
  langs:
  - csharp
  - vb
  name: Household.Relation
  nameWithType: Household.Relation
  fullName: TinyLife.World.Household.Relation
  type: Struct
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: A relation is a set of information for a <xref href="TinyLife.World.Household.RandomRelation" data-throw-if-not-resolved="false"></xref> and ultimately <xref href="TinyLife.World.Household.RandomConstellation" data-throw-if-not-resolved="false"></xref> that stores the <xref href="TinyLife.World.Household.Relation.GenealogyType" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.World.Household.Relation.RelationshipType" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.World.Household.Relation.RomanceType" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.World.Household.Relation.Dating" data-throw-if-not-resolved="false"></xref> status that should be applied between two randomly generated household members.
  example: []
  syntax:
    content: public readonly struct Household.Relation
    content.vb: Public Structure Household.Relation
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - TinyLife.World.Household.Relation.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.World.Household.Relation.GenealogyType
  commentId: F:TinyLife.World.Household.Relation.GenealogyType
  id: GenealogyType
  parent: TinyLife.World.Household.Relation
  langs:
  - csharp
  - vb
  name: GenealogyType
  nameWithType: Household.Relation.GenealogyType
  fullName: TinyLife.World.Household.Relation.GenealogyType
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The genealogy to apply.
  example: []
  syntax:
    content: public readonly GenealogyType GenealogyType
    return:
      type: TinyLife.GenealogyType
    content.vb: Public ReadOnly GenealogyType As GenealogyType
- uid: TinyLife.World.Household.Relation.RelationshipType
  commentId: F:TinyLife.World.Household.Relation.RelationshipType
  id: RelationshipType
  parent: TinyLife.World.Household.Relation
  langs:
  - csharp
  - vb
  name: RelationshipType
  nameWithType: Household.Relation.RelationshipType
  fullName: TinyLife.World.Household.Relation.RelationshipType
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The relationship type to apply.
  example: []
  syntax:
    content: public readonly RelationshipType RelationshipType
    return:
      type: TinyLife.RelationshipType
    content.vb: Public ReadOnly RelationshipType As RelationshipType
- uid: TinyLife.World.Household.Relation.RomanceType
  commentId: F:TinyLife.World.Household.Relation.RomanceType
  id: RomanceType
  parent: TinyLife.World.Household.Relation
  langs:
  - csharp
  - vb
  name: RomanceType
  nameWithType: Household.Relation.RomanceType
  fullName: TinyLife.World.Household.Relation.RomanceType
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The romance type to apply.
  example: []
  syntax:
    content: public readonly RomanceType RomanceType
    return:
      type: TinyLife.RomanceType
    content.vb: Public ReadOnly RomanceType As RomanceType
- uid: TinyLife.World.Household.Relation.Dating
  commentId: F:TinyLife.World.Household.Relation.Dating
  id: Dating
  parent: TinyLife.World.Household.Relation
  langs:
  - csharp
  - vb
  name: Dating
  nameWithType: Household.Relation.Dating
  fullName: TinyLife.World.Household.Relation.Dating
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The dating status to apply.
  example: []
  syntax:
    content: public readonly bool Dating
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Dating As Boolean
- uid: TinyLife.World.Household.Relation.#ctor(TinyLife.GenealogyType,TinyLife.RelationshipType,TinyLife.RomanceType,System.Boolean)
  commentId: M:TinyLife.World.Household.Relation.#ctor(TinyLife.GenealogyType,TinyLife.RelationshipType,TinyLife.RomanceType,System.Boolean)
  id: '#ctor(TinyLife.GenealogyType,TinyLife.RelationshipType,TinyLife.RomanceType,System.Boolean)'
  parent: TinyLife.World.Household.Relation
  langs:
  - csharp
  - vb
  name: Relation(GenealogyType, RelationshipType, RomanceType, bool)
  nameWithType: Household.Relation.Relation(GenealogyType, RelationshipType, RomanceType, bool)
  fullName: TinyLife.World.Household.Relation.Relation(TinyLife.GenealogyType, TinyLife.RelationshipType, TinyLife.RomanceType, bool)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Creates a new relation with the given settings.
  example: []
  syntax:
    content: public Relation(GenealogyType genealogyType, RelationshipType relationshipType, RomanceType romanceType, bool dating)
    parameters:
    - id: genealogyType
      type: TinyLife.GenealogyType
      description: The genealogy to apply.
    - id: relationshipType
      type: TinyLife.RelationshipType
      description: The relationship type to apply.
    - id: romanceType
      type: TinyLife.RomanceType
      description: The romance type to apply.
    - id: dating
      type: System.Boolean
      description: The dating status to apply.
    content.vb: Public Sub New(genealogyType As GenealogyType, relationshipType As RelationshipType, romanceType As RomanceType, dating As Boolean)
  overload: TinyLife.World.Household.Relation.#ctor*
  nameWithType.vb: Household.Relation.New(GenealogyType, RelationshipType, RomanceType, Boolean)
  fullName.vb: TinyLife.World.Household.Relation.New(TinyLife.GenealogyType, TinyLife.RelationshipType, TinyLife.RomanceType, Boolean)
  name.vb: New(GenealogyType, RelationshipType, RomanceType, Boolean)
references:
- uid: TinyLife.World.Household.RandomRelation
  commentId: T:TinyLife.World.Household.RandomRelation
  href: TinyLife.World.Household.html
  name: Household.RandomRelation
  nameWithType: Household.RandomRelation
  fullName: TinyLife.World.Household.RandomRelation
  spec.csharp:
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomRelation
    name: RandomRelation
    href: TinyLife.World.Household.RandomRelation.html
  spec.vb:
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomRelation
    name: RandomRelation
    href: TinyLife.World.Household.RandomRelation.html
- uid: TinyLife.World.Household.RandomConstellation
  commentId: T:TinyLife.World.Household.RandomConstellation
  href: TinyLife.World.Household.html
  name: Household.RandomConstellation
  nameWithType: Household.RandomConstellation
  fullName: TinyLife.World.Household.RandomConstellation
  spec.csharp:
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomConstellation
    name: RandomConstellation
    href: TinyLife.World.Household.RandomConstellation.html
  spec.vb:
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomConstellation
    name: RandomConstellation
    href: TinyLife.World.Household.RandomConstellation.html
- uid: TinyLife.World.Household.Relation.GenealogyType
  commentId: F:TinyLife.World.Household.Relation.GenealogyType
  href: TinyLife.World.Household.Relation.html#TinyLife_World_Household_Relation_GenealogyType
  name: GenealogyType
  nameWithType: Household.Relation.GenealogyType
  fullName: TinyLife.World.Household.Relation.GenealogyType
- uid: TinyLife.World.Household.Relation.RelationshipType
  commentId: F:TinyLife.World.Household.Relation.RelationshipType
  href: TinyLife.World.Household.Relation.html#TinyLife_World_Household_Relation_RelationshipType
  name: RelationshipType
  nameWithType: Household.Relation.RelationshipType
  fullName: TinyLife.World.Household.Relation.RelationshipType
- uid: TinyLife.World.Household.Relation.RomanceType
  commentId: F:TinyLife.World.Household.Relation.RomanceType
  href: TinyLife.World.Household.Relation.html#TinyLife_World_Household_Relation_RomanceType
  name: RomanceType
  nameWithType: Household.Relation.RomanceType
  fullName: TinyLife.World.Household.Relation.RomanceType
- uid: TinyLife.World.Household.Relation.Dating
  commentId: F:TinyLife.World.Household.Relation.Dating
  href: TinyLife.World.Household.Relation.html#TinyLife_World_Household_Relation_Dating
  name: Dating
  nameWithType: Household.Relation.Dating
  fullName: TinyLife.World.Household.Relation.Dating
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.World.Household.Relation.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Relation>(Relation)
  nameWithType: Extensions.JsonCopy<Household.Relation>(Household.Relation)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Household.Relation>(TinyLife.World.Household.Relation)
  nameWithType.vb: Extensions.JsonCopy(Of Household.Relation)(Household.Relation)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Household.Relation)(TinyLife.World.Household.Relation)
  name.vb: JsonCopy(Of Relation)(Relation)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Household.Relation)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.World.Household.Relation
    name: Relation
    href: TinyLife.World.Household.Relation.html
  - name: '>'
  - name: (
  - uid: TinyLife.World.Household.Relation
    name: Relation
    href: TinyLife.World.Household.Relation.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Household.Relation)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Household.Relation
    name: Relation
    href: TinyLife.World.Household.Relation.html
  - name: )
  - name: (
  - uid: TinyLife.World.Household.Relation
    name: Relation
    href: TinyLife.World.Household.Relation.html
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.GenealogyType
  commentId: T:TinyLife.GenealogyType
  parent: TinyLife
  href: TinyLife.GenealogyType.html
  name: GenealogyType
  nameWithType: GenealogyType
  fullName: TinyLife.GenealogyType
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.RelationshipType
  commentId: T:TinyLife.RelationshipType
  parent: TinyLife
  href: TinyLife.RelationshipType.html
  name: RelationshipType
  nameWithType: RelationshipType
  fullName: TinyLife.RelationshipType
- uid: TinyLife.RomanceType
  commentId: T:TinyLife.RomanceType
  parent: TinyLife
  href: TinyLife.RomanceType.html
  name: RomanceType
  nameWithType: RomanceType
  fullName: TinyLife.RomanceType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.World.Household.Relation.#ctor*
  commentId: Overload:TinyLife.World.Household.Relation.#ctor
  href: TinyLife.World.Household.Relation.html#TinyLife_World_Household_Relation__ctor_TinyLife_GenealogyType_TinyLife_RelationshipType_TinyLife_RomanceType_System_Boolean_
  name: Relation
  nameWithType: Household.Relation.Relation
  fullName: TinyLife.World.Household.Relation.Relation
  nameWithType.vb: Household.Relation.New
  fullName.vb: TinyLife.World.Household.Relation.New
  name.vb: New
