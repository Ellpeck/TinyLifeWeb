### YamlMime:ManagedReference
items:
- uid: TinyLife.Uis.InGameHint
  commentId: T:TinyLife.Uis.InGameHint
  id: InGameHint
  parent: TinyLife.Uis
  children:
  - TinyLife.Uis.InGameHint.#ctor(System.String,MLEM.Textures.TextureRegion,System.Boolean,System.Func{TinyLife.GameImpl,System.Boolean},System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel})
  - TinyLife.Uis.InGameHint.AdditionalContent
  - TinyLife.Uis.InGameHint.ClothesIntentions
  - TinyLife.Uis.InGameHint.Condition
  - TinyLife.Uis.InGameHint.DeathEmotions
  - TinyLife.Uis.InGameHint.Display
  - TinyLife.Uis.InGameHint.EmotionInfluences
  - TinyLife.Uis.InGameHint.HasBeenDisplayed
  - TinyLife.Uis.InGameHint.Hints
  - TinyLife.Uis.InGameHint.Icon
  - TinyLife.Uis.InGameHint.Important
  - TinyLife.Uis.InGameHint.InteractionPages
  - TinyLife.Uis.InGameHint.Interactions
  - TinyLife.Uis.InGameHint.Introduction
  - TinyLife.Uis.InGameHint.LotEmployments
  - TinyLife.Uis.InGameHint.MultiMaps
  - TinyLife.Uis.InGameHint.Name
  - TinyLife.Uis.InGameHint.OutOfTownActions
  - TinyLife.Uis.InGameHint.Outfits
  - TinyLife.Uis.InGameHint.PersonalityTypes
  - TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  langs:
  - csharp
  - vb
  name: InGameHint
  nameWithType: InGameHint
  fullName: TinyLife.Uis.InGameHint
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: >-
    An in-game hint is a tutorial notification that can display with a given <xref href="TinyLife.Uis.InGameHint.Condition" data-throw-if-not-resolved="false"></xref>, or that can be caused to be displayed manually using <xref href="TinyLife.Uis.InGameHint.Display" data-throw-if-not-resolved="false"></xref>.

    Each in-game hint is only displayed once, unless the list of displayed hints is reset in the <xref href="TinyLife.Options" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class InGameHint
    content.vb: Public Class InGameHint
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Uis.InGameHint.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Uis.InGameHint.Hints
  commentId: F:TinyLife.Uis.InGameHint.Hints
  id: Hints
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Hints
  nameWithType: InGameHint.Hints
  fullName: TinyLife.Uis.InGameHint.Hints
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: >-
    The registry for all <xref href="TinyLife.Uis.InGameHint" data-throw-if-not-resolved="false"></xref> values.

    Use <xref href="TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)" data-throw-if-not-resolved="false"></xref> to add to this list.
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, InGameHint> Hints
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Uis.InGameHint}
    content.vb: Public Shared ReadOnly Hints As ReadOnlyDictionary(Of String, InGameHint)
- uid: TinyLife.Uis.InGameHint.Introduction
  commentId: F:TinyLife.Uis.InGameHint.Introduction
  id: Introduction
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Introduction
  nameWithType: InGameHint.Introduction
  fullName: TinyLife.Uis.InGameHint.Introduction
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint Introduction
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly Introduction As InGameHint
- uid: TinyLife.Uis.InGameHint.PersonalityTypes
  commentId: F:TinyLife.Uis.InGameHint.PersonalityTypes
  id: PersonalityTypes
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: PersonalityTypes
  nameWithType: InGameHint.PersonalityTypes
  fullName: TinyLife.Uis.InGameHint.PersonalityTypes
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint PersonalityTypes
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly PersonalityTypes As InGameHint
- uid: TinyLife.Uis.InGameHint.ClothesIntentions
  commentId: F:TinyLife.Uis.InGameHint.ClothesIntentions
  id: ClothesIntentions
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: ClothesIntentions
  nameWithType: InGameHint.ClothesIntentions
  fullName: TinyLife.Uis.InGameHint.ClothesIntentions
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint ClothesIntentions
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly ClothesIntentions As InGameHint
- uid: TinyLife.Uis.InGameHint.Interactions
  commentId: F:TinyLife.Uis.InGameHint.Interactions
  id: Interactions
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Interactions
  nameWithType: InGameHint.Interactions
  fullName: TinyLife.Uis.InGameHint.Interactions
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint Interactions
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly Interactions As InGameHint
- uid: TinyLife.Uis.InGameHint.Outfits
  commentId: F:TinyLife.Uis.InGameHint.Outfits
  id: Outfits
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Outfits
  nameWithType: InGameHint.Outfits
  fullName: TinyLife.Uis.InGameHint.Outfits
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint Outfits
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly Outfits As InGameHint
- uid: TinyLife.Uis.InGameHint.InteractionPages
  commentId: F:TinyLife.Uis.InGameHint.InteractionPages
  id: InteractionPages
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: InteractionPages
  nameWithType: InGameHint.InteractionPages
  fullName: TinyLife.Uis.InGameHint.InteractionPages
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint InteractionPages
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly InteractionPages As InGameHint
- uid: TinyLife.Uis.InGameHint.OutOfTownActions
  commentId: F:TinyLife.Uis.InGameHint.OutOfTownActions
  id: OutOfTownActions
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: OutOfTownActions
  nameWithType: InGameHint.OutOfTownActions
  fullName: TinyLife.Uis.InGameHint.OutOfTownActions
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint OutOfTownActions
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly OutOfTownActions As InGameHint
- uid: TinyLife.Uis.InGameHint.LotEmployments
  commentId: F:TinyLife.Uis.InGameHint.LotEmployments
  id: LotEmployments
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: LotEmployments
  nameWithType: InGameHint.LotEmployments
  fullName: TinyLife.Uis.InGameHint.LotEmployments
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint LotEmployments
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly LotEmployments As InGameHint
- uid: TinyLife.Uis.InGameHint.MultiMaps
  commentId: F:TinyLife.Uis.InGameHint.MultiMaps
  id: MultiMaps
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: MultiMaps
  nameWithType: InGameHint.MultiMaps
  fullName: TinyLife.Uis.InGameHint.MultiMaps
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint MultiMaps
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly MultiMaps As InGameHint
- uid: TinyLife.Uis.InGameHint.EmotionInfluences
  commentId: F:TinyLife.Uis.InGameHint.EmotionInfluences
  id: EmotionInfluences
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: EmotionInfluences
  nameWithType: InGameHint.EmotionInfluences
  fullName: TinyLife.Uis.InGameHint.EmotionInfluences
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint EmotionInfluences
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly EmotionInfluences As InGameHint
- uid: TinyLife.Uis.InGameHint.DeathEmotions
  commentId: F:TinyLife.Uis.InGameHint.DeathEmotions
  id: DeathEmotions
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: DeathEmotions
  nameWithType: InGameHint.DeathEmotions
  fullName: TinyLife.Uis.InGameHint.DeathEmotions
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint DeathEmotions
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly DeathEmotions As InGameHint
- uid: TinyLife.Uis.InGameHint.Name
  commentId: F:TinyLife.Uis.InGameHint.Name
  id: Name
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: InGameHint.Name
  fullName: TinyLife.Uis.InGameHint.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: The name of this hint
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Uis.InGameHint.Icon
  commentId: F:TinyLife.Uis.InGameHint.Icon
  id: Icon
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: InGameHint.Icon
  fullName: TinyLife.Uis.InGameHint.Icon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: The icon of this hint.
  example: []
  syntax:
    content: public readonly TextureRegion Icon
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Icon As TextureRegion
- uid: TinyLife.Uis.InGameHint.Important
  commentId: F:TinyLife.Uis.InGameHint.Important
  id: Important
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Important
  nameWithType: InGameHint.Important
  fullName: TinyLife.Uis.InGameHint.Important
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: Whether this hint is considered important.
  example: []
  syntax:
    content: public readonly bool Important
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Important As Boolean
- uid: TinyLife.Uis.InGameHint.Condition
  commentId: F:TinyLife.Uis.InGameHint.Condition
  id: Condition
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: InGameHint.Condition
  fullName: TinyLife.Uis.InGameHint.Condition
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: An optional condition that causes this hint to be displayed
  example: []
  syntax:
    content: public readonly Func<GameImpl, bool> Condition
    return:
      type: System.Func{TinyLife.GameImpl,System.Boolean}
    content.vb: Public ReadOnly Condition As Func(Of GameImpl, Boolean)
- uid: TinyLife.Uis.InGameHint.AdditionalContent
  commentId: F:TinyLife.Uis.InGameHint.AdditionalContent
  id: AdditionalContent
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: AdditionalContent
  nameWithType: InGameHint.AdditionalContent
  fullName: TinyLife.Uis.InGameHint.AdditionalContent
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: A function that can optionally add additional content to the hint's <xref href="MLEM.Ui.Elements.Panel" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly Action<CoveringGroup, Panel> AdditionalContent
    return:
      type: System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel}
    content.vb: Public ReadOnly AdditionalContent As Action(Of CoveringGroup, Panel)
- uid: TinyLife.Uis.InGameHint.HasBeenDisplayed
  commentId: P:TinyLife.Uis.InGameHint.HasBeenDisplayed
  id: HasBeenDisplayed
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: HasBeenDisplayed
  nameWithType: InGameHint.HasBeenDisplayed
  fullName: TinyLife.Uis.InGameHint.HasBeenDisplayed
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: A property that determines whether this hint has already been displayed
  example: []
  syntax:
    content: public bool HasBeenDisplayed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasBeenDisplayed As Boolean
  overload: TinyLife.Uis.InGameHint.HasBeenDisplayed*
- uid: TinyLife.Uis.InGameHint.#ctor(System.String,MLEM.Textures.TextureRegion,System.Boolean,System.Func{TinyLife.GameImpl,System.Boolean},System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel})
  commentId: M:TinyLife.Uis.InGameHint.#ctor(System.String,MLEM.Textures.TextureRegion,System.Boolean,System.Func{TinyLife.GameImpl,System.Boolean},System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel})
  id: '#ctor(System.String,MLEM.Textures.TextureRegion,System.Boolean,System.Func{TinyLife.GameImpl,System.Boolean},System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel})'
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: InGameHint(string, TextureRegion, bool, Func<GameImpl, bool>, Action<CoveringGroup, Panel>)
  nameWithType: InGameHint.InGameHint(string, TextureRegion, bool, Func<GameImpl, bool>, Action<CoveringGroup, Panel>)
  fullName: TinyLife.Uis.InGameHint.InGameHint(string, MLEM.Textures.TextureRegion, bool, System.Func<TinyLife.GameImpl, bool>, System.Action<TinyLife.Uis.CoveringGroup, MLEM.Ui.Elements.Panel>)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: Creates a new hint with the given settings
  example: []
  syntax:
    content: public InGameHint(string name, TextureRegion icon, bool important, Func<GameImpl, bool> condition = null, Action<CoveringGroup, Panel> additionalContent = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the hint
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The icon of this hint
    - id: important
      type: System.Boolean
      description: Whether this hint is considered important.
    - id: condition
      type: System.Func{TinyLife.GameImpl,System.Boolean}
      description: An optional condition to cause this hint to be displayed
    - id: additionalContent
      type: System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel}
      description: A function that can optionally add additional content to the hint's <xref href="MLEM.Ui.Elements.Panel" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(name As String, icon As TextureRegion, important As Boolean, condition As Func(Of GameImpl, Boolean) = Nothing, additionalContent As Action(Of CoveringGroup, Panel) = Nothing)
  overload: TinyLife.Uis.InGameHint.#ctor*
  nameWithType.vb: InGameHint.New(String, TextureRegion, Boolean, Func(Of GameImpl, Boolean), Action(Of CoveringGroup, Panel))
  fullName.vb: TinyLife.Uis.InGameHint.New(String, MLEM.Textures.TextureRegion, Boolean, System.Func(Of TinyLife.GameImpl, Boolean), System.Action(Of TinyLife.Uis.CoveringGroup, MLEM.Ui.Elements.Panel))
  name.vb: New(String, TextureRegion, Boolean, Func(Of GameImpl, Boolean), Action(Of CoveringGroup, Panel))
- uid: TinyLife.Uis.InGameHint.Display
  commentId: M:TinyLife.Uis.InGameHint.Display
  id: Display
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Display()
  nameWithType: InGameHint.Display()
  fullName: TinyLife.Uis.InGameHint.Display()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: Displays this hint as a <xref href="TinyLife.Uis.Notifications" data-throw-if-not-resolved="false"></xref> panel and adds it to the list of already displayed hints in the <xref href="TinyLife.Options" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void Display()
    content.vb: Public Sub Display()
  overload: TinyLife.Uis.InGameHint.Display*
- uid: TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  commentId: M:TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  id: Register(TinyLife.Uis.InGameHint)
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Register(InGameHint)
  nameWithType: InGameHint.Register(InGameHint)
  fullName: TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: Registers the given hint to the <xref href="TinyLife.Uis.InGameHint.Hints" data-throw-if-not-resolved="false"></xref> registry
  example: []
  syntax:
    content: public static InGameHint Register(InGameHint hint)
    parameters:
    - id: hint
      type: TinyLife.Uis.InGameHint
      description: The hint to register
    return:
      type: TinyLife.Uis.InGameHint
      description: The hint passed, for chaining
    content.vb: Public Shared Function Register(hint As InGameHint) As InGameHint
  overload: TinyLife.Uis.InGameHint.Register*
references:
- uid: TinyLife.Uis.InGameHint.Condition
  commentId: F:TinyLife.Uis.InGameHint.Condition
  href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint_Condition
  name: Condition
  nameWithType: InGameHint.Condition
  fullName: TinyLife.Uis.InGameHint.Condition
- uid: TinyLife.Uis.InGameHint.Display
  commentId: M:TinyLife.Uis.InGameHint.Display
  href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint_Display
  name: Display()
  nameWithType: InGameHint.Display()
  fullName: TinyLife.Uis.InGameHint.Display()
  spec.csharp:
  - uid: TinyLife.Uis.InGameHint.Display
    name: Display
    href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint_Display
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.InGameHint.Display
    name: Display
    href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint_Display
  - name: (
  - name: )
- uid: TinyLife.Options
  commentId: T:TinyLife.Options
  parent: TinyLife
  href: TinyLife.Options.html
  name: Options
  nameWithType: Options
  fullName: TinyLife.Options
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  href: TinyLife.html
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Uis.InGameHint.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<InGameHint>(InGameHint)
  nameWithType: Extensions.JsonCopy<InGameHint>(InGameHint)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Uis.InGameHint>(TinyLife.Uis.InGameHint)
  nameWithType.vb: Extensions.JsonCopy(Of InGameHint)(InGameHint)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Uis.InGameHint)(TinyLife.Uis.InGameHint)
  name.vb: JsonCopy(Of InGameHint)(InGameHint)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Uis.InGameHint)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    href: TinyLife.Uis.InGameHint.html
  - name: '>'
  - name: (
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    href: TinyLife.Uis.InGameHint.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Uis.InGameHint)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    href: TinyLife.Uis.InGameHint.html
  - name: )
  - name: (
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    href: TinyLife.Uis.InGameHint.html
  - name: )
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Uis.InGameHint
  commentId: T:TinyLife.Uis.InGameHint
  parent: TinyLife.Uis
  href: TinyLife.Uis.InGameHint.html
  name: InGameHint
  nameWithType: InGameHint
  fullName: TinyLife.Uis.InGameHint
- uid: TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  commentId: M:TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint_Register_TinyLife_Uis_InGameHint_
  name: Register(InGameHint)
  nameWithType: InGameHint.Register(InGameHint)
  fullName: TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  spec.csharp:
  - uid: TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
    name: Register
    href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint_Register_TinyLife_Uis_InGameHint_
  - name: (
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    href: TinyLife.Uis.InGameHint.html
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
    name: Register
    href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint_Register_TinyLife_Uis_InGameHint_
  - name: (
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    href: TinyLife.Uis.InGameHint.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Uis.InGameHint}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Uis.InGameHint}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, InGameHint>
  nameWithType: ReadOnlyDictionary<string, InGameHint>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Uis.InGameHint>
  nameWithType.vb: ReadOnlyDictionary(Of String, InGameHint)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Uis.InGameHint)
  name.vb: ReadOnlyDictionary(Of String, InGameHint)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    href: TinyLife.Uis.InGameHint.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    href: TinyLife.Uis.InGameHint.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Func{TinyLife.GameImpl,System.Boolean}
  commentId: T:System.Func{TinyLife.GameImpl,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<GameImpl, bool>
  nameWithType: Func<GameImpl, bool>
  fullName: System.Func<TinyLife.GameImpl, bool>
  nameWithType.vb: Func(Of GameImpl, Boolean)
  fullName.vb: System.Func(Of TinyLife.GameImpl, Boolean)
  name.vb: Func(Of GameImpl, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: MLEM.Ui.Elements.Panel
  commentId: T:MLEM.Ui.Elements.Panel
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Panel
  nameWithType: Panel
  fullName: MLEM.Ui.Elements.Panel
- uid: System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel}
  commentId: T:System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<CoveringGroup, Panel>
  nameWithType: Action<CoveringGroup, Panel>
  fullName: System.Action<TinyLife.Uis.CoveringGroup, MLEM.Ui.Elements.Panel>
  nameWithType.vb: Action(Of CoveringGroup, Panel)
  fullName.vb: System.Action(Of TinyLife.Uis.CoveringGroup, MLEM.Ui.Elements.Panel)
  name.vb: Action(Of CoveringGroup, Panel)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
    href: TinyLife.Uis.CoveringGroup.html
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
    href: TinyLife.Uis.CoveringGroup.html
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: )
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Uis.InGameHint.HasBeenDisplayed*
  commentId: Overload:TinyLife.Uis.InGameHint.HasBeenDisplayed
  href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint_HasBeenDisplayed
  name: HasBeenDisplayed
  nameWithType: InGameHint.HasBeenDisplayed
  fullName: TinyLife.Uis.InGameHint.HasBeenDisplayed
- uid: TinyLife.Uis.InGameHint.#ctor*
  commentId: Overload:TinyLife.Uis.InGameHint.#ctor
  href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint__ctor_System_String_MLEM_Textures_TextureRegion_System_Boolean_System_Func_TinyLife_GameImpl_System_Boolean__System_Action_TinyLife_Uis_CoveringGroup_MLEM_Ui_Elements_Panel__
  name: InGameHint
  nameWithType: InGameHint.InGameHint
  fullName: TinyLife.Uis.InGameHint.InGameHint
  nameWithType.vb: InGameHint.New
  fullName.vb: TinyLife.Uis.InGameHint.New
  name.vb: New
- uid: TinyLife.Uis.Notifications
  commentId: T:TinyLife.Uis.Notifications
  href: TinyLife.Uis.Notifications.html
  name: Notifications
  nameWithType: Notifications
  fullName: TinyLife.Uis.Notifications
- uid: TinyLife.Uis.InGameHint.Display*
  commentId: Overload:TinyLife.Uis.InGameHint.Display
  href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint_Display
  name: Display
  nameWithType: InGameHint.Display
  fullName: TinyLife.Uis.InGameHint.Display
- uid: TinyLife.Uis.InGameHint.Hints
  commentId: F:TinyLife.Uis.InGameHint.Hints
  href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint_Hints
  name: Hints
  nameWithType: InGameHint.Hints
  fullName: TinyLife.Uis.InGameHint.Hints
- uid: TinyLife.Uis.InGameHint.Register*
  commentId: Overload:TinyLife.Uis.InGameHint.Register
  href: TinyLife.Uis.InGameHint.html#TinyLife_Uis_InGameHint_Register_TinyLife_Uis_InGameHint_
  name: Register
  nameWithType: InGameHint.Register
  fullName: TinyLife.Uis.InGameHint.Register
