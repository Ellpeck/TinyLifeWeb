### YamlMime:ManagedReference
items:
- uid: TinyLife.Debug
  commentId: T:TinyLife.Debug
  id: Debug
  parent: TinyLife
  children:
  - TinyLife.Debug.Cheats
  - TinyLife.Debug.DebugLines
  - TinyLife.Debug.TryCheat(System.String)
  langs:
  - csharp
  - vb
  name: Debug
  nameWithType: Debug
  fullName: TinyLife.Debug
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: This class contains a set of ways to include custom debug information in the game, including <xref href="TinyLife.Debug.Cheats" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Debug.DebugLines" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class Debug
    content.vb: Public Class Debug
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Debug.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Debug.Cheats
  commentId: F:TinyLife.Debug.Cheats
  id: Cheats
  parent: TinyLife.Debug
  langs:
  - csharp
  - vb
  name: Cheats
  nameWithType: Debug.Cheats
  fullName: TinyLife.Debug.Cheats
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    A set of regular expressions that resolve into a <xref href="TinyLife.Debug.CheatDelegate" data-throw-if-not-resolved="false"></xref>.

    When a cheat is entered in the F1 menu, and it matches the expression, the <xref href="TinyLife.Debug.CheatDelegate" data-throw-if-not-resolved="false"></xref> is invoked.

    To register new cheats, simply add them to this dictionary.
  example: []
  syntax:
    content: public static readonly Dictionary<Regex, Debug.CheatDelegate> Cheats
    return:
      type: System.Collections.Generic.Dictionary{System.Text.RegularExpressions.Regex,TinyLife.Debug.CheatDelegate}
    content.vb: Public Shared ReadOnly Cheats As Dictionary(Of Regex, Debug.CheatDelegate)
- uid: TinyLife.Debug.DebugLines
  commentId: F:TinyLife.Debug.DebugLines
  id: DebugLines
  parent: TinyLife.Debug
  langs:
  - csharp
  - vb
  name: DebugLines
  nameWithType: Debug.DebugLines
  fullName: TinyLife.Debug.DebugLines
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    A set of <xref href="TinyLife.Debug.DebugDelegate" data-throw-if-not-resolved="false"></xref> that cause additional lines to displayed in the F1 menu.

    To register new debug lines, simply add them to this list.

    Keep in mind that, if too many debug lines are registered, they will go off-screen, so consider only displaying yours when holding certain hotkeys, or when they are necessary.
  example: []
  syntax:
    content: public static readonly List<Debug.DebugDelegate> DebugLines
    return:
      type: System.Collections.Generic.List{TinyLife.Debug.DebugDelegate}
    content.vb: Public Shared ReadOnly DebugLines As List(Of Debug.DebugDelegate)
- uid: TinyLife.Debug.TryCheat(System.String)
  commentId: M:TinyLife.Debug.TryCheat(System.String)
  id: TryCheat(System.String)
  parent: TinyLife.Debug
  langs:
  - csharp
  - vb
  name: TryCheat(string)
  nameWithType: Debug.TryCheat(string)
  fullName: TinyLife.Debug.TryCheat(string)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Tries to execute the cheat with the given name or regular expression match.
  example: []
  syntax:
    content: public static bool TryCheat(string text)
    parameters:
    - id: text
      type: System.String
      description: The cheat to execute.
    return:
      type: System.Boolean
      description: Whether the cheat was successfully exeucted.
    content.vb: Public Shared Function TryCheat(text As String) As Boolean
  overload: TinyLife.Debug.TryCheat*
  nameWithType.vb: Debug.TryCheat(String)
  fullName.vb: TinyLife.Debug.TryCheat(String)
  name.vb: TryCheat(String)
references:
- uid: TinyLife.Debug.Cheats
  commentId: F:TinyLife.Debug.Cheats
  href: TinyLife.Debug.html#TinyLife_Debug_Cheats
  name: Cheats
  nameWithType: Debug.Cheats
  fullName: TinyLife.Debug.Cheats
- uid: TinyLife.Debug.DebugLines
  commentId: F:TinyLife.Debug.DebugLines
  href: TinyLife.Debug.html#TinyLife_Debug_DebugLines
  name: DebugLines
  nameWithType: Debug.DebugLines
  fullName: TinyLife.Debug.DebugLines
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Debug.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Debug>(Debug)
  nameWithType: Extensions.JsonCopy<Debug>(Debug)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Debug>(TinyLife.Debug)
  nameWithType.vb: Extensions.JsonCopy(Of Debug)(Debug)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Debug)(TinyLife.Debug)
  name.vb: JsonCopy(Of Debug)(Debug)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Debug)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: '>'
  - name: (
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Debug)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: )
  - name: (
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Debug.CheatDelegate
  commentId: T:TinyLife.Debug.CheatDelegate
  href: TinyLife.Debug.html
  name: Debug.CheatDelegate
  nameWithType: Debug.CheatDelegate
  fullName: TinyLife.Debug.CheatDelegate
  spec.csharp:
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: .
  - uid: TinyLife.Debug.CheatDelegate
    name: CheatDelegate
    href: TinyLife.Debug.CheatDelegate.html
  spec.vb:
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: .
  - uid: TinyLife.Debug.CheatDelegate
    name: CheatDelegate
    href: TinyLife.Debug.CheatDelegate.html
- uid: System.Collections.Generic.Dictionary{System.Text.RegularExpressions.Regex,TinyLife.Debug.CheatDelegate}
  commentId: T:System.Collections.Generic.Dictionary{System.Text.RegularExpressions.Regex,TinyLife.Debug.CheatDelegate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Regex, Debug.CheatDelegate>
  nameWithType: Dictionary<Regex, Debug.CheatDelegate>
  fullName: System.Collections.Generic.Dictionary<System.Text.RegularExpressions.Regex, TinyLife.Debug.CheatDelegate>
  nameWithType.vb: Dictionary(Of Regex, Debug.CheatDelegate)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Text.RegularExpressions.Regex, TinyLife.Debug.CheatDelegate)
  name.vb: Dictionary(Of Regex, Debug.CheatDelegate)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  - name: ','
  - name: " "
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: .
  - uid: TinyLife.Debug.CheatDelegate
    name: CheatDelegate
    href: TinyLife.Debug.CheatDelegate.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  - name: ','
  - name: " "
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: .
  - uid: TinyLife.Debug.CheatDelegate
    name: CheatDelegate
    href: TinyLife.Debug.CheatDelegate.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Debug.DebugDelegate
  commentId: T:TinyLife.Debug.DebugDelegate
  href: TinyLife.Debug.html
  name: Debug.DebugDelegate
  nameWithType: Debug.DebugDelegate
  fullName: TinyLife.Debug.DebugDelegate
  spec.csharp:
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: .
  - uid: TinyLife.Debug.DebugDelegate
    name: DebugDelegate
    href: TinyLife.Debug.DebugDelegate.html
  spec.vb:
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: .
  - uid: TinyLife.Debug.DebugDelegate
    name: DebugDelegate
    href: TinyLife.Debug.DebugDelegate.html
- uid: System.Collections.Generic.List{TinyLife.Debug.DebugDelegate}
  commentId: T:System.Collections.Generic.List{TinyLife.Debug.DebugDelegate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Debug.DebugDelegate>
  nameWithType: List<Debug.DebugDelegate>
  fullName: System.Collections.Generic.List<TinyLife.Debug.DebugDelegate>
  nameWithType.vb: List(Of Debug.DebugDelegate)
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Debug.DebugDelegate)
  name.vb: List(Of Debug.DebugDelegate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: .
  - uid: TinyLife.Debug.DebugDelegate
    name: DebugDelegate
    href: TinyLife.Debug.DebugDelegate.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Debug
    name: Debug
    href: TinyLife.Debug.html
  - name: .
  - uid: TinyLife.Debug.DebugDelegate
    name: DebugDelegate
    href: TinyLife.Debug.DebugDelegate.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Debug.TryCheat*
  commentId: Overload:TinyLife.Debug.TryCheat
  href: TinyLife.Debug.html#TinyLife_Debug_TryCheat_System_String_
  name: TryCheat
  nameWithType: Debug.TryCheat
  fullName: TinyLife.Debug.TryCheat
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
