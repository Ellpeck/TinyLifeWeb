### YamlMime:ManagedReference
items:
- uid: TinyLife.World.TileInstance
  commentId: T:TinyLife.World.TileInstance
  id: TileInstance
  parent: TinyLife.World
  children:
  - TinyLife.World.TileInstance.#ctor(TinyLife.World.Tile,TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32)
  - TinyLife.World.TileInstance.Floor
  - TinyLife.World.TileInstance.Map
  - TinyLife.World.TileInstance.Position
  - TinyLife.World.TileInstance.Tile
  - TinyLife.World.TileInstance.Validate(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32)
  langs:
  - csharp
  - vb
  name: TileInstance
  nameWithType: TileInstance
  fullName: TinyLife.World.TileInstance
  type: Class
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    A tile instance is a non-single-instance version of a <xref href="TinyLife.World.TileInstance.Tile" data-throw-if-not-resolved="false"></xref> that is placed on a <xref href="TinyLife.World.TileInstance.Map" data-throw-if-not-resolved="false"></xref> at a specific position and floor.

    Tile instances are serializable and can store additional data on a map to disk using the <xref href="System.Runtime.Serialization.DataMemberAttribute" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class TileInstance : JsonTypeSafeGenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class TileInstance Inherits JsonTypeSafeGenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.TileInstance.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.World.TileInstance.Tile
  commentId: F:TinyLife.World.TileInstance.Tile
  id: Tile
  parent: TinyLife.World.TileInstance
  langs:
  - csharp
  - vb
  name: Tile
  nameWithType: TileInstance.Tile
  fullName: TinyLife.World.TileInstance.Tile
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The underlying tile.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly Tile Tile
    return:
      type: TinyLife.World.Tile
    content.vb: >-
      <DataMember>

      Public ReadOnly Tile As Tile
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.TileInstance.Map
  commentId: P:TinyLife.World.TileInstance.Map
  id: Map
  parent: TinyLife.World.TileInstance
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: TileInstance.Map
  fullName: TinyLife.World.TileInstance.Map
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The map that this tile instance is on.
  example: []
  syntax:
    content: public Map Map { get; }
    parameters: []
    return:
      type: TinyLife.World.Map
    content.vb: Public Property Map As Map
  overload: TinyLife.World.TileInstance.Map*
- uid: TinyLife.World.TileInstance.Position
  commentId: P:TinyLife.World.TileInstance.Position
  id: Position
  parent: TinyLife.World.TileInstance
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: TileInstance.Position
  fullName: TinyLife.World.TileInstance.Position
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The position of this tile instance on the map, in tile coordinates.
  example: []
  syntax:
    content: public Point Position { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public Property Position As Point
  overload: TinyLife.World.TileInstance.Position*
- uid: TinyLife.World.TileInstance.Floor
  commentId: P:TinyLife.World.TileInstance.Floor
  id: Floor
  parent: TinyLife.World.TileInstance
  langs:
  - csharp
  - vb
  name: Floor
  nameWithType: TileInstance.Floor
  fullName: TinyLife.World.TileInstance.Floor
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The floor that this tile instance is on.
  example: []
  syntax:
    content: public int Floor { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Floor As Integer
  overload: TinyLife.World.TileInstance.Floor*
- uid: TinyLife.World.TileInstance.#ctor(TinyLife.World.Tile,TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32)
  commentId: M:TinyLife.World.TileInstance.#ctor(TinyLife.World.Tile,TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32)
  id: '#ctor(TinyLife.World.Tile,TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32)'
  parent: TinyLife.World.TileInstance
  langs:
  - csharp
  - vb
  name: TileInstance(Tile, Map, Point, int)
  nameWithType: TileInstance.TileInstance(Tile, Map, Point, int)
  fullName: TinyLife.World.TileInstance.TileInstance(TinyLife.World.Tile, TinyLife.World.Map, Microsoft.Xna.Framework.Point, int)
  type: Constructor
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Creates a new tile instance with the given settings.
  example: []
  syntax:
    content: public TileInstance(Tile tile, Map map, Point position, int floor)
    parameters:
    - id: tile
      type: TinyLife.World.Tile
      description: The underlying tile.
    - id: map
      type: TinyLife.World.Map
      description: The map that this tile instance is on.
    - id: position
      type: Microsoft.Xna.Framework.Point
      description: The position of this tile instance on the map, in tile coordinates.
    - id: floor
      type: System.Int32
      description: The floor that this tile instance is on.
    content.vb: Public Sub New(tile As Tile, map As Map, position As Point, floor As Integer)
  overload: TinyLife.World.TileInstance.#ctor*
  nameWithType.vb: TileInstance.New(Tile, Map, Point, Integer)
  fullName.vb: TinyLife.World.TileInstance.New(TinyLife.World.Tile, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Integer)
  name.vb: New(Tile, Map, Point, Integer)
- uid: TinyLife.World.TileInstance.Validate(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32)
  commentId: M:TinyLife.World.TileInstance.Validate(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32)
  id: Validate(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32)
  parent: TinyLife.World.TileInstance
  langs:
  - csharp
  - vb
  name: Validate(Map, Point, int)
  nameWithType: TileInstance.Validate(Map, Point, int)
  fullName: TinyLife.World.TileInstance.Validate(TinyLife.World.Map, Microsoft.Xna.Framework.Point, int)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    Validates this tile instance when loading the game.

    By default, this method always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> after setting the <xref href="TinyLife.World.TileInstance.Map" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.World.TileInstance.Position" data-throw-if-not-resolved="false"></xref>, and <xref href="TinyLife.World.TileInstance.Floor" data-throw-if-not-resolved="false"></xref> properties.
  example: []
  syntax:
    content: public virtual bool Validate(Map map, Point position, int floor)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map that this tile instance is on.
    - id: position
      type: Microsoft.Xna.Framework.Point
      description: The position of this tile instance on the map, in tile coordinates.
    - id: floor
      type: System.Int32
      description: The floor that this tile instance is on.
    return:
      type: System.Boolean
      description: Whether the tile is valid. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, the tile is replaced by a new instance or by a grass tile.
    content.vb: Public Overridable Function Validate(map As Map, position As Point, floor As Integer) As Boolean
  overload: TinyLife.World.TileInstance.Validate*
  nameWithType.vb: TileInstance.Validate(Map, Point, Integer)
  fullName.vb: TinyLife.World.TileInstance.Validate(TinyLife.World.Map, Microsoft.Xna.Framework.Point, Integer)
  name.vb: Validate(Map, Point, Integer)
references:
- uid: TinyLife.World.TileInstance.Tile
  commentId: F:TinyLife.World.TileInstance.Tile
  href: TinyLife.World.TileInstance.html#TinyLife_World_TileInstance_Tile
  name: Tile
  nameWithType: TileInstance.Tile
  fullName: TinyLife.World.TileInstance.Tile
- uid: TinyLife.World.TileInstance.Map
  commentId: P:TinyLife.World.TileInstance.Map
  href: TinyLife.World.TileInstance.html#TinyLife_World_TileInstance_Map
  name: Map
  nameWithType: TileInstance.Map
  fullName: TinyLife.World.TileInstance.Map
- uid: System.Runtime.Serialization.DataMemberAttribute
  commentId: T:System.Runtime.Serialization.DataMemberAttribute
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.datamemberattribute
  name: DataMemberAttribute
  nameWithType: DataMemberAttribute
  fullName: System.Runtime.Serialization.DataMemberAttribute
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.TileInstance.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<TileInstance>(TileInstance)
  nameWithType: Extensions.JsonCopy<TileInstance>(TileInstance)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.TileInstance>(TinyLife.World.TileInstance)
  nameWithType.vb: Extensions.JsonCopy(Of TileInstance)(TileInstance)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.TileInstance)(TinyLife.World.TileInstance)
  name.vb: JsonCopy(Of TileInstance)(TileInstance)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.TileInstance)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.World.TileInstance
    name: TileInstance
    href: TinyLife.World.TileInstance.html
  - name: '>'
  - name: (
  - uid: TinyLife.World.TileInstance
    name: TileInstance
    href: TinyLife.World.TileInstance.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.TileInstance)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.TileInstance
    name: TileInstance
    href: TinyLife.World.TileInstance.html
  - name: )
  - name: (
  - uid: TinyLife.World.TileInstance
    name: TileInstance
    href: TinyLife.World.TileInstance.html
  - name: )
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.World.Tile
  commentId: T:TinyLife.World.Tile
  parent: TinyLife.World
  href: TinyLife.World.Tile.html
  name: Tile
  nameWithType: Tile
  fullName: TinyLife.World.Tile
- uid: TinyLife.World.TileInstance.Map*
  commentId: Overload:TinyLife.World.TileInstance.Map
  href: TinyLife.World.TileInstance.html#TinyLife_World_TileInstance_Map
  name: Map
  nameWithType: TileInstance.Map
  fullName: TinyLife.World.TileInstance.Map
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World.TileInstance.Position*
  commentId: Overload:TinyLife.World.TileInstance.Position
  href: TinyLife.World.TileInstance.html#TinyLife_World_TileInstance_Position
  name: Position
  nameWithType: TileInstance.Position
  fullName: TinyLife.World.TileInstance.Position
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.World.TileInstance.Floor*
  commentId: Overload:TinyLife.World.TileInstance.Floor
  href: TinyLife.World.TileInstance.html#TinyLife_World_TileInstance_Floor
  name: Floor
  nameWithType: TileInstance.Floor
  fullName: TinyLife.World.TileInstance.Floor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.World.TileInstance.#ctor*
  commentId: Overload:TinyLife.World.TileInstance.#ctor
  href: TinyLife.World.TileInstance.html#TinyLife_World_TileInstance__ctor_TinyLife_World_Tile_TinyLife_World_Map_Microsoft_Xna_Framework_Point_System_Int32_
  name: TileInstance
  nameWithType: TileInstance.TileInstance
  fullName: TinyLife.World.TileInstance.TileInstance
  nameWithType.vb: TileInstance.New
  fullName.vb: TinyLife.World.TileInstance.New
  name.vb: New
- uid: TinyLife.World.TileInstance.Position
  commentId: P:TinyLife.World.TileInstance.Position
  href: TinyLife.World.TileInstance.html#TinyLife_World_TileInstance_Position
  name: Position
  nameWithType: TileInstance.Position
  fullName: TinyLife.World.TileInstance.Position
- uid: TinyLife.World.TileInstance.Floor
  commentId: P:TinyLife.World.TileInstance.Floor
  href: TinyLife.World.TileInstance.html#TinyLife_World_TileInstance_Floor
  name: Floor
  nameWithType: TileInstance.Floor
  fullName: TinyLife.World.TileInstance.Floor
- uid: TinyLife.World.TileInstance.Validate*
  commentId: Overload:TinyLife.World.TileInstance.Validate
  href: TinyLife.World.TileInstance.html#TinyLife_World_TileInstance_Validate_TinyLife_World_Map_Microsoft_Xna_Framework_Point_System_Int32_
  name: Validate
  nameWithType: TileInstance.Validate
  fullName: TinyLife.World.TileInstance.Validate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
