### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.LifeGoal
  commentId: T:TinyLife.Goals.LifeGoal
  id: LifeGoal
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.LifeGoal.#ctor(System.String,TinyLife.PersonalityType,TinyLife.Goals.GoalSetInfo[])
  - TinyLife.Goals.LifeGoal.AllowedAges
  - TinyLife.Goals.LifeGoal.CapableCarpenter
  - TinyLife.Goals.LifeGoal.Chef
  - TinyLife.Goals.LifeGoal.ComputerAddict
  - TinyLife.Goals.LifeGoal.CreativeChild
  - TinyLife.Goals.LifeGoal.FriendOfEveryone
  - TinyLife.Goals.LifeGoal.Goals
  - TinyLife.Goals.LifeGoal.GymRat
  - TinyLife.Goals.LifeGoal.HouseholdHero
  - TinyLife.Goals.LifeGoal.Hyphenate
  - TinyLife.Goals.LifeGoal.IsCompleted(TinyLife.Objects.Person)
  - TinyLife.Goals.LifeGoal.Millionaire
  - TinyLife.Goals.LifeGoal.Name
  - TinyLife.Goals.LifeGoal.OnAdvanced
  - TinyLife.Goals.LifeGoal.OnCompleted
  - TinyLife.Goals.LifeGoal.PerfectPainter
  - TinyLife.Goals.LifeGoal.Register(TinyLife.Goals.LifeGoal)
  - TinyLife.Goals.LifeGoal.RewardPersonality
  - TinyLife.Goals.LifeGoal.SmartKid
  - TinyLife.Goals.LifeGoal.Stages
  - TinyLife.Goals.LifeGoal.Writer
  langs:
  - csharp
  - vb
  name: LifeGoal
  nameWithType: LifeGoal
  fullName: TinyLife.Goals.LifeGoal
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A life goal is a set of <xref href="TinyLife.Goals.GoalSet" data-throw-if-not-resolved="false"></xref> instances that, when completed, result in a special <xref href="TinyLife.PersonalityType" data-throw-if-not-resolved="false"></xref> to be unlocked.

    When a life goal is applied to a person, the <xref href="TinyLife.Goals.LifeGoal.Instance" data-throw-if-not-resolved="false"></xref> class is used.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(MigratingStaticJsonConverter<LifeGoal>), new object[] { typeof(LifeGoal), "PrivateGoals", false })]

      public class LifeGoal
    content.vb: >-
      <JsonConverter(GetType(MigratingStaticJsonConverter(Of LifeGoal)), New Object() { GetType(LifeGoal), "PrivateGoals", False })>

      Public Class LifeGoal
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.LifeGoal.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Goals.LifeGoal.Goals
  commentId: F:TinyLife.Goals.LifeGoal.Goals
  id: Goals
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: Goals
  nameWithType: LifeGoal.Goals
  fullName: TinyLife.Goals.LifeGoal.Goals
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: A registry for all registered life goals in the game and mods
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, LifeGoal> Goals
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Goals.LifeGoal}
    content.vb: Public Shared ReadOnly Goals As ReadOnlyDictionary(Of String, LifeGoal)
- uid: TinyLife.Goals.LifeGoal.Chef
  commentId: F:TinyLife.Goals.LifeGoal.Chef
  id: Chef
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: Chef
  nameWithType: LifeGoal.Chef
  fullName: TinyLife.Goals.LifeGoal.Chef
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal Chef
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly Chef As LifeGoal
- uid: TinyLife.Goals.LifeGoal.SmartKid
  commentId: F:TinyLife.Goals.LifeGoal.SmartKid
  id: SmartKid
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: SmartKid
  nameWithType: LifeGoal.SmartKid
  fullName: TinyLife.Goals.LifeGoal.SmartKid
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal SmartKid
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly SmartKid As LifeGoal
- uid: TinyLife.Goals.LifeGoal.HouseholdHero
  commentId: F:TinyLife.Goals.LifeGoal.HouseholdHero
  id: HouseholdHero
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: HouseholdHero
  nameWithType: LifeGoal.HouseholdHero
  fullName: TinyLife.Goals.LifeGoal.HouseholdHero
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal HouseholdHero
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly HouseholdHero As LifeGoal
- uid: TinyLife.Goals.LifeGoal.ComputerAddict
  commentId: F:TinyLife.Goals.LifeGoal.ComputerAddict
  id: ComputerAddict
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: ComputerAddict
  nameWithType: LifeGoal.ComputerAddict
  fullName: TinyLife.Goals.LifeGoal.ComputerAddict
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal ComputerAddict
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly ComputerAddict As LifeGoal
- uid: TinyLife.Goals.LifeGoal.FriendOfEveryone
  commentId: F:TinyLife.Goals.LifeGoal.FriendOfEveryone
  id: FriendOfEveryone
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: FriendOfEveryone
  nameWithType: LifeGoal.FriendOfEveryone
  fullName: TinyLife.Goals.LifeGoal.FriendOfEveryone
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal FriendOfEveryone
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly FriendOfEveryone As LifeGoal
- uid: TinyLife.Goals.LifeGoal.Millionaire
  commentId: F:TinyLife.Goals.LifeGoal.Millionaire
  id: Millionaire
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: Millionaire
  nameWithType: LifeGoal.Millionaire
  fullName: TinyLife.Goals.LifeGoal.Millionaire
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal Millionaire
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly Millionaire As LifeGoal
- uid: TinyLife.Goals.LifeGoal.PerfectPainter
  commentId: F:TinyLife.Goals.LifeGoal.PerfectPainter
  id: PerfectPainter
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: PerfectPainter
  nameWithType: LifeGoal.PerfectPainter
  fullName: TinyLife.Goals.LifeGoal.PerfectPainter
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal PerfectPainter
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly PerfectPainter As LifeGoal
- uid: TinyLife.Goals.LifeGoal.CreativeChild
  commentId: F:TinyLife.Goals.LifeGoal.CreativeChild
  id: CreativeChild
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: CreativeChild
  nameWithType: LifeGoal.CreativeChild
  fullName: TinyLife.Goals.LifeGoal.CreativeChild
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal CreativeChild
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly CreativeChild As LifeGoal
- uid: TinyLife.Goals.LifeGoal.CapableCarpenter
  commentId: F:TinyLife.Goals.LifeGoal.CapableCarpenter
  id: CapableCarpenter
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: CapableCarpenter
  nameWithType: LifeGoal.CapableCarpenter
  fullName: TinyLife.Goals.LifeGoal.CapableCarpenter
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal CapableCarpenter
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly CapableCarpenter As LifeGoal
- uid: TinyLife.Goals.LifeGoal.GymRat
  commentId: F:TinyLife.Goals.LifeGoal.GymRat
  id: GymRat
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: GymRat
  nameWithType: LifeGoal.GymRat
  fullName: TinyLife.Goals.LifeGoal.GymRat
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal GymRat
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly GymRat As LifeGoal
- uid: TinyLife.Goals.LifeGoal.Writer
  commentId: F:TinyLife.Goals.LifeGoal.Writer
  id: Writer
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: Writer
  nameWithType: LifeGoal.Writer
  fullName: TinyLife.Goals.LifeGoal.Writer
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal Writer
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly Writer As LifeGoal
- uid: TinyLife.Goals.LifeGoal.Hyphenate
  commentId: F:TinyLife.Goals.LifeGoal.Hyphenate
  id: Hyphenate
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: Hyphenate
  nameWithType: LifeGoal.Hyphenate
  fullName: TinyLife.Goals.LifeGoal.Hyphenate
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  syntax:
    content: public static readonly LifeGoal Hyphenate
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: Public Shared ReadOnly Hyphenate As LifeGoal
- uid: TinyLife.Goals.LifeGoal.OnAdvanced
  commentId: E:TinyLife.Goals.LifeGoal.OnAdvanced
  id: OnAdvanced
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: OnAdvanced
  nameWithType: LifeGoal.OnAdvanced
  fullName: TinyLife.Goals.LifeGoal.OnAdvanced
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: An event that is invoked when a life goal <xref href="TinyLife.Goals.LifeGoal.Instance" data-throw-if-not-resolved="false"></xref> is advanced in <xref href="TinyLife.Goals.LifeGoal.Instance.Advance" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static event Action<LifeGoal.Instance> OnAdvanced
    return:
      type: System.Action{TinyLife.Goals.LifeGoal.Instance}
    content.vb: Public Shared Event OnAdvanced As Action(Of LifeGoal.Instance)
- uid: TinyLife.Goals.LifeGoal.OnCompleted
  commentId: E:TinyLife.Goals.LifeGoal.OnCompleted
  id: OnCompleted
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: OnCompleted
  nameWithType: LifeGoal.OnCompleted
  fullName: TinyLife.Goals.LifeGoal.OnCompleted
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: An event that is invoked when a life goal <xref href="TinyLife.Goals.LifeGoal.Instance" data-throw-if-not-resolved="false"></xref> is completed in <xref href="TinyLife.Goals.LifeGoal.Instance.Advance" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static event Action<LifeGoal.Instance> OnCompleted
    return:
      type: System.Action{TinyLife.Goals.LifeGoal.Instance}
    content.vb: Public Shared Event OnCompleted As Action(Of LifeGoal.Instance)
- uid: TinyLife.Goals.LifeGoal.Name
  commentId: F:TinyLife.Goals.LifeGoal.Name
  id: Name
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: LifeGoal.Name
  fullName: TinyLife.Goals.LifeGoal.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The name of this life goal, which is used to register it to the <xref href="TinyLife.Goals.LifeGoal.Goals" data-throw-if-not-resolved="false"></xref> registry
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Goals.LifeGoal.Stages
  commentId: F:TinyLife.Goals.LifeGoal.Stages
  id: Stages
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: Stages
  nameWithType: LifeGoal.Stages
  fullName: TinyLife.Goals.LifeGoal.Stages
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The stages of this life goal
  example: []
  syntax:
    content: public readonly GoalSetInfo[] Stages
    return:
      type: TinyLife.Goals.GoalSetInfo[]
    content.vb: Public ReadOnly Stages As GoalSetInfo()
- uid: TinyLife.Goals.LifeGoal.RewardPersonality
  commentId: F:TinyLife.Goals.LifeGoal.RewardPersonality
  id: RewardPersonality
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: RewardPersonality
  nameWithType: LifeGoal.RewardPersonality
  fullName: TinyLife.Goals.LifeGoal.RewardPersonality
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The reward personality that is unlocked when this life goal is completed.

    The personality's <xref href="TinyLife.PersonalityType.TypeCategory" data-throw-if-not-resolved="false"></xref> should be <xref href="TinyLife.PersonalityType.TypeCategory.Hidden" data-throw-if-not-resolved="false"></xref> so that this is the only way to unlock the personality.
  example: []
  syntax:
    content: public readonly PersonalityType RewardPersonality
    return:
      type: TinyLife.PersonalityType
    content.vb: Public ReadOnly RewardPersonality As PersonalityType
- uid: TinyLife.Goals.LifeGoal.AllowedAges
  commentId: P:TinyLife.Goals.LifeGoal.AllowedAges
  id: AllowedAges
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: AllowedAges
  nameWithType: LifeGoal.AllowedAges
  fullName: TinyLife.Goals.LifeGoal.AllowedAges
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A set of allowed age group flags for people that can start this life goal.

    This value defaults to <xref href="TinyLife.Objects.AgeGroup.ChildOrOlder" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AgeGroup AllowedAges { get; init; }
    parameters: []
    return:
      type: TinyLife.Objects.AgeGroup
    content.vb: Public Property AllowedAges As AgeGroup
  overload: TinyLife.Goals.LifeGoal.AllowedAges*
- uid: TinyLife.Goals.LifeGoal.#ctor(System.String,TinyLife.PersonalityType,TinyLife.Goals.GoalSetInfo[])
  commentId: M:TinyLife.Goals.LifeGoal.#ctor(System.String,TinyLife.PersonalityType,TinyLife.Goals.GoalSetInfo[])
  id: '#ctor(System.String,TinyLife.PersonalityType,TinyLife.Goals.GoalSetInfo[])'
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: LifeGoal(string, PersonalityType, params GoalSetInfo[])
  nameWithType: LifeGoal.LifeGoal(string, PersonalityType, params GoalSetInfo[])
  fullName: TinyLife.Goals.LifeGoal.LifeGoal(string, TinyLife.PersonalityType, params TinyLife.Goals.GoalSetInfo[])
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Creates a new life goal with the given settings
  example: []
  syntax:
    content: public LifeGoal(string name, PersonalityType rewardPersonality, params GoalSetInfo[] stages)
    parameters:
    - id: name
      type: System.String
      description: The life goal's name
    - id: rewardPersonality
      type: TinyLife.PersonalityType
      description: The reward personality that is unlocked when the life goal is completed
    - id: stages
      type: TinyLife.Goals.GoalSetInfo[]
      description: A set of goal set informations that represent the stages of this life goal
    content.vb: Public Sub New(name As String, rewardPersonality As PersonalityType, ParamArray stages As GoalSetInfo())
  overload: TinyLife.Goals.LifeGoal.#ctor*
  nameWithType.vb: LifeGoal.New(String, PersonalityType, ParamArray GoalSetInfo())
  fullName.vb: TinyLife.Goals.LifeGoal.New(String, TinyLife.PersonalityType, ParamArray TinyLife.Goals.GoalSetInfo())
  name.vb: New(String, PersonalityType, ParamArray GoalSetInfo())
- uid: TinyLife.Goals.LifeGoal.IsCompleted(TinyLife.Objects.Person)
  commentId: M:TinyLife.Goals.LifeGoal.IsCompleted(TinyLife.Objects.Person)
  id: IsCompleted(TinyLife.Objects.Person)
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: IsCompleted(Person)
  nameWithType: LifeGoal.IsCompleted(Person)
  fullName: TinyLife.Goals.LifeGoal.IsCompleted(TinyLife.Objects.Person)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Queries whether the given <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> has the <xref href="TinyLife.Goals.LifeGoal.RewardPersonality" data-throw-if-not-resolved="false"></xref>, which indicates that they have completed this life goal
  example: []
  syntax:
    content: public bool IsCompleted(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person
    return:
      type: System.Boolean
      description: Whether the person has completed this life goal
    content.vb: Public Function IsCompleted(person As Person) As Boolean
  overload: TinyLife.Goals.LifeGoal.IsCompleted*
- uid: TinyLife.Goals.LifeGoal.Register(TinyLife.Goals.LifeGoal)
  commentId: M:TinyLife.Goals.LifeGoal.Register(TinyLife.Goals.LifeGoal)
  id: Register(TinyLife.Goals.LifeGoal)
  parent: TinyLife.Goals.LifeGoal
  langs:
  - csharp
  - vb
  name: Register(LifeGoal)
  nameWithType: LifeGoal.Register(LifeGoal)
  fullName: TinyLife.Goals.LifeGoal.Register(TinyLife.Goals.LifeGoal)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Registers the given life goal to the <xref href="TinyLife.Goals.LifeGoal.Goals" data-throw-if-not-resolved="false"></xref> registry and returns it
  example: []
  syntax:
    content: public static LifeGoal Register(LifeGoal goal)
    parameters:
    - id: goal
      type: TinyLife.Goals.LifeGoal
      description: The life goal to register
    return:
      type: TinyLife.Goals.LifeGoal
      description: The passed life goal, for chaining
    content.vb: Public Shared Function Register(goal As LifeGoal) As LifeGoal
  overload: TinyLife.Goals.LifeGoal.Register*
references:
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalSet.html
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
- uid: TinyLife.PersonalityType
  commentId: T:TinyLife.PersonalityType
  parent: TinyLife
  href: TinyLife.PersonalityType.html
  name: PersonalityType
  nameWithType: PersonalityType
  fullName: TinyLife.PersonalityType
- uid: TinyLife.Goals.LifeGoal.Instance
  commentId: T:TinyLife.Goals.LifeGoal.Instance
  parent: TinyLife.Goals
  href: TinyLife.Goals.LifeGoal.html
  name: LifeGoal.Instance
  nameWithType: LifeGoal.Instance
  fullName: TinyLife.Goals.LifeGoal.Instance
  spec.csharp:
  - uid: TinyLife.Goals.LifeGoal
    name: LifeGoal
    href: TinyLife.Goals.LifeGoal.html
  - name: .
  - uid: TinyLife.Goals.LifeGoal.Instance
    name: Instance
    href: TinyLife.Goals.LifeGoal.Instance.html
  spec.vb:
  - uid: TinyLife.Goals.LifeGoal
    name: LifeGoal
    href: TinyLife.Goals.LifeGoal.html
  - name: .
  - uid: TinyLife.Goals.LifeGoal.Instance
    name: Instance
    href: TinyLife.Goals.LifeGoal.Instance.html
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Goals.LifeGoal.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<LifeGoal>(LifeGoal)
  nameWithType: Extensions.JsonCopy<LifeGoal>(LifeGoal)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.LifeGoal>(TinyLife.Goals.LifeGoal)
  nameWithType.vb: Extensions.JsonCopy(Of LifeGoal)(LifeGoal)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.LifeGoal)(TinyLife.Goals.LifeGoal)
  name.vb: JsonCopy(Of LifeGoal)(LifeGoal)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.LifeGoal)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Goals.LifeGoal
    name: LifeGoal
    href: TinyLife.Goals.LifeGoal.html
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.LifeGoal
    name: LifeGoal
    href: TinyLife.Goals.LifeGoal.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.LifeGoal)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.LifeGoal
    name: LifeGoal
    href: TinyLife.Goals.LifeGoal.html
  - name: )
  - name: (
  - uid: TinyLife.Goals.LifeGoal
    name: LifeGoal
    href: TinyLife.Goals.LifeGoal.html
  - name: )
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Goals.LifeGoal}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Goals.LifeGoal}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, LifeGoal>
  nameWithType: ReadOnlyDictionary<string, LifeGoal>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Goals.LifeGoal>
  nameWithType.vb: ReadOnlyDictionary(Of String, LifeGoal)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Goals.LifeGoal)
  name.vb: ReadOnlyDictionary(Of String, LifeGoal)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.LifeGoal
    name: LifeGoal
    href: TinyLife.Goals.LifeGoal.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.LifeGoal
    name: LifeGoal
    href: TinyLife.Goals.LifeGoal.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.Goals.LifeGoal
  commentId: T:TinyLife.Goals.LifeGoal
  parent: TinyLife.Goals
  href: TinyLife.Goals.LifeGoal.html
  name: LifeGoal
  nameWithType: LifeGoal
  fullName: TinyLife.Goals.LifeGoal
- uid: TinyLife.Goals.LifeGoal.Instance.Advance
  commentId: M:TinyLife.Goals.LifeGoal.Instance.Advance
  href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Advance
  name: Advance()
  nameWithType: LifeGoal.Instance.Advance()
  fullName: TinyLife.Goals.LifeGoal.Instance.Advance()
  spec.csharp:
  - uid: TinyLife.Goals.LifeGoal.Instance.Advance
    name: Advance
    href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Advance
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.LifeGoal.Instance.Advance
    name: Advance
    href: TinyLife.Goals.LifeGoal.Instance.html#TinyLife_Goals_LifeGoal_Instance_Advance
  - name: (
  - name: )
- uid: System.Action{TinyLife.Goals.LifeGoal.Instance}
  commentId: T:System.Action{TinyLife.Goals.LifeGoal.Instance}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<LifeGoal.Instance>
  nameWithType: Action<LifeGoal.Instance>
  fullName: System.Action<TinyLife.Goals.LifeGoal.Instance>
  nameWithType.vb: Action(Of LifeGoal.Instance)
  fullName.vb: System.Action(Of TinyLife.Goals.LifeGoal.Instance)
  name.vb: Action(Of LifeGoal.Instance)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: TinyLife.Goals.LifeGoal
    name: LifeGoal
    href: TinyLife.Goals.LifeGoal.html
  - name: .
  - uid: TinyLife.Goals.LifeGoal.Instance
    name: Instance
    href: TinyLife.Goals.LifeGoal.Instance.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.LifeGoal
    name: LifeGoal
    href: TinyLife.Goals.LifeGoal.html
  - name: .
  - uid: TinyLife.Goals.LifeGoal.Instance
    name: Instance
    href: TinyLife.Goals.LifeGoal.Instance.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Goals.LifeGoal.Goals
  commentId: F:TinyLife.Goals.LifeGoal.Goals
  href: TinyLife.Goals.LifeGoal.html#TinyLife_Goals_LifeGoal_Goals
  name: Goals
  nameWithType: LifeGoal.Goals
  fullName: TinyLife.Goals.LifeGoal.Goals
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Goals.GoalSetInfo[]
  isExternal: true
  href: TinyLife.Goals.GoalSetInfo.html
  name: GoalSetInfo[]
  nameWithType: GoalSetInfo[]
  fullName: TinyLife.Goals.GoalSetInfo[]
  nameWithType.vb: GoalSetInfo()
  fullName.vb: TinyLife.Goals.GoalSetInfo()
  name.vb: GoalSetInfo()
  spec.csharp:
  - uid: TinyLife.Goals.GoalSetInfo
    name: GoalSetInfo
    href: TinyLife.Goals.GoalSetInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Goals.GoalSetInfo
    name: GoalSetInfo
    href: TinyLife.Goals.GoalSetInfo.html
  - name: (
  - name: )
- uid: TinyLife.PersonalityType.TypeCategory
  commentId: T:TinyLife.PersonalityType.TypeCategory
  parent: TinyLife
  href: TinyLife.PersonalityType.html
  name: PersonalityType.TypeCategory
  nameWithType: PersonalityType.TypeCategory
  fullName: TinyLife.PersonalityType.TypeCategory
  spec.csharp:
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: .
  - uid: TinyLife.PersonalityType.TypeCategory
    name: TypeCategory
    href: TinyLife.PersonalityType.TypeCategory.html
  spec.vb:
  - uid: TinyLife.PersonalityType
    name: PersonalityType
    href: TinyLife.PersonalityType.html
  - name: .
  - uid: TinyLife.PersonalityType.TypeCategory
    name: TypeCategory
    href: TinyLife.PersonalityType.TypeCategory.html
- uid: TinyLife.PersonalityType.TypeCategory.Hidden
  commentId: F:TinyLife.PersonalityType.TypeCategory.Hidden
  href: TinyLife.PersonalityType.TypeCategory.html#TinyLife_PersonalityType_TypeCategory_Hidden
  name: Hidden
  nameWithType: PersonalityType.TypeCategory.Hidden
  fullName: TinyLife.PersonalityType.TypeCategory.Hidden
- uid: TinyLife.Objects.AgeGroup.ChildOrOlder
  commentId: F:TinyLife.Objects.AgeGroup.ChildOrOlder
  href: TinyLife.Objects.AgeGroup.html#TinyLife_Objects_AgeGroup_ChildOrOlder
  name: ChildOrOlder
  nameWithType: AgeGroup.ChildOrOlder
  fullName: TinyLife.Objects.AgeGroup.ChildOrOlder
- uid: TinyLife.Goals.LifeGoal.AllowedAges*
  commentId: Overload:TinyLife.Goals.LifeGoal.AllowedAges
  href: TinyLife.Goals.LifeGoal.html#TinyLife_Goals_LifeGoal_AllowedAges
  name: AllowedAges
  nameWithType: LifeGoal.AllowedAges
  fullName: TinyLife.Goals.LifeGoal.AllowedAges
- uid: TinyLife.Objects.AgeGroup
  commentId: T:TinyLife.Objects.AgeGroup
  parent: TinyLife.Objects
  href: TinyLife.Objects.AgeGroup.html
  name: AgeGroup
  nameWithType: AgeGroup
  fullName: TinyLife.Objects.AgeGroup
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Goals.LifeGoal.#ctor*
  commentId: Overload:TinyLife.Goals.LifeGoal.#ctor
  href: TinyLife.Goals.LifeGoal.html#TinyLife_Goals_LifeGoal__ctor_System_String_TinyLife_PersonalityType_TinyLife_Goals_GoalSetInfo___
  name: LifeGoal
  nameWithType: LifeGoal.LifeGoal
  fullName: TinyLife.Goals.LifeGoal.LifeGoal
  nameWithType.vb: LifeGoal.New
  fullName.vb: TinyLife.Goals.LifeGoal.New
  name.vb: New
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Goals.LifeGoal.RewardPersonality
  commentId: F:TinyLife.Goals.LifeGoal.RewardPersonality
  href: TinyLife.Goals.LifeGoal.html#TinyLife_Goals_LifeGoal_RewardPersonality
  name: RewardPersonality
  nameWithType: LifeGoal.RewardPersonality
  fullName: TinyLife.Goals.LifeGoal.RewardPersonality
- uid: TinyLife.Goals.LifeGoal.IsCompleted*
  commentId: Overload:TinyLife.Goals.LifeGoal.IsCompleted
  href: TinyLife.Goals.LifeGoal.html#TinyLife_Goals_LifeGoal_IsCompleted_TinyLife_Objects_Person_
  name: IsCompleted
  nameWithType: LifeGoal.IsCompleted
  fullName: TinyLife.Goals.LifeGoal.IsCompleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Goals.LifeGoal.Register*
  commentId: Overload:TinyLife.Goals.LifeGoal.Register
  href: TinyLife.Goals.LifeGoal.html#TinyLife_Goals_LifeGoal_Register_TinyLife_Goals_LifeGoal_
  name: Register
  nameWithType: LifeGoal.Register
  fullName: TinyLife.Goals.LifeGoal.Register
