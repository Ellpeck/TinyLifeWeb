### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Household.RandomPerson
  commentId: T:TinyLife.World.Household.RandomPerson
  id: Household.RandomPerson
  parent: TinyLife.World
  children:
  - TinyLife.World.Household.RandomPerson.#ctor(System.Type,TinyLife.Objects.AgeGroup)
  - TinyLife.World.Household.RandomPerson.Age
  - TinyLife.World.Household.RandomPerson.ToString
  - TinyLife.World.Household.RandomPerson.Type
  - TinyLife.World.Household.RandomPerson.op_Implicit(TinyLife.Objects.AgeGroup)~TinyLife.World.Household.RandomPerson
  langs:
  - csharp
  - vb
  name: Household.RandomPerson
  nameWithType: Household.RandomPerson
  fullName: TinyLife.World.Household.RandomPerson
  type: Struct
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: A helper struct used for <xref href="TinyLife.World.Household.RandomConstellations" data-throw-if-not-resolved="false"></xref> to refer to a person of a given <xref href="TinyLife.World.Household.RandomPerson.Type" data-throw-if-not-resolved="false"></xref> with the given <xref href="TinyLife.Objects.AgeGroup" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public readonly record struct Household.RandomPerson : IEquatable<Household.RandomPerson>'
    content.vb: Public Structure Household.RandomPerson Implements IEquatable(Of Household.RandomPerson)
  implements:
  - System.IEquatable{TinyLife.World.Household.RandomPerson}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - TinyLife.World.Household.RandomPerson.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.World.Household.RandomPerson.#ctor(System.Type,TinyLife.Objects.AgeGroup)
  commentId: M:TinyLife.World.Household.RandomPerson.#ctor(System.Type,TinyLife.Objects.AgeGroup)
  id: '#ctor(System.Type,TinyLife.Objects.AgeGroup)'
  parent: TinyLife.World.Household.RandomPerson
  langs:
  - csharp
  - vb
  name: RandomPerson(Type, AgeGroup)
  nameWithType: Household.RandomPerson.RandomPerson(Type, AgeGroup)
  fullName: TinyLife.World.Household.RandomPerson.RandomPerson(System.Type, TinyLife.Objects.AgeGroup)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: A helper struct used for <xref href="TinyLife.World.Household.RandomConstellations" data-throw-if-not-resolved="false"></xref> to refer to a person of a given <xref href="TinyLife.World.Household.RandomPerson.Type" data-throw-if-not-resolved="false"></xref> with the given <xref href="TinyLife.Objects.AgeGroup" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RandomPerson(Type Type, AgeGroup Age)
    parameters:
    - id: Type
      type: System.Type
      description: The person type, as registered into <xref href="TinyLife.Objects.PersonLike.Types" data-throw-if-not-resolved="false"></xref>.
    - id: Age
      type: TinyLife.Objects.AgeGroup
      description: The age group.
    content.vb: Public Sub New(Type As Type, Age As AgeGroup)
  overload: TinyLife.World.Household.RandomPerson.#ctor*
  nameWithType.vb: Household.RandomPerson.New(Type, AgeGroup)
  fullName.vb: TinyLife.World.Household.RandomPerson.New(System.Type, TinyLife.Objects.AgeGroup)
  name.vb: New(Type, AgeGroup)
- uid: TinyLife.World.Household.RandomPerson.Type
  commentId: P:TinyLife.World.Household.RandomPerson.Type
  id: Type
  parent: TinyLife.World.Household.RandomPerson
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Household.RandomPerson.Type
  fullName: TinyLife.World.Household.RandomPerson.Type
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The person type, as registered into <xref href="TinyLife.Objects.PersonLike.Types" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Type Type { get; init; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property Type As Type
  overload: TinyLife.World.Household.RandomPerson.Type*
- uid: TinyLife.World.Household.RandomPerson.Age
  commentId: P:TinyLife.World.Household.RandomPerson.Age
  id: Age
  parent: TinyLife.World.Household.RandomPerson
  langs:
  - csharp
  - vb
  name: Age
  nameWithType: Household.RandomPerson.Age
  fullName: TinyLife.World.Household.RandomPerson.Age
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The age group.
  example: []
  syntax:
    content: public AgeGroup Age { get; init; }
    parameters: []
    return:
      type: TinyLife.Objects.AgeGroup
    content.vb: Public Property Age As AgeGroup
  overload: TinyLife.World.Household.RandomPerson.Age*
- uid: TinyLife.World.Household.RandomPerson.op_Implicit(TinyLife.Objects.AgeGroup)~TinyLife.World.Household.RandomPerson
  commentId: M:TinyLife.World.Household.RandomPerson.op_Implicit(TinyLife.Objects.AgeGroup)~TinyLife.World.Household.RandomPerson
  id: op_Implicit(TinyLife.Objects.AgeGroup)~TinyLife.World.Household.RandomPerson
  parent: TinyLife.World.Household.RandomPerson
  langs:
  - csharp
  - vb
  name: implicit operator RandomPerson(AgeGroup)
  nameWithType: Household.RandomPerson.implicit operator Household.RandomPerson(AgeGroup)
  fullName: TinyLife.World.Household.RandomPerson.implicit operator TinyLife.World.Household.RandomPerson(TinyLife.Objects.AgeGroup)
  type: Operator
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Converts the given <code class="paramref">age</code> into a <xref href="TinyLife.World.Household.RandomPerson" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator Household.RandomPerson(AgeGroup age)
    parameters:
    - id: age
      type: TinyLife.Objects.AgeGroup
      description: The age group.
    return:
      type: TinyLife.World.Household.RandomPerson
      description: A <xref href="TinyLife.World.Household.RandomPerson" data-throw-if-not-resolved="false"></xref> with the given age and the type <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Widening Operator CType(age As AgeGroup) As Household.RandomPerson
  overload: TinyLife.World.Household.RandomPerson.op_Implicit*
  nameWithType.vb: Household.RandomPerson.CType(AgeGroup)
  fullName.vb: TinyLife.World.Household.RandomPerson.CType(TinyLife.Objects.AgeGroup)
  name.vb: CType(AgeGroup)
- uid: TinyLife.World.Household.RandomPerson.ToString
  commentId: M:TinyLife.World.Household.RandomPerson.ToString
  id: ToString
  parent: TinyLife.World.Household.RandomPerson
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Household.RandomPerson.ToString()
  fullName: TinyLife.World.Household.RandomPerson.ToString()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: TinyLife.World.Household.RandomPerson.ToString*
references:
- uid: TinyLife.World.Household.RandomConstellations
  commentId: F:TinyLife.World.Household.RandomConstellations
  href: TinyLife.World.Household.html#TinyLife_World_Household_RandomConstellations
  name: RandomConstellations
  nameWithType: Household.RandomConstellations
  fullName: TinyLife.World.Household.RandomConstellations
- uid: TinyLife.World.Household.RandomPerson.Type
  commentId: P:TinyLife.World.Household.RandomPerson.Type
  href: TinyLife.World.Household.RandomPerson.html#TinyLife_World_Household_RandomPerson_Type
  name: Type
  nameWithType: Household.RandomPerson.Type
  fullName: TinyLife.World.Household.RandomPerson.Type
- uid: TinyLife.Objects.AgeGroup
  commentId: T:TinyLife.Objects.AgeGroup
  parent: TinyLife.Objects
  href: TinyLife.Objects.AgeGroup.html
  name: AgeGroup
  nameWithType: AgeGroup
  fullName: TinyLife.Objects.AgeGroup
- uid: TinyLife.Objects.PersonLike.Types
  commentId: F:TinyLife.Objects.PersonLike.Types
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Types
  name: Types
  nameWithType: PersonLike.Types
  fullName: TinyLife.Objects.PersonLike.Types
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.IEquatable{TinyLife.World.Household.RandomPerson}
  commentId: T:System.IEquatable{TinyLife.World.Household.RandomPerson}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Household.RandomPerson>
  nameWithType: IEquatable<Household.RandomPerson>
  fullName: System.IEquatable<TinyLife.World.Household.RandomPerson>
  nameWithType.vb: IEquatable(Of Household.RandomPerson)
  fullName.vb: System.IEquatable(Of TinyLife.World.Household.RandomPerson)
  name.vb: IEquatable(Of Household.RandomPerson)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomPerson
    name: RandomPerson
    href: TinyLife.World.Household.RandomPerson.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomPerson
    name: RandomPerson
    href: TinyLife.World.Household.RandomPerson.html
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.World.Household.RandomPerson.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<RandomPerson>(RandomPerson)
  nameWithType: Extensions.JsonCopy<Household.RandomPerson>(Household.RandomPerson)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Household.RandomPerson>(TinyLife.World.Household.RandomPerson)
  nameWithType.vb: Extensions.JsonCopy(Of Household.RandomPerson)(Household.RandomPerson)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Household.RandomPerson)(TinyLife.World.Household.RandomPerson)
  name.vb: JsonCopy(Of RandomPerson)(RandomPerson)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Household.RandomPerson)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.World.Household.RandomPerson
    name: RandomPerson
    href: TinyLife.World.Household.RandomPerson.html
  - name: '>'
  - name: (
  - uid: TinyLife.World.Household.RandomPerson
    name: RandomPerson
    href: TinyLife.World.Household.RandomPerson.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Household.RandomPerson)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Household.RandomPerson
    name: RandomPerson
    href: TinyLife.World.Household.RandomPerson.html
  - name: )
  - name: (
  - uid: TinyLife.World.Household.RandomPerson
    name: RandomPerson
    href: TinyLife.World.Household.RandomPerson.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.World.Household.RandomPerson.#ctor*
  commentId: Overload:TinyLife.World.Household.RandomPerson.#ctor
  href: TinyLife.World.Household.RandomPerson.html#TinyLife_World_Household_RandomPerson__ctor_System_Type_TinyLife_Objects_AgeGroup_
  name: RandomPerson
  nameWithType: Household.RandomPerson.RandomPerson
  fullName: TinyLife.World.Household.RandomPerson.RandomPerson
  nameWithType.vb: Household.RandomPerson.New
  fullName.vb: TinyLife.World.Household.RandomPerson.New
  name.vb: New
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TinyLife.World.Household.RandomPerson.Type*
  commentId: Overload:TinyLife.World.Household.RandomPerson.Type
  href: TinyLife.World.Household.RandomPerson.html#TinyLife_World_Household_RandomPerson_Type
  name: Type
  nameWithType: Household.RandomPerson.Type
  fullName: TinyLife.World.Household.RandomPerson.Type
- uid: TinyLife.World.Household.RandomPerson.Age*
  commentId: Overload:TinyLife.World.Household.RandomPerson.Age
  href: TinyLife.World.Household.RandomPerson.html#TinyLife_World_Household_RandomPerson_Age
  name: Age
  nameWithType: Household.RandomPerson.Age
  fullName: TinyLife.World.Household.RandomPerson.Age
- uid: TinyLife.World.Household.RandomPerson
  commentId: T:TinyLife.World.Household.RandomPerson
  parent: TinyLife.World
  href: TinyLife.World.Household.html
  name: Household.RandomPerson
  nameWithType: Household.RandomPerson
  fullName: TinyLife.World.Household.RandomPerson
  spec.csharp:
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomPerson
    name: RandomPerson
    href: TinyLife.World.Household.RandomPerson.html
  spec.vb:
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomPerson
    name: RandomPerson
    href: TinyLife.World.Household.RandomPerson.html
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.World.Household.RandomPerson.op_Implicit*
  commentId: Overload:TinyLife.World.Household.RandomPerson.op_Implicit
  name: implicit operator
  nameWithType: Household.RandomPerson.implicit operator
  fullName: TinyLife.World.Household.RandomPerson.implicit operator
  nameWithType.vb: Household.RandomPerson.CType
  fullName.vb: TinyLife.World.Household.RandomPerson.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: TinyLife.World.Household.RandomPerson.ToString*
  commentId: Overload:TinyLife.World.Household.RandomPerson.ToString
  href: TinyLife.World.Household.RandomPerson.html#TinyLife_World_Household_RandomPerson_ToString
  name: ToString
  nameWithType: Household.RandomPerson.ToString
  fullName: TinyLife.World.Household.RandomPerson.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
