### YamlMime:ManagedReference
items:
- uid: TinyLife.World.StairsType
  commentId: T:TinyLife.World.StairsType
  id: StairsType
  parent: TinyLife.World
  children:
  - TinyLife.World.StairsType.#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorScheme[])
  - TinyLife.World.StairsType.#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorSettings)
  - TinyLife.World.StairsType.#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,TinyLife.Utilities.ColorScheme[])
  - TinyLife.World.StairsType.AllowsWallpaper
  - TinyLife.World.StairsType.BasicWood
  - TinyLife.World.StairsType.Colors
  - TinyLife.World.StairsType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2,MLEM.Maths.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  - TinyLife.World.StairsType.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.GameTime,TinyLife.World.Map,System.Int32[],TinyLife.World.Wallpaper,System.Single)
  - TinyLife.World.StairsType.Icon
  - TinyLife.World.StairsType.Industrial
  - TinyLife.World.StairsType.Name
  - TinyLife.World.StairsType.Price
  - TinyLife.World.StairsType.Register(TinyLife.World.StairsType)
  - TinyLife.World.StairsType.TextureRegion
  - TinyLife.World.StairsType.Textures
  - TinyLife.World.StairsType.Types
  langs:
  - csharp
  - vb
  name: StairsType
  nameWithType: StairsType
  fullName: TinyLife.World.StairsType
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    A stairs type is a set of settings for a <xref href="TinyLife.World.Stairs" data-throw-if-not-resolved="false"></xref> object that is unchanged between individual stairs objects.

    Stairs types can be registered using <xref href="TinyLife.World.StairsType.Register(TinyLife.World.StairsType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(MigratingStaticJsonConverter<StairsType>), new object[] { typeof(StairsType), "PrivateTypes" })]

      public class StairsType
    content.vb: >-
      <JsonConverter(GetType(MigratingStaticJsonConverter(Of StairsType)), New Object() { GetType(StairsType), "PrivateTypes" })>

      Public Class StairsType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.StairsType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.World.StairsType.Types
  commentId: F:TinyLife.World.StairsType.Types
  id: Types
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: StairsType.Types
  fullName: TinyLife.World.StairsType.Types
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The set of all currently registered stairs types.
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, StairsType> Types
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.StairsType}
    content.vb: Public Shared ReadOnly Types As ReadOnlyDictionary(Of String, StairsType)
- uid: TinyLife.World.StairsType.BasicWood
  commentId: F:TinyLife.World.StairsType.BasicWood
  id: BasicWood
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: BasicWood
  nameWithType: StairsType.BasicWood
  fullName: TinyLife.World.StairsType.BasicWood
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly StairsType BasicWood
    return:
      type: TinyLife.World.StairsType
    content.vb: Public Shared ReadOnly BasicWood As StairsType
- uid: TinyLife.World.StairsType.Industrial
  commentId: F:TinyLife.World.StairsType.Industrial
  id: Industrial
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: Industrial
  nameWithType: StairsType.Industrial
  fullName: TinyLife.World.StairsType.Industrial
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly StairsType Industrial
    return:
      type: TinyLife.World.StairsType
    content.vb: Public Shared ReadOnly Industrial As StairsType
- uid: TinyLife.World.StairsType.Name
  commentId: F:TinyLife.World.StairsType.Name
  id: Name
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: StairsType.Name
  fullName: TinyLife.World.StairsType.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The name of this stairs type.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.World.StairsType.Price
  commentId: F:TinyLife.World.StairsType.Price
  id: Price
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: StairsType.Price
  fullName: TinyLife.World.StairsType.Price
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The price of this stairs type.
  example: []
  syntax:
    content: public readonly int Price
    return:
      type: System.Int32
    content.vb: Public ReadOnly Price As Integer
- uid: TinyLife.World.StairsType.Textures
  commentId: F:TinyLife.World.StairsType.Textures
  id: Textures
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: Textures
  nameWithType: StairsType.Textures
  fullName: TinyLife.World.StairsType.Textures
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The texture atlas that this stairs type's <xref href="TinyLife.World.StairsType.TextureRegion" data-throw-if-not-resolved="false"></xref> is on.
  example: []
  syntax:
    content: public readonly Dictionary<Point, TextureRegion> Textures
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public ReadOnly Textures As Dictionary(Of Point, TextureRegion)
- uid: TinyLife.World.StairsType.TextureRegion
  commentId: F:TinyLife.World.StairsType.TextureRegion
  id: TextureRegion
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: TextureRegion
  nameWithType: StairsType.TextureRegion
  fullName: TinyLife.World.StairsType.TextureRegion
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    The texture region of this stairs type on the <xref href="TinyLife.World.StairsType.Textures" data-throw-if-not-resolved="false"></xref> texture atlas.

    Additional regions are automtaically gathered to the right of this texture region.
  example: []
  syntax:
    content: public readonly Point TextureRegion
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public ReadOnly TextureRegion As Point
- uid: TinyLife.World.StairsType.Colors
  commentId: F:TinyLife.World.StairsType.Colors
  id: Colors
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: Colors
  nameWithType: StairsType.Colors
  fullName: TinyLife.World.StairsType.Colors
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The color settings these stairs use.
  example: []
  syntax:
    content: public readonly ColorSettings Colors
    return:
      type: TinyLife.Utilities.ColorSettings
    content.vb: Public ReadOnly Colors As ColorSettings
- uid: TinyLife.World.StairsType.Icon
  commentId: F:TinyLife.World.StairsType.Icon
  id: Icon
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: StairsType.Icon
  fullName: TinyLife.World.StairsType.Icon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The icon for this stairs type.
  example: []
  syntax:
    content: public readonly TextureRegion Icon
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Icon As TextureRegion
- uid: TinyLife.World.StairsType.AllowsWallpaper
  commentId: F:TinyLife.World.StairsType.AllowsWallpaper
  id: AllowsWallpaper
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: AllowsWallpaper
  nameWithType: StairsType.AllowsWallpaper
  fullName: TinyLife.World.StairsType.AllowsWallpaper
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Whether this stairs type supports applying wallpaper.
  example: []
  syntax:
    content: public readonly bool AllowsWallpaper
    return:
      type: System.Boolean
    content.vb: Public ReadOnly AllowsWallpaper As Boolean
- uid: TinyLife.World.StairsType.#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorScheme[])
  commentId: M:TinyLife.World.StairsType.#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorScheme[])
  id: '#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorScheme[])'
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: StairsType(string, int, Dictionary<Point, TextureRegion>, Point, bool, TextureRegion, params ColorScheme[])
  nameWithType: StairsType.StairsType(string, int, Dictionary<Point, TextureRegion>, Point, bool, TextureRegion, params ColorScheme[])
  fullName: TinyLife.World.StairsType.StairsType(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, bool, MLEM.Textures.TextureRegion, params TinyLife.Utilities.ColorScheme[])
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Creates a new stairs type with the given settings.
  example: []
  syntax:
    content: public StairsType(string name, int price, Dictionary<Point, TextureRegion> textures, Point textureRegion, bool allowsWallpaper, TextureRegion icon, params ColorScheme[] colorSchemes)
    parameters:
    - id: name
      type: System.String
      description: The name of this stairs type.
    - id: price
      type: System.Int32
      description: The price of this stairs type.
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The texture atlas that this stairs type's &lt;see cref="TextureRegion"/&gt; is on.
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
      description: The texture region of this stairs type on the &lt;see cref="Textures"/&gt; texture atlas.
    - id: allowsWallpaper
      type: System.Boolean
      description: Whether this stairs type supports applying wallpaper.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The icon for this stairs type.
    - id: colorSchemes
      type: TinyLife.Utilities.ColorScheme[]
      description: The color schemes for each layer of this stairs type.
    content.vb: Public Sub New(name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), textureRegion As Point, allowsWallpaper As Boolean, icon As TextureRegion, ParamArray colorSchemes As ColorScheme())
  overload: TinyLife.World.StairsType.#ctor*
  nameWithType.vb: StairsType.New(String, Integer, Dictionary(Of Point, TextureRegion), Point, Boolean, TextureRegion, ParamArray ColorScheme())
  fullName.vb: TinyLife.World.StairsType.New(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, Boolean, MLEM.Textures.TextureRegion, ParamArray TinyLife.Utilities.ColorScheme())
  name.vb: New(String, Integer, Dictionary(Of Point, TextureRegion), Point, Boolean, TextureRegion, ParamArray ColorScheme())
- uid: TinyLife.World.StairsType.#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorSettings)
  commentId: M:TinyLife.World.StairsType.#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorSettings)
  id: '#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorSettings)'
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: StairsType(string, int, Dictionary<Point, TextureRegion>, Point, bool, TextureRegion, ColorSettings)
  nameWithType: StairsType.StairsType(string, int, Dictionary<Point, TextureRegion>, Point, bool, TextureRegion, ColorSettings)
  fullName: TinyLife.World.StairsType.StairsType(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, bool, MLEM.Textures.TextureRegion, TinyLife.Utilities.ColorSettings)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Creates a new stairs type with the given settings.
  example: []
  syntax:
    content: public StairsType(string name, int price, Dictionary<Point, TextureRegion> textures, Point textureRegion, bool allowsWallpaper, TextureRegion icon, ColorSettings colors)
    parameters:
    - id: name
      type: System.String
      description: The name of this stairs type.
    - id: price
      type: System.Int32
      description: The price of this stairs type.
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The texture atlas that this stairs type's &lt;see cref="TextureRegion"/&gt; is on.
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
      description: The texture region of this stairs type on the &lt;see cref="Textures"/&gt; texture atlas.
    - id: allowsWallpaper
      type: System.Boolean
      description: Whether this stairs type supports applying wallpaper.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The icon for this stairs type.
    - id: colors
      type: TinyLife.Utilities.ColorSettings
      description: The color schemes for each layer of this stairs type.
    content.vb: Public Sub New(name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), textureRegion As Point, allowsWallpaper As Boolean, icon As TextureRegion, colors As ColorSettings)
  overload: TinyLife.World.StairsType.#ctor*
  nameWithType.vb: StairsType.New(String, Integer, Dictionary(Of Point, TextureRegion), Point, Boolean, TextureRegion, ColorSettings)
  fullName.vb: TinyLife.World.StairsType.New(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, Boolean, MLEM.Textures.TextureRegion, TinyLife.Utilities.ColorSettings)
  name.vb: New(String, Integer, Dictionary(Of Point, TextureRegion), Point, Boolean, TextureRegion, ColorSettings)
- uid: TinyLife.World.StairsType.#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,TinyLife.Utilities.ColorScheme[])
  commentId: M:TinyLife.World.StairsType.#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,TinyLife.Utilities.ColorScheme[])
  id: '#ctor(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Boolean,TinyLife.Utilities.ColorScheme[])'
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: StairsType(string, int, Dictionary<Point, TextureRegion>, Point, bool, params ColorScheme[])
  nameWithType: StairsType.StairsType(string, int, Dictionary<Point, TextureRegion>, Point, bool, params ColorScheme[])
  fullName: TinyLife.World.StairsType.StairsType(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, bool, params TinyLife.Utilities.ColorScheme[])
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Creates a new stairs type with the given settings.
  example: []
  syntax:
    content: public StairsType(string name, int price, Dictionary<Point, TextureRegion> textures, Point textureRegion, bool hasWallpaper, params ColorScheme[] colorSchemes)
    parameters:
    - id: name
      type: System.String
      description: The name of this stairs type.
    - id: price
      type: System.Int32
      description: The price of this stairs type.
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The texture atlas that this stairs type's &lt;see cref="TextureRegion"/&gt; is on.
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
      description: The texture region of this stairs type on the &lt;see cref="Textures"/&gt; texture atlas.
    - id: hasWallpaper
      type: System.Boolean
      description: Whether this stairs type supports applying wallpaper.
    - id: colorSchemes
      type: TinyLife.Utilities.ColorScheme[]
      description: The color schemes for each layer of this stairs type.
    content.vb: Public Sub New(name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), textureRegion As Point, hasWallpaper As Boolean, ParamArray colorSchemes As ColorScheme())
  overload: TinyLife.World.StairsType.#ctor*
  nameWithType.vb: StairsType.New(String, Integer, Dictionary(Of Point, TextureRegion), Point, Boolean, ParamArray ColorScheme())
  fullName.vb: TinyLife.World.StairsType.New(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, Boolean, ParamArray TinyLife.Utilities.ColorScheme())
  name.vb: New(String, Integer, Dictionary(Of Point, TextureRegion), Point, Boolean, ParamArray ColorScheme())
- uid: TinyLife.World.StairsType.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.GameTime,TinyLife.World.Map,System.Int32[],TinyLife.World.Wallpaper,System.Single)
  commentId: M:TinyLife.World.StairsType.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.GameTime,TinyLife.World.Map,System.Int32[],TinyLife.World.Wallpaper,System.Single)
  id: DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.GameTime,TinyLife.World.Map,System.Int32[],TinyLife.World.Wallpaper,System.Single)
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: DrawUi(Element, SpriteBatch, GameTime, Map, int[], Wallpaper, float)
  nameWithType: StairsType.DrawUi(Element, SpriteBatch, GameTime, Map, int[], Wallpaper, float)
  fullName: TinyLife.World.StairsType.DrawUi(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.GameTime, TinyLife.World.Map, int[], TinyLife.World.Wallpaper, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Draws this stairs type in a UI context, meaning the stairs are not currently in the world.
  example: []
  syntax:
    content: public virtual void DrawUi(Element e, SpriteBatch batch, GameTime time, Map map, int[] colorIndices, Wallpaper wallpaper, float drawScale = 0.3)
    parameters:
    - id: e
      type: MLEM.Ui.Elements.Element
      description: The element to base scaling and positioning on.
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing.
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game time.
    - id: map
      type: TinyLife.World.Map
      description: The map to use as a basis for column-based drawing.
    - id: colorIndices
      type: System.Int32[]
      description: The color indices to use for each <xref href="TinyLife.Utilities.ColorSettings" data-throw-if-not-resolved="false"></xref> entry.
    - id: wallpaper
      type: TinyLife.World.Wallpaper
      description: The wallpaper to draw the stairs with.
    - id: drawScale
      type: System.Single
      description: The scale to draw with.
    content.vb: Public Overridable Sub DrawUi(e As Element, batch As SpriteBatch, time As GameTime, map As Map, colorIndices As Integer(), wallpaper As Wallpaper, drawScale As Single = 0.3)
  overload: TinyLife.World.StairsType.DrawUi*
  nameWithType.vb: StairsType.DrawUi(Element, SpriteBatch, GameTime, Map, Integer(), Wallpaper, Single)
  fullName.vb: TinyLife.World.StairsType.DrawUi(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.GameTime, TinyLife.World.Map, Integer(), TinyLife.World.Wallpaper, Single)
  name.vb: DrawUi(Element, SpriteBatch, GameTime, Map, Integer(), Wallpaper, Single)
- uid: TinyLife.World.StairsType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2,MLEM.Maths.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.World.StairsType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2,MLEM.Maths.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2,MLEM.Maths.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch, Map, Point, int, Vector2, Direction2, Direction2, int[], Wallpaper, float, float, Color?)
  nameWithType: StairsType.Draw(GameTime, SpriteBatch, Map, Point, int, Vector2, Direction2, Direction2, int[], Wallpaper, float, float, Color?)
  fullName: TinyLife.World.StairsType.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, TinyLife.World.Map, Microsoft.Xna.Framework.Point, int, Microsoft.Xna.Framework.Vector2, MLEM.Maths.Direction2, MLEM.Maths.Direction2, int[], TinyLife.World.Wallpaper, float, float, Microsoft.Xna.Framework.Color?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Draws this stairs type in the world.
  example: []
  syntax:
    content: public virtual void Draw(GameTime time, SpriteBatch batch, Map map, Point position, int floor, Vector2 drawPos, Direction2 rotation, Direction2 visualRotation, int[] colorIndices, Wallpaper wallpaper, float scale = 1, float depthOffset = 0, Color? overrideColor = null)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game time.
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing.
    - id: map
      type: TinyLife.World.Map
      description: The map to use as a basis for column-based drawing.
    - id: position
      type: Microsoft.Xna.Framework.Point
      description: The world position to use for drawing.
    - id: floor
      type: System.Int32
      description: The floor to use for drawing.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The draw position, or screen position, to use for drawing.
    - id: rotation
      type: MLEM.Maths.Direction2
      description: The rotation, in world space.
    - id: visualRotation
      type: MLEM.Maths.Direction2
      description: The visual rotation, optionally with camera rotation applied.
    - id: colorIndices
      type: System.Int32[]
      description: The color indices to use for each <xref href="TinyLife.World.StairsType.Colors" data-throw-if-not-resolved="false"></xref> entry.
    - id: wallpaper
      type: TinyLife.World.Wallpaper
      description: The wallpaper to draw on this stairs type, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to draw none.
    - id: scale
      type: System.Single
      description: The scale to draw with.
    - id: depthOffset
      type: System.Single
      description: An optional added depth offset.
    - id: overrideColor
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: A color that should optionally be used for drawing instead of the passed <code class="paramref">colorIndices</code>.
    content.vb: Public Overridable Sub Draw(time As GameTime, batch As SpriteBatch, map As Map, position As Point, floor As Integer, drawPos As Vector2, rotation As Direction2, visualRotation As Direction2, colorIndices As Integer(), wallpaper As Wallpaper, scale As Single = 1, depthOffset As Single = 0, overrideColor As Color? = Nothing)
  overload: TinyLife.World.StairsType.Draw*
  nameWithType.vb: StairsType.Draw(GameTime, SpriteBatch, Map, Point, Integer, Vector2, Direction2, Direction2, Integer(), Wallpaper, Single, Single, Color?)
  fullName.vb: TinyLife.World.StairsType.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Integer, Microsoft.Xna.Framework.Vector2, MLEM.Maths.Direction2, MLEM.Maths.Direction2, Integer(), TinyLife.World.Wallpaper, Single, Single, Microsoft.Xna.Framework.Color?)
  name.vb: Draw(GameTime, SpriteBatch, Map, Point, Integer, Vector2, Direction2, Direction2, Integer(), Wallpaper, Single, Single, Color?)
- uid: TinyLife.World.StairsType.Register(TinyLife.World.StairsType)
  commentId: M:TinyLife.World.StairsType.Register(TinyLife.World.StairsType)
  id: Register(TinyLife.World.StairsType)
  parent: TinyLife.World.StairsType
  langs:
  - csharp
  - vb
  name: Register(StairsType)
  nameWithType: StairsType.Register(StairsType)
  fullName: TinyLife.World.StairsType.Register(TinyLife.World.StairsType)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Registers the given stairs type into the <xref href="TinyLife.World.StairsType.Types" data-throw-if-not-resolved="false"></xref> registry.
  example: []
  syntax:
    content: public static StairsType Register(StairsType type)
    parameters:
    - id: type
      type: TinyLife.World.StairsType
      description: The stairs type to register.
    return:
      type: TinyLife.World.StairsType
      description: The registered stairs type, for chaining.
    content.vb: Public Shared Function Register(type As StairsType) As StairsType
  overload: TinyLife.World.StairsType.Register*
references:
- uid: TinyLife.World.Stairs
  commentId: T:TinyLife.World.Stairs
  parent: TinyLife.World
  href: TinyLife.World.Stairs.html
  name: Stairs
  nameWithType: Stairs
  fullName: TinyLife.World.Stairs
- uid: TinyLife.World.StairsType.Register(TinyLife.World.StairsType)
  commentId: M:TinyLife.World.StairsType.Register(TinyLife.World.StairsType)
  href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_Register_TinyLife_World_StairsType_
  name: Register(StairsType)
  nameWithType: StairsType.Register(StairsType)
  fullName: TinyLife.World.StairsType.Register(TinyLife.World.StairsType)
  spec.csharp:
  - uid: TinyLife.World.StairsType.Register(TinyLife.World.StairsType)
    name: Register
    href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_Register_TinyLife_World_StairsType_
  - name: (
  - uid: TinyLife.World.StairsType
    name: StairsType
    href: TinyLife.World.StairsType.html
  - name: )
  spec.vb:
  - uid: TinyLife.World.StairsType.Register(TinyLife.World.StairsType)
    name: Register
    href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_Register_TinyLife_World_StairsType_
  - name: (
  - uid: TinyLife.World.StairsType
    name: StairsType
    href: TinyLife.World.StairsType.html
  - name: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.StairsType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<StairsType>(StairsType)
  nameWithType: Extensions.JsonCopy<StairsType>(StairsType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.StairsType>(TinyLife.World.StairsType)
  nameWithType.vb: Extensions.JsonCopy(Of StairsType)(StairsType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.StairsType)(TinyLife.World.StairsType)
  name.vb: JsonCopy(Of StairsType)(StairsType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.StairsType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.World.StairsType
    name: StairsType
    href: TinyLife.World.StairsType.html
  - name: '>'
  - name: (
  - uid: TinyLife.World.StairsType
    name: StairsType
    href: TinyLife.World.StairsType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.StairsType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.StairsType
    name: StairsType
    href: TinyLife.World.StairsType.html
  - name: )
  - name: (
  - uid: TinyLife.World.StairsType
    name: StairsType
    href: TinyLife.World.StairsType.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.StairsType}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.StairsType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, StairsType>
  nameWithType: ReadOnlyDictionary<string, StairsType>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.World.StairsType>
  nameWithType.vb: ReadOnlyDictionary(Of String, StairsType)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.World.StairsType)
  name.vb: ReadOnlyDictionary(Of String, StairsType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.World.StairsType
    name: StairsType
    href: TinyLife.World.StairsType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.World.StairsType
    name: StairsType
    href: TinyLife.World.StairsType.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.World.StairsType
  commentId: T:TinyLife.World.StairsType
  parent: TinyLife.World
  href: TinyLife.World.StairsType.html
  name: StairsType
  nameWithType: StairsType
  fullName: TinyLife.World.StairsType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.World.StairsType.TextureRegion
  commentId: F:TinyLife.World.StairsType.TextureRegion
  href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_TextureRegion
  name: TextureRegion
  nameWithType: StairsType.TextureRegion
  fullName: TinyLife.World.StairsType.TextureRegion
- uid: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  commentId: T:System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Point, TextureRegion>
  nameWithType: Dictionary<Point, TextureRegion>
  fullName: System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>
  nameWithType.vb: Dictionary(Of Point, TextureRegion)
  fullName.vb: System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)
  name.vb: Dictionary(Of Point, TextureRegion)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.World.StairsType.Textures
  commentId: F:TinyLife.World.StairsType.Textures
  href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_Textures
  name: Textures
  nameWithType: StairsType.Textures
  fullName: TinyLife.World.StairsType.Textures
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Utilities.ColorSettings
  commentId: T:TinyLife.Utilities.ColorSettings
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.ColorSettings.html
  name: ColorSettings
  nameWithType: ColorSettings
  fullName: TinyLife.Utilities.ColorSettings
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.World.StairsType.#ctor*
  commentId: Overload:TinyLife.World.StairsType.#ctor
  href: TinyLife.World.StairsType.html#TinyLife_World_StairsType__ctor_System_String_System_Int32_System_Collections_Generic_Dictionary_Microsoft_Xna_Framework_Point_MLEM_Textures_TextureRegion__Microsoft_Xna_Framework_Point_System_Boolean_MLEM_Textures_TextureRegion_TinyLife_Utilities_ColorScheme___
  name: StairsType
  nameWithType: StairsType.StairsType
  fullName: TinyLife.World.StairsType.StairsType
  nameWithType.vb: StairsType.New
  fullName.vb: TinyLife.World.StairsType.New
  name.vb: New
- uid: TinyLife.Utilities.ColorScheme[]
  isExternal: true
  href: TinyLife.Utilities.ColorScheme.html
  name: ColorScheme[]
  nameWithType: ColorScheme[]
  fullName: TinyLife.Utilities.ColorScheme[]
  nameWithType.vb: ColorScheme()
  fullName.vb: TinyLife.Utilities.ColorScheme()
  name.vb: ColorScheme()
  spec.csharp:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    href: TinyLife.Utilities.ColorScheme.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    href: TinyLife.Utilities.ColorScheme.html
  - name: (
  - name: )
- uid: TinyLife.World.StairsType.DrawUi*
  commentId: Overload:TinyLife.World.StairsType.DrawUi
  href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_DrawUi_MLEM_Ui_Elements_Element_Microsoft_Xna_Framework_Graphics_SpriteBatch_Microsoft_Xna_Framework_GameTime_TinyLife_World_Map_System_Int32___TinyLife_World_Wallpaper_System_Single_
  name: DrawUi
  nameWithType: StairsType.DrawUi
  fullName: TinyLife.World.StairsType.DrawUi
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: TinyLife.World.Wallpaper
  commentId: T:TinyLife.World.Wallpaper
  parent: TinyLife.World
  href: TinyLife.World.Wallpaper.html
  name: Wallpaper
  nameWithType: Wallpaper
  fullName: TinyLife.World.Wallpaper
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: TinyLife.World.StairsType.Colors
  commentId: F:TinyLife.World.StairsType.Colors
  href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_Colors
  name: Colors
  nameWithType: StairsType.Colors
  fullName: TinyLife.World.StairsType.Colors
- uid: TinyLife.World.StairsType.Draw*
  commentId: Overload:TinyLife.World.StairsType.Draw
  href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_TinyLife_World_Map_Microsoft_Xna_Framework_Point_System_Int32_Microsoft_Xna_Framework_Vector2_MLEM_Maths_Direction2_MLEM_Maths_Direction2_System_Int32___TinyLife_World_Wallpaper_System_Single_System_Single_System_Nullable_Microsoft_Xna_Framework_Color__
  name: Draw
  nameWithType: StairsType.Draw
  fullName: TinyLife.World.StairsType.Draw
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: MLEM.Maths.Direction2
  commentId: T:MLEM.Maths.Direction2
  parent: MLEM.Maths
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Maths.Direction2
- uid: System.Nullable{Microsoft.Xna.Framework.Color}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: Microsoft.Xna.Framework.Color?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  isExternal: true
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.World.StairsType.Types
  commentId: F:TinyLife.World.StairsType.Types
  href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_Types
  name: Types
  nameWithType: StairsType.Types
  fullName: TinyLife.World.StairsType.Types
- uid: TinyLife.World.StairsType.Register*
  commentId: Overload:TinyLife.World.StairsType.Register
  href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_Register_TinyLife_World_StairsType_
  name: Register
  nameWithType: StairsType.Register
  fullName: TinyLife.World.StairsType.Register
