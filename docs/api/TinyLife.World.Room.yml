### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Room
  commentId: T:TinyLife.World.Room
  id: Room
  parent: TinyLife.World
  children:
  - TinyLife.World.Room.Center
  - TinyLife.World.Room.CoveredSections
  - TinyLife.World.Room.Floor
  - TinyLife.World.Room.FullyRoofed
  - TinyLife.World.Room.GetConnectedRooms(TinyLife.Objects.PersonLike)
  - TinyLife.World.Room.GetDecorativeRating
  - TinyLife.World.Room.GetLights
  - TinyLife.World.Room.GetObjects``1
  - TinyLife.World.Room.GetStairs
  - TinyLife.World.Room.GetWalls(System.Boolean)
  - TinyLife.World.Room.IsSameRoom(System.Collections.Generic.ICollection{Microsoft.Xna.Framework.Point},System.Int32)
  - TinyLife.World.Room.LightPourPercentage
  - TinyLife.World.Room.Map
  - TinyLife.World.Room.Tiles
  - TinyLife.World.Room.Validate
  langs:
  - csharp
  - vb
  name: Room
  nameWithType: Room
  fullName: TinyLife.World.Room
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: A room is an area on a <xref href="TinyLife.World.Room.Map" data-throw-if-not-resolved="false"></xref> that is surrounded by <xref href="TinyLife.World.Wall" data-throw-if-not-resolved="false"></xref> objects
  example: []
  syntax:
    content: public class Room
    content.vb: Public Class Room
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.Room.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.World.Room.Map
  commentId: F:TinyLife.World.Room.Map
  id: Map
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: Room.Map
  fullName: TinyLife.World.Room.Map
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The map that this room is on
  example: []
  syntax:
    content: public readonly Map Map
    return:
      type: TinyLife.World.Map
    content.vb: Public ReadOnly Map As Map
- uid: TinyLife.World.Room.Floor
  commentId: F:TinyLife.World.Room.Floor
  id: Floor
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: Floor
  nameWithType: Room.Floor
  fullName: TinyLife.World.Room.Floor
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The floor that this room is on.
  example: []
  syntax:
    content: public readonly int Floor
    return:
      type: System.Int32
    content.vb: Public ReadOnly Floor As Integer
- uid: TinyLife.World.Room.Center
  commentId: F:TinyLife.World.Room.Center
  id: Center
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: Room.Center
  fullName: TinyLife.World.Room.Center
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    The position that is considered to be the center of this room.

    This is the average of all of its covered <xref href="TinyLife.World.Room.Tiles" data-throw-if-not-resolved="false"></xref>, and the <xref href="TinyLife.World.MapSection" data-throw-if-not-resolved="false"></xref> that this room is on is determined by this value.
  example: []
  syntax:
    content: public readonly Point Center
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public ReadOnly Center As Point
- uid: TinyLife.World.Room.Tiles
  commentId: F:TinyLife.World.Room.Tiles
  id: Tiles
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: Tiles
  nameWithType: Room.Tiles
  fullName: TinyLife.World.Room.Tiles
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: A set of <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref> positions on the <xref href="TinyLife.World.Room.Map" data-throw-if-not-resolved="false"></xref> that are contained in this room
  example: []
  syntax:
    content: public readonly HashSet<Point> Tiles
    return:
      type: System.Collections.Generic.HashSet{Microsoft.Xna.Framework.Point}
    content.vb: Public ReadOnly Tiles As HashSet(Of Point)
- uid: TinyLife.World.Room.CoveredSections
  commentId: F:TinyLife.World.Room.CoveredSections
  id: CoveredSections
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: CoveredSections
  nameWithType: Room.CoveredSections
  fullName: TinyLife.World.Room.CoveredSections
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: A set of <xref href="TinyLife.World.MapSection" data-throw-if-not-resolved="false"></xref> instances that are covered by this room
  example: []
  syntax:
    content: public readonly HashSet<MapSection> CoveredSections
    return:
      type: System.Collections.Generic.HashSet{TinyLife.World.MapSection}
    content.vb: Public ReadOnly CoveredSections As HashSet(Of MapSection)
- uid: TinyLife.World.Room.FullyRoofed
  commentId: P:TinyLife.World.Room.FullyRoofed
  id: FullyRoofed
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: FullyRoofed
  nameWithType: Room.FullyRoofed
  fullName: TinyLife.World.Room.FullyRoofed
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    A property that stores whether this room is fully roofed, that is, whether all of its <xref href="TinyLife.World.Room.Tiles" data-throw-if-not-resolved="false"></xref> are covered by a <xref href="TinyLife.World.Roof" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.World.Tile" data-throw-if-not-resolved="false"></xref> or another room that is fully roofed.

    This property is evaluated automatically in <xref href="TinyLife.World.Room.Validate" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool FullyRoofed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FullyRoofed As Boolean
  overload: TinyLife.World.Room.FullyRoofed*
- uid: TinyLife.World.Room.LightPourPercentage
  commentId: P:TinyLife.World.Room.LightPourPercentage
  id: LightPourPercentage
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: LightPourPercentage
  nameWithType: Room.LightPourPercentage
  fullName: TinyLife.World.Room.LightPourPercentage
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    A property that determines the amount of light that should pour in from the outside, based on the area around this room's outside walls as well as the <xref href="TinyLife.World.OpeningType.LightPour" data-throw-if-not-resolved="false"></xref> values of the openings in them. If this value is 0, this room will not be rendered at all if the lot that it is on is hidden, and this room is <xref href="TinyLife.World.Room.FullyRoofed" data-throw-if-not-resolved="false"></xref>.

    This property is evaluated automatically in <xref href="TinyLife.World.Room.Validate" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float LightPourPercentage { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property LightPourPercentage As Single
  overload: TinyLife.World.Room.LightPourPercentage*
- uid: TinyLife.World.Room.IsSameRoom(System.Collections.Generic.ICollection{Microsoft.Xna.Framework.Point},System.Int32)
  commentId: M:TinyLife.World.Room.IsSameRoom(System.Collections.Generic.ICollection{Microsoft.Xna.Framework.Point},System.Int32)
  id: IsSameRoom(System.Collections.Generic.ICollection{Microsoft.Xna.Framework.Point},System.Int32)
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: IsSameRoom(ICollection<Point>, int)
  nameWithType: Room.IsSameRoom(ICollection<Point>, int)
  fullName: TinyLife.World.Room.IsSameRoom(System.Collections.Generic.ICollection<Microsoft.Xna.Framework.Point>, int)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Returns whether this room has the same covered <xref href="TinyLife.World.Room.Tiles" data-throw-if-not-resolved="false"></xref> as the given collection
  example: []
  syntax:
    content: public bool IsSameRoom(ICollection<Point> tiles, int floor)
    parameters:
    - id: tiles
      type: System.Collections.Generic.ICollection{Microsoft.Xna.Framework.Point}
      description: The tiles to query.
    - id: floor
      type: System.Int32
      description: The floor to query.
    return:
      type: System.Boolean
      description: true if the covered tiles are the same, false otherwise
    content.vb: Public Function IsSameRoom(tiles As ICollection(Of Point), floor As Integer) As Boolean
  overload: TinyLife.World.Room.IsSameRoom*
  nameWithType.vb: Room.IsSameRoom(ICollection(Of Point), Integer)
  fullName.vb: TinyLife.World.Room.IsSameRoom(System.Collections.Generic.ICollection(Of Microsoft.Xna.Framework.Point), Integer)
  name.vb: IsSameRoom(ICollection(Of Point), Integer)
- uid: TinyLife.World.Room.Validate
  commentId: M:TinyLife.World.Room.Validate
  id: Validate
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Room.Validate()
  fullName: TinyLife.World.Room.Validate()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: This method is called in <xref href="TinyLife.World.Map.ValidateRooms(Microsoft.Xna.Framework.Point%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> to ensure that this room is still valid
  example: []
  syntax:
    content: public bool Validate()
    return:
      type: System.Boolean
      description: false if the object is not valid, true otherwise
    content.vb: Public Function Validate() As Boolean
  overload: TinyLife.World.Room.Validate*
- uid: TinyLife.World.Room.GetWalls(System.Boolean)
  commentId: M:TinyLife.World.Room.GetWalls(System.Boolean)
  id: GetWalls(System.Boolean)
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: GetWalls(bool)
  nameWithType: Room.GetWalls(bool)
  fullName: TinyLife.World.Room.GetWalls(bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    Returns all of the <xref href="TinyLife.World.Wall" data-throw-if-not-resolved="false"></xref> instances that are border walls or internal walls of this room.

    An internal wall is a wall for which both sides are contained in the room, rather than just one.
  example: []
  syntax:
    content: public IEnumerable<(Wall Wall, int Side)> GetWalls(bool borderOnly)
    parameters:
    - id: borderOnly
      type: System.Boolean
      description: Whether to return border walls only, or include internal walls
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.World.Wall,System.Int32}}
      description: A set of walls and their included sides of this room
    content.vb: Public Function GetWalls(borderOnly As Boolean) As IEnumerable(Of (Wall As Wall, Side As Integer))
  overload: TinyLife.World.Room.GetWalls*
  nameWithType.vb: Room.GetWalls(Boolean)
  fullName.vb: TinyLife.World.Room.GetWalls(Boolean)
  name.vb: GetWalls(Boolean)
- uid: TinyLife.World.Room.GetStairs
  commentId: M:TinyLife.World.Room.GetStairs
  id: GetStairs
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: GetStairs()
  nameWithType: Room.GetStairs()
  fullName: TinyLife.World.Room.GetStairs()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Returns all of the stairs that are present in this room. This includes only stairs whose bottom positions are part of the room.
  example: []
  syntax:
    content: public IEnumerable<Stairs> GetStairs()
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.World.Stairs}
      description: The stairs in this room.
    content.vb: Public Function GetStairs() As IEnumerable(Of Stairs)
  overload: TinyLife.World.Room.GetStairs*
- uid: TinyLife.World.Room.GetObjects``1
  commentId: M:TinyLife.World.Room.GetObjects``1
  id: GetObjects``1
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: GetObjects<T>()
  nameWithType: Room.GetObjects<T>()
  fullName: TinyLife.World.Room.GetObjects<T>()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Returns all of the <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref> instances that are contained in this room
  example: []
  syntax:
    content: public IEnumerable<T> GetObjects<T>()
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: All of the objects in this room
    content.vb: Public Function GetObjects(Of T)() As IEnumerable(Of T)
  overload: TinyLife.World.Room.GetObjects*
  nameWithType.vb: Room.GetObjects(Of T)()
  fullName.vb: TinyLife.World.Room.GetObjects(Of T)()
  name.vb: GetObjects(Of T)()
- uid: TinyLife.World.Room.GetLights
  commentId: M:TinyLife.World.Room.GetLights
  id: GetLights
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: GetLights()
  nameWithType: Room.GetLights()
  fullName: TinyLife.World.Room.GetLights()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Returns all of the <xref href="TinyLife.Objects.Light" data-throw-if-not-resolved="false"></xref> instances that are contained in this room
  example: []
  syntax:
    content: public IEnumerable<Light> GetLights()
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.Light}
      description: All of the lights in this room
    content.vb: Public Function GetLights() As IEnumerable(Of Light)
  overload: TinyLife.World.Room.GetLights*
- uid: TinyLife.World.Room.GetDecorativeRating
  commentId: M:TinyLife.World.Room.GetDecorativeRating
  id: GetDecorativeRating
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: GetDecorativeRating()
  nameWithType: Room.GetDecorativeRating()
  fullName: TinyLife.World.Room.GetDecorativeRating()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    Returns the combined decorative rating of all of the <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> in this room.

    This method uses the <xref href="TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating" data-throw-if-not-resolved="false"></xref> function.
  example: []
  syntax:
    content: public int GetDecorativeRating()
    return:
      type: System.Int32
      description: The combined decorative rating
    content.vb: Public Function GetDecorativeRating() As Integer
  overload: TinyLife.World.Room.GetDecorativeRating*
- uid: TinyLife.World.Room.GetConnectedRooms(TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.World.Room.GetConnectedRooms(TinyLife.Objects.PersonLike)
  id: GetConnectedRooms(TinyLife.Objects.PersonLike)
  parent: TinyLife.World.Room
  langs:
  - csharp
  - vb
  name: GetConnectedRooms(PersonLike)
  nameWithType: Room.GetConnectedRooms(PersonLike)
  fullName: TinyLife.World.Room.GetConnectedRooms(TinyLife.Objects.PersonLike)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    Returns a set of <xref href="TinyLife.World.Room" data-throw-if-not-resolved="false"></xref> objects which are connected to this room.

    A connected room is a room that is directly adjacent, and that a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> can walk into through an <xref href="TinyLife.World.Opening" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IEnumerable<Room> GetConnectedRooms(PersonLike person)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.World.Room}
      description: A set of connected rooms
    content.vb: Public Function GetConnectedRooms(person As PersonLike) As IEnumerable(Of Room)
  overload: TinyLife.World.Room.GetConnectedRooms*
references:
- uid: TinyLife.World.Room.Map
  commentId: F:TinyLife.World.Room.Map
  href: TinyLife.World.Room.html#TinyLife_World_Room_Map
  name: Map
  nameWithType: Room.Map
  fullName: TinyLife.World.Room.Map
- uid: TinyLife.World.Wall
  commentId: T:TinyLife.World.Wall
  parent: TinyLife.World
  href: TinyLife.World.Wall.html
  name: Wall
  nameWithType: Wall
  fullName: TinyLife.World.Wall
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.Room.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Room>(Room)
  nameWithType: Extensions.JsonCopy<Room>(Room)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Room>(TinyLife.World.Room)
  nameWithType.vb: Extensions.JsonCopy(Of Room)(Room)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Room)(TinyLife.World.Room)
  name.vb: JsonCopy(Of Room)(Room)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Room)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.World.Room
    name: Room
    href: TinyLife.World.Room.html
  - name: '>'
  - name: (
  - uid: TinyLife.World.Room
    name: Room
    href: TinyLife.World.Room.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Room)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Room
    name: Room
    href: TinyLife.World.Room.html
  - name: )
  - name: (
  - uid: TinyLife.World.Room
    name: Room
    href: TinyLife.World.Room.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.World.Room.Tiles
  commentId: F:TinyLife.World.Room.Tiles
  href: TinyLife.World.Room.html#TinyLife_World_Room_Tiles
  name: Tiles
  nameWithType: Room.Tiles
  fullName: TinyLife.World.Room.Tiles
- uid: TinyLife.World.MapSection
  commentId: T:TinyLife.World.MapSection
  parent: TinyLife.World
  href: TinyLife.World.MapSection.html
  name: MapSection
  nameWithType: MapSection
  fullName: TinyLife.World.MapSection
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: System.Collections.Generic.HashSet{Microsoft.Xna.Framework.Point}
  commentId: T:System.Collections.Generic.HashSet{Microsoft.Xna.Framework.Point}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<Point>
  nameWithType: HashSet<Point>
  fullName: System.Collections.Generic.HashSet<Microsoft.Xna.Framework.Point>
  nameWithType.vb: HashSet(Of Point)
  fullName.vb: System.Collections.Generic.HashSet(Of Microsoft.Xna.Framework.Point)
  name.vb: HashSet(Of Point)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.HashSet{TinyLife.World.MapSection}
  commentId: T:System.Collections.Generic.HashSet{TinyLife.World.MapSection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<MapSection>
  nameWithType: HashSet<MapSection>
  fullName: System.Collections.Generic.HashSet<TinyLife.World.MapSection>
  nameWithType.vb: HashSet(Of MapSection)
  fullName.vb: System.Collections.Generic.HashSet(Of TinyLife.World.MapSection)
  name.vb: HashSet(Of MapSection)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: TinyLife.World.MapSection
    name: MapSection
    href: TinyLife.World.MapSection.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.MapSection
    name: MapSection
    href: TinyLife.World.MapSection.html
  - name: )
- uid: TinyLife.World.Roof
  commentId: T:TinyLife.World.Roof
  parent: TinyLife.World
  href: TinyLife.World.Roof.html
  name: Roof
  nameWithType: Roof
  fullName: TinyLife.World.Roof
- uid: TinyLife.World.Tile
  commentId: T:TinyLife.World.Tile
  parent: TinyLife.World
  href: TinyLife.World.Tile.html
  name: Tile
  nameWithType: Tile
  fullName: TinyLife.World.Tile
- uid: TinyLife.World.Room.Validate
  commentId: M:TinyLife.World.Room.Validate
  href: TinyLife.World.Room.html#TinyLife_World_Room_Validate
  name: Validate()
  nameWithType: Room.Validate()
  fullName: TinyLife.World.Room.Validate()
  spec.csharp:
  - uid: TinyLife.World.Room.Validate
    name: Validate
    href: TinyLife.World.Room.html#TinyLife_World_Room_Validate
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.Room.Validate
    name: Validate
    href: TinyLife.World.Room.html#TinyLife_World_Room_Validate
  - name: (
  - name: )
- uid: TinyLife.World.Room.FullyRoofed*
  commentId: Overload:TinyLife.World.Room.FullyRoofed
  href: TinyLife.World.Room.html#TinyLife_World_Room_FullyRoofed
  name: FullyRoofed
  nameWithType: Room.FullyRoofed
  fullName: TinyLife.World.Room.FullyRoofed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.World.OpeningType.LightPour
  commentId: F:TinyLife.World.OpeningType.LightPour
  href: TinyLife.World.OpeningType.html#TinyLife_World_OpeningType_LightPour
  name: LightPour
  nameWithType: OpeningType.LightPour
  fullName: TinyLife.World.OpeningType.LightPour
- uid: TinyLife.World.Room.FullyRoofed
  commentId: P:TinyLife.World.Room.FullyRoofed
  href: TinyLife.World.Room.html#TinyLife_World_Room_FullyRoofed
  name: FullyRoofed
  nameWithType: Room.FullyRoofed
  fullName: TinyLife.World.Room.FullyRoofed
- uid: TinyLife.World.Room.LightPourPercentage*
  commentId: Overload:TinyLife.World.Room.LightPourPercentage
  href: TinyLife.World.Room.html#TinyLife_World_Room_LightPourPercentage
  name: LightPourPercentage
  nameWithType: Room.LightPourPercentage
  fullName: TinyLife.World.Room.LightPourPercentage
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.World.Room.IsSameRoom*
  commentId: Overload:TinyLife.World.Room.IsSameRoom
  href: TinyLife.World.Room.html#TinyLife_World_Room_IsSameRoom_System_Collections_Generic_ICollection_Microsoft_Xna_Framework_Point__System_Int32_
  name: IsSameRoom
  nameWithType: Room.IsSameRoom
  fullName: TinyLife.World.Room.IsSameRoom
- uid: System.Collections.Generic.ICollection{Microsoft.Xna.Framework.Point}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.Xna.Framework.Point}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<Point>
  nameWithType: ICollection<Point>
  fullName: System.Collections.Generic.ICollection<Microsoft.Xna.Framework.Point>
  nameWithType.vb: ICollection(Of Point)
  fullName.vb: System.Collections.Generic.ICollection(Of Microsoft.Xna.Framework.Point)
  name.vb: ICollection(Of Point)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.World.Map.ValidateRooms(Microsoft.Xna.Framework.Point,System.Int32)
  commentId: M:TinyLife.World.Map.ValidateRooms(Microsoft.Xna.Framework.Point,System.Int32)
  isExternal: true
  href: TinyLife.World.Map.html#TinyLife_World_Map_ValidateRooms_Microsoft_Xna_Framework_Point_System_Int32_
  name: ValidateRooms(Point, int)
  nameWithType: Map.ValidateRooms(Point, int)
  fullName: TinyLife.World.Map.ValidateRooms(Microsoft.Xna.Framework.Point, int)
  nameWithType.vb: Map.ValidateRooms(Point, Integer)
  fullName.vb: TinyLife.World.Map.ValidateRooms(Microsoft.Xna.Framework.Point, Integer)
  name.vb: ValidateRooms(Point, Integer)
  spec.csharp:
  - uid: TinyLife.World.Map.ValidateRooms(Microsoft.Xna.Framework.Point,System.Int32)
    name: ValidateRooms
    href: TinyLife.World.Map.html#TinyLife_World_Map_ValidateRooms_Microsoft_Xna_Framework_Point_System_Int32_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.ValidateRooms(Microsoft.Xna.Framework.Point,System.Int32)
    name: ValidateRooms
    href: TinyLife.World.Map.html#TinyLife_World_Map_ValidateRooms_Microsoft_Xna_Framework_Point_System_Int32_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.World.Room.Validate*
  commentId: Overload:TinyLife.World.Room.Validate
  href: TinyLife.World.Room.html#TinyLife_World_Room_Validate
  name: Validate
  nameWithType: Room.Validate
  fullName: TinyLife.World.Room.Validate
- uid: TinyLife.World.Room.GetWalls*
  commentId: Overload:TinyLife.World.Room.GetWalls
  href: TinyLife.World.Room.html#TinyLife_World_Room_GetWalls_System_Boolean_
  name: GetWalls
  nameWithType: Room.GetWalls
  fullName: TinyLife.World.Room.GetWalls
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.World.Wall,System.Int32}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.World.Wall,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(Wall Wall, int Side)>
  nameWithType: IEnumerable<(Wall Wall, int Side)>
  fullName: System.Collections.Generic.IEnumerable<(TinyLife.World.Wall Wall, int Side)>
  nameWithType.vb: IEnumerable(Of (Wall As Wall, Side As Integer))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (Wall As TinyLife.World.Wall, Side As Integer))
  name.vb: IEnumerable(Of (Wall As Wall, Side As Integer))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: TinyLife.World.Wall
    name: Wall
    href: TinyLife.World.Wall.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.World.Wall,System.Int32}.Wall
    name: Wall
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.world.wall,system.int32-.wall
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{TinyLife.World.Wall,System.Int32}.Side
    name: Side
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.world.wall,system.int32-.side
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.World.Wall,System.Int32}.Wall
    name: Wall
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.world.wall,system.int32-.wall
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.World.Wall
    name: Wall
    href: TinyLife.World.Wall.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.World.Wall,System.Int32}.Side
    name: Side
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.world.wall,system.int32-.side
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.World.Room.GetStairs*
  commentId: Overload:TinyLife.World.Room.GetStairs
  href: TinyLife.World.Room.html#TinyLife_World_Room_GetStairs
  name: GetStairs
  nameWithType: Room.GetStairs
  fullName: TinyLife.World.Room.GetStairs
- uid: System.Collections.Generic.IEnumerable{TinyLife.World.Stairs}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.World.Stairs}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Stairs>
  nameWithType: IEnumerable<Stairs>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.World.Stairs>
  nameWithType.vb: IEnumerable(Of Stairs)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.World.Stairs)
  name.vb: IEnumerable(Of Stairs)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.World.Stairs
    name: Stairs
    href: TinyLife.World.Stairs.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Stairs
    name: Stairs
    href: TinyLife.World.Stairs.html
  - name: )
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.World.Room.GetObjects*
  commentId: Overload:TinyLife.World.Room.GetObjects
  href: TinyLife.World.Room.html#TinyLife_World_Room_GetObjects__1
  name: GetObjects
  nameWithType: Room.GetObjects
  fullName: TinyLife.World.Room.GetObjects
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Objects.Light
  commentId: T:TinyLife.Objects.Light
  parent: TinyLife.Objects
  href: TinyLife.Objects.Light.html
  name: Light
  nameWithType: Light
  fullName: TinyLife.Objects.Light
- uid: TinyLife.World.Room.GetLights*
  commentId: Overload:TinyLife.World.Room.GetLights
  href: TinyLife.World.Room.html#TinyLife_World_Room_GetLights
  name: GetLights
  nameWithType: Room.GetLights
  fullName: TinyLife.World.Room.GetLights
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.Light}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.Light}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Light>
  nameWithType: IEnumerable<Light>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.Light>
  nameWithType.vb: IEnumerable(Of Light)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.Light)
  name.vb: IEnumerable(Of Light)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: )
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_DecorativeRating
  name: DecorativeRating
  nameWithType: FurnitureType.TypeSettings.DecorativeRating
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating
- uid: TinyLife.World.Room.GetDecorativeRating*
  commentId: Overload:TinyLife.World.Room.GetDecorativeRating
  href: TinyLife.World.Room.html#TinyLife_World_Room_GetDecorativeRating
  name: GetDecorativeRating
  nameWithType: Room.GetDecorativeRating
  fullName: TinyLife.World.Room.GetDecorativeRating
- uid: TinyLife.World.Room
  commentId: T:TinyLife.World.Room
  parent: TinyLife.World
  href: TinyLife.World.Room.html
  name: Room
  nameWithType: Room
  fullName: TinyLife.World.Room
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.World.Opening
  commentId: T:TinyLife.World.Opening
  parent: TinyLife.World
  href: TinyLife.World.Opening.html
  name: Opening
  nameWithType: Opening
  fullName: TinyLife.World.Opening
- uid: TinyLife.World.Room.GetConnectedRooms*
  commentId: Overload:TinyLife.World.Room.GetConnectedRooms
  href: TinyLife.World.Room.html#TinyLife_World_Room_GetConnectedRooms_TinyLife_Objects_PersonLike_
  name: GetConnectedRooms
  nameWithType: Room.GetConnectedRooms
  fullName: TinyLife.World.Room.GetConnectedRooms
- uid: System.Collections.Generic.IEnumerable{TinyLife.World.Room}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.World.Room}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Room>
  nameWithType: IEnumerable<Room>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.World.Room>
  nameWithType.vb: IEnumerable(Of Room)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.World.Room)
  name.vb: IEnumerable(Of Room)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.World.Room
    name: Room
    href: TinyLife.World.Room.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Room
    name: Room
    href: TinyLife.World.Room.html
  - name: )
