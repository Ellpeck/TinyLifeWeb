### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.Upgrade
  commentId: T:TinyLife.Objects.Upgrade
  id: Upgrade
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.Upgrade.#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,System.Int32,System.Func{TinyLife.Objects.Furniture,System.Boolean})
  - TinyLife.Objects.Upgrade.#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,System.Int32,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.Upgrade.BetterMemory
  - TinyLife.Objects.Upgrade.BetterPressure
  - TinyLife.Objects.Upgrade.Bidet
  - TinyLife.Objects.Upgrade.CanApply
  - TinyLife.Objects.Upgrade.ConfigurableShowerHead
  - TinyLife.Objects.Upgrade.FridgeTemperatureControl
  - TinyLife.Objects.Upgrade.HasToLearn
  - TinyLife.Objects.Upgrade.Icon
  - TinyLife.Objects.Upgrade.Knows(TinyLife.Objects.PersonLike)
  - TinyLife.Objects.Upgrade.Learn(TinyLife.Objects.PersonLike)
  - TinyLife.Objects.Upgrade.Memory
  - TinyLife.Objects.Upgrade.Name
  - TinyLife.Objects.Upgrade.Price
  - TinyLife.Objects.Upgrade.ProtectiveCoating
  - TinyLife.Objects.Upgrade.Register(TinyLife.Objects.Upgrade)
  - TinyLife.Objects.Upgrade.RequiredSkillLevel
  - TinyLife.Objects.Upgrade.Requirements
  - TinyLife.Objects.Upgrade.RgbLights
  - TinyLife.Objects.Upgrade.RobustPlumbing
  - TinyLife.Objects.Upgrade.SofterCushioning
  - TinyLife.Objects.Upgrade.SourceString
  - TinyLife.Objects.Upgrade.SwivelFaucet
  - TinyLife.Objects.Upgrade.TemperatureGauge
  - TinyLife.Objects.Upgrade.Upgrades
  - TinyLife.Objects.Upgrade.WaterPurifier
  langs:
  - csharp
  - vb
  name: Upgrade
  nameWithType: Upgrade
  fullName: TinyLife.Objects.Upgrade
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An upgrade is a modification that can be applied to <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> to change the way it behaves.

    New upgrades can be registered using <xref href="TinyLife.Objects.Upgrade.Register(TinyLife.Objects.Upgrade)" data-throw-if-not-resolved="false"></xref>, and upgrades can be queried for a <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> object using <xref href="TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(MigratingStaticJsonConverter<Upgrade>), new object[] { typeof(Upgrade), "PrivateUpgrades", true })]

      public class Upgrade : IEmotionSource
    content.vb: >-
      <JsonConverter(GetType(MigratingStaticJsonConverter(Of Upgrade)), New Object() { GetType(Upgrade), "PrivateUpgrades", True })>

      Public Class Upgrade Implements IEmotionSource
  inheritance:
  - System.Object
  implements:
  - TinyLife.Emotions.IEmotionSource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.Upgrade.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.Upgrade.Upgrades
  commentId: F:TinyLife.Objects.Upgrade.Upgrades
  id: Upgrades
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Upgrades
  nameWithType: Upgrade.Upgrades
  fullName: TinyLife.Objects.Upgrade.Upgrades
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The collection of all registered upgrades.

    New upgrades can be registered using <xref href="TinyLife.Objects.Upgrade.Register(TinyLife.Objects.Upgrade)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, Upgrade> Upgrades
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Objects.Upgrade}
    content.vb: Public Shared ReadOnly Upgrades As ReadOnlyDictionary(Of String, Upgrade)
- uid: TinyLife.Objects.Upgrade.ProtectiveCoating
  commentId: F:TinyLife.Objects.Upgrade.ProtectiveCoating
  id: ProtectiveCoating
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: ProtectiveCoating
  nameWithType: Upgrade.ProtectiveCoating
  fullName: TinyLife.Objects.Upgrade.ProtectiveCoating
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade ProtectiveCoating
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly ProtectiveCoating As Upgrade
- uid: TinyLife.Objects.Upgrade.SofterCushioning
  commentId: F:TinyLife.Objects.Upgrade.SofterCushioning
  id: SofterCushioning
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: SofterCushioning
  nameWithType: Upgrade.SofterCushioning
  fullName: TinyLife.Objects.Upgrade.SofterCushioning
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade SofterCushioning
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly SofterCushioning As Upgrade
- uid: TinyLife.Objects.Upgrade.SwivelFaucet
  commentId: F:TinyLife.Objects.Upgrade.SwivelFaucet
  id: SwivelFaucet
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: SwivelFaucet
  nameWithType: Upgrade.SwivelFaucet
  fullName: TinyLife.Objects.Upgrade.SwivelFaucet
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade SwivelFaucet
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly SwivelFaucet As Upgrade
- uid: TinyLife.Objects.Upgrade.Bidet
  commentId: F:TinyLife.Objects.Upgrade.Bidet
  id: Bidet
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Bidet
  nameWithType: Upgrade.Bidet
  fullName: TinyLife.Objects.Upgrade.Bidet
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade Bidet
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly Bidet As Upgrade
- uid: TinyLife.Objects.Upgrade.BetterPressure
  commentId: F:TinyLife.Objects.Upgrade.BetterPressure
  id: BetterPressure
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: BetterPressure
  nameWithType: Upgrade.BetterPressure
  fullName: TinyLife.Objects.Upgrade.BetterPressure
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade BetterPressure
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly BetterPressure As Upgrade
- uid: TinyLife.Objects.Upgrade.ConfigurableShowerHead
  commentId: F:TinyLife.Objects.Upgrade.ConfigurableShowerHead
  id: ConfigurableShowerHead
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: ConfigurableShowerHead
  nameWithType: Upgrade.ConfigurableShowerHead
  fullName: TinyLife.Objects.Upgrade.ConfigurableShowerHead
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade ConfigurableShowerHead
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly ConfigurableShowerHead As Upgrade
- uid: TinyLife.Objects.Upgrade.RgbLights
  commentId: F:TinyLife.Objects.Upgrade.RgbLights
  id: RgbLights
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: RgbLights
  nameWithType: Upgrade.RgbLights
  fullName: TinyLife.Objects.Upgrade.RgbLights
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade RgbLights
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly RgbLights As Upgrade
- uid: TinyLife.Objects.Upgrade.TemperatureGauge
  commentId: F:TinyLife.Objects.Upgrade.TemperatureGauge
  id: TemperatureGauge
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: TemperatureGauge
  nameWithType: Upgrade.TemperatureGauge
  fullName: TinyLife.Objects.Upgrade.TemperatureGauge
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade TemperatureGauge
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly TemperatureGauge As Upgrade
- uid: TinyLife.Objects.Upgrade.BetterMemory
  commentId: F:TinyLife.Objects.Upgrade.BetterMemory
  id: BetterMemory
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: BetterMemory
  nameWithType: Upgrade.BetterMemory
  fullName: TinyLife.Objects.Upgrade.BetterMemory
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade BetterMemory
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly BetterMemory As Upgrade
- uid: TinyLife.Objects.Upgrade.FridgeTemperatureControl
  commentId: F:TinyLife.Objects.Upgrade.FridgeTemperatureControl
  id: FridgeTemperatureControl
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: FridgeTemperatureControl
  nameWithType: Upgrade.FridgeTemperatureControl
  fullName: TinyLife.Objects.Upgrade.FridgeTemperatureControl
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade FridgeTemperatureControl
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly FridgeTemperatureControl As Upgrade
- uid: TinyLife.Objects.Upgrade.WaterPurifier
  commentId: F:TinyLife.Objects.Upgrade.WaterPurifier
  id: WaterPurifier
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: WaterPurifier
  nameWithType: Upgrade.WaterPurifier
  fullName: TinyLife.Objects.Upgrade.WaterPurifier
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade WaterPurifier
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly WaterPurifier As Upgrade
- uid: TinyLife.Objects.Upgrade.RobustPlumbing
  commentId: F:TinyLife.Objects.Upgrade.RobustPlumbing
  id: RobustPlumbing
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: RobustPlumbing
  nameWithType: Upgrade.RobustPlumbing
  fullName: TinyLife.Objects.Upgrade.RobustPlumbing
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly Upgrade RobustPlumbing
    return:
      type: TinyLife.Objects.Upgrade
    content.vb: Public Shared ReadOnly RobustPlumbing As Upgrade
- uid: TinyLife.Objects.Upgrade.Name
  commentId: F:TinyLife.Objects.Upgrade.Name
  id: Name
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Upgrade.Name
  fullName: TinyLife.Objects.Upgrade.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The name of this upgrade, which should be unique.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Objects.Upgrade.Icon
  commentId: F:TinyLife.Objects.Upgrade.Icon
  id: Icon
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: Upgrade.Icon
  fullName: TinyLife.Objects.Upgrade.Icon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The icon of this upgrade.
  example: []
  syntax:
    content: public readonly TextureRegion Icon
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Icon As TextureRegion
- uid: TinyLife.Objects.Upgrade.RequiredSkillLevel
  commentId: F:TinyLife.Objects.Upgrade.RequiredSkillLevel
  id: RequiredSkillLevel
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: RequiredSkillLevel
  nameWithType: Upgrade.RequiredSkillLevel
  fullName: TinyLife.Objects.Upgrade.RequiredSkillLevel
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The skill level that is required to be able to apply this upgrade.
  example: []
  syntax:
    content: public readonly int RequiredSkillLevel
    return:
      type: System.Int32
    content.vb: Public ReadOnly RequiredSkillLevel As Integer
- uid: TinyLife.Objects.Upgrade.Price
  commentId: F:TinyLife.Objects.Upgrade.Price
  id: Price
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: Upgrade.Price
  fullName: TinyLife.Objects.Upgrade.Price
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The price for applying this upgrade.
  example: []
  syntax:
    content: public readonly int Price
    return:
      type: System.Int32
    content.vb: Public ReadOnly Price As Integer
- uid: TinyLife.Objects.Upgrade.CanApply
  commentId: F:TinyLife.Objects.Upgrade.CanApply
  id: CanApply
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: CanApply
  nameWithType: Upgrade.CanApply
  fullName: TinyLife.Objects.Upgrade.CanApply
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A function that determines whether the given <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> object can have this upgrade applied.
  example: []
  syntax:
    content: public readonly Func<Furniture, bool> CanApply
    return:
      type: System.Func{TinyLife.Objects.Furniture,System.Boolean}
    content.vb: Public ReadOnly CanApply As Func(Of Furniture, Boolean)
- uid: TinyLife.Objects.Upgrade.HasToLearn
  commentId: P:TinyLife.Objects.Upgrade.HasToLearn
  id: HasToLearn
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: HasToLearn
  nameWithType: Upgrade.HasToLearn
  fullName: TinyLife.Objects.Upgrade.HasToLearn
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Whether this upgrade has to be discovered, or learned.

    If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, the <xref href="TinyLife.Objects.Upgrade.Memory" data-throw-if-not-resolved="false"></xref> will be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: public bool HasToLearn { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasToLearn As Boolean
  overload: TinyLife.Objects.Upgrade.HasToLearn*
- uid: TinyLife.Objects.Upgrade.Requirements
  commentId: P:TinyLife.Objects.Upgrade.Requirements
  id: Requirements
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Requirements
  nameWithType: Upgrade.Requirements
  fullName: TinyLife.Objects.Upgrade.Requirements
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A set of <xref href="TinyLife.Objects.Upgrade.Upgrades" data-throw-if-not-resolved="false"></xref> that optionally need to be applied first before this upgrade can be applied.
  example: []
  syntax:
    content: public Func<Upgrade[]> Requirements { get; init; }
    parameters: []
    return:
      type: System.Func{TinyLife.Objects.Upgrade[]}
    content.vb: Public Property Requirements As Func(Of Upgrade())
  overload: TinyLife.Objects.Upgrade.Requirements*
- uid: TinyLife.Objects.Upgrade.Memory
  commentId: P:TinyLife.Objects.Upgrade.Memory
  id: Memory
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Memory
  nameWithType: Upgrade.Memory
  fullName: TinyLife.Objects.Upgrade.Memory
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The memory for this upgrade, which is stored in <xref href="TinyLife.Goals.MemoryType.UpgradeLearned" data-throw-if-not-resolved="false"></xref>. An upgrade can only be applied by a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> if they have this memory.

    Note that, if <xref href="TinyLife.Objects.Upgrade.HasToLearn" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, this will return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: public MemoryType Memory { get; }
    parameters: []
    return:
      type: TinyLife.Goals.MemoryType
    content.vb: Public ReadOnly Property Memory As MemoryType
  overload: TinyLife.Objects.Upgrade.Memory*
- uid: TinyLife.Objects.Upgrade.SourceString
  commentId: P:TinyLife.Objects.Upgrade.SourceString
  id: SourceString
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: SourceString
  nameWithType: Upgrade.SourceString
  fullName: TinyLife.Objects.Upgrade.SourceString
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A (localized) string that is displayed when hovering over an <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> that has this source
  example: []
  syntax:
    content: public string SourceString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SourceString As String
  overload: TinyLife.Objects.Upgrade.SourceString*
  implements:
  - TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.Objects.Upgrade.#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,System.Int32,System.Func{TinyLife.Objects.Furniture,System.Boolean})
  commentId: M:TinyLife.Objects.Upgrade.#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,System.Int32,System.Func{TinyLife.Objects.Furniture,System.Boolean})
  id: '#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,System.Int32,System.Func{TinyLife.Objects.Furniture,System.Boolean})'
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Upgrade(string, TextureRegion, int, int, Func<Furniture, bool>)
  nameWithType: Upgrade.Upgrade(string, TextureRegion, int, int, Func<Furniture, bool>)
  fullName: TinyLife.Objects.Upgrade.Upgrade(string, MLEM.Textures.TextureRegion, int, int, System.Func<TinyLife.Objects.Furniture, bool>)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new upgrade with the given settings.
  example: []
  syntax:
    content: public Upgrade(string name, TextureRegion icon, int requiredSkillLevel, int price, Func<Furniture, bool> canApply)
    parameters:
    - id: name
      type: System.String
      description: The name of this upgrade, which should be unique.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The icon of this upgrade.
    - id: requiredSkillLevel
      type: System.Int32
      description: The skill level that is required to be able to apply this upgrade.
    - id: price
      type: System.Int32
      description: The price for applying this upgrade.
    - id: canApply
      type: System.Func{TinyLife.Objects.Furniture,System.Boolean}
      description: A function that determines whether the given <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> object can have this upgrade applied.
    content.vb: Public Sub New(name As String, icon As TextureRegion, requiredSkillLevel As Integer, price As Integer, canApply As Func(Of Furniture, Boolean))
  overload: TinyLife.Objects.Upgrade.#ctor*
  nameWithType.vb: Upgrade.New(String, TextureRegion, Integer, Integer, Func(Of Furniture, Boolean))
  fullName.vb: TinyLife.Objects.Upgrade.New(String, MLEM.Textures.TextureRegion, Integer, Integer, System.Func(Of TinyLife.Objects.Furniture, Boolean))
  name.vb: New(String, TextureRegion, Integer, Integer, Func(Of Furniture, Boolean))
- uid: TinyLife.Objects.Upgrade.#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,System.Int32,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.Upgrade.#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,System.Int32,TinyLife.Objects.ObjectCategory)
  id: '#ctor(System.String,MLEM.Textures.TextureRegion,System.Int32,System.Int32,TinyLife.Objects.ObjectCategory)'
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Upgrade(string, TextureRegion, int, int, ObjectCategory)
  nameWithType: Upgrade.Upgrade(string, TextureRegion, int, int, ObjectCategory)
  fullName: TinyLife.Objects.Upgrade.Upgrade(string, MLEM.Textures.TextureRegion, int, int, TinyLife.Objects.ObjectCategory)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new upgrade with the given settings.
  example: []
  syntax:
    content: public Upgrade(string name, TextureRegion icon, int requiredSkillLevel, int price, ObjectCategory validObjects)
    parameters:
    - id: name
      type: System.String
      description: The name of this upgrade, which should be unique.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The icon of this upgrade.
    - id: requiredSkillLevel
      type: System.Int32
      description: The skill level that is required to be able to apply this upgrade.
    - id: price
      type: System.Int32
      description: The price for applying this upgrade.
    - id: validObjects
      type: TinyLife.Objects.ObjectCategory
      description: A combined flag of <xref href="TinyLife.Objects.ObjectCategory" data-throw-if-not-resolved="false"></xref> flags that determine which objects this upgrade can be applied on.
    content.vb: Public Sub New(name As String, icon As TextureRegion, requiredSkillLevel As Integer, price As Integer, validObjects As ObjectCategory)
  overload: TinyLife.Objects.Upgrade.#ctor*
  nameWithType.vb: Upgrade.New(String, TextureRegion, Integer, Integer, ObjectCategory)
  fullName.vb: TinyLife.Objects.Upgrade.New(String, MLEM.Textures.TextureRegion, Integer, Integer, TinyLife.Objects.ObjectCategory)
  name.vb: New(String, TextureRegion, Integer, Integer, ObjectCategory)
- uid: TinyLife.Objects.Upgrade.Knows(TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.Objects.Upgrade.Knows(TinyLife.Objects.PersonLike)
  id: Knows(TinyLife.Objects.PersonLike)
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Knows(PersonLike)
  nameWithType: Upgrade.Knows(PersonLike)
  fullName: TinyLife.Objects.Upgrade.Knows(TinyLife.Objects.PersonLike)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns whether the given <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> knows this upgrade. If <xref href="TinyLife.Objects.Upgrade.HasToLearn" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, this method always returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public bool Knows(PersonLike person)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person.
    return:
      type: System.Boolean
      description: Whether the person knows this upgrade.
    content.vb: Public Function Knows(person As PersonLike) As Boolean
  overload: TinyLife.Objects.Upgrade.Knows*
- uid: TinyLife.Objects.Upgrade.Learn(TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.Objects.Upgrade.Learn(TinyLife.Objects.PersonLike)
  id: Learn(TinyLife.Objects.PersonLike)
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Learn(PersonLike)
  nameWithType: Upgrade.Learn(PersonLike)
  fullName: TinyLife.Objects.Upgrade.Learn(TinyLife.Objects.PersonLike)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Causes the given <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> to learn this upgrade, adding the appropriate <xref href="TinyLife.Objects.Upgrade.Memory" data-throw-if-not-resolved="false"></xref> to them and optionally displaying a notification.
  example: []
  syntax:
    content: public void Learn(PersonLike person)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person who should learn this upgrade.
    content.vb: Public Sub Learn(person As PersonLike)
  overload: TinyLife.Objects.Upgrade.Learn*
- uid: TinyLife.Objects.Upgrade.Register(TinyLife.Objects.Upgrade)
  commentId: M:TinyLife.Objects.Upgrade.Register(TinyLife.Objects.Upgrade)
  id: Register(TinyLife.Objects.Upgrade)
  parent: TinyLife.Objects.Upgrade
  langs:
  - csharp
  - vb
  name: Register(Upgrade)
  nameWithType: Upgrade.Register(Upgrade)
  fullName: TinyLife.Objects.Upgrade.Register(TinyLife.Objects.Upgrade)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Registers the given <xref href="TinyLife.Objects.Upgrade" data-throw-if-not-resolved="false"></xref> to the <xref href="TinyLife.Objects.Upgrade.Upgrades" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public static Upgrade Register(Upgrade upgrade)
    parameters:
    - id: upgrade
      type: TinyLife.Objects.Upgrade
      description: The upgrade to register.
    return:
      type: TinyLife.Objects.Upgrade
      description: The <code class="paramref">upgrade</code>, for chaining.
    content.vb: Public Shared Function Register(upgrade As Upgrade) As Upgrade
  overload: TinyLife.Objects.Upgrade.Register*
references:
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects.Upgrade.Register(TinyLife.Objects.Upgrade)
  commentId: M:TinyLife.Objects.Upgrade.Register(TinyLife.Objects.Upgrade)
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_Register_TinyLife_Objects_Upgrade_
  name: Register(Upgrade)
  nameWithType: Upgrade.Register(Upgrade)
  fullName: TinyLife.Objects.Upgrade.Register(TinyLife.Objects.Upgrade)
  spec.csharp:
  - uid: TinyLife.Objects.Upgrade.Register(TinyLife.Objects.Upgrade)
    name: Register
    href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_Register_TinyLife_Objects_Upgrade_
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Upgrade.Register(TinyLife.Objects.Upgrade)
    name: Register
    href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_Register_TinyLife_Objects_Upgrade_
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
- uid: TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
  commentId: M:TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_HasFullUpgrade_TinyLife_Objects_Upgrade_
  name: HasFullUpgrade(Upgrade)
  nameWithType: Furniture.HasFullUpgrade(Upgrade)
  fullName: TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
    name: HasFullUpgrade
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_HasFullUpgrade_TinyLife_Objects_Upgrade_
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
    name: HasFullUpgrade
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_HasFullUpgrade_TinyLife_Objects_Upgrade_
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
- uid: TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
  commentId: M:TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetAppliedUpgrade_TinyLife_Objects_Upgrade_
  name: GetAppliedUpgrade(Upgrade)
  nameWithType: Furniture.GetAppliedUpgrade(Upgrade)
  fullName: TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
    name: GetAppliedUpgrade
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetAppliedUpgrade_TinyLife_Objects_Upgrade_
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
    name: GetAppliedUpgrade
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetAppliedUpgrade_TinyLife_Objects_Upgrade_
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Emotions.IEmotionSource
  commentId: T:TinyLife.Emotions.IEmotionSource
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.IEmotionSource.html
  name: IEmotionSource
  nameWithType: IEmotionSource
  fullName: TinyLife.Emotions.IEmotionSource
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Objects.Upgrade.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Upgrade>(Upgrade)
  nameWithType: Extensions.JsonCopy<Upgrade>(Upgrade)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Upgrade>(TinyLife.Objects.Upgrade)
  nameWithType.vb: Extensions.JsonCopy(Of Upgrade)(Upgrade)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Upgrade)(TinyLife.Objects.Upgrade)
  name.vb: JsonCopy(Of Upgrade)(Upgrade)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Upgrade)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Upgrade)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  href: TinyLife.html
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Objects.Upgrade}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Objects.Upgrade}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, Upgrade>
  nameWithType: ReadOnlyDictionary<string, Upgrade>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Objects.Upgrade>
  nameWithType.vb: ReadOnlyDictionary(Of String, Upgrade)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Objects.Upgrade)
  name.vb: ReadOnlyDictionary(Of String, Upgrade)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.Objects.Upgrade
  commentId: T:TinyLife.Objects.Upgrade
  parent: TinyLife.Objects
  href: TinyLife.Objects.Upgrade.html
  name: Upgrade
  nameWithType: Upgrade
  fullName: TinyLife.Objects.Upgrade
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Func{TinyLife.Objects.Furniture,System.Boolean}
  commentId: T:System.Func{TinyLife.Objects.Furniture,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Furniture, bool>
  nameWithType: Func<Furniture, bool>
  fullName: System.Func<TinyLife.Objects.Furniture, bool>
  nameWithType.vb: Func(Of Furniture, Boolean)
  fullName.vb: System.Func(Of TinyLife.Objects.Furniture, Boolean)
  name.vb: Func(Of Furniture, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Objects.Upgrade.Memory
  commentId: P:TinyLife.Objects.Upgrade.Memory
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_Memory
  name: Memory
  nameWithType: Upgrade.Memory
  fullName: TinyLife.Objects.Upgrade.Memory
- uid: TinyLife.Objects.Upgrade.HasToLearn*
  commentId: Overload:TinyLife.Objects.Upgrade.HasToLearn
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_HasToLearn
  name: HasToLearn
  nameWithType: Upgrade.HasToLearn
  fullName: TinyLife.Objects.Upgrade.HasToLearn
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.Upgrade.Upgrades
  commentId: F:TinyLife.Objects.Upgrade.Upgrades
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_Upgrades
  name: Upgrades
  nameWithType: Upgrade.Upgrades
  fullName: TinyLife.Objects.Upgrade.Upgrades
- uid: TinyLife.Objects.Upgrade.Requirements*
  commentId: Overload:TinyLife.Objects.Upgrade.Requirements
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_Requirements
  name: Requirements
  nameWithType: Upgrade.Requirements
  fullName: TinyLife.Objects.Upgrade.Requirements
- uid: System.Func{TinyLife.Objects.Upgrade[]}
  commentId: T:System.Func{TinyLife.Objects.Upgrade[]}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<Upgrade[]>
  nameWithType: Func<Upgrade[]>
  fullName: System.Func<TinyLife.Objects.Upgrade[]>
  nameWithType.vb: Func(Of Upgrade())
  fullName.vb: System.Func(Of TinyLife.Objects.Upgrade())
  name.vb: Func(Of Upgrade())
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: (
  - name: )
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Goals.MemoryType.UpgradeLearned
  commentId: P:TinyLife.Goals.MemoryType.UpgradeLearned
  href: TinyLife.Goals.MemoryType.html#TinyLife_Goals_MemoryType_UpgradeLearned
  name: UpgradeLearned
  nameWithType: MemoryType.UpgradeLearned
  fullName: TinyLife.Goals.MemoryType.UpgradeLearned
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Objects.Upgrade.HasToLearn
  commentId: P:TinyLife.Objects.Upgrade.HasToLearn
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_HasToLearn
  name: HasToLearn
  nameWithType: Upgrade.HasToLearn
  fullName: TinyLife.Objects.Upgrade.HasToLearn
- uid: TinyLife.Objects.Upgrade.Memory*
  commentId: Overload:TinyLife.Objects.Upgrade.Memory
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_Memory
  name: Memory
  nameWithType: Upgrade.Memory
  fullName: TinyLife.Objects.Upgrade.Memory
- uid: TinyLife.Goals.MemoryType
  commentId: T:TinyLife.Goals.MemoryType
  parent: TinyLife.Goals
  href: TinyLife.Goals.MemoryType.html
  name: MemoryType
  nameWithType: MemoryType
  fullName: TinyLife.Goals.MemoryType
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: TinyLife.Emotions.EmotionModifier
  commentId: T:TinyLife.Emotions.EmotionModifier
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionModifier.html
  name: EmotionModifier
  nameWithType: EmotionModifier
  fullName: TinyLife.Emotions.EmotionModifier
- uid: TinyLife.Objects.Upgrade.SourceString*
  commentId: Overload:TinyLife.Objects.Upgrade.SourceString
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_SourceString
  name: SourceString
  nameWithType: Upgrade.SourceString
  fullName: TinyLife.Objects.Upgrade.SourceString
- uid: TinyLife.Emotions.IEmotionSource.SourceString
  commentId: P:TinyLife.Emotions.IEmotionSource.SourceString
  parent: TinyLife.Emotions.IEmotionSource
  href: TinyLife.Emotions.IEmotionSource.html#TinyLife_Emotions_IEmotionSource_SourceString
  name: SourceString
  nameWithType: IEmotionSource.SourceString
  fullName: TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.Objects.Upgrade.#ctor*
  commentId: Overload:TinyLife.Objects.Upgrade.#ctor
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade__ctor_System_String_MLEM_Textures_TextureRegion_System_Int32_System_Int32_System_Func_TinyLife_Objects_Furniture_System_Boolean__
  name: Upgrade
  nameWithType: Upgrade.Upgrade
  fullName: TinyLife.Objects.Upgrade.Upgrade
  nameWithType.vb: Upgrade.New
  fullName.vb: TinyLife.Objects.Upgrade.New
  name.vb: New
- uid: TinyLife.Objects.ObjectCategory
  commentId: T:TinyLife.Objects.ObjectCategory
  parent: TinyLife.Objects
  href: TinyLife.Objects.ObjectCategory.html
  name: ObjectCategory
  nameWithType: ObjectCategory
  fullName: TinyLife.Objects.ObjectCategory
- uid: TinyLife.Objects.Upgrade.Knows*
  commentId: Overload:TinyLife.Objects.Upgrade.Knows
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_Knows_TinyLife_Objects_PersonLike_
  name: Knows
  nameWithType: Upgrade.Knows
  fullName: TinyLife.Objects.Upgrade.Knows
- uid: TinyLife.Objects.Upgrade.Learn*
  commentId: Overload:TinyLife.Objects.Upgrade.Learn
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_Learn_TinyLife_Objects_PersonLike_
  name: Learn
  nameWithType: Upgrade.Learn
  fullName: TinyLife.Objects.Upgrade.Learn
- uid: TinyLife.Objects.Upgrade.Register*
  commentId: Overload:TinyLife.Objects.Upgrade.Register
  href: TinyLife.Objects.Upgrade.html#TinyLife_Objects_Upgrade_Register_TinyLife_Objects_Upgrade_
  name: Register
  nameWithType: Upgrade.Register
  fullName: TinyLife.Objects.Upgrade.Register
