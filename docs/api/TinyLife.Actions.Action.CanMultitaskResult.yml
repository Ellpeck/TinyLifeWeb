### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.Action.CanMultitaskResult
  commentId: T:TinyLife.Actions.Action.CanMultitaskResult
  id: Action.CanMultitaskResult
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.Action.CanMultitaskResult.No
  - TinyLife.Actions.Action.CanMultitaskResult.YesForce
  - TinyLife.Actions.Action.CanMultitaskResult.YesIfBoth
  langs:
  - csharp
  - vb
  name: Action.CanMultitaskResult
  nameWithType: Action.CanMultitaskResult
  fullName: TinyLife.Actions.Action.CanMultitaskResult
  type: Enum
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: An enumeration type used for <xref href="TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)" data-throw-if-not-resolved="false"></xref>, which determines whether an <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> can multitask with another action.
  example: []
  syntax:
    content: public enum Action.CanMultitaskResult
    content.vb: Public Enum Action.CanMultitaskResult
  extensionMethods:
  - TinyLife.Actions.Action.CanMultitaskResult.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.Action.CanMultitaskResult.No
  commentId: F:TinyLife.Actions.Action.CanMultitaskResult.No
  id: No
  parent: TinyLife.Actions.Action.CanMultitaskResult
  langs:
  - csharp
  - vb
  name: No
  nameWithType: Action.CanMultitaskResult.No
  fullName: TinyLife.Actions.Action.CanMultitaskResult.No
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Returned for an action that cannot multitask with another action.
  example: []
  syntax:
    content: No = 0
    return:
      type: TinyLife.Actions.Action.CanMultitaskResult
- uid: TinyLife.Actions.Action.CanMultitaskResult.YesIfBoth
  commentId: F:TinyLife.Actions.Action.CanMultitaskResult.YesIfBoth
  id: YesIfBoth
  parent: TinyLife.Actions.Action.CanMultitaskResult
  langs:
  - csharp
  - vb
  name: YesIfBoth
  nameWithType: Action.CanMultitaskResult.YesIfBoth
  fullName: TinyLife.Actions.Action.CanMultitaskResult.YesIfBoth
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Returned for an action that can multitask with another action iff the other action also returns <xref href="TinyLife.Actions.Action.CanMultitaskResult.YesIfBoth" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: YesIfBoth = 1
    return:
      type: TinyLife.Actions.Action.CanMultitaskResult
- uid: TinyLife.Actions.Action.CanMultitaskResult.YesForce
  commentId: F:TinyLife.Actions.Action.CanMultitaskResult.YesForce
  id: YesForce
  parent: TinyLife.Actions.Action.CanMultitaskResult
  langs:
  - csharp
  - vb
  name: YesForce
  nameWithType: Action.CanMultitaskResult.YesForce
  fullName: TinyLife.Actions.Action.CanMultitaskResult.YesForce
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Returned for an action that can multitask with another action, regardless of the other action's return value.
  example: []
  syntax:
    content: YesForce = 2
    return:
      type: TinyLife.Actions.Action.CanMultitaskResult
references:
- uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
  parent: TinyLife.Actions.Action
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_CanMultitask_TinyLife_Actions_Action_
  name: CanMultitask(Action)
  nameWithType: Action.CanMultitask(Action)
  fullName: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
    name: CanMultitask
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_CanMultitask_TinyLife_Actions_Action_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
    name: CanMultitask
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_CanMultitask_TinyLife_Actions_Action_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: )
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: TinyLife.Actions.Action.CanMultitaskResult.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<CanMultitaskResult>(CanMultitaskResult)
  nameWithType: Extensions.JsonCopy<Action.CanMultitaskResult>(Action.CanMultitaskResult)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Action.CanMultitaskResult>(TinyLife.Actions.Action.CanMultitaskResult)
  nameWithType.vb: Extensions.JsonCopy(Of Action.CanMultitaskResult)(Action.CanMultitaskResult)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Action.CanMultitaskResult)(TinyLife.Actions.Action.CanMultitaskResult)
  name.vb: JsonCopy(Of CanMultitaskResult)(CanMultitaskResult)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.Action.CanMultitaskResult)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Actions.Action.CanMultitaskResult
    name: CanMultitaskResult
    href: TinyLife.Actions.Action.CanMultitaskResult.html
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.Action.CanMultitaskResult
    name: CanMultitaskResult
    href: TinyLife.Actions.Action.CanMultitaskResult.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.Action.CanMultitaskResult)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Action.CanMultitaskResult
    name: CanMultitaskResult
    href: TinyLife.Actions.Action.CanMultitaskResult.html
  - name: )
  - name: (
  - uid: TinyLife.Actions.Action.CanMultitaskResult
    name: CanMultitaskResult
    href: TinyLife.Actions.Action.CanMultitaskResult.html
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Actions.Action.CanMultitaskResult
  commentId: T:TinyLife.Actions.Action.CanMultitaskResult
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action.CanMultitaskResult
  nameWithType: Action.CanMultitaskResult
  fullName: TinyLife.Actions.Action.CanMultitaskResult
  spec.csharp:
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: .
  - uid: TinyLife.Actions.Action.CanMultitaskResult
    name: CanMultitaskResult
    href: TinyLife.Actions.Action.CanMultitaskResult.html
  spec.vb:
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: .
  - uid: TinyLife.Actions.Action.CanMultitaskResult
    name: CanMultitaskResult
    href: TinyLife.Actions.Action.CanMultitaskResult.html
- uid: TinyLife.Actions.Action.CanMultitaskResult.YesIfBoth
  commentId: F:TinyLife.Actions.Action.CanMultitaskResult.YesIfBoth
  href: TinyLife.Actions.Action.CanMultitaskResult.html#TinyLife_Actions_Action_CanMultitaskResult_YesIfBoth
  name: YesIfBoth
  nameWithType: Action.CanMultitaskResult.YesIfBoth
  fullName: TinyLife.Actions.Action.CanMultitaskResult.YesIfBoth
