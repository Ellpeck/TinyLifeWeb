### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Stairs
  commentId: T:TinyLife.World.Stairs
  id: Stairs
  parent: TinyLife.World
  children:
  - TinyLife.World.Stairs.#ctor(TinyLife.World.StairsType,System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,MLEM.Maths.Direction2,System.Boolean)
  - TinyLife.World.Stairs.Area
  - TinyLife.World.Stairs.BottomEntryPosition
  - TinyLife.World.Stairs.Colors
  - TinyLife.World.Stairs.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{Microsoft.Xna.Framework.Color})
  - TinyLife.World.Stairs.Floor
  - TinyLife.World.Stairs.GetArea(Microsoft.Xna.Framework.Point,MLEM.Maths.Direction2)
  - TinyLife.World.Stairs.Position
  - TinyLife.World.Stairs.Rotation
  - TinyLife.World.Stairs.TopEntryPosition
  - TinyLife.World.Stairs.Type
  - TinyLife.World.Stairs.Validate(TinyLife.World.Map)
  - TinyLife.World.Stairs.Wallpaper
  langs:
  - csharp
  - vb
  name: Stairs
  nameWithType: Stairs
  fullName: TinyLife.World.Stairs
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    Stairs are objects on a <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref> that allow Tinies to switch between floors. Stair types can be registered using <xref href="TinyLife.World.StairsType" data-throw-if-not-resolved="false"></xref>.

    For pathfinding purposes, stairs have a fixed length of 2 tiles.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Stairs : JsonTypeSafeGenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class Stairs Inherits JsonTypeSafeGenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.Stairs.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Stairs.Type
  commentId: F:TinyLife.World.Stairs.Type
  id: Type
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Stairs.Type
  fullName: TinyLife.World.Stairs.Type
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The type of these stairs.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly StairsType Type
    return:
      type: TinyLife.World.StairsType
    content.vb: >-
      <DataMember>

      Public ReadOnly Type As StairsType
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Stairs.Colors
  commentId: F:TinyLife.World.Stairs.Colors
  id: Colors
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: Colors
  nameWithType: Stairs.Colors
  fullName: TinyLife.World.Stairs.Colors
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The selected color indices in this stairs' <xref href="TinyLife.World.Stairs.Type" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.World.StairsType.Colors" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly int[] Colors
    return:
      type: System.Int32[]
    content.vb: >-
      <DataMember>

      Public ReadOnly Colors As Integer()
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Stairs.Position
  commentId: P:TinyLife.World.Stairs.Position
  id: Position
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Stairs.Position
  fullName: TinyLife.World.Stairs.Position
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The position of these stairs, which is the tile position that the bottom half of the stairs is on.
  example: []
  syntax:
    content: >-
      [DataMember]

      public Point Position { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: >-
      <DataMember>

      Public Property Position As Point
  overload: TinyLife.World.Stairs.Position*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Stairs.Floor
  commentId: P:TinyLife.World.Stairs.Floor
  id: Floor
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: Floor
  nameWithType: Stairs.Floor
  fullName: TinyLife.World.Stairs.Floor
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The floor of these stairs, which is the floor that the bottom of these stairs is on.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int Floor { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property Floor As Integer
  overload: TinyLife.World.Stairs.Floor*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Stairs.Rotation
  commentId: P:TinyLife.World.Stairs.Rotation
  id: Rotation
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Stairs.Rotation
  fullName: TinyLife.World.Stairs.Rotation
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: These stairs' rotation.
  example: []
  syntax:
    content: >-
      [DataMember]

      public Direction2 Rotation { get; }
    parameters: []
    return:
      type: MLEM.Maths.Direction2
    content.vb: >-
      <DataMember>

      Public Property Rotation As Direction2
  overload: TinyLife.World.Stairs.Rotation*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Stairs.Wallpaper
  commentId: F:TinyLife.World.Stairs.Wallpaper
  id: Wallpaper
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: Wallpaper
  nameWithType: Stairs.Wallpaper
  fullName: TinyLife.World.Stairs.Wallpaper
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The <xref href="TinyLife.World.Stairs.Wallpaper" data-throw-if-not-resolved="false"></xref> that is attached to these stairs. If this stair's <xref href="TinyLife.World.Stairs.Type" data-throw-if-not-resolved="false"></xref> doesn't support applying wallpaper (<xref href="TinyLife.World.StairsType.AllowsWallpaper" data-throw-if-not-resolved="false"></xref>), or these stairs have no wallpaper applied, this field will be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public Wallpaper Wallpaper
    return:
      type: TinyLife.World.Wallpaper
    content.vb: >-
      <DataMember>

      Public Wallpaper As Wallpaper
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Stairs.Area
  commentId: P:TinyLife.World.Stairs.Area
  id: Area
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: Stairs.Area
  fullName: TinyLife.World.Stairs.Area
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The area that these stairs take up, based on <xref href="TinyLife.World.Stairs.GetArea(Microsoft.Xna.Framework.Point%2cMLEM.Maths.Direction2)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Rectangle Area { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Public ReadOnly Property Area As Rectangle
  overload: TinyLife.World.Stairs.Area*
- uid: TinyLife.World.Stairs.BottomEntryPosition
  commentId: P:TinyLife.World.Stairs.BottomEntryPosition
  id: BottomEntryPosition
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: BottomEntryPosition
  nameWithType: Stairs.BottomEntryPosition
  fullName: TinyLife.World.Stairs.BottomEntryPosition
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The bottom entry and exit position for these stairs, which is the tile position that a Tiny starts walking up the stairs from.
  example: []
  syntax:
    content: public Point BottomEntryPosition { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public ReadOnly Property BottomEntryPosition As Point
  overload: TinyLife.World.Stairs.BottomEntryPosition*
- uid: TinyLife.World.Stairs.TopEntryPosition
  commentId: P:TinyLife.World.Stairs.TopEntryPosition
  id: TopEntryPosition
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: TopEntryPosition
  nameWithType: Stairs.TopEntryPosition
  fullName: TinyLife.World.Stairs.TopEntryPosition
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The top entry and exit position for these stairs, which is the tile position that a Tiny starts walking down the stairs from.
  example: []
  syntax:
    content: public Point TopEntryPosition { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public ReadOnly Property TopEntryPosition As Point
  overload: TinyLife.World.Stairs.TopEntryPosition*
- uid: TinyLife.World.Stairs.#ctor(TinyLife.World.StairsType,System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,MLEM.Maths.Direction2,System.Boolean)
  commentId: M:TinyLife.World.Stairs.#ctor(TinyLife.World.StairsType,System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,MLEM.Maths.Direction2,System.Boolean)
  id: '#ctor(TinyLife.World.StairsType,System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,MLEM.Maths.Direction2,System.Boolean)'
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: Stairs(StairsType, int[], Map, Point, int, Direction2, bool)
  nameWithType: Stairs.Stairs(StairsType, int[], Map, Point, int, Direction2, bool)
  fullName: TinyLife.World.Stairs.Stairs(TinyLife.World.StairsType, int[], TinyLife.World.Map, Microsoft.Xna.Framework.Point, int, MLEM.Maths.Direction2, bool)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Creates a new stairs instance with the given settings.
  example: []
  syntax:
    content: public Stairs(StairsType type, int[] colors, Map map, Point position, int floor, Direction2 rotation, bool hasWallpaper)
    parameters:
    - id: type
      type: TinyLife.World.StairsType
      description: The type of these stairs.
    - id: colors
      type: System.Int32[]
      description: The selected color indices in this stairs' &lt;see cref="Type"/&gt;'s &lt;see cref="StairsType.ColorSchemes"/&gt;.
    - id: map
      type: TinyLife.World.Map
      description: The map.
    - id: position
      type: Microsoft.Xna.Framework.Point
      description: The position of these stairs, which is the tile position that the bottom half of the stairs is on.
    - id: floor
      type: System.Int32
      description: The floor of these stairs, which is the floor that the bottom of these stairs is on.
    - id: rotation
      type: MLEM.Maths.Direction2
      description: These stairs' rotation.
    - id: hasWallpaper
      type: System.Boolean
      description: Whether these stairs should have wallpaper applied, as well as the ability to change the applied wallpaper.
    content.vb: Public Sub New(type As StairsType, colors As Integer(), map As Map, position As Point, floor As Integer, rotation As Direction2, hasWallpaper As Boolean)
  overload: TinyLife.World.Stairs.#ctor*
  nameWithType.vb: Stairs.New(StairsType, Integer(), Map, Point, Integer, Direction2, Boolean)
  fullName.vb: TinyLife.World.Stairs.New(TinyLife.World.StairsType, Integer(), TinyLife.World.Map, Microsoft.Xna.Framework.Point, Integer, MLEM.Maths.Direction2, Boolean)
  name.vb: New(StairsType, Integer(), Map, Point, Integer, Direction2, Boolean)
- uid: TinyLife.World.Stairs.Validate(TinyLife.World.Map)
  commentId: M:TinyLife.World.Stairs.Validate(TinyLife.World.Map)
  id: Validate(TinyLife.World.Map)
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: Validate(Map)
  nameWithType: Stairs.Validate(Map)
  fullName: TinyLife.World.Stairs.Validate(TinyLife.World.Map)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Validates these stairs, returning whether they are still valid after being loaded from disk.
  example: []
  syntax:
    content: public bool Validate(Map map)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map these stairs are on.
    return:
      type: System.Boolean
      description: Whether these stairs are still valid.
    content.vb: Public Function Validate(map As Map) As Boolean
  overload: TinyLife.World.Stairs.Validate*
- uid: TinyLife.World.Stairs.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.World.Stairs.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{Microsoft.Xna.Framework.Color})
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{Microsoft.Xna.Framework.Color})
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch, Color?)
  nameWithType: Stairs.Draw(GameTime, SpriteBatch, Color?)
  fullName: TinyLife.World.Stairs.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Color?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Draws these stairs.
  example: []
  syntax:
    content: public void Draw(GameTime time, SpriteBatch batch, Color? overrideColor = null)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game time.
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing.
    - id: overrideColor
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: A color that should optionally be used for drawing instead of this stairs' <xref href="TinyLife.World.Stairs.Colors" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub Draw(time As GameTime, batch As SpriteBatch, overrideColor As Color? = Nothing)
  overload: TinyLife.World.Stairs.Draw*
- uid: TinyLife.World.Stairs.GetArea(Microsoft.Xna.Framework.Point,MLEM.Maths.Direction2)
  commentId: M:TinyLife.World.Stairs.GetArea(Microsoft.Xna.Framework.Point,MLEM.Maths.Direction2)
  id: GetArea(Microsoft.Xna.Framework.Point,MLEM.Maths.Direction2)
  parent: TinyLife.World.Stairs
  langs:
  - csharp
  - vb
  name: GetArea(Point, Direction2)
  nameWithType: Stairs.GetArea(Point, Direction2)
  fullName: TinyLife.World.Stairs.GetArea(Microsoft.Xna.Framework.Point, MLEM.Maths.Direction2)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Returns the area that a set of <xref href="TinyLife.World.Stairs" data-throw-if-not-resolved="false"></xref> with the given <code class="paramref">position</code> and <code class="paramref">rotation</code> takes up.
  example: []
  syntax:
    content: public static Rectangle GetArea(Point position, Direction2 rotation)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Point
      description: The position.
    - id: rotation
      type: MLEM.Maths.Direction2
      description: The rotation.
    return:
      type: Microsoft.Xna.Framework.Rectangle
      description: The area taken up.
    content.vb: Public Shared Function GetArea(position As Point, rotation As Direction2) As Rectangle
  overload: TinyLife.World.Stairs.GetArea*
references:
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World.StairsType
  commentId: T:TinyLife.World.StairsType
  parent: TinyLife.World
  href: TinyLife.World.StairsType.html
  name: StairsType
  nameWithType: StairsType
  fullName: TinyLife.World.StairsType
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.Stairs.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Stairs>(Stairs)
  nameWithType: Extensions.JsonCopy<Stairs>(Stairs)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Stairs>(TinyLife.World.Stairs)
  nameWithType.vb: Extensions.JsonCopy(Of Stairs)(Stairs)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Stairs)(TinyLife.World.Stairs)
  name.vb: JsonCopy(Of Stairs)(Stairs)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Stairs)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.World.Stairs
    name: Stairs
    href: TinyLife.World.Stairs.html
  - name: '>'
  - name: (
  - uid: TinyLife.World.Stairs
    name: Stairs
    href: TinyLife.World.Stairs.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Stairs)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Stairs
    name: Stairs
    href: TinyLife.World.Stairs.html
  - name: )
  - name: (
  - uid: TinyLife.World.Stairs
    name: Stairs
    href: TinyLife.World.Stairs.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.World.Stairs.Type
  commentId: F:TinyLife.World.Stairs.Type
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_Type
  name: Type
  nameWithType: Stairs.Type
  fullName: TinyLife.World.Stairs.Type
- uid: TinyLife.World.StairsType.Colors
  commentId: F:TinyLife.World.StairsType.Colors
  href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_Colors
  name: Colors
  nameWithType: StairsType.Colors
  fullName: TinyLife.World.StairsType.Colors
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: TinyLife.World.Stairs.Position*
  commentId: Overload:TinyLife.World.Stairs.Position
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_Position
  name: Position
  nameWithType: Stairs.Position
  fullName: TinyLife.World.Stairs.Position
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.World.Stairs.Floor*
  commentId: Overload:TinyLife.World.Stairs.Floor
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_Floor
  name: Floor
  nameWithType: Stairs.Floor
  fullName: TinyLife.World.Stairs.Floor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.World.Stairs.Rotation*
  commentId: Overload:TinyLife.World.Stairs.Rotation
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_Rotation
  name: Rotation
  nameWithType: Stairs.Rotation
  fullName: TinyLife.World.Stairs.Rotation
- uid: MLEM.Maths.Direction2
  commentId: T:MLEM.Maths.Direction2
  parent: MLEM.Maths
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Maths.Direction2
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  isExternal: true
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
- uid: TinyLife.World.Stairs.Wallpaper
  commentId: F:TinyLife.World.Stairs.Wallpaper
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_Wallpaper
  name: Wallpaper
  nameWithType: Stairs.Wallpaper
  fullName: TinyLife.World.Stairs.Wallpaper
- uid: TinyLife.World.StairsType.AllowsWallpaper
  commentId: F:TinyLife.World.StairsType.AllowsWallpaper
  href: TinyLife.World.StairsType.html#TinyLife_World_StairsType_AllowsWallpaper
  name: AllowsWallpaper
  nameWithType: StairsType.AllowsWallpaper
  fullName: TinyLife.World.StairsType.AllowsWallpaper
- uid: TinyLife.World.Wallpaper
  commentId: T:TinyLife.World.Wallpaper
  parent: TinyLife.World
  href: TinyLife.World.Wallpaper.html
  name: Wallpaper
  nameWithType: Wallpaper
  fullName: TinyLife.World.Wallpaper
- uid: TinyLife.World.Stairs.GetArea(Microsoft.Xna.Framework.Point,MLEM.Maths.Direction2)
  commentId: M:TinyLife.World.Stairs.GetArea(Microsoft.Xna.Framework.Point,MLEM.Maths.Direction2)
  isExternal: true
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_GetArea_Microsoft_Xna_Framework_Point_MLEM_Maths_Direction2_
  name: GetArea(Point, Direction2)
  nameWithType: Stairs.GetArea(Point, Direction2)
  fullName: TinyLife.World.Stairs.GetArea(Microsoft.Xna.Framework.Point, MLEM.Maths.Direction2)
  spec.csharp:
  - uid: TinyLife.World.Stairs.GetArea(Microsoft.Xna.Framework.Point,MLEM.Maths.Direction2)
    name: GetArea
    href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_GetArea_Microsoft_Xna_Framework_Point_MLEM_Maths_Direction2_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.World.Stairs.GetArea(Microsoft.Xna.Framework.Point,MLEM.Maths.Direction2)
    name: GetArea
    href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_GetArea_Microsoft_Xna_Framework_Point_MLEM_Maths_Direction2_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
- uid: TinyLife.World.Stairs.Area*
  commentId: Overload:TinyLife.World.Stairs.Area
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_Area
  name: Area
  nameWithType: Stairs.Area
  fullName: TinyLife.World.Stairs.Area
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: TinyLife.World.Stairs.BottomEntryPosition*
  commentId: Overload:TinyLife.World.Stairs.BottomEntryPosition
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_BottomEntryPosition
  name: BottomEntryPosition
  nameWithType: Stairs.BottomEntryPosition
  fullName: TinyLife.World.Stairs.BottomEntryPosition
- uid: TinyLife.World.Stairs.TopEntryPosition*
  commentId: Overload:TinyLife.World.Stairs.TopEntryPosition
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_TopEntryPosition
  name: TopEntryPosition
  nameWithType: Stairs.TopEntryPosition
  fullName: TinyLife.World.Stairs.TopEntryPosition
- uid: TinyLife.World.Stairs.#ctor*
  commentId: Overload:TinyLife.World.Stairs.#ctor
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs__ctor_TinyLife_World_StairsType_System_Int32___TinyLife_World_Map_Microsoft_Xna_Framework_Point_System_Int32_MLEM_Maths_Direction2_System_Boolean_
  name: Stairs
  nameWithType: Stairs.Stairs
  fullName: TinyLife.World.Stairs.Stairs
  nameWithType.vb: Stairs.New
  fullName.vb: TinyLife.World.Stairs.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.World.Stairs.Validate*
  commentId: Overload:TinyLife.World.Stairs.Validate
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_Validate_TinyLife_World_Map_
  name: Validate
  nameWithType: Stairs.Validate
  fullName: TinyLife.World.Stairs.Validate
- uid: TinyLife.World.Stairs.Colors
  commentId: F:TinyLife.World.Stairs.Colors
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_Colors
  name: Colors
  nameWithType: Stairs.Colors
  fullName: TinyLife.World.Stairs.Colors
- uid: TinyLife.World.Stairs.Draw*
  commentId: Overload:TinyLife.World.Stairs.Draw
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Nullable_Microsoft_Xna_Framework_Color__
  name: Draw
  nameWithType: Stairs.Draw
  fullName: TinyLife.World.Stairs.Draw
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: System.Nullable{Microsoft.Xna.Framework.Color}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: Microsoft.Xna.Framework.Color?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.World.Stairs
  commentId: T:TinyLife.World.Stairs
  parent: TinyLife.World
  href: TinyLife.World.Stairs.html
  name: Stairs
  nameWithType: Stairs
  fullName: TinyLife.World.Stairs
- uid: TinyLife.World.Stairs.GetArea*
  commentId: Overload:TinyLife.World.Stairs.GetArea
  href: TinyLife.World.Stairs.html#TinyLife_World_Stairs_GetArea_Microsoft_Xna_Framework_Point_MLEM_Maths_Direction2_
  name: GetArea
  nameWithType: Stairs.GetArea
  fullName: TinyLife.World.Stairs.GetArea
