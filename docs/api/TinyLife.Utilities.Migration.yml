### YamlMime:ManagedReference
items:
- uid: TinyLife.Utilities.Migration
  commentId: T:TinyLife.Utilities.Migration
  id: Migration
  parent: TinyLife.Utilities
  children:
  - TinyLife.Utilities.Migration.#ctor(System.String,TinyLife.Utilities.MigrationPhase,System.Func{System.Object,System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},TinyLife.Utilities.MigrationResult})
  - TinyLife.Utilities.Migration.Apply
  - TinyLife.Utilities.Migration.Migrations
  - TinyLife.Utilities.Migration.Name
  - TinyLife.Utilities.Migration.Phase
  - TinyLife.Utilities.Migration.Priority
  - TinyLife.Utilities.Migration.Register``1(System.Collections.Generic.IEnumerable{TinyLife.Utilities.Migration{``0}})
  - TinyLife.Utilities.Migration.Silent
  langs:
  - csharp
  - vb
  name: Migration
  nameWithType: Migration
  fullName: TinyLife.Utilities.Migration
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Utilities
  summary: >-
    A migration represents an action or set of actions that need to be done to an object to update it to the game's current version.

    Migrations are available for a multitude of object types that inhabit a <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.World.ExportedHousehold" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.World.ExportedLot" data-throw-if-not-resolved="false"></xref> by default.

    Note that migrations do not have to be registered using <xref href="TinyLife.Utilities.Migration.Register%60%601(System.Collections.Generic.IEnumerable%7bTinyLife.Utilities.Migration%7b%60%600%7d%7d)" data-throw-if-not-resolved="false"></xref> when added to a preexisting collection like <xref href="TinyLife.Actions.ActionType.TypeSettings.Migrations" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Actions.Action.Migrations" data-throw-if-not-resolved="false"></xref>, but only when a mod adds a custom set of migrations for a custom object type.
  example: []
  syntax:
    content: public class Migration
    content.vb: Public Class Migration
  inheritance:
  - System.Object
  derivedClasses:
  - TinyLife.Utilities.Migration`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Utilities.Migration.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Utilities.Migration.Migrations
  commentId: F:TinyLife.Utilities.Migration.Migrations
  id: Migrations
  parent: TinyLife.Utilities.Migration
  langs:
  - csharp
  - vb
  name: Migrations
  nameWithType: Migration.Migrations
  fullName: TinyLife.Utilities.Migration.Migrations
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Utilities
  summary: A dictionary that contains all of the migrations for all objects that are currently registered.
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, Migration> Migrations
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Utilities.Migration}
    content.vb: Public Shared ReadOnly Migrations As ReadOnlyDictionary(Of String, Migration)
- uid: TinyLife.Utilities.Migration.Name
  commentId: F:TinyLife.Utilities.Migration.Name
  id: Name
  parent: TinyLife.Utilities.Migration
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Migration.Name
  fullName: TinyLife.Utilities.Migration.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Utilities
  summary: The name of this migration, which is stored in the save file or exported content once this migration has been applied if <xref href="TinyLife.Utilities.Migration.Silent" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Utilities.Migration.Phase
  commentId: F:TinyLife.Utilities.Migration.Phase
  id: Phase
  parent: TinyLife.Utilities.Migration
  langs:
  - csharp
  - vb
  name: Phase
  nameWithType: Migration.Phase
  fullName: TinyLife.Utilities.Migration.Phase
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Utilities
  summary: >-
    The <xref href="TinyLife.Utilities.MigrationPhase" data-throw-if-not-resolved="false"></xref> that this migration should be applied on.

    Note that some object types only support the <xref href="TinyLife.Utilities.MigrationPhase.Single" data-throw-if-not-resolved="false"></xref> phase.
  example: []
  syntax:
    content: public readonly MigrationPhase Phase
    return:
      type: TinyLife.Utilities.MigrationPhase
    content.vb: Public ReadOnly Phase As MigrationPhase
- uid: TinyLife.Utilities.Migration.Apply
  commentId: F:TinyLife.Utilities.Migration.Apply
  id: Apply
  parent: TinyLife.Utilities.Migration
  langs:
  - csharp
  - vb
  name: Apply
  nameWithType: Migration.Apply
  fullName: TinyLife.Utilities.Migration.Apply
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Utilities
  summary: >-
    A function that applies this migration on an object.

    The passed JSON extension data is additional data that is loaded from disk, but didn't have an appropriate property or field to store it in. This can be useful for migrating objects whose property or field names changed, at which point relevant entries in this dictionary should be removed as part of this function.
  example: []
  syntax:
    content: public readonly Func<object, IDictionary<string, JToken>, MigrationResult> Apply
    return:
      type: System.Func{System.Object,System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},TinyLife.Utilities.MigrationResult}
    content.vb: Public ReadOnly Apply As Func(Of Object, IDictionary(Of String, JToken), MigrationResult)
- uid: TinyLife.Utilities.Migration.Priority
  commentId: P:TinyLife.Utilities.Migration.Priority
  id: Priority
  parent: TinyLife.Utilities.Migration
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: Migration.Priority
  fullName: TinyLife.Utilities.Migration.Priority
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Utilities
  summary: The priority that this migration should be applied with. A higher priority means that this migration will be applied before migrations with a lower priority. The default value for all migrations is 0.
  example: []
  syntax:
    content: public int Priority { get; init; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Priority As Integer
  overload: TinyLife.Utilities.Migration.Priority*
- uid: TinyLife.Utilities.Migration.Silent
  commentId: P:TinyLife.Utilities.Migration.Silent
  id: Silent
  parent: TinyLife.Utilities.Migration
  langs:
  - csharp
  - vb
  name: Silent
  nameWithType: Migration.Silent
  fullName: TinyLife.Utilities.Migration.Silent
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Utilities
  summary: >-
    Whether the migration is silent. A silent migration does not notify the underlying map or exported content that it has been applied, causing its <xref href="TinyLife.Utilities.Migration.Name" data-throw-if-not-resolved="false"></xref> not to be stored.

    This is useful for migrations that can check whether they've been applied some other way, like whether old data has already been removed.
  example: []
  syntax:
    content: public bool Silent { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Silent As Boolean
  overload: TinyLife.Utilities.Migration.Silent*
- uid: TinyLife.Utilities.Migration.#ctor(System.String,TinyLife.Utilities.MigrationPhase,System.Func{System.Object,System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},TinyLife.Utilities.MigrationResult})
  commentId: M:TinyLife.Utilities.Migration.#ctor(System.String,TinyLife.Utilities.MigrationPhase,System.Func{System.Object,System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},TinyLife.Utilities.MigrationResult})
  id: '#ctor(System.String,TinyLife.Utilities.MigrationPhase,System.Func{System.Object,System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},TinyLife.Utilities.MigrationResult})'
  parent: TinyLife.Utilities.Migration
  langs:
  - csharp
  - vb
  name: Migration(string, MigrationPhase, Func<object, IDictionary<string, JToken>, MigrationResult>)
  nameWithType: Migration.Migration(string, MigrationPhase, Func<object, IDictionary<string, JToken>, MigrationResult>)
  fullName: TinyLife.Utilities.Migration.Migration(string, TinyLife.Utilities.MigrationPhase, System.Func<object, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>, TinyLife.Utilities.MigrationResult>)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Utilities
  summary: >-
    Creates a new migration with the given settings.

    To create a migration instance, use <xref href="TinyLife.Utilities.Migration%601" data-throw-if-not-resolved="false"></xref> instead.
  example: []
  syntax:
    content: protected Migration(string name, MigrationPhase phase, Func<object, IDictionary<string, JToken>, MigrationResult> apply)
    parameters:
    - id: name
      type: System.String
      description: The name of this migration, which is stored in the save file or exported content once this migration has been applied if <xref href="TinyLife.Utilities.Migration.Silent" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    - id: phase
      type: TinyLife.Utilities.MigrationPhase
      description: The <xref href="TinyLife.Utilities.MigrationPhase" data-throw-if-not-resolved="false"></xref> that this migration should be applied on. Note that some object types only support the <xref href="TinyLife.Utilities.MigrationPhase.Single" data-throw-if-not-resolved="false"></xref> phase.
    - id: apply
      type: System.Func{System.Object,System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},TinyLife.Utilities.MigrationResult}
      description: A function that applies this migration on an object. The passed JSON extension data is additional data that is loaded from disk, but didn't have an appropriate property or field to store it in. This can be useful for migrating objects whose property or field names changed.
    content.vb: Protected Sub New(name As String, phase As MigrationPhase, apply As Func(Of Object, IDictionary(Of String, JToken), MigrationResult))
  overload: TinyLife.Utilities.Migration.#ctor*
  nameWithType.vb: Migration.New(String, MigrationPhase, Func(Of Object, IDictionary(Of String, JToken), MigrationResult))
  fullName.vb: TinyLife.Utilities.Migration.New(String, TinyLife.Utilities.MigrationPhase, System.Func(Of Object, System.Collections.Generic.IDictionary(Of String, Newtonsoft.Json.Linq.JToken), TinyLife.Utilities.MigrationResult))
  name.vb: New(String, MigrationPhase, Func(Of Object, IDictionary(Of String, JToken), MigrationResult))
- uid: TinyLife.Utilities.Migration.Register``1(System.Collections.Generic.IEnumerable{TinyLife.Utilities.Migration{``0}})
  commentId: M:TinyLife.Utilities.Migration.Register``1(System.Collections.Generic.IEnumerable{TinyLife.Utilities.Migration{``0}})
  id: Register``1(System.Collections.Generic.IEnumerable{TinyLife.Utilities.Migration{``0}})
  parent: TinyLife.Utilities.Migration
  langs:
  - csharp
  - vb
  name: Register<T>(IEnumerable<Migration<T>>)
  nameWithType: Migration.Register<T>(IEnumerable<Migration<T>>)
  fullName: TinyLife.Utilities.Migration.Register<T>(System.Collections.Generic.IEnumerable<TinyLife.Utilities.Migration<T>>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Utilities
  summary: >-
    Registers a new set of migrations.

    Note that migrations do not have to be registered using <xref href="TinyLife.Utilities.Migration.Register%60%601(System.Collections.Generic.IEnumerable%7bTinyLife.Utilities.Migration%7b%60%600%7d%7d)" data-throw-if-not-resolved="false"></xref> when added to a preexisting collection like <xref href="TinyLife.Actions.ActionType.TypeSettings.Migrations" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Actions.Action.Migrations" data-throw-if-not-resolved="false"></xref>, but only when a mod adds a custom set of migrations for a custom object type.
  example: []
  syntax:
    content: public static void Register<T>(IEnumerable<Migration<T>> migrations)
    parameters:
    - id: migrations
      type: System.Collections.Generic.IEnumerable{TinyLife.Utilities.Migration{{T}}}
      description: The migrations to register.
    typeParameters:
    - id: T
      description: The type of the migrations being registered.
    content.vb: Public Shared Sub Register(Of T)(migrations As IEnumerable(Of Migration(Of T)))
  overload: TinyLife.Utilities.Migration.Register*
  nameWithType.vb: Migration.Register(Of T)(IEnumerable(Of Migration(Of T)))
  fullName.vb: TinyLife.Utilities.Migration.Register(Of T)(System.Collections.Generic.IEnumerable(Of TinyLife.Utilities.Migration(Of T)))
  name.vb: Register(Of T)(IEnumerable(Of Migration(Of T)))
references:
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World.ExportedHousehold
  commentId: T:TinyLife.World.ExportedHousehold
  parent: TinyLife.World
  href: TinyLife.World.ExportedHousehold.html
  name: ExportedHousehold
  nameWithType: ExportedHousehold
  fullName: TinyLife.World.ExportedHousehold
- uid: TinyLife.World.ExportedLot
  commentId: T:TinyLife.World.ExportedLot
  parent: TinyLife.World
  href: TinyLife.World.ExportedLot.html
  name: ExportedLot
  nameWithType: ExportedLot
  fullName: TinyLife.World.ExportedLot
- uid: TinyLife.Utilities.Migration.Register``1(System.Collections.Generic.IEnumerable{TinyLife.Utilities.Migration{``0}})
  commentId: M:TinyLife.Utilities.Migration.Register``1(System.Collections.Generic.IEnumerable{TinyLife.Utilities.Migration{``0}})
  isExternal: true
  href: TinyLife.Utilities.Migration.html#TinyLife_Utilities_Migration_Register__1_System_Collections_Generic_IEnumerable_TinyLife_Utilities_Migration___0___
  name: Register<T>(IEnumerable<Migration<T>>)
  nameWithType: Migration.Register<T>(IEnumerable<Migration<T>>)
  fullName: TinyLife.Utilities.Migration.Register<T>(System.Collections.Generic.IEnumerable<TinyLife.Utilities.Migration<T>>)
  nameWithType.vb: Migration.Register(Of T)(IEnumerable(Of Migration(Of T)))
  fullName.vb: TinyLife.Utilities.Migration.Register(Of T)(System.Collections.Generic.IEnumerable(Of TinyLife.Utilities.Migration(Of T)))
  name.vb: Register(Of T)(IEnumerable(Of Migration(Of T)))
  spec.csharp:
  - uid: TinyLife.Utilities.Migration.Register``1(System.Collections.Generic.IEnumerable{TinyLife.Utilities.Migration{``0}})
    name: Register
    href: TinyLife.Utilities.Migration.html#TinyLife_Utilities_Migration_Register__1_System_Collections_Generic_IEnumerable_TinyLife_Utilities_Migration___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Migration.Register``1(System.Collections.Generic.IEnumerable{TinyLife.Utilities.Migration{``0}})
    name: Register
    href: TinyLife.Utilities.Migration.html#TinyLife_Utilities_Migration_Register__1_System_Collections_Generic_IEnumerable_TinyLife_Utilities_Migration___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: )
- uid: TinyLife.Actions.ActionType.TypeSettings.Migrations
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.Migrations
  href: TinyLife.Actions.ActionType.TypeSettings.html#TinyLife_Actions_ActionType_TypeSettings_Migrations
  name: Migrations
  nameWithType: ActionType.TypeSettings.Migrations
  fullName: TinyLife.Actions.ActionType.TypeSettings.Migrations
- uid: TinyLife.Actions.Action.Migrations
  commentId: F:TinyLife.Actions.Action.Migrations
  parent: TinyLife.Actions.Action
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_Migrations
  name: Migrations
  nameWithType: Action.Migrations
  fullName: TinyLife.Actions.Action.Migrations
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Utilities.Migration.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Migration>(Migration)
  nameWithType: Extensions.JsonCopy<Migration>(Migration)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Utilities.Migration>(TinyLife.Utilities.Migration)
  nameWithType.vb: Extensions.JsonCopy(Of Migration)(Migration)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Utilities.Migration)(TinyLife.Utilities.Migration)
  name.vb: JsonCopy(Of Migration)(Migration)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Utilities.Migration)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Utilities.Migration
    name: Migration
    href: TinyLife.Utilities.Migration.html
  - name: '>'
  - name: (
  - uid: TinyLife.Utilities.Migration
    name: Migration
    href: TinyLife.Utilities.Migration.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Utilities.Migration)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Utilities.Migration
    name: Migration
    href: TinyLife.Utilities.Migration.html
  - name: )
  - name: (
  - uid: TinyLife.Utilities.Migration
    name: Migration
    href: TinyLife.Utilities.Migration.html
  - name: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Utilities.Migration}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Utilities.Migration}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, Migration>
  nameWithType: ReadOnlyDictionary<string, Migration>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Utilities.Migration>
  nameWithType.vb: ReadOnlyDictionary(Of String, Migration)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Utilities.Migration)
  name.vb: ReadOnlyDictionary(Of String, Migration)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.Migration
    name: Migration
    href: TinyLife.Utilities.Migration.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.Migration
    name: Migration
    href: TinyLife.Utilities.Migration.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.Utilities.Migration.Silent
  commentId: P:TinyLife.Utilities.Migration.Silent
  parent: TinyLife.Utilities.Migration
  href: TinyLife.Utilities.Migration.html#TinyLife_Utilities_Migration_Silent
  name: Silent
  nameWithType: Migration.Silent
  fullName: TinyLife.Utilities.Migration.Silent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Utilities.Migration
  commentId: T:TinyLife.Utilities.Migration
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Migration.html
  name: Migration
  nameWithType: Migration
  fullName: TinyLife.Utilities.Migration
- uid: TinyLife.Utilities.MigrationPhase
  commentId: T:TinyLife.Utilities.MigrationPhase
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.MigrationPhase.html
  name: MigrationPhase
  nameWithType: MigrationPhase
  fullName: TinyLife.Utilities.MigrationPhase
- uid: TinyLife.Utilities.MigrationPhase.Single
  commentId: F:TinyLife.Utilities.MigrationPhase.Single
  href: TinyLife.Utilities.MigrationPhase.html#TinyLife_Utilities_MigrationPhase_Single
  name: Single
  nameWithType: MigrationPhase.Single
  fullName: TinyLife.Utilities.MigrationPhase.Single
- uid: System.Func{System.Object,System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},TinyLife.Utilities.MigrationResult}
  commentId: T:System.Func{System.Object,System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},TinyLife.Utilities.MigrationResult}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<object, IDictionary<string, JToken>, MigrationResult>
  nameWithType: Func<object, IDictionary<string, JToken>, MigrationResult>
  fullName: System.Func<object, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>, TinyLife.Utilities.MigrationResult>
  nameWithType.vb: Func(Of Object, IDictionary(Of String, JToken), MigrationResult)
  fullName.vb: System.Func(Of Object, System.Collections.Generic.IDictionary(Of String, Newtonsoft.Json.Linq.JToken), TinyLife.Utilities.MigrationResult)
  name.vb: Func(Of Object, IDictionary(Of String, JToken), MigrationResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.MigrationResult
    name: MigrationResult
    href: TinyLife.Utilities.MigrationResult.html
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.MigrationResult
    name: MigrationResult
    href: TinyLife.Utilities.MigrationResult.html
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Utilities.Migration.Priority*
  commentId: Overload:TinyLife.Utilities.Migration.Priority
  href: TinyLife.Utilities.Migration.html#TinyLife_Utilities_Migration_Priority
  name: Priority
  nameWithType: Migration.Priority
  fullName: TinyLife.Utilities.Migration.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Utilities.Migration.Name
  commentId: F:TinyLife.Utilities.Migration.Name
  parent: TinyLife.Utilities.Migration
  href: TinyLife.Utilities.Migration.html#TinyLife_Utilities_Migration_Name
  name: Name
  nameWithType: Migration.Name
  fullName: TinyLife.Utilities.Migration.Name
- uid: TinyLife.Utilities.Migration.Silent*
  commentId: Overload:TinyLife.Utilities.Migration.Silent
  href: TinyLife.Utilities.Migration.html#TinyLife_Utilities_Migration_Silent
  name: Silent
  nameWithType: Migration.Silent
  fullName: TinyLife.Utilities.Migration.Silent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Utilities.Migration`1
  commentId: T:TinyLife.Utilities.Migration`1
  href: TinyLife.Utilities.Migration-1.html
  name: Migration<T>
  nameWithType: Migration<T>
  fullName: TinyLife.Utilities.Migration<T>
  nameWithType.vb: Migration(Of T)
  fullName.vb: TinyLife.Utilities.Migration(Of T)
  name.vb: Migration(Of T)
  spec.csharp:
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Migration.#ctor*
  commentId: Overload:TinyLife.Utilities.Migration.#ctor
  href: TinyLife.Utilities.Migration.html#TinyLife_Utilities_Migration__ctor_System_String_TinyLife_Utilities_MigrationPhase_System_Func_System_Object_System_Collections_Generic_IDictionary_System_String_Newtonsoft_Json_Linq_JToken__TinyLife_Utilities_MigrationResult__
  name: Migration
  nameWithType: Migration.Migration
  fullName: TinyLife.Utilities.Migration.Migration
  nameWithType.vb: Migration.New
  fullName.vb: TinyLife.Utilities.Migration.New
  name.vb: New
- uid: TinyLife.Utilities.Migration.Register*
  commentId: Overload:TinyLife.Utilities.Migration.Register
  href: TinyLife.Utilities.Migration.html#TinyLife_Utilities_Migration_Register__1_System_Collections_Generic_IEnumerable_TinyLife_Utilities_Migration___0___
  name: Register
  nameWithType: Migration.Register
  fullName: TinyLife.Utilities.Migration.Register
- uid: System.Collections.Generic.IEnumerable{TinyLife.Utilities.Migration{{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Utilities.Migration{``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Migration<T>>
  nameWithType: IEnumerable<Migration<T>>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Utilities.Migration<T>>
  nameWithType.vb: IEnumerable(Of Migration(Of T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Utilities.Migration(Of T))
  name.vb: IEnumerable(Of Migration(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
