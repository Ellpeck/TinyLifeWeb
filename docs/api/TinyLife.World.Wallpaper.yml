### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Wallpaper
  commentId: T:TinyLife.World.Wallpaper
  id: Wallpaper
  parent: TinyLife.World
  children:
  - TinyLife.World.Wallpaper.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorSettings,System.Int32[],MLEM.Textures.TextureRegion)
  - TinyLife.World.Wallpaper.BaseName
  - TinyLife.World.Wallpaper.BigTiles
  - TinyLife.World.Wallpaper.Cacti
  - TinyLife.World.Wallpaper.ColorSettings
  - TinyLife.World.Wallpaper.Colors
  - TinyLife.World.Wallpaper.Default
  - TinyLife.World.Wallpaper.DoubleTimbered
  - TinyLife.World.Wallpaper.DoubleTimberedRockBase
  - TinyLife.World.Wallpaper.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Int32,Microsoft.Xna.Framework.Vector2,TinyLife.World.WallMode,System.Boolean,System.Boolean,System.Single,System.Boolean,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  - TinyLife.World.Wallpaper.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.GameTime,TinyLife.World.Map,System.Single)
  - TinyLife.World.Wallpaper.GetPrice
  - TinyLife.World.Wallpaper.HorizontalWoodenSiding
  - TinyLife.World.Wallpaper.Icon
  - TinyLife.World.Wallpaper.MismatchedBricks
  - TinyLife.World.Wallpaper.ModernBricks
  - TinyLife.World.Wallpaper.ModernLines
  - TinyLife.World.Wallpaper.ModernSquares
  - TinyLife.World.Wallpaper.Name
  - TinyLife.World.Wallpaper.Price
  - TinyLife.World.Wallpaper.Rainbow
  - TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,MLEM.Textures.TextureRegion,System.Nullable{System.Int32},System.Type)
  - TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],MLEM.Textures.TextureRegion,System.Int32[],System.Type)
  - TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorSettings,MLEM.Textures.TextureRegion,System.Type)
  - TinyLife.World.Wallpaper.RockBase
  - TinyLife.World.Wallpaper.SingleColor
  - TinyLife.World.Wallpaper.SingleColorBaseboard
  - TinyLife.World.Wallpaper.SingleColorTopBottomBoard
  - TinyLife.World.Wallpaper.SingleColorWoodBottom
  - TinyLife.World.Wallpaper.SingleTimbered
  - TinyLife.World.Wallpaper.SingleTimberedRockBase
  - TinyLife.World.Wallpaper.SmallClouds
  - TinyLife.World.Wallpaper.Stars
  - TinyLife.World.Wallpaper.StripedWood
  - TinyLife.World.Wallpaper.TextureRegion
  - TinyLife.World.Wallpaper.Textures
  - TinyLife.World.Wallpaper.VerticalStripes
  - TinyLife.World.Wallpaper.VerticalWallTiles
  - TinyLife.World.Wallpaper.VerticalWoodenSiding
  - TinyLife.World.Wallpaper.Wallpapers
  langs:
  - csharp
  - vb
  name: Wallpaper
  nameWithType: Wallpaper
  fullName: TinyLife.World.Wallpaper
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    A wallpaper is a single-instanced object that can be attached to a <xref href="TinyLife.World.Wall" data-throw-if-not-resolved="false"></xref>, which makes the wall render a different texture.

    To register custom wallpapers, use <xref href="TinyLife.World.Wallpaper.Register(System.String%2cSystem.Int32%2cSystem.Collections.Generic.Dictionary%7bMicrosoft.Xna.Framework.Point%2cMLEM.Textures.TextureRegion%7d%2cMicrosoft.Xna.Framework.Point%2cTinyLife.Utilities.ColorScheme%2cMLEM.Textures.TextureRegion%2cSystem.Nullable%7bSystem.Int32%7d%2cSystem.Type)" data-throw-if-not-resolved="false"></xref>. Note that registered wallpapers need to use a texture generated by <xref href="TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(Wallpaper.Converter))]

      public class Wallpaper
    content.vb: >-
      <JsonConverter(GetType(Wallpaper.Converter))>

      Public Class Wallpaper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.Wallpaper.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.World.Wallpaper.Wallpapers
  commentId: F:TinyLife.World.Wallpaper.Wallpapers
  id: Wallpapers
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Wallpapers
  nameWithType: Wallpaper.Wallpapers
  fullName: TinyLife.World.Wallpaper.Wallpapers
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    The registry for all <xref href="TinyLife.World.Wallpaper" data-throw-if-not-resolved="false"></xref> objects in the game and mods.

    Use <xref href="TinyLife.World.Wallpaper.Register(System.String%2cSystem.Int32%2cSystem.Collections.Generic.Dictionary%7bMicrosoft.Xna.Framework.Point%2cMLEM.Textures.TextureRegion%7d%2cMicrosoft.Xna.Framework.Point%2cTinyLife.Utilities.ColorScheme%2cMLEM.Textures.TextureRegion%2cSystem.Nullable%7bSystem.Int32%7d%2cSystem.Type)" data-throw-if-not-resolved="false"></xref> to register custom wallpapers.
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, Wallpaper[]> Wallpapers
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.Wallpaper[]}
    content.vb: Public Shared ReadOnly Wallpapers As ReadOnlyDictionary(Of String, Wallpaper())
- uid: TinyLife.World.Wallpaper.Default
  commentId: F:TinyLife.World.Wallpaper.Default
  id: Default
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: Wallpaper.Default
  fullName: TinyLife.World.Wallpaper.Default
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] Default
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly [Default] As Wallpaper()
- uid: TinyLife.World.Wallpaper.SingleColor
  commentId: F:TinyLife.World.Wallpaper.SingleColor
  id: SingleColor
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: SingleColor
  nameWithType: Wallpaper.SingleColor
  fullName: TinyLife.World.Wallpaper.SingleColor
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] SingleColor
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly SingleColor As Wallpaper()
- uid: TinyLife.World.Wallpaper.ModernBricks
  commentId: F:TinyLife.World.Wallpaper.ModernBricks
  id: ModernBricks
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: ModernBricks
  nameWithType: Wallpaper.ModernBricks
  fullName: TinyLife.World.Wallpaper.ModernBricks
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] ModernBricks
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly ModernBricks As Wallpaper()
- uid: TinyLife.World.Wallpaper.SingleColorWoodBottom
  commentId: F:TinyLife.World.Wallpaper.SingleColorWoodBottom
  id: SingleColorWoodBottom
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: SingleColorWoodBottom
  nameWithType: Wallpaper.SingleColorWoodBottom
  fullName: TinyLife.World.Wallpaper.SingleColorWoodBottom
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] SingleColorWoodBottom
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly SingleColorWoodBottom As Wallpaper()
- uid: TinyLife.World.Wallpaper.BigTiles
  commentId: F:TinyLife.World.Wallpaper.BigTiles
  id: BigTiles
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: BigTiles
  nameWithType: Wallpaper.BigTiles
  fullName: TinyLife.World.Wallpaper.BigTiles
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] BigTiles
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly BigTiles As Wallpaper()
- uid: TinyLife.World.Wallpaper.SingleColorBaseboard
  commentId: F:TinyLife.World.Wallpaper.SingleColorBaseboard
  id: SingleColorBaseboard
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: SingleColorBaseboard
  nameWithType: Wallpaper.SingleColorBaseboard
  fullName: TinyLife.World.Wallpaper.SingleColorBaseboard
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] SingleColorBaseboard
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly SingleColorBaseboard As Wallpaper()
- uid: TinyLife.World.Wallpaper.SmallClouds
  commentId: F:TinyLife.World.Wallpaper.SmallClouds
  id: SmallClouds
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: SmallClouds
  nameWithType: Wallpaper.SmallClouds
  fullName: TinyLife.World.Wallpaper.SmallClouds
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] SmallClouds
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly SmallClouds As Wallpaper()
- uid: TinyLife.World.Wallpaper.HorizontalWoodenSiding
  commentId: F:TinyLife.World.Wallpaper.HorizontalWoodenSiding
  id: HorizontalWoodenSiding
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: HorizontalWoodenSiding
  nameWithType: Wallpaper.HorizontalWoodenSiding
  fullName: TinyLife.World.Wallpaper.HorizontalWoodenSiding
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] HorizontalWoodenSiding
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly HorizontalWoodenSiding As Wallpaper()
- uid: TinyLife.World.Wallpaper.VerticalWoodenSiding
  commentId: F:TinyLife.World.Wallpaper.VerticalWoodenSiding
  id: VerticalWoodenSiding
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: VerticalWoodenSiding
  nameWithType: Wallpaper.VerticalWoodenSiding
  fullName: TinyLife.World.Wallpaper.VerticalWoodenSiding
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] VerticalWoodenSiding
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly VerticalWoodenSiding As Wallpaper()
- uid: TinyLife.World.Wallpaper.Cacti
  commentId: F:TinyLife.World.Wallpaper.Cacti
  id: Cacti
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Cacti
  nameWithType: Wallpaper.Cacti
  fullName: TinyLife.World.Wallpaper.Cacti
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] Cacti
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly Cacti As Wallpaper()
- uid: TinyLife.World.Wallpaper.ModernLines
  commentId: F:TinyLife.World.Wallpaper.ModernLines
  id: ModernLines
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: ModernLines
  nameWithType: Wallpaper.ModernLines
  fullName: TinyLife.World.Wallpaper.ModernLines
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] ModernLines
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly ModernLines As Wallpaper()
- uid: TinyLife.World.Wallpaper.ModernSquares
  commentId: F:TinyLife.World.Wallpaper.ModernSquares
  id: ModernSquares
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: ModernSquares
  nameWithType: Wallpaper.ModernSquares
  fullName: TinyLife.World.Wallpaper.ModernSquares
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] ModernSquares
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly ModernSquares As Wallpaper()
- uid: TinyLife.World.Wallpaper.SingleColorTopBottomBoard
  commentId: F:TinyLife.World.Wallpaper.SingleColorTopBottomBoard
  id: SingleColorTopBottomBoard
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: SingleColorTopBottomBoard
  nameWithType: Wallpaper.SingleColorTopBottomBoard
  fullName: TinyLife.World.Wallpaper.SingleColorTopBottomBoard
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] SingleColorTopBottomBoard
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly SingleColorTopBottomBoard As Wallpaper()
- uid: TinyLife.World.Wallpaper.VerticalStripes
  commentId: F:TinyLife.World.Wallpaper.VerticalStripes
  id: VerticalStripes
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: VerticalStripes
  nameWithType: Wallpaper.VerticalStripes
  fullName: TinyLife.World.Wallpaper.VerticalStripes
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] VerticalStripes
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly VerticalStripes As Wallpaper()
- uid: TinyLife.World.Wallpaper.Stars
  commentId: F:TinyLife.World.Wallpaper.Stars
  id: Stars
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Stars
  nameWithType: Wallpaper.Stars
  fullName: TinyLife.World.Wallpaper.Stars
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] Stars
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly Stars As Wallpaper()
- uid: TinyLife.World.Wallpaper.VerticalWallTiles
  commentId: F:TinyLife.World.Wallpaper.VerticalWallTiles
  id: VerticalWallTiles
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: VerticalWallTiles
  nameWithType: Wallpaper.VerticalWallTiles
  fullName: TinyLife.World.Wallpaper.VerticalWallTiles
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] VerticalWallTiles
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly VerticalWallTiles As Wallpaper()
- uid: TinyLife.World.Wallpaper.MismatchedBricks
  commentId: F:TinyLife.World.Wallpaper.MismatchedBricks
  id: MismatchedBricks
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: MismatchedBricks
  nameWithType: Wallpaper.MismatchedBricks
  fullName: TinyLife.World.Wallpaper.MismatchedBricks
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] MismatchedBricks
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly MismatchedBricks As Wallpaper()
- uid: TinyLife.World.Wallpaper.DoubleTimbered
  commentId: F:TinyLife.World.Wallpaper.DoubleTimbered
  id: DoubleTimbered
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: DoubleTimbered
  nameWithType: Wallpaper.DoubleTimbered
  fullName: TinyLife.World.Wallpaper.DoubleTimbered
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] DoubleTimbered
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly DoubleTimbered As Wallpaper()
- uid: TinyLife.World.Wallpaper.SingleTimbered
  commentId: F:TinyLife.World.Wallpaper.SingleTimbered
  id: SingleTimbered
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: SingleTimbered
  nameWithType: Wallpaper.SingleTimbered
  fullName: TinyLife.World.Wallpaper.SingleTimbered
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] SingleTimbered
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly SingleTimbered As Wallpaper()
- uid: TinyLife.World.Wallpaper.RockBase
  commentId: F:TinyLife.World.Wallpaper.RockBase
  id: RockBase
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: RockBase
  nameWithType: Wallpaper.RockBase
  fullName: TinyLife.World.Wallpaper.RockBase
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] RockBase
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly RockBase As Wallpaper()
- uid: TinyLife.World.Wallpaper.DoubleTimberedRockBase
  commentId: F:TinyLife.World.Wallpaper.DoubleTimberedRockBase
  id: DoubleTimberedRockBase
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: DoubleTimberedRockBase
  nameWithType: Wallpaper.DoubleTimberedRockBase
  fullName: TinyLife.World.Wallpaper.DoubleTimberedRockBase
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] DoubleTimberedRockBase
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly DoubleTimberedRockBase As Wallpaper()
- uid: TinyLife.World.Wallpaper.SingleTimberedRockBase
  commentId: F:TinyLife.World.Wallpaper.SingleTimberedRockBase
  id: SingleTimberedRockBase
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: SingleTimberedRockBase
  nameWithType: Wallpaper.SingleTimberedRockBase
  fullName: TinyLife.World.Wallpaper.SingleTimberedRockBase
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] SingleTimberedRockBase
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly SingleTimberedRockBase As Wallpaper()
- uid: TinyLife.World.Wallpaper.StripedWood
  commentId: F:TinyLife.World.Wallpaper.StripedWood
  id: StripedWood
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: StripedWood
  nameWithType: Wallpaper.StripedWood
  fullName: TinyLife.World.Wallpaper.StripedWood
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] StripedWood
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly StripedWood As Wallpaper()
- uid: TinyLife.World.Wallpaper.Rainbow
  commentId: F:TinyLife.World.Wallpaper.Rainbow
  id: Rainbow
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Rainbow
  nameWithType: Wallpaper.Rainbow
  fullName: TinyLife.World.Wallpaper.Rainbow
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  syntax:
    content: public static readonly Wallpaper[] Rainbow
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared ReadOnly Rainbow As Wallpaper()
- uid: TinyLife.World.Wallpaper.BaseName
  commentId: F:TinyLife.World.Wallpaper.BaseName
  id: BaseName
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: BaseName
  nameWithType: Wallpaper.BaseName
  fullName: TinyLife.World.Wallpaper.BaseName
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The name of this type of wallpaper. Whereas <xref href="TinyLife.World.Wallpaper.Name" data-throw-if-not-resolved="false"></xref> has the index of its color scheme appended to it, this one is just the type's name.
  example: []
  syntax:
    content: public readonly string BaseName
    return:
      type: System.String
    content.vb: Public ReadOnly BaseName As String
- uid: TinyLife.World.Wallpaper.Name
  commentId: F:TinyLife.World.Wallpaper.Name
  id: Name
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Wallpaper.Name
  fullName: TinyLife.World.Wallpaper.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The name of this specific wallpaper. This is comprised of the <xref href="TinyLife.World.Wallpaper.BaseName" data-throw-if-not-resolved="false"></xref> with its color scheme index attached to it.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.World.Wallpaper.Price
  commentId: F:TinyLife.World.Wallpaper.Price
  id: Price
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: Wallpaper.Price
  fullName: TinyLife.World.Wallpaper.Price
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The price of this wallpaper. Can be retrieved easily using <xref href="TinyLife.World.Wallpaper.GetPrice" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly int Price
    return:
      type: System.Int32
    content.vb: Public ReadOnly Price As Integer
- uid: TinyLife.World.Wallpaper.ColorSettings
  commentId: F:TinyLife.World.Wallpaper.ColorSettings
  id: ColorSettings
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: ColorSettings
  nameWithType: Wallpaper.ColorSettings
  fullName: TinyLife.World.Wallpaper.ColorSettings
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The color settings used by this wallpaper.
  example: []
  syntax:
    content: public readonly ColorSettings ColorSettings
    return:
      type: TinyLife.Utilities.ColorSettings
    content.vb: Public ReadOnly ColorSettings As ColorSettings
- uid: TinyLife.World.Wallpaper.Colors
  commentId: F:TinyLife.World.Wallpaper.Colors
  id: Colors
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Colors
  nameWithType: Wallpaper.Colors
  fullName: TinyLife.World.Wallpaper.Colors
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    The set of colors applied to this wallpaper instance.

    Each entry represents an index in the <xref href="TinyLife.World.Wallpaper.ColorSettings" data-throw-if-not-resolved="false"></xref> of this wallpaper.
  example: []
  syntax:
    content: public readonly int[] Colors
    return:
      type: System.Int32[]
    content.vb: Public ReadOnly Colors As Integer()
- uid: TinyLife.World.Wallpaper.Icon
  commentId: F:TinyLife.World.Wallpaper.Icon
  id: Icon
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: Wallpaper.Icon
  fullName: TinyLife.World.Wallpaper.Icon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    The build mode icon for this object, which represents the category / theme / mod that it comes from.

    If this value is nonnull, the icon will be displayed in the corner of the build mode button for this object.
  example: []
  syntax:
    content: public readonly TextureRegion Icon
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Icon As TextureRegion
- uid: TinyLife.World.Wallpaper.Textures
  commentId: F:TinyLife.World.Wallpaper.Textures
  id: Textures
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Textures
  nameWithType: Wallpaper.Textures
  fullName: TinyLife.World.Wallpaper.Textures
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: The texture regions that this wallpaper's <xref href="TinyLife.World.Wallpaper.TextureRegion" data-throw-if-not-resolved="false"></xref> is on.
  example: []
  syntax:
    content: public readonly Dictionary<Point, TextureRegion> Textures
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public ReadOnly Textures As Dictionary(Of Point, TextureRegion)
- uid: TinyLife.World.Wallpaper.TextureRegion
  commentId: F:TinyLife.World.Wallpaper.TextureRegion
  id: TextureRegion
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: TextureRegion
  nameWithType: Wallpaper.TextureRegion
  fullName: TinyLife.World.Wallpaper.TextureRegion
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    The texture region on the <xref href="TinyLife.World.Wallpaper.Textures" data-throw-if-not-resolved="false"></xref> that this wallpaper's texture is located at.

    Additional texture regions will be gathered to the right of this region's coordinates.
  example: []
  syntax:
    content: public readonly Point TextureRegion
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public ReadOnly TextureRegion As Point
- uid: TinyLife.World.Wallpaper.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorSettings,System.Int32[],MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.World.Wallpaper.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorSettings,System.Int32[],MLEM.Textures.TextureRegion)
  id: '#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorSettings,System.Int32[],MLEM.Textures.TextureRegion)'
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Wallpaper(string, string, int, Dictionary<Point, TextureRegion>, Point, ColorSettings, int[], TextureRegion)
  nameWithType: Wallpaper.Wallpaper(string, string, int, Dictionary<Point, TextureRegion>, Point, ColorSettings, int[], TextureRegion)
  fullName: TinyLife.World.Wallpaper.Wallpaper(string, string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorSettings, int[], MLEM.Textures.TextureRegion)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    Creates a new wallpaper with the given settings.

    To create an instance of a custom wallpaper class, use <xref href="TinyLife.World.Wallpaper.Register(System.String%2cSystem.Int32%2cSystem.Collections.Generic.Dictionary%7bMicrosoft.Xna.Framework.Point%2cMLEM.Textures.TextureRegion%7d%2cMicrosoft.Xna.Framework.Point%2cTinyLife.Utilities.ColorScheme%2cMLEM.Textures.TextureRegion%2cSystem.Nullable%7bSystem.Int32%7d%2cSystem.Type)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected Wallpaper(string baseName, string name, int price, Dictionary<Point, TextureRegion> textures, Point textureRegion, ColorSettings colorSettings, int[] colors, TextureRegion icon)
    parameters:
    - id: baseName
      type: System.String
    - id: name
      type: System.String
    - id: price
      type: System.Int32
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
    - id: colorSettings
      type: TinyLife.Utilities.ColorSettings
    - id: colors
      type: System.Int32[]
    - id: icon
      type: MLEM.Textures.TextureRegion
    content.vb: Protected Sub New(baseName As String, name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), textureRegion As Point, colorSettings As ColorSettings, colors As Integer(), icon As TextureRegion)
  overload: TinyLife.World.Wallpaper.#ctor*
  nameWithType.vb: Wallpaper.New(String, String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorSettings, Integer(), TextureRegion)
  fullName.vb: TinyLife.World.Wallpaper.New(String, String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorSettings, Integer(), MLEM.Textures.TextureRegion)
  name.vb: New(String, String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorSettings, Integer(), TextureRegion)
- uid: TinyLife.World.Wallpaper.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Int32,Microsoft.Xna.Framework.Vector2,TinyLife.World.WallMode,System.Boolean,System.Boolean,System.Single,System.Boolean,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.World.Wallpaper.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Int32,Microsoft.Xna.Framework.Vector2,TinyLife.World.WallMode,System.Boolean,System.Boolean,System.Single,System.Boolean,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Int32,Microsoft.Xna.Framework.Vector2,TinyLife.World.WallMode,System.Boolean,System.Boolean,System.Single,System.Boolean,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch, Map, Point, Point, int, Vector2, WallMode, bool, bool, float, bool, float, Color?)
  nameWithType: Wallpaper.Draw(GameTime, SpriteBatch, Map, Point, Point, int, Vector2, WallMode, bool, bool, float, bool, float, Color?)
  fullName: TinyLife.World.Wallpaper.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, int, Microsoft.Xna.Framework.Vector2, TinyLife.World.WallMode, bool, bool, float, bool, float, Microsoft.Xna.Framework.Color?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Draws this wallpaper on the given wall with the given data.
  example: []
  syntax:
    content: public virtual void Draw(GameTime time, SpriteBatch batch, Map map, Point pos1, Point pos2, int floor, Vector2 drawPos, WallMode mode, bool isDown, bool vertical, float scale, bool shadow, float depthOffset = 0, Color? overrideColor = null)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current game time
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch used for rendering
    - id: map
      type: TinyLife.World.Map
      description: The map.
    - id: pos1
      type: Microsoft.Xna.Framework.Point
      description: The first position in the <xref href="TinyLife.Objects.WallLike.Positions" data-throw-if-not-resolved="false"></xref> array.
    - id: pos2
      type: Microsoft.Xna.Framework.Point
      description: The second position in the <xref href="TinyLife.Objects.WallLike.Positions" data-throw-if-not-resolved="false"></xref> array.
    - id: floor
      type: System.Int32
      description: The floor.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position, in screen coordinates, that the wall should be drawn at
    - id: mode
      type: TinyLife.World.WallMode
      description: The <xref href="TinyLife.World.WallMode" data-throw-if-not-resolved="false"></xref> that the wall should be drawn with
    - id: isDown
      type: System.Boolean
      description: Whether or not the wall is rendering with a reduced height
    - id: vertical
      type: System.Boolean
      description: Whether or not the wall is vertical (or horizontal) in the world
    - id: scale
      type: System.Single
      description: The scale that the wall should be rendered with
    - id: shadow
      type: System.Boolean
      description: Whether or not the shadow texture should be applied on top of the texture
    - id: depthOffset
      type: System.Single
      description: An offset that is optionally added to the draw depth.
    - id: overrideColor
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: A color that this object should be rendered with, instead of its default color
    content.vb: Public Overridable Sub Draw(time As GameTime, batch As SpriteBatch, map As Map, pos1 As Point, pos2 As Point, floor As Integer, drawPos As Vector2, mode As WallMode, isDown As Boolean, vertical As Boolean, scale As Single, shadow As Boolean, depthOffset As Single = 0, overrideColor As Color? = Nothing)
  overload: TinyLife.World.Wallpaper.Draw*
  nameWithType.vb: Wallpaper.Draw(GameTime, SpriteBatch, Map, Point, Point, Integer, Vector2, WallMode, Boolean, Boolean, Single, Boolean, Single, Color?)
  fullName.vb: TinyLife.World.Wallpaper.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Integer, Microsoft.Xna.Framework.Vector2, TinyLife.World.WallMode, Boolean, Boolean, Single, Boolean, Single, Microsoft.Xna.Framework.Color?)
  name.vb: Draw(GameTime, SpriteBatch, Map, Point, Point, Integer, Vector2, WallMode, Boolean, Boolean, Single, Boolean, Single, Color?)
- uid: TinyLife.World.Wallpaper.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.GameTime,TinyLife.World.Map,System.Single)
  commentId: M:TinyLife.World.Wallpaper.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.GameTime,TinyLife.World.Map,System.Single)
  id: DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.GameTime,TinyLife.World.Map,System.Single)
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: DrawUi(Element, SpriteBatch, GameTime, Map, float)
  nameWithType: Wallpaper.DrawUi(Element, SpriteBatch, GameTime, Map, float)
  fullName: TinyLife.World.Wallpaper.DrawUi(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.GameTime, TinyLife.World.Map, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Draws this wallpaper on the given <xref href="MLEM.Ui.Elements.Element" data-throw-if-not-resolved="false"></xref> in ui space
  example: []
  syntax:
    content: public virtual void DrawUi(Element e, SpriteBatch batch, GameTime time, Map map, float drawScale)
    parameters:
    - id: e
      type: MLEM.Ui.Elements.Element
      description: The element to draw on
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The batch to draw with
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current game time
    - id: map
      type: TinyLife.World.Map
      description: The map.
    - id: drawScale
      type: System.Single
      description: The scale to draw with.
    content.vb: Public Overridable Sub DrawUi(e As Element, batch As SpriteBatch, time As GameTime, map As Map, drawScale As Single)
  overload: TinyLife.World.Wallpaper.DrawUi*
  nameWithType.vb: Wallpaper.DrawUi(Element, SpriteBatch, GameTime, Map, Single)
  fullName.vb: TinyLife.World.Wallpaper.DrawUi(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.GameTime, TinyLife.World.Map, Single)
  name.vb: DrawUi(Element, SpriteBatch, GameTime, Map, Single)
- uid: TinyLife.World.Wallpaper.GetPrice
  commentId: M:TinyLife.World.Wallpaper.GetPrice
  id: GetPrice
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: GetPrice()
  nameWithType: Wallpaper.GetPrice()
  fullName: TinyLife.World.Wallpaper.GetPrice()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: Returns the price for this wallpaper item.
  example: []
  syntax:
    content: public virtual float GetPrice()
    return:
      type: System.Single
      description: The price.
    content.vb: Public Overridable Function GetPrice() As Single
  overload: TinyLife.World.Wallpaper.GetPrice*
- uid: TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,MLEM.Textures.TextureRegion,System.Nullable{System.Int32},System.Type)
  commentId: M:TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,MLEM.Textures.TextureRegion,System.Nullable{System.Int32},System.Type)
  id: Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,MLEM.Textures.TextureRegion,System.Nullable{System.Int32},System.Type)
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme, TextureRegion, int?, Type)
  nameWithType: Wallpaper.Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme, TextureRegion, int?, Type)
  fullName: TinyLife.World.Wallpaper.Register(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme, MLEM.Textures.TextureRegion, int?, System.Type)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    Creates and registers a new wallpaper with the given settings.

    Note that the <code class="paramref">textures</code> should be one generated using <xref href="TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>, as otherwise, graphical issues will occur.
  example: []
  syntax:
    content: public static Wallpaper[] Register(string name, int price, Dictionary<Point, TextureRegion> textures, Point textureRegion, ColorScheme color, TextureRegion icon = null, int? defaultColor = null, Type constructedType = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the wallpaper type
    - id: price
      type: System.Int32
      description: The price of a single wallpaper of this type
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The texture that this wallpaper should use. This needs to have been generated using <xref href="TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
      description: The top left texture region of this wallpaper (on the original texture, not the mask)
    - id: color
      type: TinyLife.Utilities.ColorScheme
      description: The color scheme of the wallpaper.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The build mode category icon of this object
    - id: defaultColor
      type: System.Nullable{System.Int32}
      description: The color that this wallpaper should display with by default in the wallpaper tool.
    - id: constructedType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that should be constructed to create this wallpaper. Defaults to <xref href="TinyLife.World.Wallpaper" data-throw-if-not-resolved="false"></xref>.
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared Function Register(name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), textureRegion As Point, color As ColorScheme, icon As TextureRegion = Nothing, defaultColor As Integer? = Nothing, constructedType As Type = Nothing) As Wallpaper()
  overload: TinyLife.World.Wallpaper.Register*
  nameWithType.vb: Wallpaper.Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme, TextureRegion, Integer?, Type)
  fullName.vb: TinyLife.World.Wallpaper.Register(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme, MLEM.Textures.TextureRegion, Integer?, System.Type)
  name.vb: Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme, TextureRegion, Integer?, Type)
- uid: TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],MLEM.Textures.TextureRegion,System.Int32[],System.Type)
  commentId: M:TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],MLEM.Textures.TextureRegion,System.Int32[],System.Type)
  id: Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],MLEM.Textures.TextureRegion,System.Int32[],System.Type)
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme[], TextureRegion, int[], Type)
  nameWithType: Wallpaper.Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme[], TextureRegion, int[], Type)
  fullName: TinyLife.World.Wallpaper.Register(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme[], MLEM.Textures.TextureRegion, int[], System.Type)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    Creates and registers a new wallpaper with the given settings.

    Note that the <code class="paramref">textures</code> should be one generated using <xref href="TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>, as otherwise, graphical issues will occur.
  example: []
  syntax:
    content: public static Wallpaper[] Register(string name, int price, Dictionary<Point, TextureRegion> textures, Point textureRegion, ColorScheme[] colors, TextureRegion icon = null, int[] defaultColors = null, Type constructedType = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the wallpaper type
    - id: price
      type: System.Int32
      description: The price of a single wallpaper of this type
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The texture that this wallpaper should use. This needs to have been generated using <xref href="TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
      description: The top left texture region of this wallpaper (on the original texture, not the mask)
    - id: colors
      type: TinyLife.Utilities.ColorScheme[]
      description: The color schemes of the wallpaper.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The build mode category icon of this object
    - id: defaultColors
      type: System.Int32[]
      description: The colosr that this wallpaper should display with by default in the wallpaper tool.
    - id: constructedType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that should be constructed to create this wallpaper. Defaults to <xref href="TinyLife.World.Wallpaper" data-throw-if-not-resolved="false"></xref>.
    return:
      type: TinyLife.World.Wallpaper[]
    content.vb: Public Shared Function Register(name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), textureRegion As Point, colors As ColorScheme(), icon As TextureRegion = Nothing, defaultColors As Integer() = Nothing, constructedType As Type = Nothing) As Wallpaper()
  overload: TinyLife.World.Wallpaper.Register*
  nameWithType.vb: Wallpaper.Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme(), TextureRegion, Integer(), Type)
  fullName.vb: TinyLife.World.Wallpaper.Register(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme(), MLEM.Textures.TextureRegion, Integer(), System.Type)
  name.vb: Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme(), TextureRegion, Integer(), Type)
- uid: TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorSettings,MLEM.Textures.TextureRegion,System.Type)
  commentId: M:TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorSettings,MLEM.Textures.TextureRegion,System.Type)
  id: Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorSettings,MLEM.Textures.TextureRegion,System.Type)
  parent: TinyLife.World.Wallpaper
  langs:
  - csharp
  - vb
  name: Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorSettings, TextureRegion, Type)
  nameWithType: Wallpaper.Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorSettings, TextureRegion, Type)
  fullName: TinyLife.World.Wallpaper.Register(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorSettings, MLEM.Textures.TextureRegion, System.Type)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.World
  summary: >-
    Creates and registers a new wallpaper with the given settings.

    Note that the <code class="paramref">textures</code> should be one generated using <xref href="TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>, as otherwise, graphical issues will occur.
  example: []
  syntax:
    content: public static Wallpaper[] Register(string name, int price, Dictionary<Point, TextureRegion> textures, Point textureRegion, ColorSettings colorSettings, TextureRegion icon = null, Type constructedType = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the wallpaper type
    - id: price
      type: System.Int32
      description: The price of a single wallpaper of this type
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The texture that this wallpaper should use. This needs to have been generated using <xref href="TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
      description: The top left texture region of this wallpaper (on the original texture, not the mask)
    - id: colorSettings
      type: TinyLife.Utilities.ColorSettings
      description: The color schemes for each layer of the wallpaper. If there is more than one entry, additional layers will automatically be gathered to the right of the passed <code class="paramref">textureRegion</code>.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The build mode category icon of this object
    - id: constructedType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that should be constructed to create this wallpaper. Defaults to <xref href="TinyLife.World.Wallpaper" data-throw-if-not-resolved="false"></xref>.
    return:
      type: TinyLife.World.Wallpaper[]
      description: The registered wallpapers.
    content.vb: Public Shared Function Register(name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), textureRegion As Point, colorSettings As ColorSettings, icon As TextureRegion = Nothing, constructedType As Type = Nothing) As Wallpaper()
  overload: TinyLife.World.Wallpaper.Register*
  nameWithType.vb: Wallpaper.Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorSettings, TextureRegion, Type)
  fullName.vb: TinyLife.World.Wallpaper.Register(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorSettings, MLEM.Textures.TextureRegion, System.Type)
  name.vb: Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorSettings, TextureRegion, Type)
references:
- uid: TinyLife.World.Wall
  commentId: T:TinyLife.World.Wall
  parent: TinyLife.World
  href: TinyLife.World.Wall.html
  name: Wall
  nameWithType: Wall
  fullName: TinyLife.World.Wall
- uid: TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,MLEM.Textures.TextureRegion,System.Nullable{System.Int32},System.Type)
  commentId: M:TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,MLEM.Textures.TextureRegion,System.Nullable{System.Int32},System.Type)
  isExternal: true
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_Register_System_String_System_Int32_System_Collections_Generic_Dictionary_Microsoft_Xna_Framework_Point_MLEM_Textures_TextureRegion__Microsoft_Xna_Framework_Point_TinyLife_Utilities_ColorScheme_MLEM_Textures_TextureRegion_System_Nullable_System_Int32__System_Type_
  name: Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme, TextureRegion, int?, Type)
  nameWithType: Wallpaper.Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme, TextureRegion, int?, Type)
  fullName: TinyLife.World.Wallpaper.Register(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme, MLEM.Textures.TextureRegion, int?, System.Type)
  nameWithType.vb: Wallpaper.Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme, TextureRegion, Integer?, Type)
  fullName.vb: TinyLife.World.Wallpaper.Register(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme, MLEM.Textures.TextureRegion, Integer?, System.Type)
  name.vb: Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme, TextureRegion, Integer?, Type)
  spec.csharp:
  - uid: TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,MLEM.Textures.TextureRegion,System.Nullable{System.Int32},System.Type)
    name: Register
    href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_Register_System_String_System_Int32_System_Collections_Generic_Dictionary_Microsoft_Xna_Framework_Point_MLEM_Textures_TextureRegion__Microsoft_Xna_Framework_Point_TinyLife_Utilities_ColorScheme_MLEM_Textures_TextureRegion_System_Nullable_System_Int32__System_Type_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    href: TinyLife.Utilities.ColorScheme.html
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: TinyLife.World.Wallpaper.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,MLEM.Textures.TextureRegion,System.Nullable{System.Int32},System.Type)
    name: Register
    href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_Register_System_String_System_Int32_System_Collections_Generic_Dictionary_Microsoft_Xna_Framework_Point_MLEM_Textures_TextureRegion__Microsoft_Xna_Framework_Point_TinyLife_Utilities_ColorScheme_MLEM_Textures_TextureRegion_System_Nullable_System_Int32__System_Type_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    href: TinyLife.Utilities.ColorScheme.html
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)
  commentId: M:TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)
  isExternal: true
  href: TinyLife.World.WallMode.html#TinyLife_World_WallMode_ApplyMasks_Microsoft_Xna_Framework_Graphics_Texture2D_System_Int32_System_Int32_
  name: ApplyMasks(Texture2D, int, int)
  nameWithType: WallMode.ApplyMasks(Texture2D, int, int)
  fullName: TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D, int, int)
  nameWithType.vb: WallMode.ApplyMasks(Texture2D, Integer, Integer)
  fullName.vb: TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D, Integer, Integer)
  name.vb: ApplyMasks(Texture2D, Integer, Integer)
  spec.csharp:
  - uid: TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)
    name: ApplyMasks
    href: TinyLife.World.WallMode.html#TinyLife_World_WallMode_ApplyMasks_Microsoft_Xna_Framework_Graphics_Texture2D_System_Int32_System_Int32_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.World.WallMode.ApplyMasks(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)
    name: ApplyMasks
    href: TinyLife.World.WallMode.html#TinyLife_World_WallMode_ApplyMasks_Microsoft_Xna_Framework_Graphics_Texture2D_System_Int32_System_Int32_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.Wallpaper.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Wallpaper>(Wallpaper)
  nameWithType: Extensions.JsonCopy<Wallpaper>(Wallpaper)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Wallpaper>(TinyLife.World.Wallpaper)
  nameWithType.vb: Extensions.JsonCopy(Of Wallpaper)(Wallpaper)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Wallpaper)(TinyLife.World.Wallpaper)
  name.vb: JsonCopy(Of Wallpaper)(Wallpaper)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Wallpaper)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
    href: TinyLife.World.Wallpaper.html
  - name: '>'
  - name: (
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
    href: TinyLife.World.Wallpaper.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Wallpaper)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
    href: TinyLife.World.Wallpaper.html
  - name: )
  - name: (
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
    href: TinyLife.World.Wallpaper.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.World.Wallpaper
  commentId: T:TinyLife.World.Wallpaper
  parent: TinyLife.World
  href: TinyLife.World.Wallpaper.html
  name: Wallpaper
  nameWithType: Wallpaper
  fullName: TinyLife.World.Wallpaper
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.Wallpaper[]}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.Wallpaper[]}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, Wallpaper[]>
  nameWithType: ReadOnlyDictionary<string, Wallpaper[]>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.World.Wallpaper[]>
  nameWithType.vb: ReadOnlyDictionary(Of String, Wallpaper())
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.World.Wallpaper())
  name.vb: ReadOnlyDictionary(Of String, Wallpaper())
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
    href: TinyLife.World.Wallpaper.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
    href: TinyLife.World.Wallpaper.html
  - name: (
  - name: )
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.World.Wallpaper[]
  isExternal: true
  href: TinyLife.World.Wallpaper.html
  name: Wallpaper[]
  nameWithType: Wallpaper[]
  fullName: TinyLife.World.Wallpaper[]
  nameWithType.vb: Wallpaper()
  fullName.vb: TinyLife.World.Wallpaper()
  name.vb: Wallpaper()
  spec.csharp:
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
    href: TinyLife.World.Wallpaper.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
    href: TinyLife.World.Wallpaper.html
  - name: (
  - name: )
- uid: TinyLife.World.Wallpaper.Name
  commentId: F:TinyLife.World.Wallpaper.Name
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_Name
  name: Name
  nameWithType: Wallpaper.Name
  fullName: TinyLife.World.Wallpaper.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.World.Wallpaper.BaseName
  commentId: F:TinyLife.World.Wallpaper.BaseName
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_BaseName
  name: BaseName
  nameWithType: Wallpaper.BaseName
  fullName: TinyLife.World.Wallpaper.BaseName
- uid: TinyLife.World.Wallpaper.GetPrice
  commentId: M:TinyLife.World.Wallpaper.GetPrice
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_GetPrice
  name: GetPrice()
  nameWithType: Wallpaper.GetPrice()
  fullName: TinyLife.World.Wallpaper.GetPrice()
  spec.csharp:
  - uid: TinyLife.World.Wallpaper.GetPrice
    name: GetPrice
    href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_GetPrice
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.Wallpaper.GetPrice
    name: GetPrice
    href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_GetPrice
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Utilities.ColorSettings
  commentId: T:TinyLife.Utilities.ColorSettings
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.ColorSettings.html
  name: ColorSettings
  nameWithType: ColorSettings
  fullName: TinyLife.Utilities.ColorSettings
- uid: TinyLife.World.Wallpaper.ColorSettings
  commentId: F:TinyLife.World.Wallpaper.ColorSettings
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_ColorSettings
  name: ColorSettings
  nameWithType: Wallpaper.ColorSettings
  fullName: TinyLife.World.Wallpaper.ColorSettings
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.World.Wallpaper.TextureRegion
  commentId: F:TinyLife.World.Wallpaper.TextureRegion
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_TextureRegion
  name: TextureRegion
  nameWithType: Wallpaper.TextureRegion
  fullName: TinyLife.World.Wallpaper.TextureRegion
- uid: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  commentId: T:System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Point, TextureRegion>
  nameWithType: Dictionary<Point, TextureRegion>
  fullName: System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>
  nameWithType.vb: Dictionary(Of Point, TextureRegion)
  fullName.vb: System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)
  name.vb: Dictionary(Of Point, TextureRegion)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.World.Wallpaper.Textures
  commentId: F:TinyLife.World.Wallpaper.Textures
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_Textures
  name: Textures
  nameWithType: Wallpaper.Textures
  fullName: TinyLife.World.Wallpaper.Textures
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.World.Wallpaper.#ctor*
  commentId: Overload:TinyLife.World.Wallpaper.#ctor
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper__ctor_System_String_System_String_System_Int32_System_Collections_Generic_Dictionary_Microsoft_Xna_Framework_Point_MLEM_Textures_TextureRegion__Microsoft_Xna_Framework_Point_TinyLife_Utilities_ColorSettings_System_Int32___MLEM_Textures_TextureRegion_
  name: Wallpaper
  nameWithType: Wallpaper.Wallpaper
  fullName: TinyLife.World.Wallpaper.Wallpaper
  nameWithType.vb: Wallpaper.New
  fullName.vb: TinyLife.World.Wallpaper.New
  name.vb: New
- uid: TinyLife.World.WallMode
  commentId: T:TinyLife.World.WallMode
  parent: TinyLife.World
  href: TinyLife.World.WallMode.html
  name: WallMode
  nameWithType: WallMode
  fullName: TinyLife.World.WallMode
- uid: TinyLife.Objects.WallLike.Positions
  commentId: F:TinyLife.Objects.WallLike.Positions
  parent: TinyLife.Objects.WallLike
  href: TinyLife.Objects.WallLike.html#TinyLife_Objects_WallLike_Positions
  name: Positions
  nameWithType: WallLike.Positions
  fullName: TinyLife.Objects.WallLike.Positions
- uid: TinyLife.World.Wallpaper.Draw*
  commentId: Overload:TinyLife.World.Wallpaper.Draw
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_TinyLife_World_Map_Microsoft_Xna_Framework_Point_Microsoft_Xna_Framework_Point_System_Int32_Microsoft_Xna_Framework_Vector2_TinyLife_World_WallMode_System_Boolean_System_Boolean_System_Single_System_Boolean_System_Single_System_Nullable_Microsoft_Xna_Framework_Color__
  name: Draw
  nameWithType: Wallpaper.Draw
  fullName: TinyLife.World.Wallpaper.Draw
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Nullable{Microsoft.Xna.Framework.Color}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: Microsoft.Xna.Framework.Color?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: TinyLife.Objects.WallLike
  commentId: T:TinyLife.Objects.WallLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.WallLike.html
  name: WallLike
  nameWithType: WallLike
  fullName: TinyLife.Objects.WallLike
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: TinyLife.World.Wallpaper.DrawUi*
  commentId: Overload:TinyLife.World.Wallpaper.DrawUi
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_DrawUi_MLEM_Ui_Elements_Element_Microsoft_Xna_Framework_Graphics_SpriteBatch_Microsoft_Xna_Framework_GameTime_TinyLife_World_Map_System_Single_
  name: DrawUi
  nameWithType: Wallpaper.DrawUi
  fullName: TinyLife.World.Wallpaper.DrawUi
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: TinyLife.World.Wallpaper.GetPrice*
  commentId: Overload:TinyLife.World.Wallpaper.GetPrice
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_GetPrice
  name: GetPrice
  nameWithType: Wallpaper.GetPrice
  fullName: TinyLife.World.Wallpaper.GetPrice
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TinyLife.World.Wallpaper.Register*
  commentId: Overload:TinyLife.World.Wallpaper.Register
  href: TinyLife.World.Wallpaper.html#TinyLife_World_Wallpaper_Register_System_String_System_Int32_System_Collections_Generic_Dictionary_Microsoft_Xna_Framework_Point_MLEM_Textures_TextureRegion__Microsoft_Xna_Framework_Point_TinyLife_Utilities_ColorScheme_MLEM_Textures_TextureRegion_System_Nullable_System_Int32__System_Type_
  name: Register
  nameWithType: Wallpaper.Register
  fullName: TinyLife.World.Wallpaper.Register
- uid: TinyLife.Utilities.ColorScheme
  commentId: T:TinyLife.Utilities.ColorScheme
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.ColorScheme.html
  name: ColorScheme
  nameWithType: ColorScheme
  fullName: TinyLife.Utilities.ColorScheme
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: TinyLife.Utilities.ColorScheme[]
  isExternal: true
  href: TinyLife.Utilities.ColorScheme.html
  name: ColorScheme[]
  nameWithType: ColorScheme[]
  fullName: TinyLife.Utilities.ColorScheme[]
  nameWithType.vb: ColorScheme()
  fullName.vb: TinyLife.Utilities.ColorScheme()
  name.vb: ColorScheme()
  spec.csharp:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    href: TinyLife.Utilities.ColorScheme.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    href: TinyLife.Utilities.ColorScheme.html
  - name: (
  - name: )
