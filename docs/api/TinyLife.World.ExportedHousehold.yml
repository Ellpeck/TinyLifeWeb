### YamlMime:ManagedReference
items:
- uid: TinyLife.World.ExportedHousehold
  commentId: T:TinyLife.World.ExportedHousehold
  id: ExportedHousehold
  parent: TinyLife.World
  children:
  - TinyLife.World.ExportedHousehold.AppliedMigrations
  - TinyLife.World.ExportedHousehold.ClothesStorage
  - TinyLife.World.ExportedHousehold.Description
  - TinyLife.World.ExportedHousehold.ExportedVersion
  - TinyLife.World.ExportedHousehold.FurnitureStorage
  - TinyLife.World.ExportedHousehold.Members
  - TinyLife.World.ExportedHousehold.Migrations
  - TinyLife.World.ExportedHousehold.Money
  - TinyLife.World.ExportedHousehold.ValidatePeople(TinyLife.World.Map)
  langs:
  - csharp
  - vb
  name: ExportedHousehold
  nameWithType: ExportedHousehold
  fullName: TinyLife.World.ExportedHousehold
  type: Class
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: This class represents an exported version of a <xref href="TinyLife.World.Household" data-throw-if-not-resolved="false"></xref>, storing all of the <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref>-independent data.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class ExportedHousehold
    content.vb: >-
      <DataContract>

      Public Class ExportedHousehold
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.ExportedHousehold.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.World.ExportedHousehold.Migrations
  commentId: F:TinyLife.World.ExportedHousehold.Migrations
  id: Migrations
  parent: TinyLife.World.ExportedHousehold
  langs:
  - csharp
  - vb
  name: Migrations
  nameWithType: ExportedHousehold.Migrations
  fullName: TinyLife.World.ExportedHousehold.Migrations
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: A set of migrations that are applied to <xref href="TinyLife.World.ExportedHousehold" data-throw-if-not-resolved="false"></xref> instances when they are loaded. Mods can add their own migrations to this list. Non-silent migrations, as well as <xref href="TinyLife.Utilities.MigrationPhase.Early" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Utilities.MigrationPhase.Late" data-throw-if-not-resolved="false"></xref> migration phases, are supported.
  example: []
  syntax:
    content: public static readonly List<Migration<ExportedHousehold>> Migrations
    return:
      type: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.World.ExportedHousehold}}
    content.vb: Public Shared ReadOnly Migrations As List(Of Migration(Of ExportedHousehold))
- uid: TinyLife.World.ExportedHousehold.ExportedVersion
  commentId: F:TinyLife.World.ExportedHousehold.ExportedVersion
  id: ExportedVersion
  parent: TinyLife.World.ExportedHousehold
  langs:
  - csharp
  - vb
  name: ExportedVersion
  nameWithType: ExportedHousehold.ExportedVersion
  fullName: TinyLife.World.ExportedHousehold.ExportedVersion
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The game version that this household was exported with
  example: []
  syntax:
    content: >-
      [DataMember]

      public string ExportedVersion
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public ExportedVersion As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.ExportedHousehold.Members
  commentId: F:TinyLife.World.ExportedHousehold.Members
  id: Members
  parent: TinyLife.World.ExportedHousehold
  langs:
  - csharp
  - vb
  name: Members
  nameWithType: ExportedHousehold.Members
  fullName: TinyLife.World.ExportedHousehold.Members
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> instances that are members of this household
  example: []
  syntax:
    content: >-
      [DataMember]

      [JsonConverter(typeof(ExportedHousehold.PersonLikeConverter))]

      public List<PersonLike> Members
    return:
      type: System.Collections.Generic.List{TinyLife.Objects.PersonLike}
    content.vb: >-
      <DataMember>

      <JsonConverter(GetType(ExportedHousehold.PersonLikeConverter))>

      Public Members As List(Of PersonLike)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.ExportedHousehold.Money
  commentId: F:TinyLife.World.ExportedHousehold.Money
  id: Money
  parent: TinyLife.World.ExportedHousehold
  langs:
  - csharp
  - vb
  name: Money
  nameWithType: ExportedHousehold.Money
  fullName: TinyLife.World.ExportedHousehold.Money
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The money that this household has
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Money
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Money As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.ExportedHousehold.FurnitureStorage
  commentId: F:TinyLife.World.ExportedHousehold.FurnitureStorage
  id: FurnitureStorage
  parent: TinyLife.World.ExportedHousehold
  langs:
  - csharp
  - vb
  name: FurnitureStorage
  nameWithType: ExportedHousehold.FurnitureStorage
  fullName: TinyLife.World.ExportedHousehold.FurnitureStorage
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: This household's furniture storage
  example: []
  syntax:
    content: >-
      [DataMember]

      public List<Furniture> FurnitureStorage
    return:
      type: System.Collections.Generic.List{TinyLife.Objects.Furniture}
    content.vb: >-
      <DataMember>

      Public FurnitureStorage As List(Of Furniture)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.ExportedHousehold.ClothesStorage
  commentId: F:TinyLife.World.ExportedHousehold.ClothesStorage
  id: ClothesStorage
  parent: TinyLife.World.ExportedHousehold
  langs:
  - csharp
  - vb
  name: ClothesStorage
  nameWithType: ExportedHousehold.ClothesStorage
  fullName: TinyLife.World.ExportedHousehold.ClothesStorage
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: This household's clothing storage
  example: []
  syntax:
    content: >-
      [DataMember]

      public List<WornClothes> ClothesStorage
    return:
      type: System.Collections.Generic.List{TinyLife.Objects.WornClothes}
    content.vb: >-
      <DataMember>

      Public ClothesStorage As List(Of WornClothes)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.ExportedHousehold.Description
  commentId: F:TinyLife.World.ExportedHousehold.Description
  id: Description
  parent: TinyLife.World.ExportedHousehold
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ExportedHousehold.Description
  fullName: TinyLife.World.ExportedHousehold.Description
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The exported household's description
  example: []
  syntax:
    content: >-
      [DataMember]

      public string Description
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Description As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.ExportedHousehold.AppliedMigrations
  commentId: F:TinyLife.World.ExportedHousehold.AppliedMigrations
  id: AppliedMigrations
  parent: TinyLife.World.ExportedHousehold
  langs:
  - csharp
  - vb
  name: AppliedMigrations
  nameWithType: ExportedHousehold.AppliedMigrations
  fullName: TinyLife.World.ExportedHousehold.AppliedMigrations
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    The set of names of the <xref href="TinyLife.Utilities.Migration" data-throw-if-not-resolved="false"></xref> instances that have already been applied to objects in this exported household.

    When a new exported household is created, this collection is initialized with all migrations that exist, as new objects are expected to not need migration.
  example: []
  syntax:
    content: >-
      [JsonProperty(DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate)]

      public HashSet<string> AppliedMigrations
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: >-
      <JsonProperty(DefaultValueHandling:=DefaultValueHandling.IgnoreAndPopulate)>

      Public AppliedMigrations As HashSet(Of String)
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 3
- uid: TinyLife.World.ExportedHousehold.ValidatePeople(TinyLife.World.Map)
  commentId: M:TinyLife.World.ExportedHousehold.ValidatePeople(TinyLife.World.Map)
  id: ValidatePeople(TinyLife.World.Map)
  parent: TinyLife.World.ExportedHousehold
  langs:
  - csharp
  - vb
  name: ValidatePeople(Map)
  nameWithType: ExportedHousehold.ValidatePeople(Map)
  fullName: TinyLife.World.ExportedHousehold.ValidatePeople(TinyLife.World.Map)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Validates this exported household's content for preview purposes, for example for use with the <xref href="TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map%2cSystem.String%2cMicrosoft.Xna.Framework.Point%2cSystem.Single%2cMicrosoft.Xna.Framework.Color%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public void ValidatePeople(Map map)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to validate this exported household for.
    content.vb: Public Sub ValidatePeople(map As Map)
  overload: TinyLife.World.ExportedHousehold.ValidatePeople*
references:
- uid: TinyLife.World.Household
  commentId: T:TinyLife.World.Household
  parent: TinyLife.World
  href: TinyLife.World.Household.html
  name: Household
  nameWithType: Household
  fullName: TinyLife.World.Household
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.ExportedHousehold.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<ExportedHousehold>(ExportedHousehold)
  nameWithType: Extensions.JsonCopy<ExportedHousehold>(ExportedHousehold)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.ExportedHousehold>(TinyLife.World.ExportedHousehold)
  nameWithType.vb: Extensions.JsonCopy(Of ExportedHousehold)(ExportedHousehold)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.ExportedHousehold)(TinyLife.World.ExportedHousehold)
  name.vb: JsonCopy(Of ExportedHousehold)(ExportedHousehold)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.ExportedHousehold)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.World.ExportedHousehold
    name: ExportedHousehold
    href: TinyLife.World.ExportedHousehold.html
  - name: '>'
  - name: (
  - uid: TinyLife.World.ExportedHousehold
    name: ExportedHousehold
    href: TinyLife.World.ExportedHousehold.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.ExportedHousehold)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.ExportedHousehold
    name: ExportedHousehold
    href: TinyLife.World.ExportedHousehold.html
  - name: )
  - name: (
  - uid: TinyLife.World.ExportedHousehold
    name: ExportedHousehold
    href: TinyLife.World.ExportedHousehold.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.World.ExportedHousehold
  commentId: T:TinyLife.World.ExportedHousehold
  parent: TinyLife.World
  href: TinyLife.World.ExportedHousehold.html
  name: ExportedHousehold
  nameWithType: ExportedHousehold
  fullName: TinyLife.World.ExportedHousehold
- uid: TinyLife.Utilities.MigrationPhase.Early
  commentId: F:TinyLife.Utilities.MigrationPhase.Early
  href: TinyLife.Utilities.MigrationPhase.html#TinyLife_Utilities_MigrationPhase_Early
  name: Early
  nameWithType: MigrationPhase.Early
  fullName: TinyLife.Utilities.MigrationPhase.Early
- uid: TinyLife.Utilities.MigrationPhase.Late
  commentId: F:TinyLife.Utilities.MigrationPhase.Late
  href: TinyLife.Utilities.MigrationPhase.html#TinyLife_Utilities_MigrationPhase_Late
  name: Late
  nameWithType: MigrationPhase.Late
  fullName: TinyLife.Utilities.MigrationPhase.Late
- uid: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.World.ExportedHousehold}}
  commentId: T:System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.World.ExportedHousehold}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Migration<ExportedHousehold>>
  nameWithType: List<Migration<ExportedHousehold>>
  fullName: System.Collections.Generic.List<TinyLife.Utilities.Migration<TinyLife.World.ExportedHousehold>>
  nameWithType.vb: List(Of Migration(Of ExportedHousehold))
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Utilities.Migration(Of TinyLife.World.ExportedHousehold))
  name.vb: List(Of Migration(Of ExportedHousehold))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: <
  - uid: TinyLife.World.ExportedHousehold
    name: ExportedHousehold
    href: TinyLife.World.ExportedHousehold.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.ExportedHousehold
    name: ExportedHousehold
    href: TinyLife.World.ExportedHousehold.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: System.Collections.Generic.List{TinyLife.Objects.PersonLike}
  commentId: T:System.Collections.Generic.List{TinyLife.Objects.PersonLike}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PersonLike>
  nameWithType: List<PersonLike>
  fullName: System.Collections.Generic.List<TinyLife.Objects.PersonLike>
  nameWithType.vb: List(Of PersonLike)
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Objects.PersonLike)
  name.vb: List(Of PersonLike)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Collections.Generic.List{TinyLife.Objects.Furniture}
  commentId: T:System.Collections.Generic.List{TinyLife.Objects.Furniture}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Furniture>
  nameWithType: List<Furniture>
  fullName: System.Collections.Generic.List<TinyLife.Objects.Furniture>
  nameWithType.vb: List(Of Furniture)
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Objects.Furniture)
  name.vb: List(Of Furniture)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
- uid: System.Collections.Generic.List{TinyLife.Objects.WornClothes}
  commentId: T:System.Collections.Generic.List{TinyLife.Objects.WornClothes}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<WornClothes>
  nameWithType: List<WornClothes>
  fullName: System.Collections.Generic.List<TinyLife.Objects.WornClothes>
  nameWithType.vb: List(Of WornClothes)
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Objects.WornClothes)
  name.vb: List(Of WornClothes)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Objects.WornClothes
    name: WornClothes
    href: TinyLife.Objects.WornClothes.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.WornClothes
    name: WornClothes
    href: TinyLife.Objects.WornClothes.html
  - name: )
- uid: TinyLife.Utilities.Migration
  commentId: T:TinyLife.Utilities.Migration
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Migration.html
  name: Migration
  nameWithType: Migration
  fullName: TinyLife.Utilities.Migration
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<string>
  nameWithType: HashSet<string>
  fullName: System.Collections.Generic.HashSet<string>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean)
  commentId: M:TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean)
  isExternal: true
  href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_CreateHouseholdPreview_TinyLife_World_Map_System_String_Microsoft_Xna_Framework_Point_System_Single_Microsoft_Xna_Framework_Color_System_Boolean_
  name: CreateHouseholdPreview(Map, string, Point, float, Color, bool)
  nameWithType: Menus.CreateHouseholdPreview(Map, string, Point, float, Color, bool)
  fullName: TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map, string, Microsoft.Xna.Framework.Point, float, Microsoft.Xna.Framework.Color, bool)
  nameWithType.vb: Menus.CreateHouseholdPreview(Map, String, Point, Single, Color, Boolean)
  fullName.vb: TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map, String, Microsoft.Xna.Framework.Point, Single, Microsoft.Xna.Framework.Color, Boolean)
  name.vb: CreateHouseholdPreview(Map, String, Point, Single, Color, Boolean)
  spec.csharp:
  - uid: TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean)
    name: CreateHouseholdPreview
    href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_CreateHouseholdPreview_TinyLife_World_Map_System_String_Microsoft_Xna_Framework_Point_System_Single_Microsoft_Xna_Framework_Color_System_Boolean_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.Menus.CreateHouseholdPreview(TinyLife.World.Map,System.String,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Color,System.Boolean)
    name: CreateHouseholdPreview
    href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_CreateHouseholdPreview_TinyLife_World_Map_System_String_Microsoft_Xna_Framework_Point_System_Single_Microsoft_Xna_Framework_Color_System_Boolean_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.World.ExportedHousehold.ValidatePeople*
  commentId: Overload:TinyLife.World.ExportedHousehold.ValidatePeople
  href: TinyLife.World.ExportedHousehold.html#TinyLife_World_ExportedHousehold_ValidatePeople_TinyLife_World_Map_
  name: ValidatePeople
  nameWithType: ExportedHousehold.ValidatePeople
  fullName: TinyLife.World.ExportedHousehold.ValidatePeople
