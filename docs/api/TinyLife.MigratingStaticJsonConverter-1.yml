### YamlMime:ManagedReference
items:
- uid: TinyLife.MigratingStaticJsonConverter`1
  commentId: T:TinyLife.MigratingStaticJsonConverter`1
  id: MigratingStaticJsonConverter`1
  parent: TinyLife
  children:
  - TinyLife.MigratingStaticJsonConverter`1.#ctor(System.Collections.Generic.Dictionary{System.String,`0},System.Boolean)
  - TinyLife.MigratingStaticJsonConverter`1.#ctor(System.Type,System.String)
  - TinyLife.MigratingStaticJsonConverter`1.#ctor(System.Type,System.String,System.Boolean)
  - TinyLife.MigratingStaticJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  langs:
  - csharp
  - vb
  name: MigratingStaticJsonConverter<T>
  nameWithType: MigratingStaticJsonConverter<T>
  fullName: TinyLife.MigratingStaticJsonConverter<T>
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    A <xref href="Newtonsoft.Json.JsonConverter%601" data-throw-if-not-resolved="false"></xref> that doesn't actually serialize the object, but instead serializes the name given to it by the underlying <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref>.

    Optionally, the name of a <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref> can be passed to this converter when used in the <xref href="Newtonsoft.Json.JsonConverterAttribute" data-throw-if-not-resolved="false"></xref> by passing the arguments for the <xref href="MLEM.Data.Json.StaticJsonConverter%601.%23ctor(System.Type%2cSystem.String)" data-throw-if-not-resolved="false"></xref> constructor as <xref href="Newtonsoft.Json.JsonConverterAttribute.ConverterParameters" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class MigratingStaticJsonConverter<T> : StaticJsonConverter<T>'
    typeParameters:
    - id: T
      description: The type of the object to convert
    content.vb: Public Class MigratingStaticJsonConverter(Of T) Inherits StaticJsonConverter(Of T)
  inheritance:
  - System.Object
  - Newtonsoft.Json.JsonConverter
  - Newtonsoft.Json.JsonConverter{{T}}
  - MLEM.Data.Json.StaticJsonConverter{{T}}
  inheritedMembers:
  - MLEM.Data.Json.StaticJsonConverter{{T}}.Entries
  - MLEM.Data.Json.StaticJsonConverter{{T}}.Inverse
  - MLEM.Data.Json.StaticJsonConverter{{T}}.ThrowOnRead
  - MLEM.Data.Json.StaticJsonConverter{{T}}.WriteJson(Newtonsoft.Json.JsonWriter,{T},Newtonsoft.Json.JsonSerializer)
  - MLEM.Data.Json.StaticJsonConverter{{T}}.GetEntries(System.Type,System.String)
  - MLEM.Data.Json.StaticJsonConverter{{T}}.CreateInverse(System.Collections.Generic.Dictionary{System.String,{T}})
  - Newtonsoft.Json.JsonConverter{{T}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  - Newtonsoft.Json.JsonConverter{{T}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  - Newtonsoft.Json.JsonConverter{{T}}.CanConvert(System.Type)
  - Newtonsoft.Json.JsonConverter.CanRead
  - Newtonsoft.Json.JsonConverter.CanWrite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.MigratingStaticJsonConverter`1.TinyLife.Utilities.Extensions.JsonCopy``1
  nameWithType.vb: MigratingStaticJsonConverter(Of T)
  fullName.vb: TinyLife.MigratingStaticJsonConverter(Of T)
  name.vb: MigratingStaticJsonConverter(Of T)
- uid: TinyLife.MigratingStaticJsonConverter`1.#ctor(System.Collections.Generic.Dictionary{System.String,`0},System.Boolean)
  commentId: M:TinyLife.MigratingStaticJsonConverter`1.#ctor(System.Collections.Generic.Dictionary{System.String,`0},System.Boolean)
  id: '#ctor(System.Collections.Generic.Dictionary{System.String,`0},System.Boolean)'
  parent: TinyLife.MigratingStaticJsonConverter`1
  langs:
  - csharp
  - vb
  name: MigratingStaticJsonConverter(Dictionary<string, T>, bool)
  nameWithType: MigratingStaticJsonConverter<T>.MigratingStaticJsonConverter(Dictionary<string, T>, bool)
  fullName: TinyLife.MigratingStaticJsonConverter<T>.MigratingStaticJsonConverter(System.Collections.Generic.Dictionary<string, T>, bool)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Creates a new static json converter using the given underlying <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public MigratingStaticJsonConverter(Dictionary<string, T> entries, bool throwOnRead = false)
    parameters:
    - id: entries
      type: System.Collections.Generic.Dictionary{System.String,{T}}
      description: The entries, or registry, that this static json converter uses.
    - id: throwOnRead
      type: System.Boolean
      description: Whether to throw a <xref href="System.Collections.Generic.KeyNotFoundException" data-throw-if-not-resolved="false"></xref> in <xref href="MLEM.Data.Json.StaticJsonConverter%601.ReadJson(Newtonsoft.Json.JsonReader%2cSystem.Type%2c%600%2cSystem.Boolean%2cNewtonsoft.Json.JsonSerializer)" data-throw-if-not-resolved="false"></xref> if a key is missing, or throw a <xref href="Newtonsoft.Json.JsonSerializationException" data-throw-if-not-resolved="false"></xref> if a stored json value is not a string. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, <xref href="MLEM.Data.Json.StaticJsonConverter%601.ReadJson(Newtonsoft.Json.JsonReader%2cSystem.Type%2c%600%2cSystem.Boolean%2cNewtonsoft.Json.JsonSerializer)" data-throw-if-not-resolved="false"></xref> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/default">default</a> instead.
    content.vb: Public Sub New(entries As Dictionary(Of String, T), throwOnRead As Boolean = False)
  overload: TinyLife.MigratingStaticJsonConverter`1.#ctor*
  nameWithType.vb: MigratingStaticJsonConverter(Of T).New(Dictionary(Of String, T), Boolean)
  fullName.vb: TinyLife.MigratingStaticJsonConverter(Of T).New(System.Collections.Generic.Dictionary(Of String, T), Boolean)
  name.vb: New(Dictionary(Of String, T), Boolean)
- uid: TinyLife.MigratingStaticJsonConverter`1.#ctor(System.Type,System.String)
  commentId: M:TinyLife.MigratingStaticJsonConverter`1.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: TinyLife.MigratingStaticJsonConverter`1
  langs:
  - csharp
  - vb
  name: MigratingStaticJsonConverter(Type, string)
  nameWithType: MigratingStaticJsonConverter<T>.MigratingStaticJsonConverter(Type, string)
  fullName: TinyLife.MigratingStaticJsonConverter<T>.MigratingStaticJsonConverter(System.Type, string)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Creates a new static json converter by finding the underlying <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref> from the given type and member name
  example: []
  syntax:
    content: public MigratingStaticJsonConverter(Type type, string memberName)
    parameters:
    - id: type
      type: System.Type
      description: The type that the dictionary is declared in
    - id: memberName
      type: System.String
      description: The name of the dictionary itself
    content.vb: Public Sub New(type As Type, memberName As String)
  overload: TinyLife.MigratingStaticJsonConverter`1.#ctor*
  nameWithType.vb: MigratingStaticJsonConverter(Of T).New(Type, String)
  fullName.vb: TinyLife.MigratingStaticJsonConverter(Of T).New(System.Type, String)
  name.vb: New(Type, String)
- uid: TinyLife.MigratingStaticJsonConverter`1.#ctor(System.Type,System.String,System.Boolean)
  commentId: M:TinyLife.MigratingStaticJsonConverter`1.#ctor(System.Type,System.String,System.Boolean)
  id: '#ctor(System.Type,System.String,System.Boolean)'
  parent: TinyLife.MigratingStaticJsonConverter`1
  langs:
  - csharp
  - vb
  name: MigratingStaticJsonConverter(Type, string, bool)
  nameWithType: MigratingStaticJsonConverter<T>.MigratingStaticJsonConverter(Type, string, bool)
  fullName: TinyLife.MigratingStaticJsonConverter<T>.MigratingStaticJsonConverter(System.Type, string, bool)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Creates a new static json converter by finding the underlying <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref> from the given type and member name
  example: []
  syntax:
    content: public MigratingStaticJsonConverter(Type type, string memberName, bool throwOnRead)
    parameters:
    - id: type
      type: System.Type
      description: The type that the dictionary is declared in
    - id: memberName
      type: System.String
      description: The name of the dictionary itself
    - id: throwOnRead
      type: System.Boolean
      description: Whether to throw a <xref href="System.Collections.Generic.KeyNotFoundException" data-throw-if-not-resolved="false"></xref> in <xref href="MLEM.Data.Json.StaticJsonConverter%601.ReadJson(Newtonsoft.Json.JsonReader%2cSystem.Type%2c%600%2cSystem.Boolean%2cNewtonsoft.Json.JsonSerializer)" data-throw-if-not-resolved="false"></xref> if a key is missing, or throw a <xref href="Newtonsoft.Json.JsonSerializationException" data-throw-if-not-resolved="false"></xref> if a stored json value is not a string. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, <xref href="MLEM.Data.Json.StaticJsonConverter%601.ReadJson(Newtonsoft.Json.JsonReader%2cSystem.Type%2c%600%2cSystem.Boolean%2cNewtonsoft.Json.JsonSerializer)" data-throw-if-not-resolved="false"></xref> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/default">default</a> instead.
    content.vb: Public Sub New(type As Type, memberName As String, throwOnRead As Boolean)
  overload: TinyLife.MigratingStaticJsonConverter`1.#ctor*
  nameWithType.vb: MigratingStaticJsonConverter(Of T).New(Type, String, Boolean)
  fullName.vb: TinyLife.MigratingStaticJsonConverter(Of T).New(System.Type, String, Boolean)
  name.vb: New(Type, String, Boolean)
- uid: TinyLife.MigratingStaticJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  commentId: M:TinyLife.MigratingStaticJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  id: ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  parent: TinyLife.MigratingStaticJsonConverter`1
  langs:
  - csharp
  - vb
  name: ReadJson(JsonReader, Type, T, bool, JsonSerializer)
  nameWithType: MigratingStaticJsonConverter<T>.ReadJson(JsonReader, Type, T, bool, JsonSerializer)
  fullName: TinyLife.MigratingStaticJsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, bool, Newtonsoft.Json.JsonSerializer)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Reads the JSON representation of the object.
  example: []
  syntax:
    content: public override T ReadJson(JsonReader reader, Type objectType, T existingValue, bool hasExistingValue, JsonSerializer serializer)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: The <xref href="Newtonsoft.Json.JsonReader" data-throw-if-not-resolved="false"></xref> to read from.
    - id: objectType
      type: System.Type
      description: Type of the object.
    - id: existingValue
      type: '{T}'
      description: The existing value of object being read. If there is no existing value then <code>null</code> will be used.
    - id: hasExistingValue
      type: System.Boolean
      description: The existing value has a value.
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The calling serializer.
    return:
      type: '{T}'
      description: The object value.
    content.vb: Public Overrides Function ReadJson(reader As JsonReader, objectType As Type, existingValue As T, hasExistingValue As Boolean, serializer As JsonSerializer) As T
  overridden: MLEM.Data.Json.StaticJsonConverter{{T}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,{T},System.Boolean,Newtonsoft.Json.JsonSerializer)
  overload: TinyLife.MigratingStaticJsonConverter`1.ReadJson*
  nameWithType.vb: MigratingStaticJsonConverter(Of T).ReadJson(JsonReader, Type, T, Boolean, JsonSerializer)
  fullName.vb: TinyLife.MigratingStaticJsonConverter(Of T).ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, Boolean, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, T, Boolean, JsonSerializer)
references:
- uid: Newtonsoft.Json.JsonConverter`1
  commentId: T:Newtonsoft.Json.JsonConverter`1
  isExternal: true
  name: JsonConverter<T>
  nameWithType: JsonConverter<T>
  fullName: Newtonsoft.Json.JsonConverter<T>
  nameWithType.vb: JsonConverter(Of T)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T)
  name.vb: JsonConverter(Of T)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Newtonsoft.Json.JsonConverterAttribute
  commentId: T:Newtonsoft.Json.JsonConverterAttribute
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonConverterAttribute
  nameWithType: JsonConverterAttribute
  fullName: Newtonsoft.Json.JsonConverterAttribute
- uid: MLEM.Data.Json.StaticJsonConverter`1.#ctor(System.Type,System.String)
  commentId: M:MLEM.Data.Json.StaticJsonConverter`1.#ctor(System.Type,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: StaticJsonConverter(Type, string)
  nameWithType: StaticJsonConverter<T>.StaticJsonConverter(Type, string)
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.StaticJsonConverter(System.Type, string)
  nameWithType.vb: StaticJsonConverter(Of T).New(Type, String)
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).New(System.Type, String)
  name.vb: New(Type, String)
  spec.csharp:
  - uid: MLEM.Data.Json.StaticJsonConverter`1.#ctor(System.Type,System.String)
    name: StaticJsonConverter
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - name: New
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Newtonsoft.Json.JsonConverterAttribute.ConverterParameters
  commentId: P:Newtonsoft.Json.JsonConverterAttribute.ConverterParameters
  isExternal: true
  name: ConverterParameters
  nameWithType: JsonConverterAttribute.ConverterParameters
  fullName: Newtonsoft.Json.JsonConverterAttribute.ConverterParameters
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Newtonsoft.Json.JsonConverter
  commentId: T:Newtonsoft.Json.JsonConverter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonConverter
  nameWithType: JsonConverter
  fullName: Newtonsoft.Json.JsonConverter
- uid: Newtonsoft.Json.JsonConverter{{T}}
  commentId: T:Newtonsoft.Json.JsonConverter{`0}
  parent: Newtonsoft.Json
  definition: Newtonsoft.Json.JsonConverter`1
  name: JsonConverter<T>
  nameWithType: JsonConverter<T>
  fullName: Newtonsoft.Json.JsonConverter<T>
  nameWithType.vb: JsonConverter(Of T)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T)
  name.vb: JsonConverter(Of T)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.StaticJsonConverter{{T}}
  commentId: T:MLEM.Data.Json.StaticJsonConverter{`0}
  parent: MLEM.Data.Json
  definition: MLEM.Data.Json.StaticJsonConverter`1
  name: StaticJsonConverter<T>
  nameWithType: StaticJsonConverter<T>
  fullName: MLEM.Data.Json.StaticJsonConverter<T>
  nameWithType.vb: StaticJsonConverter(Of T)
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T)
  name.vb: StaticJsonConverter(Of T)
  spec.csharp:
  - uid: MLEM.Data.Json.StaticJsonConverter`1
    name: StaticJsonConverter
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: MLEM.Data.Json.StaticJsonConverter`1
    name: StaticJsonConverter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.StaticJsonConverter{{T}}.Entries
  commentId: F:MLEM.Data.Json.StaticJsonConverter{`0}.Entries
  parent: MLEM.Data.Json.StaticJsonConverter{{T}}
  definition: MLEM.Data.Json.StaticJsonConverter`1.Entries
  name: Entries
  nameWithType: StaticJsonConverter<T>.Entries
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.Entries
  nameWithType.vb: StaticJsonConverter(Of T).Entries
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).Entries
- uid: MLEM.Data.Json.StaticJsonConverter{{T}}.Inverse
  commentId: F:MLEM.Data.Json.StaticJsonConverter{`0}.Inverse
  parent: MLEM.Data.Json.StaticJsonConverter{{T}}
  definition: MLEM.Data.Json.StaticJsonConverter`1.Inverse
  name: Inverse
  nameWithType: StaticJsonConverter<T>.Inverse
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.Inverse
  nameWithType.vb: StaticJsonConverter(Of T).Inverse
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).Inverse
- uid: MLEM.Data.Json.StaticJsonConverter{{T}}.ThrowOnRead
  commentId: F:MLEM.Data.Json.StaticJsonConverter{`0}.ThrowOnRead
  parent: MLEM.Data.Json.StaticJsonConverter{{T}}
  definition: MLEM.Data.Json.StaticJsonConverter`1.ThrowOnRead
  name: ThrowOnRead
  nameWithType: StaticJsonConverter<T>.ThrowOnRead
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.ThrowOnRead
  nameWithType.vb: StaticJsonConverter(Of T).ThrowOnRead
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).ThrowOnRead
- uid: MLEM.Data.Json.StaticJsonConverter{{T}}.WriteJson(Newtonsoft.Json.JsonWriter,{T},Newtonsoft.Json.JsonSerializer)
  commentId: M:MLEM.Data.Json.StaticJsonConverter{`0}.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
  parent: MLEM.Data.Json.StaticJsonConverter{{T}}
  definition: MLEM.Data.Json.StaticJsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
  name: WriteJson(JsonWriter, T, JsonSerializer)
  nameWithType: StaticJsonConverter<T>.WriteJson(JsonWriter, T, JsonSerializer)
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: StaticJsonConverter(Of T).WriteJson(JsonWriter, T, JsonSerializer)
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: MLEM.Data.Json.StaticJsonConverter{`0}.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.StaticJsonConverter{`0}.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: MLEM.Data.Json.StaticJsonConverter{{T}}.GetEntries(System.Type,System.String)
  commentId: M:MLEM.Data.Json.StaticJsonConverter{`0}.GetEntries(System.Type,System.String)
  parent: MLEM.Data.Json.StaticJsonConverter{{T}}
  definition: MLEM.Data.Json.StaticJsonConverter`1.GetEntries(System.Type,System.String)
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetEntries(Type, string)
  nameWithType: StaticJsonConverter<T>.GetEntries(Type, string)
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.GetEntries(System.Type, string)
  nameWithType.vb: StaticJsonConverter(Of T).GetEntries(Type, String)
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).GetEntries(System.Type, String)
  name.vb: GetEntries(Type, String)
  spec.csharp:
  - uid: MLEM.Data.Json.StaticJsonConverter{`0}.GetEntries(System.Type,System.String)
    name: GetEntries
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.StaticJsonConverter{`0}.GetEntries(System.Type,System.String)
    name: GetEntries
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.StaticJsonConverter{{T}}.CreateInverse(System.Collections.Generic.Dictionary{System.String,{T}})
  commentId: M:MLEM.Data.Json.StaticJsonConverter{`0}.CreateInverse(System.Collections.Generic.Dictionary{System.String,`0})
  parent: MLEM.Data.Json.StaticJsonConverter{{T}}
  definition: MLEM.Data.Json.StaticJsonConverter`1.CreateInverse(System.Collections.Generic.Dictionary{System.String,`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: CreateInverse(Dictionary<string, T>)
  nameWithType: StaticJsonConverter<T>.CreateInverse(Dictionary<string, T>)
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.CreateInverse(System.Collections.Generic.Dictionary<string, T>)
  nameWithType.vb: StaticJsonConverter(Of T).CreateInverse(Dictionary(Of String, T))
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).CreateInverse(System.Collections.Generic.Dictionary(Of String, T))
  name.vb: CreateInverse(Dictionary(Of String, T))
  spec.csharp:
  - uid: MLEM.Data.Json.StaticJsonConverter{`0}.CreateInverse(System.Collections.Generic.Dictionary{System.String,`0})
    name: CreateInverse
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.StaticJsonConverter{`0}.CreateInverse(System.Collections.Generic.Dictionary{System.String,`0})
    name: CreateInverse
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Newtonsoft.Json.JsonConverter{{T}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter{`0}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter{{T}}
  definition: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: WriteJson(JsonWriter, object, JsonSerializer)
  nameWithType: JsonConverter<T>.WriteJson(JsonWriter, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).WriteJson(Newtonsoft.Json.JsonWriter, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{`0}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{`0}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter{{T}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter{`0}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter{{T}}
  definition: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, object, JsonSerializer)
  nameWithType: JsonConverter<T>.ReadJson(JsonReader, Type, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).ReadJson(Newtonsoft.Json.JsonReader, System.Type, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{`0}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{`0}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter{{T}}.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.JsonConverter{`0}.CanConvert(System.Type)
  parent: Newtonsoft.Json.JsonConverter{{T}}
  definition: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CanConvert(Type)
  nameWithType: JsonConverter<T>.CanConvert(Type)
  fullName: Newtonsoft.Json.JsonConverter<T>.CanConvert(System.Type)
  nameWithType.vb: JsonConverter(Of T).CanConvert(Type)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{`0}.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{`0}.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Newtonsoft.Json.JsonConverter.CanRead
  commentId: P:Newtonsoft.Json.JsonConverter.CanRead
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanRead
  nameWithType: JsonConverter.CanRead
  fullName: Newtonsoft.Json.JsonConverter.CanRead
- uid: Newtonsoft.Json.JsonConverter.CanWrite
  commentId: P:Newtonsoft.Json.JsonConverter.CanWrite
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanWrite
  nameWithType: JsonConverter.CanWrite
  fullName: Newtonsoft.Json.JsonConverter.CanWrite
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.MigratingStaticJsonConverter`1.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<MigratingStaticJsonConverter<T>>(MigratingStaticJsonConverter<T>)
  nameWithType: Extensions.JsonCopy<MigratingStaticJsonConverter<T>>(MigratingStaticJsonConverter<T>)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.MigratingStaticJsonConverter<T>>(TinyLife.MigratingStaticJsonConverter<T>)
  nameWithType.vb: Extensions.JsonCopy(Of MigratingStaticJsonConverter(Of T))(MigratingStaticJsonConverter(Of T))
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.MigratingStaticJsonConverter(Of T))(TinyLife.MigratingStaticJsonConverter(Of T))
  name.vb: JsonCopy(Of MigratingStaticJsonConverter(Of T))(MigratingStaticJsonConverter(Of T))
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.MigratingStaticJsonConverter{`0})
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.MigratingStaticJsonConverter`1
    name: MigratingStaticJsonConverter
    href: TinyLife.MigratingStaticJsonConverter-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: TinyLife.MigratingStaticJsonConverter`1
    name: MigratingStaticJsonConverter
    href: TinyLife.MigratingStaticJsonConverter-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.MigratingStaticJsonConverter{`0})
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.MigratingStaticJsonConverter`1
    name: MigratingStaticJsonConverter
    href: TinyLife.MigratingStaticJsonConverter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: TinyLife.MigratingStaticJsonConverter`1
    name: MigratingStaticJsonConverter
    href: TinyLife.MigratingStaticJsonConverter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json.StaticJsonConverter`1
  commentId: T:MLEM.Data.Json.StaticJsonConverter`1
  isExternal: true
  name: StaticJsonConverter<T>
  nameWithType: StaticJsonConverter<T>
  fullName: MLEM.Data.Json.StaticJsonConverter<T>
  nameWithType.vb: StaticJsonConverter(Of T)
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T)
  name.vb: StaticJsonConverter(Of T)
  spec.csharp:
  - uid: MLEM.Data.Json.StaticJsonConverter`1
    name: StaticJsonConverter
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: MLEM.Data.Json.StaticJsonConverter`1
    name: StaticJsonConverter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Data.Json.StaticJsonConverter`1.Entries
  commentId: F:MLEM.Data.Json.StaticJsonConverter`1.Entries
  isExternal: true
  name: Entries
  nameWithType: StaticJsonConverter<T>.Entries
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.Entries
  nameWithType.vb: StaticJsonConverter(Of T).Entries
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).Entries
- uid: MLEM.Data.Json.StaticJsonConverter`1.Inverse
  commentId: F:MLEM.Data.Json.StaticJsonConverter`1.Inverse
  isExternal: true
  name: Inverse
  nameWithType: StaticJsonConverter<T>.Inverse
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.Inverse
  nameWithType.vb: StaticJsonConverter(Of T).Inverse
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).Inverse
- uid: MLEM.Data.Json.StaticJsonConverter`1.ThrowOnRead
  commentId: F:MLEM.Data.Json.StaticJsonConverter`1.ThrowOnRead
  isExternal: true
  name: ThrowOnRead
  nameWithType: StaticJsonConverter<T>.ThrowOnRead
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.ThrowOnRead
  nameWithType.vb: StaticJsonConverter(Of T).ThrowOnRead
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).ThrowOnRead
- uid: MLEM.Data.Json.StaticJsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
  commentId: M:MLEM.Data.Json.StaticJsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  name: WriteJson(JsonWriter, T, JsonSerializer)
  nameWithType: StaticJsonConverter<T>.WriteJson(JsonWriter, T, JsonSerializer)
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: StaticJsonConverter(Of T).WriteJson(JsonWriter, T, JsonSerializer)
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: MLEM.Data.Json.StaticJsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.StaticJsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: MLEM.Data.Json.StaticJsonConverter`1.GetEntries(System.Type,System.String)
  commentId: M:MLEM.Data.Json.StaticJsonConverter`1.GetEntries(System.Type,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetEntries(Type, string)
  nameWithType: StaticJsonConverter<T>.GetEntries(Type, string)
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.GetEntries(System.Type, string)
  nameWithType.vb: StaticJsonConverter(Of T).GetEntries(Type, String)
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).GetEntries(System.Type, String)
  name.vb: GetEntries(Type, String)
  spec.csharp:
  - uid: MLEM.Data.Json.StaticJsonConverter`1.GetEntries(System.Type,System.String)
    name: GetEntries
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.StaticJsonConverter`1.GetEntries(System.Type,System.String)
    name: GetEntries
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.StaticJsonConverter`1.CreateInverse(System.Collections.Generic.Dictionary{System.String,`0})
  commentId: M:MLEM.Data.Json.StaticJsonConverter`1.CreateInverse(System.Collections.Generic.Dictionary{System.String,`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: CreateInverse(Dictionary<string, T>)
  nameWithType: StaticJsonConverter<T>.CreateInverse(Dictionary<string, T>)
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.CreateInverse(System.Collections.Generic.Dictionary<string, T>)
  nameWithType.vb: StaticJsonConverter(Of T).CreateInverse(Dictionary(Of String, T))
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).CreateInverse(System.Collections.Generic.Dictionary(Of String, T))
  name.vb: CreateInverse(Dictionary(Of String, T))
  spec.csharp:
  - uid: MLEM.Data.Json.StaticJsonConverter`1.CreateInverse(System.Collections.Generic.Dictionary{System.String,`0})
    name: CreateInverse
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.StaticJsonConverter`1.CreateInverse(System.Collections.Generic.Dictionary{System.String,`0})
    name: CreateInverse
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: WriteJson(JsonWriter, object, JsonSerializer)
  nameWithType: JsonConverter<T>.WriteJson(JsonWriter, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).WriteJson(Newtonsoft.Json.JsonWriter, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, object, JsonSerializer)
  nameWithType: JsonConverter<T>.ReadJson(JsonReader, Type, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).ReadJson(Newtonsoft.Json.JsonReader, System.Type, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CanConvert(Type)
  nameWithType: JsonConverter<T>.CanConvert(Type)
  fullName: Newtonsoft.Json.JsonConverter<T>.CanConvert(System.Type)
  nameWithType.vb: JsonConverter(Of T).CanConvert(Type)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception
  name: KeyNotFoundException
  nameWithType: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: MLEM.Data.Json.StaticJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  commentId: M:MLEM.Data.Json.StaticJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, T, bool, JsonSerializer)
  nameWithType: StaticJsonConverter<T>.ReadJson(JsonReader, Type, T, bool, JsonSerializer)
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, bool, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: StaticJsonConverter(Of T).ReadJson(JsonReader, Type, T, Boolean, JsonSerializer)
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, Boolean, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, T, Boolean, JsonSerializer)
  spec.csharp:
  - uid: MLEM.Data.Json.StaticJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.StaticJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonSerializationException
  commentId: T:Newtonsoft.Json.JsonSerializationException
  isExternal: true
  name: JsonSerializationException
  nameWithType: JsonSerializationException
  fullName: Newtonsoft.Json.JsonSerializationException
- uid: TinyLife.MigratingStaticJsonConverter`1.#ctor*
  commentId: Overload:TinyLife.MigratingStaticJsonConverter`1.#ctor
  href: TinyLife.MigratingStaticJsonConverter-1.html#TinyLife_MigratingStaticJsonConverter_1__ctor_System_Collections_Generic_Dictionary_System_String__0__System_Boolean_
  name: MigratingStaticJsonConverter
  nameWithType: MigratingStaticJsonConverter<T>.MigratingStaticJsonConverter
  fullName: TinyLife.MigratingStaticJsonConverter<T>.MigratingStaticJsonConverter
  nameWithType.vb: MigratingStaticJsonConverter(Of T).New
  fullName.vb: TinyLife.MigratingStaticJsonConverter(Of T).New
  name.vb: New
- uid: System.Collections.Generic.Dictionary{System.String,{T}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, T>
  nameWithType: Dictionary<string, T>
  fullName: System.Collections.Generic.Dictionary<string, T>
  nameWithType.vb: Dictionary(Of String, T)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, T)
  name.vb: Dictionary(Of String, T)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: MLEM.Data.Json.StaticJsonConverter{{T}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,{T},System.Boolean,Newtonsoft.Json.JsonSerializer)
  commentId: M:MLEM.Data.Json.StaticJsonConverter{`0}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  parent: MLEM.Data.Json.StaticJsonConverter{{T}}
  definition: MLEM.Data.Json.StaticJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, T, bool, JsonSerializer)
  nameWithType: StaticJsonConverter<T>.ReadJson(JsonReader, Type, T, bool, JsonSerializer)
  fullName: MLEM.Data.Json.StaticJsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, bool, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: StaticJsonConverter(Of T).ReadJson(JsonReader, Type, T, Boolean, JsonSerializer)
  fullName.vb: MLEM.Data.Json.StaticJsonConverter(Of T).ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, Boolean, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, T, Boolean, JsonSerializer)
  spec.csharp:
  - uid: MLEM.Data.Json.StaticJsonConverter{`0}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.StaticJsonConverter{`0}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: TinyLife.MigratingStaticJsonConverter`1.ReadJson*
  commentId: Overload:TinyLife.MigratingStaticJsonConverter`1.ReadJson
  href: TinyLife.MigratingStaticJsonConverter-1.html#TinyLife_MigratingStaticJsonConverter_1_ReadJson_Newtonsoft_Json_JsonReader_System_Type__0_System_Boolean_Newtonsoft_Json_JsonSerializer_
  name: ReadJson
  nameWithType: MigratingStaticJsonConverter<T>.ReadJson
  fullName: TinyLife.MigratingStaticJsonConverter<T>.ReadJson
  nameWithType.vb: MigratingStaticJsonConverter(Of T).ReadJson
  fullName.vb: TinyLife.MigratingStaticJsonConverter(Of T).ReadJson
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: T
  name: T
  nameWithType: T
  fullName: T
