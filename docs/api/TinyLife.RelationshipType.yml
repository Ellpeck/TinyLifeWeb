### YamlMime:ManagedReference
items:
- uid: TinyLife.RelationshipType
  commentId: T:TinyLife.RelationshipType
  id: RelationshipType
  parent: TinyLife
  children:
  - TinyLife.RelationshipType.Enemies
  - TinyLife.RelationshipType.Disliked
  - TinyLife.RelationshipType.Acquaintances
  - TinyLife.RelationshipType.Friends
  - TinyLife.RelationshipType.GoodFriends
  langs:
  - csharp
  - vb
  name: RelationshipType
  nameWithType: RelationshipType
  fullName: TinyLife.RelationshipType
  type: Enum
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    An enumeration type that represents the type that a <xref href="TinyLife.Relationship" data-throw-if-not-resolved="false"></xref> can have.

    These are ordered by their "goodness", with closer and more familiar relationship types having higher values.
  example: []
  syntax:
    content: public enum RelationshipType
    content.vb: Public Enum RelationshipType
  extensionMethods:
  - TinyLife.RelationshipType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.RelationshipType.Enemies
  commentId: F:TinyLife.RelationshipType.Enemies
  id: Enemies
  parent: TinyLife.RelationshipType
  langs:
  - csharp
  - vb
  name: Enemies
  nameWithType: RelationshipType.Enemies
  fullName: TinyLife.RelationshipType.Enemies
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: A relationship type that represents two people that hate each other
  example: []
  syntax:
    content: Enemies = 0
    return:
      type: TinyLife.RelationshipType
- uid: TinyLife.RelationshipType.Disliked
  commentId: F:TinyLife.RelationshipType.Disliked
  id: Disliked
  parent: TinyLife.RelationshipType
  langs:
  - csharp
  - vb
  name: Disliked
  nameWithType: RelationshipType.Disliked
  fullName: TinyLife.RelationshipType.Disliked
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: A relationship type that represents two people that dislike each other
  example: []
  syntax:
    content: Disliked = 1
    return:
      type: TinyLife.RelationshipType
- uid: TinyLife.RelationshipType.Acquaintances
  commentId: F:TinyLife.RelationshipType.Acquaintances
  id: Acquaintances
  parent: TinyLife.RelationshipType
  langs:
  - csharp
  - vb
  name: Acquaintances
  nameWithType: RelationshipType.Acquaintances
  fullName: TinyLife.RelationshipType.Acquaintances
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: A relationship type that represents two people that don't know each other well
  example: []
  syntax:
    content: Acquaintances = 2
    return:
      type: TinyLife.RelationshipType
- uid: TinyLife.RelationshipType.Friends
  commentId: F:TinyLife.RelationshipType.Friends
  id: Friends
  parent: TinyLife.RelationshipType
  langs:
  - csharp
  - vb
  name: Friends
  nameWithType: RelationshipType.Friends
  fullName: TinyLife.RelationshipType.Friends
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: A relationship type that represents two people that know each other well
  example: []
  syntax:
    content: Friends = 3
    return:
      type: TinyLife.RelationshipType
- uid: TinyLife.RelationshipType.GoodFriends
  commentId: F:TinyLife.RelationshipType.GoodFriends
  id: GoodFriends
  parent: TinyLife.RelationshipType
  langs:
  - csharp
  - vb
  name: GoodFriends
  nameWithType: RelationshipType.GoodFriends
  fullName: TinyLife.RelationshipType.GoodFriends
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: A relationship type that represents two people that know each other very well
  example: []
  syntax:
    content: GoodFriends = 4
    return:
      type: TinyLife.RelationshipType
references:
- uid: TinyLife.Relationship
  commentId: T:TinyLife.Relationship
  parent: TinyLife
  href: TinyLife.Relationship.html
  name: Relationship
  nameWithType: Relationship
  fullName: TinyLife.Relationship
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.RelationshipType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<RelationshipType>(RelationshipType)
  nameWithType: Extensions.JsonCopy<RelationshipType>(RelationshipType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.RelationshipType>(TinyLife.RelationshipType)
  nameWithType.vb: Extensions.JsonCopy(Of RelationshipType)(RelationshipType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.RelationshipType)(TinyLife.RelationshipType)
  name.vb: JsonCopy(Of RelationshipType)(RelationshipType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.RelationshipType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.RelationshipType
    name: RelationshipType
    href: TinyLife.RelationshipType.html
  - name: '>'
  - name: (
  - uid: TinyLife.RelationshipType
    name: RelationshipType
    href: TinyLife.RelationshipType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.RelationshipType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.RelationshipType
    name: RelationshipType
    href: TinyLife.RelationshipType.html
  - name: )
  - name: (
  - uid: TinyLife.RelationshipType
    name: RelationshipType
    href: TinyLife.RelationshipType.html
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.RelationshipType
  commentId: T:TinyLife.RelationshipType
  parent: TinyLife
  href: TinyLife.RelationshipType.html
  name: RelationshipType
  nameWithType: RelationshipType
  fullName: TinyLife.RelationshipType
