### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.CanExecuteResult
  commentId: T:TinyLife.Actions.CanExecuteResult
  id: CanExecuteResult
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.CanExecuteResult.#ctor(System.String,TinyLife.Actions.CanExecuteResult.ResultType)
  - TinyLife.Actions.CanExecuteResult.Hidden
  - TinyLife.Actions.CanExecuteResult.LotStaffOnly
  - TinyLife.Actions.CanExecuteResult.Name
  - TinyLife.Actions.CanExecuteResult.NoOneFree
  - TinyLife.Actions.CanExecuteResult.NotEnoughMoney
  - TinyLife.Actions.CanExecuteResult.NotEnoughSkill
  - TinyLife.Actions.CanExecuteResult.NotYours
  - TinyLife.Actions.CanExecuteResult.ObjectBroken
  - TinyLife.Actions.CanExecuteResult.Type
  - TinyLife.Actions.CanExecuteResult.Valid
  langs:
  - csharp
  - vb
  name: CanExecuteResult
  nameWithType: CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult
  type: Struct
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A utility structure used by <xref href="TinyLife.Actions.ActionType.CanExecuteDelegate" data-throw-if-not-resolved="false"></xref> and other situations where an action can fail, or fail to start, due to a specific circumstance.

    The <xref href="TinyLife.Actions.CanExecuteResult.Name" data-throw-if-not-resolved="false"></xref> of the <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> will be localized and displayed to the player if the <xref href="TinyLife.Actions.CanExecuteResult.ResultType" data-throw-if-not-resolved="false"></xref> is not <xref href="TinyLife.Actions.CanExecuteResult.Hidden" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public readonly record struct CanExecuteResult : IEquatable<CanExecuteResult>'
    content.vb: Public Structure CanExecuteResult Implements IEquatable(Of CanExecuteResult)
  implements:
  - System.IEquatable{TinyLife.Actions.CanExecuteResult}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - TinyLife.Actions.CanExecuteResult.TinyLife.Utilities.Extensions.BothValid(System.Func{TinyLife.Actions.CanExecuteResult})
  - TinyLife.Actions.CanExecuteResult.TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult)
  - TinyLife.Actions.CanExecuteResult.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.CanExecuteResult.#ctor(System.String,TinyLife.Actions.CanExecuteResult.ResultType)
  commentId: M:TinyLife.Actions.CanExecuteResult.#ctor(System.String,TinyLife.Actions.CanExecuteResult.ResultType)
  id: '#ctor(System.String,TinyLife.Actions.CanExecuteResult.ResultType)'
  parent: TinyLife.Actions.CanExecuteResult
  langs:
  - csharp
  - vb
  name: CanExecuteResult(string, ResultType)
  nameWithType: CanExecuteResult.CanExecuteResult(string, CanExecuteResult.ResultType)
  fullName: TinyLife.Actions.CanExecuteResult.CanExecuteResult(string, TinyLife.Actions.CanExecuteResult.ResultType)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A utility structure used by <xref href="TinyLife.Actions.ActionType.CanExecuteDelegate" data-throw-if-not-resolved="false"></xref> and other situations where an action can fail, or fail to start, due to a specific circumstance.

    The <xref href="TinyLife.Actions.CanExecuteResult.Name" data-throw-if-not-resolved="false"></xref> of the <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> will be localized and displayed to the player if the <xref href="TinyLife.Actions.CanExecuteResult.ResultType" data-throw-if-not-resolved="false"></xref> is not <xref href="TinyLife.Actions.CanExecuteResult.Hidden" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public CanExecuteResult(string Name, CanExecuteResult.ResultType Type = ResultType.Invalid)
    parameters:
    - id: Name
      type: System.String
      description: >-
        The name of this <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref>, which is localized and displayed to the player.

        If the <xref href="TinyLife.Actions.CanExecuteResult.Type" data-throw-if-not-resolved="false"></xref> is <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Actions.CanExecuteResult.Hidden" data-throw-if-not-resolved="false"></xref>, this name usually doesn't ever have to be displayed.
    - id: Type
      type: TinyLife.Actions.CanExecuteResult.ResultType
      description: The <xref href="TinyLife.Actions.CanExecuteResult.ResultType" data-throw-if-not-resolved="false"></xref> of this <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref>. In general, custom results will only have to use <xref href="TinyLife.Actions.CanExecuteResult.ResultType.Invalid" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(Name As String, Type As CanExecuteResult.ResultType = ResultType.Invalid)
  overload: TinyLife.Actions.CanExecuteResult.#ctor*
  nameWithType.vb: CanExecuteResult.New(String, CanExecuteResult.ResultType)
  fullName.vb: TinyLife.Actions.CanExecuteResult.New(String, TinyLife.Actions.CanExecuteResult.ResultType)
  name.vb: New(String, ResultType)
- uid: TinyLife.Actions.CanExecuteResult.Name
  commentId: P:TinyLife.Actions.CanExecuteResult.Name
  id: Name
  parent: TinyLife.Actions.CanExecuteResult
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CanExecuteResult.Name
  fullName: TinyLife.Actions.CanExecuteResult.Name
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    The name of this <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref>, which is localized and displayed to the player.

    If the <xref href="TinyLife.Actions.CanExecuteResult.Type" data-throw-if-not-resolved="false"></xref> is <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Actions.CanExecuteResult.Hidden" data-throw-if-not-resolved="false"></xref>, this name usually doesn't ever have to be displayed.
  example: []
  syntax:
    content: public string Name { get; init; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TinyLife.Actions.CanExecuteResult.Name*
- uid: TinyLife.Actions.CanExecuteResult.Type
  commentId: P:TinyLife.Actions.CanExecuteResult.Type
  id: Type
  parent: TinyLife.Actions.CanExecuteResult
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: CanExecuteResult.Type
  fullName: TinyLife.Actions.CanExecuteResult.Type
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: The <xref href="TinyLife.Actions.CanExecuteResult.ResultType" data-throw-if-not-resolved="false"></xref> of this <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref>. In general, custom results will only have to use <xref href="TinyLife.Actions.CanExecuteResult.ResultType.Invalid" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public CanExecuteResult.ResultType Type { get; init; }
    parameters: []
    return:
      type: TinyLife.Actions.CanExecuteResult.ResultType
    content.vb: Public Property Type As CanExecuteResult.ResultType
  overload: TinyLife.Actions.CanExecuteResult.Type*
- uid: TinyLife.Actions.CanExecuteResult.Valid
  commentId: F:TinyLife.Actions.CanExecuteResult.Valid
  id: Valid
  parent: TinyLife.Actions.CanExecuteResult
  langs:
  - csharp
  - vb
  name: Valid
  nameWithType: CanExecuteResult.Valid
  fullName: TinyLife.Actions.CanExecuteResult.Valid
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly CanExecuteResult Valid
    return:
      type: TinyLife.Actions.CanExecuteResult
    content.vb: Public Shared ReadOnly Valid As CanExecuteResult
- uid: TinyLife.Actions.CanExecuteResult.Hidden
  commentId: F:TinyLife.Actions.CanExecuteResult.Hidden
  id: Hidden
  parent: TinyLife.Actions.CanExecuteResult
  langs:
  - csharp
  - vb
  name: Hidden
  nameWithType: CanExecuteResult.Hidden
  fullName: TinyLife.Actions.CanExecuteResult.Hidden
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly CanExecuteResult Hidden
    return:
      type: TinyLife.Actions.CanExecuteResult
    content.vb: Public Shared ReadOnly Hidden As CanExecuteResult
- uid: TinyLife.Actions.CanExecuteResult.ObjectBroken
  commentId: F:TinyLife.Actions.CanExecuteResult.ObjectBroken
  id: ObjectBroken
  parent: TinyLife.Actions.CanExecuteResult
  langs:
  - csharp
  - vb
  name: ObjectBroken
  nameWithType: CanExecuteResult.ObjectBroken
  fullName: TinyLife.Actions.CanExecuteResult.ObjectBroken
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly CanExecuteResult ObjectBroken
    return:
      type: TinyLife.Actions.CanExecuteResult
    content.vb: Public Shared ReadOnly ObjectBroken As CanExecuteResult
- uid: TinyLife.Actions.CanExecuteResult.NotYours
  commentId: F:TinyLife.Actions.CanExecuteResult.NotYours
  id: NotYours
  parent: TinyLife.Actions.CanExecuteResult
  langs:
  - csharp
  - vb
  name: NotYours
  nameWithType: CanExecuteResult.NotYours
  fullName: TinyLife.Actions.CanExecuteResult.NotYours
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly CanExecuteResult NotYours
    return:
      type: TinyLife.Actions.CanExecuteResult
    content.vb: Public Shared ReadOnly NotYours As CanExecuteResult
- uid: TinyLife.Actions.CanExecuteResult.NotEnoughMoney
  commentId: F:TinyLife.Actions.CanExecuteResult.NotEnoughMoney
  id: NotEnoughMoney
  parent: TinyLife.Actions.CanExecuteResult
  langs:
  - csharp
  - vb
  name: NotEnoughMoney
  nameWithType: CanExecuteResult.NotEnoughMoney
  fullName: TinyLife.Actions.CanExecuteResult.NotEnoughMoney
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly CanExecuteResult NotEnoughMoney
    return:
      type: TinyLife.Actions.CanExecuteResult
    content.vb: Public Shared ReadOnly NotEnoughMoney As CanExecuteResult
- uid: TinyLife.Actions.CanExecuteResult.NotEnoughSkill
  commentId: F:TinyLife.Actions.CanExecuteResult.NotEnoughSkill
  id: NotEnoughSkill
  parent: TinyLife.Actions.CanExecuteResult
  langs:
  - csharp
  - vb
  name: NotEnoughSkill
  nameWithType: CanExecuteResult.NotEnoughSkill
  fullName: TinyLife.Actions.CanExecuteResult.NotEnoughSkill
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly CanExecuteResult NotEnoughSkill
    return:
      type: TinyLife.Actions.CanExecuteResult
    content.vb: Public Shared ReadOnly NotEnoughSkill As CanExecuteResult
- uid: TinyLife.Actions.CanExecuteResult.LotStaffOnly
  commentId: F:TinyLife.Actions.CanExecuteResult.LotStaffOnly
  id: LotStaffOnly
  parent: TinyLife.Actions.CanExecuteResult
  langs:
  - csharp
  - vb
  name: LotStaffOnly
  nameWithType: CanExecuteResult.LotStaffOnly
  fullName: TinyLife.Actions.CanExecuteResult.LotStaffOnly
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly CanExecuteResult LotStaffOnly
    return:
      type: TinyLife.Actions.CanExecuteResult
    content.vb: Public Shared ReadOnly LotStaffOnly As CanExecuteResult
- uid: TinyLife.Actions.CanExecuteResult.NoOneFree
  commentId: F:TinyLife.Actions.CanExecuteResult.NoOneFree
  id: NoOneFree
  parent: TinyLife.Actions.CanExecuteResult
  langs:
  - csharp
  - vb
  name: NoOneFree
  nameWithType: CanExecuteResult.NoOneFree
  fullName: TinyLife.Actions.CanExecuteResult.NoOneFree
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly CanExecuteResult NoOneFree
    return:
      type: TinyLife.Actions.CanExecuteResult
    content.vb: Public Shared ReadOnly NoOneFree As CanExecuteResult
references:
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate
  commentId: T:TinyLife.Actions.ActionType.CanExecuteDelegate
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType.CanExecuteDelegate
  nameWithType: ActionType.CanExecuteDelegate
  fullName: TinyLife.Actions.ActionType.CanExecuteDelegate
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
    href: TinyLife.Actions.ActionType.CanExecuteDelegate.html
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
    href: TinyLife.Actions.ActionType.CanExecuteDelegate.html
- uid: TinyLife.Actions.CanExecuteResult.Name
  commentId: P:TinyLife.Actions.CanExecuteResult.Name
  href: TinyLife.Actions.CanExecuteResult.html#TinyLife_Actions_CanExecuteResult_Name
  name: Name
  nameWithType: CanExecuteResult.Name
  fullName: TinyLife.Actions.CanExecuteResult.Name
- uid: TinyLife.Actions.CanExecuteResult
  commentId: T:TinyLife.Actions.CanExecuteResult
  parent: TinyLife.Actions
  href: TinyLife.Actions.CanExecuteResult.html
  name: CanExecuteResult
  nameWithType: CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult
- uid: TinyLife.Actions.CanExecuteResult.ResultType
  commentId: T:TinyLife.Actions.CanExecuteResult.ResultType
  parent: TinyLife.Actions
  href: TinyLife.Actions.CanExecuteResult.html
  name: CanExecuteResult.ResultType
  nameWithType: CanExecuteResult.ResultType
  fullName: TinyLife.Actions.CanExecuteResult.ResultType
  spec.csharp:
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: .
  - uid: TinyLife.Actions.CanExecuteResult.ResultType
    name: ResultType
    href: TinyLife.Actions.CanExecuteResult.ResultType.html
  spec.vb:
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: .
  - uid: TinyLife.Actions.CanExecuteResult.ResultType
    name: ResultType
    href: TinyLife.Actions.CanExecuteResult.ResultType.html
- uid: TinyLife.Actions.CanExecuteResult.Hidden
  commentId: F:TinyLife.Actions.CanExecuteResult.Hidden
  href: TinyLife.Actions.CanExecuteResult.html#TinyLife_Actions_CanExecuteResult_Hidden
  name: Hidden
  nameWithType: CanExecuteResult.Hidden
  fullName: TinyLife.Actions.CanExecuteResult.Hidden
- uid: TinyLife.Actions.CanExecuteResult.Valid
  commentId: F:TinyLife.Actions.CanExecuteResult.Valid
  href: TinyLife.Actions.CanExecuteResult.html#TinyLife_Actions_CanExecuteResult_Valid
  name: Valid
  nameWithType: CanExecuteResult.Valid
  fullName: TinyLife.Actions.CanExecuteResult.Valid
- uid: TinyLife.Actions.CanExecuteResult.Type
  commentId: P:TinyLife.Actions.CanExecuteResult.Type
  href: TinyLife.Actions.CanExecuteResult.html#TinyLife_Actions_CanExecuteResult_Type
  name: Type
  nameWithType: CanExecuteResult.Type
  fullName: TinyLife.Actions.CanExecuteResult.Type
- uid: TinyLife.Actions.CanExecuteResult.ResultType.Invalid
  commentId: F:TinyLife.Actions.CanExecuteResult.ResultType.Invalid
  href: TinyLife.Actions.CanExecuteResult.ResultType.html#TinyLife_Actions_CanExecuteResult_ResultType_Invalid
  name: Invalid
  nameWithType: CanExecuteResult.ResultType.Invalid
  fullName: TinyLife.Actions.CanExecuteResult.ResultType.Invalid
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.IEquatable{TinyLife.Actions.CanExecuteResult}
  commentId: T:System.IEquatable{TinyLife.Actions.CanExecuteResult}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<CanExecuteResult>
  nameWithType: IEquatable<CanExecuteResult>
  fullName: System.IEquatable<TinyLife.Actions.CanExecuteResult>
  nameWithType.vb: IEquatable(Of CanExecuteResult)
  fullName.vb: System.IEquatable(Of TinyLife.Actions.CanExecuteResult)
  name.vb: IEquatable(Of CanExecuteResult)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.Actions.CanExecuteResult.TinyLife.Utilities.Extensions.BothValid(System.Func{TinyLife.Actions.CanExecuteResult})
  commentId: M:TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,System.Func{TinyLife.Actions.CanExecuteResult})
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,System.Func{TinyLife.Actions.CanExecuteResult})
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_System_Func_TinyLife_Actions_CanExecuteResult__
  name: BothValid(CanExecuteResult, Func<CanExecuteResult>)
  nameWithType: Extensions.BothValid(CanExecuteResult, Func<CanExecuteResult>)
  fullName: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult, System.Func<TinyLife.Actions.CanExecuteResult>)
  nameWithType.vb: Extensions.BothValid(CanExecuteResult, Func(Of CanExecuteResult))
  fullName.vb: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult, System.Func(Of TinyLife.Actions.CanExecuteResult))
  name.vb: BothValid(CanExecuteResult, Func(Of CanExecuteResult))
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,System.Func{TinyLife.Actions.CanExecuteResult})
    name: BothValid
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_System_Func_TinyLife_Actions_CanExecuteResult__
  - name: (
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,System.Func{TinyLife.Actions.CanExecuteResult})
    name: BothValid
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_System_Func_TinyLife_Actions_CanExecuteResult__
  - name: (
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
  - name: )
- uid: TinyLife.Actions.CanExecuteResult.TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult)
  commentId: M:TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,TinyLife.Actions.CanExecuteResult)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,TinyLife.Actions.CanExecuteResult)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_TinyLife_Actions_CanExecuteResult_
  name: BothValid(CanExecuteResult, CanExecuteResult)
  nameWithType: Extensions.BothValid(CanExecuteResult, CanExecuteResult)
  fullName: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult, TinyLife.Actions.CanExecuteResult)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,TinyLife.Actions.CanExecuteResult)
    name: BothValid
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_TinyLife_Actions_CanExecuteResult_
  - name: (
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,TinyLife.Actions.CanExecuteResult)
    name: BothValid
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_TinyLife_Actions_CanExecuteResult_
  - name: (
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
- uid: TinyLife.Actions.CanExecuteResult.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<CanExecuteResult>(CanExecuteResult)
  nameWithType: Extensions.JsonCopy<CanExecuteResult>(CanExecuteResult)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.CanExecuteResult>(TinyLife.Actions.CanExecuteResult)
  nameWithType.vb: Extensions.JsonCopy(Of CanExecuteResult)(CanExecuteResult)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.CanExecuteResult)(TinyLife.Actions.CanExecuteResult)
  name.vb: JsonCopy(Of CanExecuteResult)(CanExecuteResult)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.CanExecuteResult)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.CanExecuteResult)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
  - name: (
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,System.Func{TinyLife.Actions.CanExecuteResult})
  commentId: M:TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,System.Func{TinyLife.Actions.CanExecuteResult})
  isExternal: true
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_System_Func_TinyLife_Actions_CanExecuteResult__
  name: BothValid(CanExecuteResult, Func<CanExecuteResult>)
  nameWithType: Extensions.BothValid(CanExecuteResult, Func<CanExecuteResult>)
  fullName: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult, System.Func<TinyLife.Actions.CanExecuteResult>)
  nameWithType.vb: Extensions.BothValid(CanExecuteResult, Func(Of CanExecuteResult))
  fullName.vb: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult, System.Func(Of TinyLife.Actions.CanExecuteResult))
  name.vb: BothValid(CanExecuteResult, Func(Of CanExecuteResult))
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,System.Func{TinyLife.Actions.CanExecuteResult})
    name: BothValid
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_System_Func_TinyLife_Actions_CanExecuteResult__
  - name: (
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,System.Func{TinyLife.Actions.CanExecuteResult})
    name: BothValid
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_System_Func_TinyLife_Actions_CanExecuteResult__
  - name: (
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,TinyLife.Actions.CanExecuteResult)
  commentId: M:TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,TinyLife.Actions.CanExecuteResult)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_TinyLife_Actions_CanExecuteResult_
  name: BothValid(CanExecuteResult, CanExecuteResult)
  nameWithType: Extensions.BothValid(CanExecuteResult, CanExecuteResult)
  fullName: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult, TinyLife.Actions.CanExecuteResult)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,TinyLife.Actions.CanExecuteResult)
    name: BothValid
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_TinyLife_Actions_CanExecuteResult_
  - name: (
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.BothValid(TinyLife.Actions.CanExecuteResult,TinyLife.Actions.CanExecuteResult)
    name: BothValid
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_BothValid_TinyLife_Actions_CanExecuteResult_TinyLife_Actions_CanExecuteResult_
  - name: (
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Actions.CanExecuteResult.#ctor*
  commentId: Overload:TinyLife.Actions.CanExecuteResult.#ctor
  href: TinyLife.Actions.CanExecuteResult.html#TinyLife_Actions_CanExecuteResult__ctor_System_String_TinyLife_Actions_CanExecuteResult_ResultType_
  name: CanExecuteResult
  nameWithType: CanExecuteResult.CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult.CanExecuteResult
  nameWithType.vb: CanExecuteResult.New
  fullName.vb: TinyLife.Actions.CanExecuteResult.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Actions.CanExecuteResult.Name*
  commentId: Overload:TinyLife.Actions.CanExecuteResult.Name
  href: TinyLife.Actions.CanExecuteResult.html#TinyLife_Actions_CanExecuteResult_Name
  name: Name
  nameWithType: CanExecuteResult.Name
  fullName: TinyLife.Actions.CanExecuteResult.Name
- uid: TinyLife.Actions.CanExecuteResult.Type*
  commentId: Overload:TinyLife.Actions.CanExecuteResult.Type
  href: TinyLife.Actions.CanExecuteResult.html#TinyLife_Actions_CanExecuteResult_Type
  name: Type
  nameWithType: CanExecuteResult.Type
  fullName: TinyLife.Actions.CanExecuteResult.Type
