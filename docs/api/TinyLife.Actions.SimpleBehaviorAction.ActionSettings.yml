### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  commentId: T:TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  id: SimpleBehaviorAction.ActionSettings
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.SimpleBehaviorAction.ActionSettings.#ctor(System.String,TinyLife.Objects.ObjectCategory)
  - TinyLife.Actions.SimpleBehaviorAction.ActionSettings.AllowMultitasking
  - TinyLife.Actions.SimpleBehaviorAction.ActionSettings.CompletionTime
  - TinyLife.Actions.SimpleBehaviorAction.ActionSettings.ConstructBehavior
  - TinyLife.Actions.SimpleBehaviorAction.ActionSettings.DisallowedEmotions
  - TinyLife.Actions.SimpleBehaviorAction.ActionSettings.EfficiencyMattersCompletion
  - TinyLife.Actions.SimpleBehaviorAction.ActionSettings.GainedSkill
  - TinyLife.Actions.SimpleBehaviorAction.ActionSettings.OnCompleted
  - TinyLife.Actions.SimpleBehaviorAction.ActionSettings.RestoredNeeds
  - TinyLife.Actions.SimpleBehaviorAction.ActionSettings.Settings
  langs:
  - csharp
  - vb
  name: SimpleBehaviorAction.ActionSettings
  nameWithType: SimpleBehaviorAction.ActionSettings
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  type: Struct
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: A struct used by <xref href="TinyLife.Actions.SimpleBehaviorAction" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Actions.SimpleBehaviorAction.Create(TinyLife.Actions.SimpleBehaviorAction.ActionSettings)" data-throw-if-not-resolved="false"></xref> method to pass settings onto a simple behavior action.
  example: []
  syntax:
    content: public struct SimpleBehaviorAction.ActionSettings
    content.vb: Public Structure SimpleBehaviorAction.ActionSettings
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - TinyLife.Actions.SimpleBehaviorAction.ActionSettings.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.Settings
  commentId: F:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.Settings
  id: Settings
  parent: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: SimpleBehaviorAction.ActionSettings.Settings
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.Settings
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A set of <xref href="TinyLife.Actions.ActionType.TypeSettings" data-throw-if-not-resolved="false"></xref> that should be used.

    These will be amended with additional info based on these action settings in <xref href="TinyLife.Actions.SimpleBehaviorAction.Create(TinyLife.Actions.SimpleBehaviorAction.ActionSettings)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ActionType.TypeSettings Settings
    return:
      type: TinyLife.Actions.ActionType.TypeSettings
    content.vb: Public Settings As ActionType.TypeSettings
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.ConstructBehavior
  commentId: F:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.ConstructBehavior
  id: ConstructBehavior
  parent: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  langs:
  - csharp
  - vb
  name: ConstructBehavior
  nameWithType: SimpleBehaviorAction.ActionSettings.ConstructBehavior
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.ConstructBehavior
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: A function that constructs the behavior for this simple behavior action.
  example: []
  syntax:
    content: public required Func<SimpleBehaviorAction, ActionBehavior> ConstructBehavior
    return:
      type: System.Func{TinyLife.Actions.SimpleBehaviorAction,TinyLife.Actions.Behaviors.ActionBehavior}
    content.vb: Public ConstructBehavior As Func(Of SimpleBehaviorAction, ActionBehavior)
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.CompletionTime
  commentId: F:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.CompletionTime
  id: CompletionTime
  parent: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  langs:
  - csharp
  - vb
  name: CompletionTime
  nameWithType: SimpleBehaviorAction.ActionSettings.CompletionTime
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.CompletionTime
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: The amount of time passed to <xref href="TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan%2cSystem.Boolean%2cTinyLife.Skills.SkillType%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public required TimeSpan CompletionTime
    return:
      type: System.TimeSpan
    content.vb: Public CompletionTime As TimeSpan
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.GainedSkill
  commentId: F:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.GainedSkill
  id: GainedSkill
  parent: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  langs:
  - csharp
  - vb
  name: GainedSkill
  nameWithType: SimpleBehaviorAction.ActionSettings.GainedSkill
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.GainedSkill
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: A skill that is optionally gained in <xref href="TinyLife.Actions.SimpleBehaviorAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>, where the amount is multiplied with the passed in-game time.
  example: []
  syntax:
    content: public (SkillType Type, float Amount) GainedSkill
    return:
      type: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}
    content.vb: Public GainedSkill As (Type As SkillType, Amount As Single)
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.RestoredNeeds
  commentId: F:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.RestoredNeeds
  id: RestoredNeeds
  parent: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  langs:
  - csharp
  - vb
  name: RestoredNeeds
  nameWithType: SimpleBehaviorAction.ActionSettings.RestoredNeeds
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.RestoredNeeds
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: A a set of needs that are optionally restored in <xref href="TinyLife.Actions.SimpleBehaviorAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>, where the restoration amounts are multiplied with the passed in-game time.
  example: []
  syntax:
    content: public (NeedType Type, float Amount)[] RestoredNeeds
    return:
      type: System.ValueTuple{TinyLife.NeedType,System.Single}[]
    content.vb: Public RestoredNeeds As (Type As NeedType, Amount As Single)()
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.EfficiencyMattersCompletion
  commentId: F:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.EfficiencyMattersCompletion
  id: EfficiencyMattersCompletion
  parent: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  langs:
  - csharp
  - vb
  name: EfficiencyMattersCompletion
  nameWithType: SimpleBehaviorAction.ActionSettings.EfficiencyMattersCompletion
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.EfficiencyMattersCompletion
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Whether efficiency matters for this action settings' <xref href="TinyLife.Actions.SimpleBehaviorAction.ActionSettings.CompletionTime" data-throw-if-not-resolved="false"></xref>. This is passed to <xref href="TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan%2cSystem.Boolean%2cTinyLife.Skills.SkillType%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool EfficiencyMattersCompletion
    return:
      type: System.Boolean
    content.vb: Public EfficiencyMattersCompletion As Boolean
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.DisallowedEmotions
  commentId: F:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.DisallowedEmotions
  id: DisallowedEmotions
  parent: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  langs:
  - csharp
  - vb
  name: DisallowedEmotions
  nameWithType: SimpleBehaviorAction.ActionSettings.DisallowedEmotions
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.DisallowedEmotions
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: A set of emotions that will cancel the simple behavior action, and that will cause new instances of the action not to be constructable.
  example: []
  syntax:
    content: public EmotionType[] DisallowedEmotions
    return:
      type: TinyLife.Emotions.EmotionType[]
    content.vb: Public DisallowedEmotions As EmotionType()
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.OnCompleted
  commentId: F:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.OnCompleted
  id: OnCompleted
  parent: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  langs:
  - csharp
  - vb
  name: OnCompleted
  nameWithType: SimpleBehaviorAction.ActionSettings.OnCompleted
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.OnCompleted
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: An action that is invoked when an instance of the simple behavior action is completed, in <xref href="TinyLife.Actions.SimpleBehaviorAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Action<SimpleBehaviorAction, CompletionType> OnCompleted
    return:
      type: System.Action{TinyLife.Actions.SimpleBehaviorAction,TinyLife.Actions.CompletionType}
    content.vb: Public OnCompleted As Action(Of SimpleBehaviorAction, CompletionType)
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.AllowMultitasking
  commentId: F:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.AllowMultitasking
  id: AllowMultitasking
  parent: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  langs:
  - csharp
  - vb
  name: AllowMultitasking
  nameWithType: SimpleBehaviorAction.ActionSettings.AllowMultitasking
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.AllowMultitasking
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A function that determines whether multitasking is allowed. The arguments passed are the instance of the simple behavior action, as well as the two arguments passed to <xref href="TinyLife.Actions.SimpleBehaviorAction.CanMultitask(TinyLife.Actions.Action)" data-throw-if-not-resolved="false"></xref>.
     If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, the base implementation is used in <xref href="TinyLife.Actions.SimpleBehaviorAction.CanMultitask(TinyLife.Actions.Action)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Func<SimpleBehaviorAction, Action, Action.CanMultitaskResult> AllowMultitasking
    return:
      type: System.Func{TinyLife.Actions.SimpleBehaviorAction,TinyLife.Actions.Action,TinyLife.Actions.Action.CanMultitaskResult}
    content.vb: Public AllowMultitasking As Func(Of SimpleBehaviorAction, Action, Action.CanMultitaskResult)
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.#ctor(System.String,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.#ctor(System.String,TinyLife.Objects.ObjectCategory)
  id: '#ctor(System.String,TinyLife.Objects.ObjectCategory)'
  parent: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
  langs:
  - csharp
  - vb
  name: ActionSettings(string, ObjectCategory)
  nameWithType: SimpleBehaviorAction.ActionSettings.ActionSettings(string, ObjectCategory)
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.ActionSettings(string, TinyLife.Objects.ObjectCategory)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Creates a new set of action settings with the given defaults.
  example: []
  syntax:
    content: public ActionSettings(string name, ObjectCategory context)
    parameters:
    - id: name
      type: System.String
      description: The name of the action to pass to the <xref href="TinyLife.Actions.ActionType.TypeSettings" data-throw-if-not-resolved="false"></xref> constructor.
    - id: context
      type: TinyLife.Objects.ObjectCategory
      description: The context to pass to the <xref href="TinyLife.Actions.ActionType.TypeSettings" data-throw-if-not-resolved="false"></xref> constructor.
    content.vb: Public Sub New(name As String, context As ObjectCategory)
  overload: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.#ctor*
  nameWithType.vb: SimpleBehaviorAction.ActionSettings.New(String, ObjectCategory)
  fullName.vb: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.New(String, TinyLife.Objects.ObjectCategory)
  name.vb: New(String, ObjectCategory)
references:
- uid: TinyLife.Actions.SimpleBehaviorAction
  commentId: T:TinyLife.Actions.SimpleBehaviorAction
  href: TinyLife.Actions.SimpleBehaviorAction.html
  name: SimpleBehaviorAction
  nameWithType: SimpleBehaviorAction
  fullName: TinyLife.Actions.SimpleBehaviorAction
- uid: TinyLife.Actions.SimpleBehaviorAction.Create(TinyLife.Actions.SimpleBehaviorAction.ActionSettings)
  commentId: M:TinyLife.Actions.SimpleBehaviorAction.Create(TinyLife.Actions.SimpleBehaviorAction.ActionSettings)
  href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_Create_TinyLife_Actions_SimpleBehaviorAction_ActionSettings_
  name: Create(ActionSettings)
  nameWithType: SimpleBehaviorAction.Create(SimpleBehaviorAction.ActionSettings)
  fullName: TinyLife.Actions.SimpleBehaviorAction.Create(TinyLife.Actions.SimpleBehaviorAction.ActionSettings)
  spec.csharp:
  - uid: TinyLife.Actions.SimpleBehaviorAction.Create(TinyLife.Actions.SimpleBehaviorAction.ActionSettings)
    name: Create
    href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_Create_TinyLife_Actions_SimpleBehaviorAction_ActionSettings_
  - name: (
  - uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
    name: ActionSettings
    href: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.html
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SimpleBehaviorAction.Create(TinyLife.Actions.SimpleBehaviorAction.ActionSettings)
    name: Create
    href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_Create_TinyLife_Actions_SimpleBehaviorAction_ActionSettings_
  - name: (
  - uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
    name: ActionSettings
    href: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.html
  - name: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<ActionSettings>(ActionSettings)
  nameWithType: Extensions.JsonCopy<SimpleBehaviorAction.ActionSettings>(SimpleBehaviorAction.ActionSettings)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.SimpleBehaviorAction.ActionSettings>(TinyLife.Actions.SimpleBehaviorAction.ActionSettings)
  nameWithType.vb: Extensions.JsonCopy(Of SimpleBehaviorAction.ActionSettings)(SimpleBehaviorAction.ActionSettings)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.SimpleBehaviorAction.ActionSettings)(TinyLife.Actions.SimpleBehaviorAction.ActionSettings)
  name.vb: JsonCopy(Of ActionSettings)(ActionSettings)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.SimpleBehaviorAction.ActionSettings)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
    name: ActionSettings
    href: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.html
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
    name: ActionSettings
    href: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.SimpleBehaviorAction.ActionSettings)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
    name: ActionSettings
    href: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.html
  - name: )
  - name: (
  - uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings
    name: ActionSettings
    href: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.html
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Actions.ActionType.TypeSettings
  commentId: T:TinyLife.Actions.ActionType.TypeSettings
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType.TypeSettings
  nameWithType: ActionType.TypeSettings
  fullName: TinyLife.Actions.ActionType.TypeSettings
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
- uid: System.Func{TinyLife.Actions.SimpleBehaviorAction,TinyLife.Actions.Behaviors.ActionBehavior}
  commentId: T:System.Func{TinyLife.Actions.SimpleBehaviorAction,TinyLife.Actions.Behaviors.ActionBehavior}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<SimpleBehaviorAction, ActionBehavior>
  nameWithType: Func<SimpleBehaviorAction, ActionBehavior>
  fullName: System.Func<TinyLife.Actions.SimpleBehaviorAction, TinyLife.Actions.Behaviors.ActionBehavior>
  nameWithType.vb: Func(Of SimpleBehaviorAction, ActionBehavior)
  fullName.vb: System.Func(Of TinyLife.Actions.SimpleBehaviorAction, TinyLife.Actions.Behaviors.ActionBehavior)
  name.vb: Func(Of SimpleBehaviorAction, ActionBehavior)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Actions.SimpleBehaviorAction
    name: SimpleBehaviorAction
    href: TinyLife.Actions.SimpleBehaviorAction.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Behaviors.ActionBehavior
    name: ActionBehavior
    href: TinyLife.Actions.Behaviors.ActionBehavior.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.SimpleBehaviorAction
    name: SimpleBehaviorAction
    href: TinyLife.Actions.SimpleBehaviorAction.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Behaviors.ActionBehavior
    name: ActionBehavior
    href: TinyLife.Actions.Behaviors.ActionBehavior.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  commentId: M:TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_CompleteIfTimeUp_System_TimeSpan_System_Boolean_TinyLife_Skills_SkillType_System_Single_System_Boolean_
  name: CompleteIfTimeUp(TimeSpan, bool, SkillType, float, bool)
  nameWithType: Action.CompleteIfTimeUp(TimeSpan, bool, SkillType, float, bool)
  fullName: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan, bool, TinyLife.Skills.SkillType, float, bool)
  nameWithType.vb: Action.CompleteIfTimeUp(TimeSpan, Boolean, SkillType, Single, Boolean)
  fullName.vb: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan, Boolean, TinyLife.Skills.SkillType, Single, Boolean)
  name.vb: CompleteIfTimeUp(TimeSpan, Boolean, SkillType, Single, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
    name: CompleteIfTimeUp
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_CompleteIfTimeUp_System_TimeSpan_System_Boolean_TinyLife_Skills_SkillType_System_Single_System_Boolean_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
    name: CompleteIfTimeUp
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_CompleteIfTimeUp_System_TimeSpan_System_Boolean_TinyLife_Skills_SkillType_System_Single_System_Boolean_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.SimpleBehaviorAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.SimpleBehaviorAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  isExternal: true
  href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_AndThenUpdate_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: AndThenUpdate(GameTime, TimeSpan, float)
  nameWithType: SimpleBehaviorAction.AndThenUpdate(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.SimpleBehaviorAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: SimpleBehaviorAction.AndThenUpdate(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.SimpleBehaviorAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: AndThenUpdate(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Actions.SimpleBehaviorAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: AndThenUpdate
    href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_AndThenUpdate_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SimpleBehaviorAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: AndThenUpdate
    href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_AndThenUpdate_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}
  commentId: T:System.ValueTuple{TinyLife.Skills.SkillType,System.Single}
  parent: System
  definition: System.ValueTuple`2
  href: TinyLife.Skills.SkillType.html
  name: (SkillType Type, float Amount)
  nameWithType: (SkillType Type, float Amount)
  fullName: (TinyLife.Skills.SkillType Type, float Amount)
  nameWithType.vb: (Type As SkillType, Amount As Single)
  fullName.vb: (Type As TinyLife.Skills.SkillType, Amount As Single)
  name.vb: (Type As SkillType, Amount As Single)
  spec.csharp:
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.type
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.amount
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.type
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Single}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.single-.amount
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.ValueTuple{TinyLife.NeedType,System.Single}[]
  isExternal: true
  href: TinyLife.NeedType.html
  name: (NeedType Need, float Modifier)[]
  nameWithType: (NeedType Need, float Modifier)[]
  fullName: (TinyLife.NeedType Need, float Modifier)[]
  nameWithType.vb: (Need As NeedType, Modifier As Single)()
  fullName.vb: (Need As TinyLife.NeedType, Modifier As Single)()
  name.vb: (Need As NeedType, Modifier As Single)()
  spec.csharp:
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.NeedType,System.Single}.Need
    name: Need
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.single-.need
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{TinyLife.NeedType,System.Single}.Modifier
    name: Modifier
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.single-.modifier
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.NeedType,System.Single}.Need
    name: Need
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.single-.need
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.NeedType,System.Single}.Modifier
    name: Modifier
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.single-.modifier
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: (
  - name: )
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.CompletionTime
  commentId: F:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.CompletionTime
  href: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.html#TinyLife_Actions_SimpleBehaviorAction_ActionSettings_CompletionTime
  name: CompletionTime
  nameWithType: SimpleBehaviorAction.ActionSettings.CompletionTime
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.CompletionTime
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Emotions.EmotionType[]
  isExternal: true
  href: TinyLife.Emotions.EmotionType.html
  name: EmotionType[]
  nameWithType: EmotionType[]
  fullName: TinyLife.Emotions.EmotionType[]
  nameWithType.vb: EmotionType()
  fullName.vb: TinyLife.Emotions.EmotionType()
  name.vb: EmotionType()
  spec.csharp:
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
    href: TinyLife.Emotions.EmotionType.html
  - name: (
  - name: )
- uid: TinyLife.Actions.SimpleBehaviorAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.SimpleBehaviorAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_AndThenOnCompleted_TinyLife_Actions_CompletionType_
  name: AndThenOnCompleted(CompletionType)
  nameWithType: SimpleBehaviorAction.AndThenOnCompleted(CompletionType)
  fullName: TinyLife.Actions.SimpleBehaviorAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.SimpleBehaviorAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
    name: AndThenOnCompleted
    href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_AndThenOnCompleted_TinyLife_Actions_CompletionType_
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    href: TinyLife.Actions.CompletionType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SimpleBehaviorAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
    name: AndThenOnCompleted
    href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_AndThenOnCompleted_TinyLife_Actions_CompletionType_
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    href: TinyLife.Actions.CompletionType.html
  - name: )
- uid: System.Action{TinyLife.Actions.SimpleBehaviorAction,TinyLife.Actions.CompletionType}
  commentId: T:System.Action{TinyLife.Actions.SimpleBehaviorAction,TinyLife.Actions.CompletionType}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<SimpleBehaviorAction, CompletionType>
  nameWithType: Action<SimpleBehaviorAction, CompletionType>
  fullName: System.Action<TinyLife.Actions.SimpleBehaviorAction, TinyLife.Actions.CompletionType>
  nameWithType.vb: Action(Of SimpleBehaviorAction, CompletionType)
  fullName.vb: System.Action(Of TinyLife.Actions.SimpleBehaviorAction, TinyLife.Actions.CompletionType)
  name.vb: Action(Of SimpleBehaviorAction, CompletionType)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Actions.SimpleBehaviorAction
    name: SimpleBehaviorAction
    href: TinyLife.Actions.SimpleBehaviorAction.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    href: TinyLife.Actions.CompletionType.html
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.SimpleBehaviorAction
    name: SimpleBehaviorAction
    href: TinyLife.Actions.SimpleBehaviorAction.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    href: TinyLife.Actions.CompletionType.html
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Actions.SimpleBehaviorAction.CanMultitask(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.SimpleBehaviorAction.CanMultitask(TinyLife.Actions.Action)
  href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_CanMultitask_TinyLife_Actions_Action_
  name: CanMultitask(Action)
  nameWithType: SimpleBehaviorAction.CanMultitask(Action)
  fullName: TinyLife.Actions.SimpleBehaviorAction.CanMultitask(TinyLife.Actions.Action)
  spec.csharp:
  - uid: TinyLife.Actions.SimpleBehaviorAction.CanMultitask(TinyLife.Actions.Action)
    name: CanMultitask
    href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_CanMultitask_TinyLife_Actions_Action_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SimpleBehaviorAction.CanMultitask(TinyLife.Actions.Action)
    name: CanMultitask
    href: TinyLife.Actions.SimpleBehaviorAction.html#TinyLife_Actions_SimpleBehaviorAction_CanMultitask_TinyLife_Actions_Action_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: )
- uid: System.Func{TinyLife.Actions.SimpleBehaviorAction,TinyLife.Actions.Action,TinyLife.Actions.Action.CanMultitaskResult}
  commentId: T:System.Func{TinyLife.Actions.SimpleBehaviorAction,TinyLife.Actions.Action,TinyLife.Actions.Action.CanMultitaskResult}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<SimpleBehaviorAction, Action, Action.CanMultitaskResult>
  nameWithType: Func<SimpleBehaviorAction, Action, Action.CanMultitaskResult>
  fullName: System.Func<TinyLife.Actions.SimpleBehaviorAction, TinyLife.Actions.Action, TinyLife.Actions.Action.CanMultitaskResult>
  nameWithType.vb: Func(Of SimpleBehaviorAction, Action, Action.CanMultitaskResult)
  fullName.vb: System.Func(Of TinyLife.Actions.SimpleBehaviorAction, TinyLife.Actions.Action, TinyLife.Actions.Action.CanMultitaskResult)
  name.vb: Func(Of SimpleBehaviorAction, Action, Action.CanMultitaskResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: TinyLife.Actions.SimpleBehaviorAction
    name: SimpleBehaviorAction
    href: TinyLife.Actions.SimpleBehaviorAction.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: .
  - uid: TinyLife.Actions.Action.CanMultitaskResult
    name: CanMultitaskResult
    href: TinyLife.Actions.Action.CanMultitaskResult.html
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.SimpleBehaviorAction
    name: SimpleBehaviorAction
    href: TinyLife.Actions.SimpleBehaviorAction.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: .
  - uid: TinyLife.Actions.Action.CanMultitaskResult
    name: CanMultitaskResult
    href: TinyLife.Actions.Action.CanMultitaskResult.html
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.#ctor*
  commentId: Overload:TinyLife.Actions.SimpleBehaviorAction.ActionSettings.#ctor
  href: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.html#TinyLife_Actions_SimpleBehaviorAction_ActionSettings__ctor_System_String_TinyLife_Objects_ObjectCategory_
  name: ActionSettings
  nameWithType: SimpleBehaviorAction.ActionSettings.ActionSettings
  fullName: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.ActionSettings
  nameWithType.vb: SimpleBehaviorAction.ActionSettings.New
  fullName.vb: TinyLife.Actions.SimpleBehaviorAction.ActionSettings.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Objects.ObjectCategory
  commentId: T:TinyLife.Objects.ObjectCategory
  parent: TinyLife.Objects
  href: TinyLife.Objects.ObjectCategory.html
  name: ObjectCategory
  nameWithType: ObjectCategory
  fullName: TinyLife.Objects.ObjectCategory
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
