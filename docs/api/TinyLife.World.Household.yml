### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Household
  commentId: T:TinyLife.World.Household
  id: Household
  parent: TinyLife.World
  children:
  - TinyLife.World.Household.#ctor(TinyLife.World.Map,TinyLife.World.Lot,System.Boolean)
  - TinyLife.World.Household.Add(TinyLife.Objects.PersonLike)
  - TinyLife.World.Household.AddToFurnitureStorage(TinyLife.Objects.Furniture)
  - TinyLife.World.Household.AddedThroughPopulating
  - TinyLife.World.Household.AreUtilitiesDisabled(System.Nullable{System.TimeSpan})
  - TinyLife.World.Household.ClothesStorage
  - TinyLife.World.Household.DefaultMoney
  - TinyLife.World.Household.Description
  - TinyLife.World.Household.DisallowFriendsVisiting
  - TinyLife.World.Household.DisallowNewspapers
  - TinyLife.World.Household.DisallowStrangersVisiting
  - TinyLife.World.Household.Export(System.Boolean,System.Boolean,System.Boolean)
  - TinyLife.World.Household.FurnitureStorage
  - TinyLife.World.Household.Generate(TinyLife.World.Map,System.Random,System.Collections.Generic.List{TinyLife.Objects.AgeGroup},System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},TinyLife.World.Household.Relation})
  - TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
  - TinyLife.World.Household.GetExportedHouseholds
  - TinyLife.World.Household.GetMatchingConstellations(TinyLife.Objects.AgeGroup)
  - TinyLife.World.Household.GetWeeklyBills
  - TinyLife.World.Household.HasAdultPerson(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
  - TinyLife.World.Household.HasBeenPlayed
  - TinyLife.World.Household.HasMember(System.Guid)
  - TinyLife.World.Household.Import(TinyLife.World.ExportedHousehold,System.Boolean,System.Boolean)
  - TinyLife.World.Household.IsCurrent
  - TinyLife.World.Household.Lot
  - TinyLife.World.Household.Members
  - TinyLife.World.Household.Money
  - TinyLife.World.Household.Name
  - TinyLife.World.Household.OnGetExportedHouseholds
  - TinyLife.World.Household.OnGetWeeklyBills
  - TinyLife.World.Household.RandomConstellations
  - TinyLife.World.Household.Remove(TinyLife.Objects.PersonLike,System.Boolean)
  - TinyLife.World.Household.TotalMemberAmount
  - TinyLife.World.Household.UnopenedMail
  - TinyLife.World.Household.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.World.Household.Validate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  langs:
  - csharp
  - vb
  name: Household
  nameWithType: Household
  fullName: TinyLife.World.Household
  type: Class
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: A household is a set of <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> instances that live together on the same <xref href="TinyLife.World.Household.Lot" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Household : JsonTypeSafeGenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class Household Inherits JsonTypeSafeGenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.Household.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Household.DefaultMoney
  commentId: F:TinyLife.World.Household.DefaultMoney
  id: DefaultMoney
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: DefaultMoney
  nameWithType: Household.DefaultMoney
  fullName: TinyLife.World.Household.DefaultMoney
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    The amount of money that a household has by default.

    If the househould is exported throughly (<xref href="TinyLife.World.Household.Export(System.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>), this value will be exported as well.
  example: []
  syntax:
    content: public const float DefaultMoney = 30000
    return:
      type: System.Single
    content.vb: Public Const DefaultMoney As Single = 30000
- uid: TinyLife.World.Household.RandomConstellations
  commentId: F:TinyLife.World.Household.RandomConstellations
  id: RandomConstellations
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: RandomConstellations
  nameWithType: Household.RandomConstellations
  fullName: TinyLife.World.Household.RandomConstellations
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    A set of random constellations that will be used when new households are randomly generated in <xref href="TinyLife.World.Household.Generate(TinyLife.World.Map%2cSystem.Random%2cSystem.Collections.Generic.List%7bTinyLife.Objects.AgeGroup%7d%2cSystem.Collections.Generic.Dictionary%7bSystem.ValueTuple%7bSystem.Int32%2cSystem.Int32%7d%2cTinyLife.World.Household.Relation%7d)" data-throw-if-not-resolved="false"></xref>.

    Add additional items to this list to create additional constellation options.
  example: []
  syntax:
    content: public static readonly List<Household.RandomConstellation> RandomConstellations
    return:
      type: System.Collections.Generic.List{TinyLife.World.Household.RandomConstellation}
    content.vb: Public Shared ReadOnly RandomConstellations As List(Of Household.RandomConstellation)
- uid: TinyLife.World.Household.OnGetWeeklyBills
  commentId: E:TinyLife.World.Household.OnGetWeeklyBills
  id: OnGetWeeklyBills
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: OnGetWeeklyBills
  nameWithType: Household.OnGetWeeklyBills
  fullName: TinyLife.World.Household.OnGetWeeklyBills
  type: Event
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    An event that is invoked when weekly bills are calculated for a <xref href="TinyLife.World.Household" data-throw-if-not-resolved="false"></xref> in <xref href="TinyLife.World.Household.GetWeeklyBills" data-throw-if-not-resolved="false"></xref>.

    Mods can subscribe to this event to add additional costs or reduce the default costs.
  example: []
  syntax:
    content: public static event Household.WeeklyBillsDelegate OnGetWeeklyBills
    return:
      type: TinyLife.World.Household.WeeklyBillsDelegate
    content.vb: Public Shared Event OnGetWeeklyBills As Household.WeeklyBillsDelegate
- uid: TinyLife.World.Household.OnGetExportedHouseholds
  commentId: E:TinyLife.World.Household.OnGetExportedHouseholds
  id: OnGetExportedHouseholds
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: OnGetExportedHouseholds
  nameWithType: Household.OnGetExportedHouseholds
  fullName: TinyLife.World.Household.OnGetExportedHouseholds
  type: Event
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: An event that is invoked in <xref href="TinyLife.World.Household.GetExportedHouseholds" data-throw-if-not-resolved="false"></xref> which allows mods to add custom default households to the game.
  example: []
  syntax:
    content: public static event Action<JsonSerializer, List<(FileInfo File, ExportedHousehold Household, string DisplayName, bool Hidden)>> OnGetExportedHouseholds
    return:
      type: System.Action{Newtonsoft.Json.JsonSerializer,System.Collections.Generic.List{System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean}}}
    content.vb: Public Shared Event OnGetExportedHouseholds As Action(Of JsonSerializer, List(Of (File As FileInfo, Household As ExportedHousehold, DisplayName As String, Hidden As Boolean)))
- uid: TinyLife.World.Household.FurnitureStorage
  commentId: F:TinyLife.World.Household.FurnitureStorage
  id: FurnitureStorage
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: FurnitureStorage
  nameWithType: Household.FurnitureStorage
  fullName: TinyLife.World.Household.FurnitureStorage
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    This household's furniture storage, which is a set of <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> items that are not placed, but owned by this household.

    To add new objects to the furniture storage, use <xref href="TinyLife.World.Household.AddToFurnitureStorage(TinyLife.Objects.Furniture)" data-throw-if-not-resolved="false"></xref>, which also moves it to the correct map and position. Removal is possible through this collection directly.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly HashSet<Furniture> FurnitureStorage
    return:
      type: System.Collections.Generic.HashSet{TinyLife.Objects.Furniture}
    content.vb: >-
      <DataMember>

      Public ReadOnly FurnitureStorage As HashSet(Of Furniture)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Household.ClothesStorage
  commentId: F:TinyLife.World.Household.ClothesStorage
  id: ClothesStorage
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: ClothesStorage
  nameWithType: Household.ClothesStorage
  fullName: TinyLife.World.Household.ClothesStorage
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    This household's clothing storage, which is a set of <xref href="TinyLife.Objects.WornClothes" data-throw-if-not-resolved="false"></xref> that are not currently being worn by any members, but that are owned by this household.

    To add new objects to the clothes storage, simply add them to this set.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly HashSet<WornClothes> ClothesStorage
    return:
      type: System.Collections.Generic.HashSet{TinyLife.Objects.WornClothes}
    content.vb: >-
      <DataMember>

      Public ReadOnly ClothesStorage As HashSet(Of WornClothes)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Household.UnopenedMail
  commentId: F:TinyLife.World.Household.UnopenedMail
  id: UnopenedMail
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: UnopenedMail
  nameWithType: Household.UnopenedMail
  fullName: TinyLife.World.Household.UnopenedMail
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    A list of <xref href="TinyLife.World.Mail" data-throw-if-not-resolved="false"></xref> instances that is yet to be opened.

    When a mail carrier delivers mail, it is automatically added to this list.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly List<Mail> UnopenedMail
    return:
      type: System.Collections.Generic.List{TinyLife.World.Mail}
    content.vb: >-
      <DataMember>

      Public ReadOnly UnopenedMail As List(Of Mail)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Household.AddedThroughPopulating
  commentId: F:TinyLife.World.Household.AddedThroughPopulating
  id: AddedThroughPopulating
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: AddedThroughPopulating
  nameWithType: Household.AddedThroughPopulating
  fullName: TinyLife.World.Household.AddedThroughPopulating
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Whether this household was generated automatically, and added through the <xref href="TinyLife.PerSaveOptions.PopulateLots" data-throw-if-not-resolved="false"></xref> option in <xref href="TinyLife.World.Map.PopulateLots" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly bool AddedThroughPopulating
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public ReadOnly AddedThroughPopulating As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Household.Money
  commentId: P:TinyLife.World.Household.Money
  id: Money
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Money
  nameWithType: Household.Money
  fullName: TinyLife.World.Household.Money
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The money that this household has, rounded by two digits after the decimal point
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Money { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Property Money As Single
  overload: TinyLife.World.Household.Money*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Household.Members
  commentId: P:TinyLife.World.Household.Members
  id: Members
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Members
  nameWithType: Household.Members
  fullName: TinyLife.World.Household.Members
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> instances that are members of this household
  example: []
  syntax:
    content: public IEnumerable<PersonLike> Members { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
    content.vb: Public ReadOnly Property Members As IEnumerable(Of PersonLike)
  overload: TinyLife.World.Household.Members*
- uid: TinyLife.World.Household.Lot
  commentId: P:TinyLife.World.Household.Lot
  id: Lot
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Lot
  nameWithType: Household.Lot
  fullName: TinyLife.World.Household.Lot
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    The <xref href="TinyLife.World.Household.Lot" data-throw-if-not-resolved="false"></xref> that this household lives on.

    For exported households, this might be null.
  example: []
  syntax:
    content: public Lot Lot { get; }
    parameters: []
    return:
      type: TinyLife.World.Lot
    content.vb: Public ReadOnly Property Lot As Lot
  overload: TinyLife.World.Household.Lot*
- uid: TinyLife.World.Household.Name
  commentId: P:TinyLife.World.Household.Name
  id: Name
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Household.Name
  fullName: TinyLife.World.Household.Name
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    The name of this household.

    The name of a household is the <xref href="TinyLife.Objects.PersonLike.LastName" data-throw-if-not-resolved="false"></xref> that most people in this household have.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: TinyLife.World.Household.Name*
- uid: TinyLife.World.Household.IsCurrent
  commentId: P:TinyLife.World.Household.IsCurrent
  id: IsCurrent
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: IsCurrent
  nameWithType: Household.IsCurrent
  fullName: TinyLife.World.Household.IsCurrent
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: A property that indicates whether or not this household is the same as <xref href="TinyLife.GameImpl.CurrentHousehold" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public bool IsCurrent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCurrent As Boolean
  overload: TinyLife.World.Household.IsCurrent*
- uid: TinyLife.World.Household.Description
  commentId: F:TinyLife.World.Household.Description
  id: Description
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Household.Description
  fullName: TinyLife.World.Household.Description
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The household's description
  example: []
  syntax:
    content: >-
      [DataMember]

      public string Description
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Description As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Household.DisallowNewspapers
  commentId: F:TinyLife.World.Household.DisallowNewspapers
  id: DisallowNewspapers
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: DisallowNewspapers
  nameWithType: Household.DisallowNewspapers
  fullName: TinyLife.World.Household.DisallowNewspapers
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    Whether newspaper deliveries are disallowed in this household.

    This field is set by the <xref href="TinyLife.Actions.ActionType.ToggleNewspapers" data-throw-if-not-resolved="false"></xref> action.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool DisallowNewspapers
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public DisallowNewspapers As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Household.DisallowFriendsVisiting
  commentId: F:TinyLife.World.Household.DisallowFriendsVisiting
  id: DisallowFriendsVisiting
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: DisallowFriendsVisiting
  nameWithType: Household.DisallowFriendsVisiting
  fullName: TinyLife.World.Household.DisallowFriendsVisiting
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Whether visits from friends are currently disallowed.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool DisallowFriendsVisiting
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public DisallowFriendsVisiting As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Household.DisallowStrangersVisiting
  commentId: F:TinyLife.World.Household.DisallowStrangersVisiting
  id: DisallowStrangersVisiting
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: DisallowStrangersVisiting
  nameWithType: Household.DisallowStrangersVisiting
  fullName: TinyLife.World.Household.DisallowStrangersVisiting
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Whether visits from strangers are currently disallowed.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool DisallowStrangersVisiting
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public DisallowStrangersVisiting As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Household.TotalMemberAmount
  commentId: P:TinyLife.World.Household.TotalMemberAmount
  id: TotalMemberAmount
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: TotalMemberAmount
  nameWithType: Household.TotalMemberAmount
  fullName: TinyLife.World.Household.TotalMemberAmount
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: The total amount of members of this household, which includes the amount of <xref href="TinyLife.World.Household.Members" data-throw-if-not-resolved="false"></xref>, as well as unborn babies of <xref href="TinyLife.World.Household.Members" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int TotalMemberAmount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TotalMemberAmount As Integer
  overload: TinyLife.World.Household.TotalMemberAmount*
- uid: TinyLife.World.Household.HasBeenPlayed
  commentId: F:TinyLife.World.Household.HasBeenPlayed
  id: HasBeenPlayed
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: HasBeenPlayed
  nameWithType: Household.HasBeenPlayed
  fullName: TinyLife.World.Household.HasBeenPlayed
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Whether this household has previously been played by the player.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool HasBeenPlayed
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public HasBeenPlayed As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Household.#ctor(TinyLife.World.Map,TinyLife.World.Lot,System.Boolean)
  commentId: M:TinyLife.World.Household.#ctor(TinyLife.World.Map,TinyLife.World.Lot,System.Boolean)
  id: '#ctor(TinyLife.World.Map,TinyLife.World.Lot,System.Boolean)'
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Household(Map, Lot, bool)
  nameWithType: Household.Household(Map, Lot, bool)
  fullName: TinyLife.World.Household.Household(TinyLife.World.Map, TinyLife.World.Lot, bool)
  type: Constructor
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Creates a new household on the given map and lot
  example: []
  syntax:
    content: public Household(Map lotMap, Lot lot, bool addedThroughPopulating = false)
    parameters:
    - id: lotMap
      type: TinyLife.World.Map
      description: The map the lot is on.
    - id: lot
      type: TinyLife.World.Lot
      description: The lot that this household should own (can be null)
    - id: addedThroughPopulating
      type: System.Boolean
      description: Whether this household was generated automatically, and added through the <xref href="TinyLife.PerSaveOptions.PopulateLots" data-throw-if-not-resolved="false"></xref> option in <xref href="TinyLife.World.Map.PopulateLots" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(lotMap As Map, lot As Lot, addedThroughPopulating As Boolean = False)
  overload: TinyLife.World.Household.#ctor*
  nameWithType.vb: Household.New(Map, Lot, Boolean)
  fullName.vb: TinyLife.World.Household.New(TinyLife.World.Map, TinyLife.World.Lot, Boolean)
  name.vb: New(Map, Lot, Boolean)
- uid: TinyLife.World.Household.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.World.Household.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Update(GameTime, TimeSpan, float)
  nameWithType: Household.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.World.Household.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Updates this household and its data.
  example: []
  syntax:
    content: public void Update(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time passed in game
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub Update(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.World.Household.Update*
  nameWithType.vb: Household.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.World.Household.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
- uid: TinyLife.World.Household.Add(TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.World.Household.Add(TinyLife.Objects.PersonLike)
  id: Add(TinyLife.Objects.PersonLike)
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Add(PersonLike)
  nameWithType: Household.Add(PersonLike)
  fullName: TinyLife.World.Household.Add(TinyLife.Objects.PersonLike)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Adds the given person to this household
  example: []
  syntax:
    content: public void Add(PersonLike person)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person to add
    content.vb: Public Sub Add(person As PersonLike)
  overload: TinyLife.World.Household.Add*
- uid: TinyLife.World.Household.AddToFurnitureStorage(TinyLife.Objects.Furniture)
  commentId: M:TinyLife.World.Household.AddToFurnitureStorage(TinyLife.Objects.Furniture)
  id: AddToFurnitureStorage(TinyLife.Objects.Furniture)
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: AddToFurnitureStorage(Furniture)
  nameWithType: Household.AddToFurnitureStorage(Furniture)
  fullName: TinyLife.World.Household.AddToFurnitureStorage(TinyLife.Objects.Furniture)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Adds the given furniture item to this household's <xref href="TinyLife.World.Household.FurnitureStorage" data-throw-if-not-resolved="false"></xref>, additionally moving it to the appropriate <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref> and ensuring that it does not have any children (<xref href="TinyLife.Objects.Furniture.GetChildren%60%601" data-throw-if-not-resolved="false"></xref>) currently occupying it.
  example: []
  syntax:
    content: public void AddToFurnitureStorage(Furniture furniture)
    parameters:
    - id: furniture
      type: TinyLife.Objects.Furniture
      description: The furniture to add.
    content.vb: Public Sub AddToFurnitureStorage(furniture As Furniture)
  overload: TinyLife.World.Household.AddToFurnitureStorage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if the furniture has any children (<xref href="TinyLife.Objects.Furniture.GetChildren%60%601" data-throw-if-not-resolved="false"></xref>) on it.
- uid: TinyLife.World.Household.Remove(TinyLife.Objects.PersonLike,System.Boolean)
  commentId: M:TinyLife.World.Household.Remove(TinyLife.Objects.PersonLike,System.Boolean)
  id: Remove(TinyLife.Objects.PersonLike,System.Boolean)
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Remove(PersonLike, bool)
  nameWithType: Household.Remove(PersonLike, bool)
  fullName: TinyLife.World.Household.Remove(TinyLife.Objects.PersonLike, bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Removes the given person from this household, if they're part of it
  example: []
  syntax:
    content: public void Remove(PersonLike person, bool removeHouseholdIfEmpty = true)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person to remove
    - id: removeHouseholdIfEmpty
      type: System.Boolean
      description: Whether the household should be removed from the underlying map if the removed member was the last
    content.vb: Public Sub Remove(person As PersonLike, removeHouseholdIfEmpty As Boolean = True)
  overload: TinyLife.World.Household.Remove*
  nameWithType.vb: Household.Remove(PersonLike, Boolean)
  fullName.vb: TinyLife.World.Household.Remove(TinyLife.Objects.PersonLike, Boolean)
  name.vb: Remove(PersonLike, Boolean)
- uid: TinyLife.World.Household.HasMember(System.Guid)
  commentId: M:TinyLife.World.Household.HasMember(System.Guid)
  id: HasMember(System.Guid)
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: HasMember(Guid)
  nameWithType: Household.HasMember(Guid)
  fullName: TinyLife.World.Household.HasMember(System.Guid)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Returns whether the given person <xref href="TinyLife.Objects.MapObject.Id" data-throw-if-not-resolved="false"></xref> is a part of this household
  example: []
  syntax:
    content: public bool HasMember(Guid person)
    parameters:
    - id: person
      type: System.Guid
      description: The unique id of the person to query
    return:
      type: System.Boolean
      description: true if the person is part of this household, false otherwise
    content.vb: Public Function HasMember(person As Guid) As Boolean
  overload: TinyLife.World.Household.HasMember*
- uid: TinyLife.World.Household.Validate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.World.Household.Validate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  id: Validate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Validate(Map, AppliedMigrations)
  nameWithType: Household.Validate(Map, AppliedMigrations)
  fullName: TinyLife.World.Household.Validate(TinyLife.World.Map, TinyLife.Utilities.AppliedMigrations)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: This method is called when this object is loaded from disk.
  example: []
  syntax:
    content: public bool Validate(Map map, AppliedMigrations appliedMigrations)
    parameters:
    - id: map
      type: TinyLife.World.Map
    - id: appliedMigrations
      type: TinyLife.Utilities.AppliedMigrations
    return:
      type: System.Boolean
      description: false if the object is not valid, true otherwise
    content.vb: Public Function Validate(map As Map, appliedMigrations As AppliedMigrations) As Boolean
  overload: TinyLife.World.Household.Validate*
- uid: TinyLife.World.Household.Export(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:TinyLife.World.Household.Export(System.Boolean,System.Boolean,System.Boolean)
  id: Export(System.Boolean,System.Boolean,System.Boolean)
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Export(bool, bool, bool)
  nameWithType: Household.Export(bool, bool, bool)
  fullName: TinyLife.World.Household.Export(bool, bool, bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Exports this household's data into an <xref href="TinyLife.World.ExportedHousehold" data-throw-if-not-resolved="false"></xref>, which can be saved to disk independently of the <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref> that this household is on.
  example: []
  syntax:
    content: public ExportedHousehold Export(bool thorough, bool custom, bool ignoreStorage = false)
    parameters:
    - id: thorough
      type: System.Boolean
      description: Whether people should be reset thoroughly in <xref href="TinyLife.Objects.PersonLike.ResetToStatic(System.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>, and whether the money should be reset to <xref href="TinyLife.World.Household.DefaultMoney" data-throw-if-not-resolved="false"></xref>
    - id: custom
      type: System.Boolean
      description: Whether the export is custom, in which case people in it will keep their unlocalized names, pronouns and descriptions.
    - id: ignoreStorage
      type: System.Boolean
      description: Whether the household storage should be ignored (and not exported along with this household).
    return:
      type: TinyLife.World.ExportedHousehold
      description: An exported household
    content.vb: Public Function Export(thorough As Boolean, custom As Boolean, ignoreStorage As Boolean = False) As ExportedHousehold
  overload: TinyLife.World.Household.Export*
  nameWithType.vb: Household.Export(Boolean, Boolean, Boolean)
  fullName.vb: TinyLife.World.Household.Export(Boolean, Boolean, Boolean)
  name.vb: Export(Boolean, Boolean, Boolean)
- uid: TinyLife.World.Household.Import(TinyLife.World.ExportedHousehold,System.Boolean,System.Boolean)
  commentId: M:TinyLife.World.Household.Import(TinyLife.World.ExportedHousehold,System.Boolean,System.Boolean)
  id: Import(TinyLife.World.ExportedHousehold,System.Boolean,System.Boolean)
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Import(ExportedHousehold, bool, bool)
  nameWithType: Household.Import(ExportedHousehold, bool, bool)
  fullName: TinyLife.World.Household.Import(TinyLife.World.ExportedHousehold, bool, bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    Imports the given <xref href="TinyLife.World.ExportedHousehold" data-throw-if-not-resolved="false"></xref> into this household.

    Note that existing <xref href="TinyLife.World.Household.Members" data-throw-if-not-resolved="false"></xref> are not removed or replaced beforehand.
  example: []
  syntax:
    content: public void Import(ExportedHousehold household, bool useExistingVisitors = false, bool updateExternalPeople = true)
    parameters:
    - id: household
      type: TinyLife.World.ExportedHousehold
      description: The household to import
    - id: useExistingVisitors
      type: System.Boolean
      description: Whether existing visitors should be used, if they exist, instead of the exported household's members
    - id: updateExternalPeople
      type: System.Boolean
      description: Whether to call <xref href="TinyLife.World.Map.UpdateExternalPeople(System.Collections.Generic.ICollection%7bTinyLife.World.Map%7d%2cSystem.Action%7bSystem.String%7d%2cSystem.Action%7bSystem.Single%7d)" data-throw-if-not-resolved="false"></xref> when the import is finished.
    content.vb: Public Sub Import(household As ExportedHousehold, useExistingVisitors As Boolean = False, updateExternalPeople As Boolean = True)
  overload: TinyLife.World.Household.Import*
  nameWithType.vb: Household.Import(ExportedHousehold, Boolean, Boolean)
  fullName.vb: TinyLife.World.Household.Import(TinyLife.World.ExportedHousehold, Boolean, Boolean)
  name.vb: Import(ExportedHousehold, Boolean, Boolean)
- uid: TinyLife.World.Household.AreUtilitiesDisabled(System.Nullable{System.TimeSpan})
  commentId: M:TinyLife.World.Household.AreUtilitiesDisabled(System.Nullable{System.TimeSpan})
  id: AreUtilitiesDisabled(System.Nullable{System.TimeSpan})
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: AreUtilitiesDisabled(TimeSpan?)
  nameWithType: Household.AreUtilitiesDisabled(TimeSpan?)
  fullName: TinyLife.World.Household.AreUtilitiesDisabled(System.TimeSpan?)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    Returns whether power and water should currently be considered disabled for the <xref href="TinyLife.World.Household.Lot" data-throw-if-not-resolved="false"></xref> that this household is on.

    This method returns true when <xref href="TinyLife.World.Household.UnopenedMail" data-throw-if-not-resolved="false"></xref> has contained a <xref href="TinyLife.World.BillsMail" data-throw-if-not-resolved="false"></xref> for three or more in-game days.
  example: []
  syntax:
    content: public bool AreUtilitiesDisabled(TimeSpan? time = null)
    parameters:
    - id: time
      type: System.Nullable{System.TimeSpan}
      description: The current time, or null to default to <xref href="TinyLife.World.Map.Time" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Boolean
      description: Whether utilites are disabled
    content.vb: Public Function AreUtilitiesDisabled(time As TimeSpan? = Nothing) As Boolean
  overload: TinyLife.World.Household.AreUtilitiesDisabled*
- uid: TinyLife.World.Household.GetWeeklyBills
  commentId: M:TinyLife.World.Household.GetWeeklyBills
  id: GetWeeklyBills
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: GetWeeklyBills()
  nameWithType: Household.GetWeeklyBills()
  fullName: TinyLife.World.Household.GetWeeklyBills()
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    Returns the amount of tiny bucks that need to be paid weekly by a <xref href="TinyLife.World.Household" data-throw-if-not-resolved="false"></xref> living on this lot.

    The bills result from the <xref href="TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.FurnitureType.TypeSettings.WaterRating" data-throw-if-not-resolved="false"></xref> of the objects on the lot, as well as additional values like the lot size, and the <xref href="TinyLife.PersonalityType.CityNative" data-throw-if-not-resolved="false"></xref> personality.
  example: []
  syntax:
    content: public Dictionary<string, float> GetWeeklyBills()
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Single}
      description: The amount of weekly bills, in tiny bucks
    content.vb: Public Function GetWeeklyBills() As Dictionary(Of String, Single)
  overload: TinyLife.World.Household.GetWeeklyBills*
- uid: TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
  commentId: M:TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
  id: GetAgeGroups(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: GetAgeGroups(IEnumerable<PersonLike>)
  nameWithType: Household.GetAgeGroups(IEnumerable<PersonLike>)
  fullName: TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable<TinyLife.Objects.PersonLike>)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Returns a combined flag of the age groups that the members of the given list belong to.
  example: []
  syntax:
    content: public static AgeGroup GetAgeGroups(IEnumerable<PersonLike> members)
    parameters:
    - id: members
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
      description: The household members.
    return:
      type: TinyLife.Objects.AgeGroup
      description: The combined flag of age groups.
    content.vb: Public Shared Function GetAgeGroups(members As IEnumerable(Of PersonLike)) As AgeGroup
  overload: TinyLife.World.Household.GetAgeGroups*
  nameWithType.vb: Household.GetAgeGroups(IEnumerable(Of PersonLike))
  fullName.vb: TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable(Of TinyLife.Objects.PersonLike))
  name.vb: GetAgeGroups(IEnumerable(Of PersonLike))
- uid: TinyLife.World.Household.HasAdultPerson(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
  commentId: M:TinyLife.World.Household.HasAdultPerson(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
  id: HasAdultPerson(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: HasAdultPerson(IEnumerable<PersonLike>)
  nameWithType: Household.HasAdultPerson(IEnumerable<PersonLike>)
  fullName: TinyLife.World.Household.HasAdultPerson(System.Collections.Generic.IEnumerable<TinyLife.Objects.PersonLike>)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    Returns whether the given household has a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> that is an <xref href="TinyLife.Objects.AgeGroup.Adult" data-throw-if-not-resolved="false"></xref> or older.

    Note that, compared to <xref href="TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable%7bTinyLife.Objects.PersonLike%7d)" data-throw-if-not-resolved="false"></xref>, this method only considers <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> instances, not any <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> instances.
  example: []
  syntax:
    content: public static bool HasAdultPerson(IEnumerable<PersonLike> members)
    parameters:
    - id: members
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
      description: The household members.
    return:
      type: System.Boolean
      description: Whether the given household has at least one adult person.
    content.vb: Public Shared Function HasAdultPerson(members As IEnumerable(Of PersonLike)) As Boolean
  overload: TinyLife.World.Household.HasAdultPerson*
  nameWithType.vb: Household.HasAdultPerson(IEnumerable(Of PersonLike))
  fullName.vb: TinyLife.World.Household.HasAdultPerson(System.Collections.Generic.IEnumerable(Of TinyLife.Objects.PersonLike))
  name.vb: HasAdultPerson(IEnumerable(Of PersonLike))
- uid: TinyLife.World.Household.Generate(TinyLife.World.Map,System.Random,System.Collections.Generic.List{TinyLife.Objects.AgeGroup},System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},TinyLife.World.Household.Relation})
  commentId: M:TinyLife.World.Household.Generate(TinyLife.World.Map,System.Random,System.Collections.Generic.List{TinyLife.Objects.AgeGroup},System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},TinyLife.World.Household.Relation})
  id: Generate(TinyLife.World.Map,System.Random,System.Collections.Generic.List{TinyLife.Objects.AgeGroup},System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},TinyLife.World.Household.Relation})
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: Generate(Map, Random, List<AgeGroup>, Dictionary<(int Person, int Other), Relation>)
  nameWithType: Household.Generate(Map, Random, List<AgeGroup>, Dictionary<(int Person, int Other), Household.Relation>)
  fullName: TinyLife.World.Household.Generate(TinyLife.World.Map, System.Random, System.Collections.Generic.List<TinyLife.Objects.AgeGroup>, System.Collections.Generic.Dictionary<(int Person, int Other), TinyLife.World.Household.Relation>)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    Generates a new random household using the given settings, and using the <xref href="TinyLife.World.Household.RandomConstellations" data-throw-if-not-resolved="false"></xref> list.

    Data for invoking this method can be generated using <xref href="TinyLife.World.Household.RandomConstellation.Generate(System.Random)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IEnumerable<PersonLike> Generate(Map map, Random random, List<AgeGroup> ages, Dictionary<(int Person, int Other), Household.Relation> relations)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to generate a household for.
    - id: random
      type: System.Random
      description: The random instance to use for generation.
    - id: ages
      type: System.Collections.Generic.List{TinyLife.Objects.AgeGroup}
      description: The ages of the people that should be included in the household. The length of the list also determines the amount of people in the household.
    - id: relations
      type: System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},TinyLife.World.Household.Relation}
      description: A set of familiar relations that should be applied to the generated people. The indices in the dictionary refer to the <code class="paramref">ages</code> of the household members.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
      description: The generated household's members.
    content.vb: Public Shared Function Generate(map As Map, random As Random, ages As List(Of AgeGroup), relations As Dictionary(Of (Person As Integer, Other As Integer), Household.Relation)) As IEnumerable(Of PersonLike)
  overload: TinyLife.World.Household.Generate*
  nameWithType.vb: Household.Generate(Map, Random, List(Of AgeGroup), Dictionary(Of (Person As Integer, Other As Integer), Household.Relation))
  fullName.vb: TinyLife.World.Household.Generate(TinyLife.World.Map, System.Random, System.Collections.Generic.List(Of TinyLife.Objects.AgeGroup), System.Collections.Generic.Dictionary(Of (Person As Integer, Other As Integer), TinyLife.World.Household.Relation))
  name.vb: Generate(Map, Random, List(Of AgeGroup), Dictionary(Of (Person As Integer, Other As Integer), Relation))
- uid: TinyLife.World.Household.GetMatchingConstellations(TinyLife.Objects.AgeGroup)
  commentId: M:TinyLife.World.Household.GetMatchingConstellations(TinyLife.Objects.AgeGroup)
  id: GetMatchingConstellations(TinyLife.Objects.AgeGroup)
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: GetMatchingConstellations(AgeGroup)
  nameWithType: Household.GetMatchingConstellations(AgeGroup)
  fullName: TinyLife.World.Household.GetMatchingConstellations(TinyLife.Objects.AgeGroup)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Returns a set of constellations that match the given combined flag of <xref href="TinyLife.Objects.AgeGroup" data-throw-if-not-resolved="false"></xref> values.
  example: []
  syntax:
    content: public static IEnumerable<(Household.RandomConstellation Constellation, float MatchPercentage)> GetMatchingConstellations(AgeGroup ages)
    parameters:
    - id: ages
      type: TinyLife.Objects.AgeGroup
      description: The ages.
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.World.Household.RandomConstellation,System.Single}}
      description: Matching constellations, as well as a percentage that determines how well they match.
    content.vb: Public Shared Function GetMatchingConstellations(ages As AgeGroup) As IEnumerable(Of (Constellation As Household.RandomConstellation, MatchPercentage As Single))
  overload: TinyLife.World.Household.GetMatchingConstellations*
- uid: TinyLife.World.Household.GetExportedHouseholds
  commentId: M:TinyLife.World.Household.GetExportedHouseholds
  id: GetExportedHouseholds
  parent: TinyLife.World.Household
  langs:
  - csharp
  - vb
  name: GetExportedHouseholds()
  nameWithType: Household.GetExportedHouseholds()
  fullName: TinyLife.World.Household.GetExportedHouseholds()
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: Returns a set of all exported households currently available to the game, including default exported households and custom exported households.
  example: []
  syntax:
    content: public static IEnumerable<(FileInfo File, ExportedHousehold Household, string DisplayName, bool Custom, bool Hidden)> GetExportedHouseholds()
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}}
      description: The exported households available to the game.
    content.vb: Public Shared Function GetExportedHouseholds() As IEnumerable(Of (File As FileInfo, Household As ExportedHousehold, DisplayName As String, Custom As Boolean, Hidden As Boolean))
  overload: TinyLife.World.Household.GetExportedHouseholds*
references:
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.World.Household.Lot
  commentId: P:TinyLife.World.Household.Lot
  href: TinyLife.World.Household.html#TinyLife_World_Household_Lot
  name: Lot
  nameWithType: Household.Lot
  fullName: TinyLife.World.Household.Lot
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.Household.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Household>(Household)
  nameWithType: Extensions.JsonCopy<Household>(Household)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Household>(TinyLife.World.Household)
  nameWithType.vb: Extensions.JsonCopy(Of Household)(Household)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Household)(TinyLife.World.Household)
  name.vb: JsonCopy(Of Household)(Household)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Household)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: '>'
  - name: (
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Household)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: )
  - name: (
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.World.Household.Export(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:TinyLife.World.Household.Export(System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  href: TinyLife.World.Household.html#TinyLife_World_Household_Export_System_Boolean_System_Boolean_System_Boolean_
  name: Export(bool, bool, bool)
  nameWithType: Household.Export(bool, bool, bool)
  fullName: TinyLife.World.Household.Export(bool, bool, bool)
  nameWithType.vb: Household.Export(Boolean, Boolean, Boolean)
  fullName.vb: TinyLife.World.Household.Export(Boolean, Boolean, Boolean)
  name.vb: Export(Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.World.Household.Export(System.Boolean,System.Boolean,System.Boolean)
    name: Export
    href: TinyLife.World.Household.html#TinyLife_World_Household_Export_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.World.Household.Export(System.Boolean,System.Boolean,System.Boolean)
    name: Export
    href: TinyLife.World.Household.html#TinyLife_World_Household_Export_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.World.Household.Generate(TinyLife.World.Map,System.Random,System.Collections.Generic.List{TinyLife.Objects.AgeGroup},System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},TinyLife.World.Household.Relation})
  commentId: M:TinyLife.World.Household.Generate(TinyLife.World.Map,System.Random,System.Collections.Generic.List{TinyLife.Objects.AgeGroup},System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},TinyLife.World.Household.Relation})
  isExternal: true
  href: TinyLife.World.Household.html#TinyLife_World_Household_Generate_TinyLife_World_Map_System_Random_System_Collections_Generic_List_TinyLife_Objects_AgeGroup__System_Collections_Generic_Dictionary_System_ValueTuple_System_Int32_System_Int32__TinyLife_World_Household_Relation__
  name: Generate(Map, Random, List<AgeGroup>, Dictionary<(int Person, int Other), Relation>)
  nameWithType: Household.Generate(Map, Random, List<AgeGroup>, Dictionary<(int Person, int Other), Household.Relation>)
  fullName: TinyLife.World.Household.Generate(TinyLife.World.Map, System.Random, System.Collections.Generic.List<TinyLife.Objects.AgeGroup>, System.Collections.Generic.Dictionary<(int Person, int Other), TinyLife.World.Household.Relation>)
  nameWithType.vb: Household.Generate(Map, Random, List(Of AgeGroup), Dictionary(Of (Person As Integer, Other As Integer), Household.Relation))
  fullName.vb: TinyLife.World.Household.Generate(TinyLife.World.Map, System.Random, System.Collections.Generic.List(Of TinyLife.Objects.AgeGroup), System.Collections.Generic.Dictionary(Of (Person As Integer, Other As Integer), TinyLife.World.Household.Relation))
  name.vb: Generate(Map, Random, List(Of AgeGroup), Dictionary(Of (Person As Integer, Other As Integer), Relation))
  spec.csharp:
  - uid: TinyLife.World.Household.Generate(TinyLife.World.Map,System.Random,System.Collections.Generic.List{TinyLife.Objects.AgeGroup},System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},TinyLife.World.Household.Relation})
    name: Generate
    href: TinyLife.World.Household.html#TinyLife_World_Household_Generate_TinyLife_World_Map_System_Random_System_Collections_Generic_List_TinyLife_Objects_AgeGroup__System_Collections_Generic_Dictionary_System_ValueTuple_System_Int32_System_Int32__TinyLife_World_Household_Relation__
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.person
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.other
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.World.Household.Relation
    name: Relation
    href: TinyLife.World.Household.Relation.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.World.Household.Generate(TinyLife.World.Map,System.Random,System.Collections.Generic.List{TinyLife.Objects.AgeGroup},System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},TinyLife.World.Household.Relation})
    name: Generate
    href: TinyLife.World.Household.html#TinyLife_World_Household_Generate_TinyLife_World_Map_System_Random_System_Collections_Generic_List_TinyLife_Objects_AgeGroup__System_Collections_Generic_Dictionary_System_ValueTuple_System_Int32_System_Int32__TinyLife_World_Household_Relation__
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.person
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.other
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.World.Household.Relation
    name: Relation
    href: TinyLife.World.Household.Relation.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{TinyLife.World.Household.RandomConstellation}
  commentId: T:System.Collections.Generic.List{TinyLife.World.Household.RandomConstellation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Household.RandomConstellation>
  nameWithType: List<Household.RandomConstellation>
  fullName: System.Collections.Generic.List<TinyLife.World.Household.RandomConstellation>
  nameWithType.vb: List(Of Household.RandomConstellation)
  fullName.vb: System.Collections.Generic.List(Of TinyLife.World.Household.RandomConstellation)
  name.vb: List(Of Household.RandomConstellation)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomConstellation
    name: RandomConstellation
    href: TinyLife.World.Household.RandomConstellation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomConstellation
    name: RandomConstellation
    href: TinyLife.World.Household.RandomConstellation.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.World.Household
  commentId: T:TinyLife.World.Household
  parent: TinyLife.World
  href: TinyLife.World.Household.html
  name: Household
  nameWithType: Household
  fullName: TinyLife.World.Household
- uid: TinyLife.World.Household.GetWeeklyBills
  commentId: M:TinyLife.World.Household.GetWeeklyBills
  href: TinyLife.World.Household.html#TinyLife_World_Household_GetWeeklyBills
  name: GetWeeklyBills()
  nameWithType: Household.GetWeeklyBills()
  fullName: TinyLife.World.Household.GetWeeklyBills()
  spec.csharp:
  - uid: TinyLife.World.Household.GetWeeklyBills
    name: GetWeeklyBills
    href: TinyLife.World.Household.html#TinyLife_World_Household_GetWeeklyBills
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.Household.GetWeeklyBills
    name: GetWeeklyBills
    href: TinyLife.World.Household.html#TinyLife_World_Household_GetWeeklyBills
  - name: (
  - name: )
- uid: TinyLife.World.Household.WeeklyBillsDelegate
  commentId: T:TinyLife.World.Household.WeeklyBillsDelegate
  parent: TinyLife.World
  href: TinyLife.World.Household.html
  name: Household.WeeklyBillsDelegate
  nameWithType: Household.WeeklyBillsDelegate
  fullName: TinyLife.World.Household.WeeklyBillsDelegate
  spec.csharp:
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.WeeklyBillsDelegate
    name: WeeklyBillsDelegate
    href: TinyLife.World.Household.WeeklyBillsDelegate.html
  spec.vb:
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.WeeklyBillsDelegate
    name: WeeklyBillsDelegate
    href: TinyLife.World.Household.WeeklyBillsDelegate.html
- uid: TinyLife.World.Household.GetExportedHouseholds
  commentId: M:TinyLife.World.Household.GetExportedHouseholds
  href: TinyLife.World.Household.html#TinyLife_World_Household_GetExportedHouseholds
  name: GetExportedHouseholds()
  nameWithType: Household.GetExportedHouseholds()
  fullName: TinyLife.World.Household.GetExportedHouseholds()
  spec.csharp:
  - uid: TinyLife.World.Household.GetExportedHouseholds
    name: GetExportedHouseholds
    href: TinyLife.World.Household.html#TinyLife_World_Household_GetExportedHouseholds
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.Household.GetExportedHouseholds
    name: GetExportedHouseholds
    href: TinyLife.World.Household.html#TinyLife_World_Household_GetExportedHouseholds
  - name: (
  - name: )
- uid: System.Action{Newtonsoft.Json.JsonSerializer,System.Collections.Generic.List{System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean}}}
  commentId: T:System.Action{Newtonsoft.Json.JsonSerializer,System.Collections.Generic.List{System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean}}}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<JsonSerializer, List<(FileInfo File, ExportedHousehold Household, string DisplayName, bool Hidden)>>
  nameWithType: Action<JsonSerializer, List<(FileInfo File, ExportedHousehold Household, string DisplayName, bool Hidden)>>
  fullName: System.Action<Newtonsoft.Json.JsonSerializer, System.Collections.Generic.List<(System.IO.FileInfo File, TinyLife.World.ExportedHousehold Household, string DisplayName, bool Hidden)>>
  nameWithType.vb: Action(Of JsonSerializer, List(Of (File As FileInfo, Household As ExportedHousehold, DisplayName As String, Hidden As Boolean)))
  fullName.vb: System.Action(Of Newtonsoft.Json.JsonSerializer, System.Collections.Generic.List(Of (File As System.IO.FileInfo, Household As TinyLife.World.ExportedHousehold, DisplayName As String, Hidden As Boolean)))
  name.vb: Action(Of JsonSerializer, List(Of (File As FileInfo, Household As ExportedHousehold, DisplayName As String, Hidden As Boolean)))
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean}.File
    name: File
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean-.file
  - name: ','
  - name: " "
  - uid: TinyLife.World.ExportedHousehold
    name: ExportedHousehold
    href: TinyLife.World.ExportedHousehold.html
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean}.Household
    name: Household
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean-.household
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean}.DisplayName
    name: DisplayName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean-.displayname
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean}.Hidden
    name: Hidden
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean-.hidden
  - name: )
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean}.File
    name: File
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean-.file
  - name: " "
  - name: As
  - name: " "
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean}.Household
    name: Household
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean-.household
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.World.ExportedHousehold
    name: ExportedHousehold
    href: TinyLife.World.ExportedHousehold.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean}.DisplayName
    name: DisplayName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean-.displayname
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean}.Hidden
    name: Hidden
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean-.hidden
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.World.Household.AddToFurnitureStorage(TinyLife.Objects.Furniture)
  commentId: M:TinyLife.World.Household.AddToFurnitureStorage(TinyLife.Objects.Furniture)
  href: TinyLife.World.Household.html#TinyLife_World_Household_AddToFurnitureStorage_TinyLife_Objects_Furniture_
  name: AddToFurnitureStorage(Furniture)
  nameWithType: Household.AddToFurnitureStorage(Furniture)
  fullName: TinyLife.World.Household.AddToFurnitureStorage(TinyLife.Objects.Furniture)
  spec.csharp:
  - uid: TinyLife.World.Household.AddToFurnitureStorage(TinyLife.Objects.Furniture)
    name: AddToFurnitureStorage
    href: TinyLife.World.Household.html#TinyLife_World_Household_AddToFurnitureStorage_TinyLife_Objects_Furniture_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
  spec.vb:
  - uid: TinyLife.World.Household.AddToFurnitureStorage(TinyLife.Objects.Furniture)
    name: AddToFurnitureStorage
    href: TinyLife.World.Household.html#TinyLife_World_Household_AddToFurnitureStorage_TinyLife_Objects_Furniture_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
- uid: System.Collections.Generic.HashSet{TinyLife.Objects.Furniture}
  commentId: T:System.Collections.Generic.HashSet{TinyLife.Objects.Furniture}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<Furniture>
  nameWithType: HashSet<Furniture>
  fullName: System.Collections.Generic.HashSet<TinyLife.Objects.Furniture>
  nameWithType.vb: HashSet(Of Furniture)
  fullName.vb: System.Collections.Generic.HashSet(Of TinyLife.Objects.Furniture)
  name.vb: HashSet(Of Furniture)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.WornClothes
  commentId: T:TinyLife.Objects.WornClothes
  parent: TinyLife.Objects
  href: TinyLife.Objects.WornClothes.html
  name: WornClothes
  nameWithType: WornClothes
  fullName: TinyLife.Objects.WornClothes
- uid: System.Collections.Generic.HashSet{TinyLife.Objects.WornClothes}
  commentId: T:System.Collections.Generic.HashSet{TinyLife.Objects.WornClothes}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<WornClothes>
  nameWithType: HashSet<WornClothes>
  fullName: System.Collections.Generic.HashSet<TinyLife.Objects.WornClothes>
  nameWithType.vb: HashSet(Of WornClothes)
  fullName.vb: System.Collections.Generic.HashSet(Of TinyLife.Objects.WornClothes)
  name.vb: HashSet(Of WornClothes)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: TinyLife.Objects.WornClothes
    name: WornClothes
    href: TinyLife.Objects.WornClothes.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.WornClothes
    name: WornClothes
    href: TinyLife.Objects.WornClothes.html
  - name: )
- uid: TinyLife.World.Mail
  commentId: T:TinyLife.World.Mail
  parent: TinyLife.World
  href: TinyLife.World.Mail.html
  name: Mail
  nameWithType: Mail
  fullName: TinyLife.World.Mail
- uid: System.Collections.Generic.List{TinyLife.World.Mail}
  commentId: T:System.Collections.Generic.List{TinyLife.World.Mail}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Mail>
  nameWithType: List<Mail>
  fullName: System.Collections.Generic.List<TinyLife.World.Mail>
  nameWithType.vb: List(Of Mail)
  fullName.vb: System.Collections.Generic.List(Of TinyLife.World.Mail)
  name.vb: List(Of Mail)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.World.Mail
    name: Mail
    href: TinyLife.World.Mail.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Mail
    name: Mail
    href: TinyLife.World.Mail.html
  - name: )
- uid: TinyLife.PerSaveOptions.PopulateLots
  commentId: F:TinyLife.PerSaveOptions.PopulateLots
  href: TinyLife.PerSaveOptions.html#TinyLife_PerSaveOptions_PopulateLots
  name: PopulateLots
  nameWithType: PerSaveOptions.PopulateLots
  fullName: TinyLife.PerSaveOptions.PopulateLots
- uid: TinyLife.World.Map.PopulateLots
  commentId: M:TinyLife.World.Map.PopulateLots
  href: TinyLife.World.Map.html#TinyLife_World_Map_PopulateLots
  name: PopulateLots()
  nameWithType: Map.PopulateLots()
  fullName: TinyLife.World.Map.PopulateLots()
  spec.csharp:
  - uid: TinyLife.World.Map.PopulateLots
    name: PopulateLots
    href: TinyLife.World.Map.html#TinyLife_World_Map_PopulateLots
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.PopulateLots
    name: PopulateLots
    href: TinyLife.World.Map.html#TinyLife_World_Map_PopulateLots
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.World.Household.Money*
  commentId: Overload:TinyLife.World.Household.Money
  href: TinyLife.World.Household.html#TinyLife_World_Household_Money
  name: Money
  nameWithType: Household.Money
  fullName: TinyLife.World.Household.Money
- uid: TinyLife.World.Household.Members*
  commentId: Overload:TinyLife.World.Household.Members
  href: TinyLife.World.Household.html#TinyLife_World_Household_Members
  name: Members
  nameWithType: Household.Members
  fullName: TinyLife.World.Household.Members
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<PersonLike>
  nameWithType: IEnumerable<PersonLike>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.PersonLike>
  nameWithType.vb: IEnumerable(Of PersonLike)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.PersonLike)
  name.vb: IEnumerable(Of PersonLike)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.World.Household.Lot*
  commentId: Overload:TinyLife.World.Household.Lot
  href: TinyLife.World.Household.html#TinyLife_World_Household_Lot
  name: Lot
  nameWithType: Household.Lot
  fullName: TinyLife.World.Household.Lot
- uid: TinyLife.World.Lot
  commentId: T:TinyLife.World.Lot
  parent: TinyLife.World
  href: TinyLife.World.Lot.html
  name: Lot
  nameWithType: Lot
  fullName: TinyLife.World.Lot
- uid: TinyLife.Objects.PersonLike.LastName
  commentId: F:TinyLife.Objects.PersonLike.LastName
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_LastName
  name: LastName
  nameWithType: PersonLike.LastName
  fullName: TinyLife.Objects.PersonLike.LastName
- uid: TinyLife.World.Household.Name*
  commentId: Overload:TinyLife.World.Household.Name
  href: TinyLife.World.Household.html#TinyLife_World_Household_Name
  name: Name
  nameWithType: Household.Name
  fullName: TinyLife.World.Household.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.GameImpl.CurrentHousehold
  commentId: P:TinyLife.GameImpl.CurrentHousehold
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentHousehold
  name: CurrentHousehold
  nameWithType: GameImpl.CurrentHousehold
  fullName: TinyLife.GameImpl.CurrentHousehold
- uid: TinyLife.World.Household.IsCurrent*
  commentId: Overload:TinyLife.World.Household.IsCurrent
  href: TinyLife.World.Household.html#TinyLife_World_Household_IsCurrent
  name: IsCurrent
  nameWithType: Household.IsCurrent
  fullName: TinyLife.World.Household.IsCurrent
- uid: TinyLife.Actions.ActionType.ToggleNewspapers
  commentId: F:TinyLife.Actions.ActionType.ToggleNewspapers
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_ToggleNewspapers
  name: ToggleNewspapers
  nameWithType: ActionType.ToggleNewspapers
  fullName: TinyLife.Actions.ActionType.ToggleNewspapers
- uid: TinyLife.World.Household.Members
  commentId: P:TinyLife.World.Household.Members
  href: TinyLife.World.Household.html#TinyLife_World_Household_Members
  name: Members
  nameWithType: Household.Members
  fullName: TinyLife.World.Household.Members
- uid: TinyLife.World.Household.TotalMemberAmount*
  commentId: Overload:TinyLife.World.Household.TotalMemberAmount
  href: TinyLife.World.Household.html#TinyLife_World_Household_TotalMemberAmount
  name: TotalMemberAmount
  nameWithType: Household.TotalMemberAmount
  fullName: TinyLife.World.Household.TotalMemberAmount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.World.Household.#ctor*
  commentId: Overload:TinyLife.World.Household.#ctor
  href: TinyLife.World.Household.html#TinyLife_World_Household__ctor_TinyLife_World_Map_TinyLife_World_Lot_System_Boolean_
  name: Household
  nameWithType: Household.Household
  fullName: TinyLife.World.Household.Household
  nameWithType.vb: Household.New
  fullName.vb: TinyLife.World.Household.New
  name.vb: New
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Speed
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
- uid: TinyLife.World.Household.Update*
  commentId: Overload:TinyLife.World.Household.Update
  href: TinyLife.World.Household.html#TinyLife_World_Household_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: Update
  nameWithType: Household.Update
  fullName: TinyLife.World.Household.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.World.Household.Add*
  commentId: Overload:TinyLife.World.Household.Add
  href: TinyLife.World.Household.html#TinyLife_World_Household_Add_TinyLife_Objects_PersonLike_
  name: Add
  nameWithType: Household.Add
  fullName: TinyLife.World.Household.Add
- uid: TinyLife.World.Household.FurnitureStorage
  commentId: F:TinyLife.World.Household.FurnitureStorage
  href: TinyLife.World.Household.html#TinyLife_World_Household_FurnitureStorage
  name: FurnitureStorage
  nameWithType: Household.FurnitureStorage
  fullName: TinyLife.World.Household.FurnitureStorage
- uid: TinyLife.Objects.Furniture.GetChildren``1
  commentId: M:TinyLife.Objects.Furniture.GetChildren``1
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetChildren__1
  name: GetChildren<T>()
  nameWithType: Furniture.GetChildren<T>()
  fullName: TinyLife.Objects.Furniture.GetChildren<T>()
  nameWithType.vb: Furniture.GetChildren(Of T)()
  fullName.vb: TinyLife.Objects.Furniture.GetChildren(Of T)()
  name.vb: GetChildren(Of T)()
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetChildren``1
    name: GetChildren
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetChildren__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetChildren``1
    name: GetChildren
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetChildren__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: TinyLife.World.Household.AddToFurnitureStorage*
  commentId: Overload:TinyLife.World.Household.AddToFurnitureStorage
  href: TinyLife.World.Household.html#TinyLife_World_Household_AddToFurnitureStorage_TinyLife_Objects_Furniture_
  name: AddToFurnitureStorage
  nameWithType: Household.AddToFurnitureStorage
  fullName: TinyLife.World.Household.AddToFurnitureStorage
- uid: TinyLife.World.Household.Remove*
  commentId: Overload:TinyLife.World.Household.Remove
  href: TinyLife.World.Household.html#TinyLife_World_Household_Remove_TinyLife_Objects_PersonLike_System_Boolean_
  name: Remove
  nameWithType: Household.Remove
  fullName: TinyLife.World.Household.Remove
- uid: TinyLife.Objects.MapObject.Id
  commentId: P:TinyLife.Objects.MapObject.Id
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Id
  name: Id
  nameWithType: MapObject.Id
  fullName: TinyLife.Objects.MapObject.Id
- uid: TinyLife.World.Household.HasMember*
  commentId: Overload:TinyLife.World.Household.HasMember
  href: TinyLife.World.Household.html#TinyLife_World_Household_HasMember_System_Guid_
  name: HasMember
  nameWithType: Household.HasMember
  fullName: TinyLife.World.Household.HasMember
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.World.Household.Validate*
  commentId: Overload:TinyLife.World.Household.Validate
  href: TinyLife.World.Household.html#TinyLife_World_Household_Validate_TinyLife_World_Map_TinyLife_Utilities_AppliedMigrations_
  name: Validate
  nameWithType: Household.Validate
  fullName: TinyLife.World.Household.Validate
- uid: TinyLife.Utilities.AppliedMigrations
  commentId: T:TinyLife.Utilities.AppliedMigrations
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.AppliedMigrations.html
  name: AppliedMigrations
  nameWithType: AppliedMigrations
  fullName: TinyLife.Utilities.AppliedMigrations
- uid: TinyLife.World.ExportedHousehold
  commentId: T:TinyLife.World.ExportedHousehold
  parent: TinyLife.World
  href: TinyLife.World.ExportedHousehold.html
  name: ExportedHousehold
  nameWithType: ExportedHousehold
  fullName: TinyLife.World.ExportedHousehold
- uid: TinyLife.Objects.PersonLike.ResetToStatic(System.Boolean,System.Boolean)
  commentId: M:TinyLife.Objects.PersonLike.ResetToStatic(System.Boolean,System.Boolean)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_ResetToStatic_System_Boolean_System_Boolean_
  name: ResetToStatic(bool, bool)
  nameWithType: PersonLike.ResetToStatic(bool, bool)
  fullName: TinyLife.Objects.PersonLike.ResetToStatic(bool, bool)
  nameWithType.vb: PersonLike.ResetToStatic(Boolean, Boolean)
  fullName.vb: TinyLife.Objects.PersonLike.ResetToStatic(Boolean, Boolean)
  name.vb: ResetToStatic(Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.ResetToStatic(System.Boolean,System.Boolean)
    name: ResetToStatic
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_ResetToStatic_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.ResetToStatic(System.Boolean,System.Boolean)
    name: ResetToStatic
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_ResetToStatic_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.World.Household.DefaultMoney
  commentId: F:TinyLife.World.Household.DefaultMoney
  href: TinyLife.World.Household.html#TinyLife_World_Household_DefaultMoney
  name: DefaultMoney
  nameWithType: Household.DefaultMoney
  fullName: TinyLife.World.Household.DefaultMoney
- uid: TinyLife.World.Household.Export*
  commentId: Overload:TinyLife.World.Household.Export
  href: TinyLife.World.Household.html#TinyLife_World_Household_Export_System_Boolean_System_Boolean_System_Boolean_
  name: Export
  nameWithType: Household.Export
  fullName: TinyLife.World.Household.Export
- uid: TinyLife.World.Map.UpdateExternalPeople(System.Collections.Generic.ICollection{TinyLife.World.Map},System.Action{System.String},System.Action{System.Single})
  commentId: M:TinyLife.World.Map.UpdateExternalPeople(System.Collections.Generic.ICollection{TinyLife.World.Map},System.Action{System.String},System.Action{System.Single})
  isExternal: true
  href: TinyLife.World.Map.html#TinyLife_World_Map_UpdateExternalPeople_System_Collections_Generic_ICollection_TinyLife_World_Map__System_Action_System_String__System_Action_System_Single__
  name: UpdateExternalPeople(ICollection<Map>, Action<string>, Action<float>)
  nameWithType: Map.UpdateExternalPeople(ICollection<Map>, Action<string>, Action<float>)
  fullName: TinyLife.World.Map.UpdateExternalPeople(System.Collections.Generic.ICollection<TinyLife.World.Map>, System.Action<string>, System.Action<float>)
  nameWithType.vb: Map.UpdateExternalPeople(ICollection(Of Map), Action(Of String), Action(Of Single))
  fullName.vb: TinyLife.World.Map.UpdateExternalPeople(System.Collections.Generic.ICollection(Of TinyLife.World.Map), System.Action(Of String), System.Action(Of Single))
  name.vb: UpdateExternalPeople(ICollection(Of Map), Action(Of String), Action(Of Single))
  spec.csharp:
  - uid: TinyLife.World.Map.UpdateExternalPeople(System.Collections.Generic.ICollection{TinyLife.World.Map},System.Action{System.String},System.Action{System.Single})
    name: UpdateExternalPeople
    href: TinyLife.World.Map.html#TinyLife_World_Map_UpdateExternalPeople_System_Collections_Generic_ICollection_TinyLife_World_Map__System_Action_System_String__System_Action_System_Single__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.UpdateExternalPeople(System.Collections.Generic.ICollection{TinyLife.World.Map},System.Action{System.String},System.Action{System.Single})
    name: UpdateExternalPeople
    href: TinyLife.World.Map.html#TinyLife_World_Map_UpdateExternalPeople_System_Collections_Generic_ICollection_TinyLife_World_Map__System_Action_System_String__System_Action_System_Single__
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: TinyLife.World.Household.Import*
  commentId: Overload:TinyLife.World.Household.Import
  href: TinyLife.World.Household.html#TinyLife_World_Household_Import_TinyLife_World_ExportedHousehold_System_Boolean_System_Boolean_
  name: Import
  nameWithType: Household.Import
  fullName: TinyLife.World.Household.Import
- uid: TinyLife.World.Household.UnopenedMail
  commentId: F:TinyLife.World.Household.UnopenedMail
  href: TinyLife.World.Household.html#TinyLife_World_Household_UnopenedMail
  name: UnopenedMail
  nameWithType: Household.UnopenedMail
  fullName: TinyLife.World.Household.UnopenedMail
- uid: TinyLife.World.BillsMail
  commentId: T:TinyLife.World.BillsMail
  href: TinyLife.World.BillsMail.html
  name: BillsMail
  nameWithType: BillsMail
  fullName: TinyLife.World.BillsMail
- uid: TinyLife.World.Map.Time
  commentId: P:TinyLife.World.Map.Time
  href: TinyLife.World.Map.html#TinyLife_World_Map_Time
  name: Time
  nameWithType: Map.Time
  fullName: TinyLife.World.Map.Time
- uid: TinyLife.World.Household.AreUtilitiesDisabled*
  commentId: Overload:TinyLife.World.Household.AreUtilitiesDisabled
  href: TinyLife.World.Household.html#TinyLife_World_Household_AreUtilitiesDisabled_System_Nullable_System_TimeSpan__
  name: AreUtilitiesDisabled
  nameWithType: Household.AreUtilitiesDisabled
  fullName: TinyLife.World.Household.AreUtilitiesDisabled
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_ElectricityRating
  name: ElectricityRating
  nameWithType: FurnitureType.TypeSettings.ElectricityRating
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating
- uid: TinyLife.Objects.FurnitureType.TypeSettings.WaterRating
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.WaterRating
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_WaterRating
  name: WaterRating
  nameWithType: FurnitureType.TypeSettings.WaterRating
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.WaterRating
- uid: TinyLife.PersonalityType.CityNative
  commentId: F:TinyLife.PersonalityType.CityNative
  href: TinyLife.PersonalityType.html#TinyLife_PersonalityType_CityNative
  name: CityNative
  nameWithType: PersonalityType.CityNative
  fullName: TinyLife.PersonalityType.CityNative
- uid: TinyLife.World.Household.GetWeeklyBills*
  commentId: Overload:TinyLife.World.Household.GetWeeklyBills
  href: TinyLife.World.Household.html#TinyLife_World_Household_GetWeeklyBills
  name: GetWeeklyBills
  nameWithType: Household.GetWeeklyBills
  fullName: TinyLife.World.Household.GetWeeklyBills
- uid: System.Collections.Generic.Dictionary{System.String,System.Single}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, float>
  nameWithType: Dictionary<string, float>
  fullName: System.Collections.Generic.Dictionary<string, float>
  nameWithType.vb: Dictionary(Of String, Single)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Single)
  name.vb: Dictionary(Of String, Single)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TinyLife.World.Household.GetAgeGroups*
  commentId: Overload:TinyLife.World.Household.GetAgeGroups
  href: TinyLife.World.Household.html#TinyLife_World_Household_GetAgeGroups_System_Collections_Generic_IEnumerable_TinyLife_Objects_PersonLike__
  name: GetAgeGroups
  nameWithType: Household.GetAgeGroups
  fullName: TinyLife.World.Household.GetAgeGroups
- uid: TinyLife.Objects.AgeGroup
  commentId: T:TinyLife.Objects.AgeGroup
  parent: TinyLife.Objects
  href: TinyLife.Objects.AgeGroup.html
  name: AgeGroup
  nameWithType: AgeGroup
  fullName: TinyLife.Objects.AgeGroup
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects.AgeGroup.Adult
  commentId: F:TinyLife.Objects.AgeGroup.Adult
  href: TinyLife.Objects.AgeGroup.html#TinyLife_Objects_AgeGroup_Adult
  name: Adult
  nameWithType: AgeGroup.Adult
  fullName: TinyLife.Objects.AgeGroup.Adult
- uid: TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
  commentId: M:TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
  isExternal: true
  href: TinyLife.World.Household.html#TinyLife_World_Household_GetAgeGroups_System_Collections_Generic_IEnumerable_TinyLife_Objects_PersonLike__
  name: GetAgeGroups(IEnumerable<PersonLike>)
  nameWithType: Household.GetAgeGroups(IEnumerable<PersonLike>)
  fullName: TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable<TinyLife.Objects.PersonLike>)
  nameWithType.vb: Household.GetAgeGroups(IEnumerable(Of PersonLike))
  fullName.vb: TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable(Of TinyLife.Objects.PersonLike))
  name.vb: GetAgeGroups(IEnumerable(Of PersonLike))
  spec.csharp:
  - uid: TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
    name: GetAgeGroups
    href: TinyLife.World.Household.html#TinyLife_World_Household_GetAgeGroups_System_Collections_Generic_IEnumerable_TinyLife_Objects_PersonLike__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.World.Household.GetAgeGroups(System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike})
    name: GetAgeGroups
    href: TinyLife.World.Household.html#TinyLife_World_Household_GetAgeGroups_System_Collections_Generic_IEnumerable_TinyLife_Objects_PersonLike__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
  - name: )
- uid: TinyLife.World.Household.HasAdultPerson*
  commentId: Overload:TinyLife.World.Household.HasAdultPerson
  href: TinyLife.World.Household.html#TinyLife_World_Household_HasAdultPerson_System_Collections_Generic_IEnumerable_TinyLife_Objects_PersonLike__
  name: HasAdultPerson
  nameWithType: Household.HasAdultPerson
  fullName: TinyLife.World.Household.HasAdultPerson
- uid: TinyLife.World.Household.RandomConstellations
  commentId: F:TinyLife.World.Household.RandomConstellations
  href: TinyLife.World.Household.html#TinyLife_World_Household_RandomConstellations
  name: RandomConstellations
  nameWithType: Household.RandomConstellations
  fullName: TinyLife.World.Household.RandomConstellations
- uid: TinyLife.World.Household.RandomConstellation.Generate(System.Random)
  commentId: M:TinyLife.World.Household.RandomConstellation.Generate(System.Random)
  isExternal: true
  href: TinyLife.World.Household.RandomConstellation.html#TinyLife_World_Household_RandomConstellation_Generate_System_Random_
  name: Generate(Random)
  nameWithType: Household.RandomConstellation.Generate(Random)
  fullName: TinyLife.World.Household.RandomConstellation.Generate(System.Random)
  spec.csharp:
  - uid: TinyLife.World.Household.RandomConstellation.Generate(System.Random)
    name: Generate
    href: TinyLife.World.Household.RandomConstellation.html#TinyLife_World_Household_RandomConstellation_Generate_System_Random_
  - name: (
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: )
  spec.vb:
  - uid: TinyLife.World.Household.RandomConstellation.Generate(System.Random)
    name: Generate
    href: TinyLife.World.Household.RandomConstellation.html#TinyLife_World_Household_RandomConstellation_Generate_System_Random_
  - name: (
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: )
- uid: TinyLife.World.Household.Generate*
  commentId: Overload:TinyLife.World.Household.Generate
  href: TinyLife.World.Household.html#TinyLife_World_Household_Generate_TinyLife_World_Map_System_Random_System_Collections_Generic_List_TinyLife_Objects_AgeGroup__System_Collections_Generic_Dictionary_System_ValueTuple_System_Int32_System_Int32__TinyLife_World_Household_Relation__
  name: Generate
  nameWithType: Household.Generate
  fullName: TinyLife.World.Household.Generate
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: System.Collections.Generic.List{TinyLife.Objects.AgeGroup}
  commentId: T:System.Collections.Generic.List{TinyLife.Objects.AgeGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AgeGroup>
  nameWithType: List<AgeGroup>
  fullName: System.Collections.Generic.List<TinyLife.Objects.AgeGroup>
  nameWithType.vb: List(Of AgeGroup)
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Objects.AgeGroup)
  name.vb: List(Of AgeGroup)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: )
- uid: System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},TinyLife.World.Household.Relation}
  commentId: T:System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},TinyLife.World.Household.Relation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<(int Person, int Other), Household.Relation>
  nameWithType: Dictionary<(int Person, int Other), Household.Relation>
  fullName: System.Collections.Generic.Dictionary<(int Person, int Other), TinyLife.World.Household.Relation>
  nameWithType.vb: Dictionary(Of (Person As Integer, Other As Integer), Household.Relation)
  fullName.vb: System.Collections.Generic.Dictionary(Of (Person As Integer, Other As Integer), TinyLife.World.Household.Relation)
  name.vb: Dictionary(Of (Person As Integer, Other As Integer), Household.Relation)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.person
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.other
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.Relation
    name: Relation
    href: TinyLife.World.Household.Relation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.person
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.other
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.Relation
    name: Relation
    href: TinyLife.World.Household.Relation.html
  - name: )
- uid: TinyLife.World.Household.GetMatchingConstellations*
  commentId: Overload:TinyLife.World.Household.GetMatchingConstellations
  href: TinyLife.World.Household.html#TinyLife_World_Household_GetMatchingConstellations_TinyLife_Objects_AgeGroup_
  name: GetMatchingConstellations
  nameWithType: Household.GetMatchingConstellations
  fullName: TinyLife.World.Household.GetMatchingConstellations
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.World.Household.RandomConstellation,System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.World.Household.RandomConstellation,System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(Household.RandomConstellation Constellation, float MatchPercentage)>
  nameWithType: IEnumerable<(Household.RandomConstellation Constellation, float MatchPercentage)>
  fullName: System.Collections.Generic.IEnumerable<(TinyLife.World.Household.RandomConstellation Constellation, float MatchPercentage)>
  nameWithType.vb: IEnumerable(Of (Constellation As Household.RandomConstellation, MatchPercentage As Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (Constellation As TinyLife.World.Household.RandomConstellation, MatchPercentage As Single))
  name.vb: IEnumerable(Of (Constellation As Household.RandomConstellation, MatchPercentage As Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomConstellation
    name: RandomConstellation
    href: TinyLife.World.Household.RandomConstellation.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.World.Household.RandomConstellation,System.Single}.Constellation
    name: Constellation
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.world.household.randomconstellation,system.single-.constellation
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{TinyLife.World.Household.RandomConstellation,System.Single}.MatchPercentage
    name: MatchPercentage
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.world.household.randomconstellation,system.single-.matchpercentage
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.World.Household.RandomConstellation,System.Single}.Constellation
    name: Constellation
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.world.household.randomconstellation,system.single-.constellation
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.World.Household
    name: Household
    href: TinyLife.World.Household.html
  - name: .
  - uid: TinyLife.World.Household.RandomConstellation
    name: RandomConstellation
    href: TinyLife.World.Household.RandomConstellation.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.World.Household.RandomConstellation,System.Single}.MatchPercentage
    name: MatchPercentage
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.world.household.randomconstellation,system.single-.matchpercentage
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: TinyLife.World.Household.GetExportedHouseholds*
  commentId: Overload:TinyLife.World.Household.GetExportedHouseholds
  href: TinyLife.World.Household.html#TinyLife_World_Household_GetExportedHouseholds
  name: GetExportedHouseholds
  nameWithType: Household.GetExportedHouseholds
  fullName: TinyLife.World.Household.GetExportedHouseholds
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(FileInfo File, ExportedHousehold Household, string DisplayName, bool Custom, bool Hidden)>
  nameWithType: IEnumerable<(FileInfo File, ExportedHousehold Household, string DisplayName, bool Custom, bool Hidden)>
  fullName: System.Collections.Generic.IEnumerable<(System.IO.FileInfo File, TinyLife.World.ExportedHousehold Household, string DisplayName, bool Custom, bool Hidden)>
  nameWithType.vb: IEnumerable(Of (File As FileInfo, Household As ExportedHousehold, DisplayName As String, Custom As Boolean, Hidden As Boolean))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (File As System.IO.FileInfo, Household As TinyLife.World.ExportedHousehold, DisplayName As String, Custom As Boolean, Hidden As Boolean))
  name.vb: IEnumerable(Of (File As FileInfo, Household As ExportedHousehold, DisplayName As String, Custom As Boolean, Hidden As Boolean))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}.File
    name: File
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean,system.boolean-.file
  - name: ','
  - name: " "
  - uid: TinyLife.World.ExportedHousehold
    name: ExportedHousehold
    href: TinyLife.World.ExportedHousehold.html
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}.Household
    name: Household
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean,system.boolean-.household
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}.DisplayName
    name: DisplayName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean,system.boolean-.displayname
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}.Custom
    name: Custom
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean,system.boolean-.custom
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}.Hidden
    name: Hidden
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean,system.boolean-.hidden
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}.File
    name: File
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean,system.boolean-.file
  - name: " "
  - name: As
  - name: " "
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}.Household
    name: Household
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean,system.boolean-.household
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.World.ExportedHousehold
    name: ExportedHousehold
    href: TinyLife.World.ExportedHousehold.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}.DisplayName
    name: DisplayName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean,system.boolean-.displayname
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}.Custom
    name: Custom
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean,system.boolean-.custom
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.IO.FileInfo,TinyLife.World.ExportedHousehold,System.String,System.Boolean,System.Boolean}.Hidden
    name: Hidden
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.fileinfo,tinylife.world.exportedhousehold,system.string,system.boolean,system.boolean-.hidden
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
