### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.Project.ActionSettings
  commentId: T:TinyLife.Goals.Project.ActionSettings
  id: Project.ActionSettings
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.Project.ActionSettings.#ctor(System.String,TinyLife.Objects.ObjectCategory,System.String,System.Type)
  - TinyLife.Goals.Project.ActionSettings.CanContinue
  - TinyLife.Goals.Project.ActionSettings.ConstructedTypeScrap
  - TinyLife.Goals.Project.ActionSettings.IncludeProject
  - TinyLife.Goals.Project.ActionSettings.ProjectDisplayName
  - TinyLife.Goals.Project.ActionSettings.Settings
  - TinyLife.Goals.Project.ActionSettings.Type
  langs:
  - csharp
  - vb
  name: Project.ActionSettings
  nameWithType: Project.ActionSettings
  fullName: TinyLife.Goals.Project.ActionSettings
  type: Struct
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: A struct that represents a set of settings for <xref href="TinyLife.Goals.Project.CreateActions(TinyLife.Goals.Project.ActionSettings)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public struct Project.ActionSettings
    content.vb: Public Structure Project.ActionSettings
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - TinyLife.Goals.Project.ActionSettings.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Goals.Project.ActionSettings.Settings
  commentId: F:TinyLife.Goals.Project.ActionSettings.Settings
  id: Settings
  parent: TinyLife.Goals.Project.ActionSettings
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: Project.ActionSettings.Settings
  fullName: TinyLife.Goals.Project.ActionSettings.Settings
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The underlying <xref href="TinyLife.Actions.ActionType.TypeSettings" data-throw-if-not-resolved="false"></xref> to use for construction.

    These will be amended with additional info based on these action settings as part of <xref href="TinyLife.Goals.Project.CreateActions(TinyLife.Goals.Project.ActionSettings)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ActionType.TypeSettings Settings
    return:
      type: TinyLife.Actions.ActionType.TypeSettings
    content.vb: Public Settings As ActionType.TypeSettings
- uid: TinyLife.Goals.Project.ActionSettings.Type
  commentId: F:TinyLife.Goals.Project.ActionSettings.Type
  id: Type
  parent: TinyLife.Goals.Project.ActionSettings
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Project.ActionSettings.Type
  fullName: TinyLife.Goals.Project.ActionSettings.Type
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The project <xref href="TinyLife.Goals.Project.Type" data-throw-if-not-resolved="false"></xref> to use for the actions
  example: []
  syntax:
    content: public string Type
    return:
      type: System.String
    content.vb: Public Type As String
- uid: TinyLife.Goals.Project.ActionSettings.ConstructedTypeScrap
  commentId: F:TinyLife.Goals.Project.ActionSettings.ConstructedTypeScrap
  id: ConstructedTypeScrap
  parent: TinyLife.Goals.Project.ActionSettings
  langs:
  - csharp
  - vb
  name: ConstructedTypeScrap
  nameWithType: Project.ActionSettings.ConstructedTypeScrap
  fullName: TinyLife.Goals.Project.ActionSettings.ConstructedTypeScrap
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The function that is used to construct the scrap action.

    If this is null, projects will not be scrappable using these actions.

    The type needs to have a constructor that additionally accepts a string, which is the project name to work on, and is passed using <xref href="TinyLife.Actions.ActionArgument.AddedConstructorArguments" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Type ConstructedTypeScrap
    return:
      type: System.Type
    content.vb: Public ConstructedTypeScrap As Type
- uid: TinyLife.Goals.Project.ActionSettings.ProjectDisplayName
  commentId: F:TinyLife.Goals.Project.ActionSettings.ProjectDisplayName
  id: ProjectDisplayName
  parent: TinyLife.Goals.Project.ActionSettings
  langs:
  - csharp
  - vb
  name: ProjectDisplayName
  nameWithType: Project.ActionSettings.ProjectDisplayName
  fullName: TinyLife.Goals.Project.ActionSettings.ProjectDisplayName
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A function that determines the display name for a given project.

    If this is null, the project's <xref href="TinyLife.Goals.Project.Name" data-throw-if-not-resolved="false"></xref> is displayed along with its doneness percentage.
  example: []
  syntax:
    content: public Func<Project, string> ProjectDisplayName
    return:
      type: System.Func{TinyLife.Goals.Project,System.String}
    content.vb: Public ProjectDisplayName As Func(Of Project, String)
- uid: TinyLife.Goals.Project.ActionSettings.CanContinue
  commentId: F:TinyLife.Goals.Project.ActionSettings.CanContinue
  id: CanContinue
  parent: TinyLife.Goals.Project.ActionSettings
  langs:
  - csharp
  - vb
  name: CanContinue
  nameWithType: Project.ActionSettings.CanContinue
  fullName: TinyLife.Goals.Project.ActionSettings.CanContinue
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A function that determines whether the given project can be continued.

    By default, this function returns true for a project whose <xref href="TinyLife.Goals.Project.Completed" data-throw-if-not-resolved="false"></xref> property is false.
  example: []
  syntax:
    content: public Predicate<Project> CanContinue
    return:
      type: System.Predicate{TinyLife.Goals.Project}
    content.vb: Public CanContinue As Predicate(Of Project)
- uid: TinyLife.Goals.Project.ActionSettings.IncludeProject
  commentId: F:TinyLife.Goals.Project.ActionSettings.IncludeProject
  id: IncludeProject
  parent: TinyLife.Goals.Project.ActionSettings
  langs:
  - csharp
  - vb
  name: IncludeProject
  nameWithType: Project.ActionSettings.IncludeProject
  fullName: TinyLife.Goals.Project.ActionSettings.IncludeProject
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A function that determines whether the given project should be included as an action variety or whether it should be ignored.

    By default, this function returns true for a project that is not <xref href="TinyLife.Goals.Project.Archived" data-throw-if-not-resolved="false"></xref>, and whose <xref href="TinyLife.Goals.Project.DailyPay" data-throw-if-not-resolved="false"></xref> is less than or equal to 0.
  example: []
  syntax:
    content: public Predicate<Project> IncludeProject
    return:
      type: System.Predicate{TinyLife.Goals.Project}
    content.vb: Public IncludeProject As Predicate(Of Project)
- uid: TinyLife.Goals.Project.ActionSettings.#ctor(System.String,TinyLife.Objects.ObjectCategory,System.String,System.Type)
  commentId: M:TinyLife.Goals.Project.ActionSettings.#ctor(System.String,TinyLife.Objects.ObjectCategory,System.String,System.Type)
  id: '#ctor(System.String,TinyLife.Objects.ObjectCategory,System.String,System.Type)'
  parent: TinyLife.Goals.Project.ActionSettings
  langs:
  - csharp
  - vb
  name: ActionSettings(string, ObjectCategory, string, Type)
  nameWithType: Project.ActionSettings.ActionSettings(string, ObjectCategory, string, Type)
  fullName: TinyLife.Goals.Project.ActionSettings.ActionSettings(string, TinyLife.Objects.ObjectCategory, string, System.Type)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Constructs new action settings with the given default values
  example: []
  syntax:
    content: public ActionSettings(string name, ObjectCategory context, string type, Type constructedType)
    parameters:
    - id: name
      type: System.String
      description: The basic name for the actions
    - id: context
      type: TinyLife.Objects.ObjectCategory
      description: The context for the actions
    - id: type
      type: System.String
      description: The type of project that these actions should relate to. The type needs to have a constructor that additionally accepts a string, which is the project name to work on.
    - id: constructedType
      type: System.Type
      description: The type that should be constructed for the start and continue actions
    content.vb: Public Sub New(name As String, context As ObjectCategory, type As String, constructedType As Type)
  overload: TinyLife.Goals.Project.ActionSettings.#ctor*
  nameWithType.vb: Project.ActionSettings.New(String, ObjectCategory, String, Type)
  fullName.vb: TinyLife.Goals.Project.ActionSettings.New(String, TinyLife.Objects.ObjectCategory, String, System.Type)
  name.vb: New(String, ObjectCategory, String, Type)
references:
- uid: TinyLife.Goals.Project.CreateActions(TinyLife.Goals.Project.ActionSettings)
  commentId: M:TinyLife.Goals.Project.CreateActions(TinyLife.Goals.Project.ActionSettings)
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_CreateActions_TinyLife_Goals_Project_ActionSettings_
  name: CreateActions(ActionSettings)
  nameWithType: Project.CreateActions(Project.ActionSettings)
  fullName: TinyLife.Goals.Project.CreateActions(TinyLife.Goals.Project.ActionSettings)
  spec.csharp:
  - uid: TinyLife.Goals.Project.CreateActions(TinyLife.Goals.Project.ActionSettings)
    name: CreateActions
    href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_CreateActions_TinyLife_Goals_Project_ActionSettings_
  - name: (
  - uid: TinyLife.Goals.Project.ActionSettings
    name: ActionSettings
    href: TinyLife.Goals.Project.ActionSettings.html
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.Project.CreateActions(TinyLife.Goals.Project.ActionSettings)
    name: CreateActions
    href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_CreateActions_TinyLife_Goals_Project_ActionSettings_
  - name: (
  - uid: TinyLife.Goals.Project.ActionSettings
    name: ActionSettings
    href: TinyLife.Goals.Project.ActionSettings.html
  - name: )
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.Goals.Project.ActionSettings.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<ActionSettings>(ActionSettings)
  nameWithType: Extensions.JsonCopy<Project.ActionSettings>(Project.ActionSettings)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.Project.ActionSettings>(TinyLife.Goals.Project.ActionSettings)
  nameWithType.vb: Extensions.JsonCopy(Of Project.ActionSettings)(Project.ActionSettings)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.Project.ActionSettings)(TinyLife.Goals.Project.ActionSettings)
  name.vb: JsonCopy(Of ActionSettings)(ActionSettings)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.Project.ActionSettings)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Goals.Project.ActionSettings
    name: ActionSettings
    href: TinyLife.Goals.Project.ActionSettings.html
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.Project.ActionSettings
    name: ActionSettings
    href: TinyLife.Goals.Project.ActionSettings.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.Project.ActionSettings)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Project.ActionSettings
    name: ActionSettings
    href: TinyLife.Goals.Project.ActionSettings.html
  - name: )
  - name: (
  - uid: TinyLife.Goals.Project.ActionSettings
    name: ActionSettings
    href: TinyLife.Goals.Project.ActionSettings.html
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Actions.ActionType.TypeSettings
  commentId: T:TinyLife.Actions.ActionType.TypeSettings
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType.TypeSettings
  nameWithType: ActionType.TypeSettings
  fullName: TinyLife.Actions.ActionType.TypeSettings
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: TinyLife.Goals.Project.Type
  commentId: F:TinyLife.Goals.Project.Type
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Type
  name: Type
  nameWithType: Project.Type
  fullName: TinyLife.Goals.Project.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Actions.ActionArgument.AddedConstructorArguments
  commentId: F:TinyLife.Actions.ActionArgument.AddedConstructorArguments
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_AddedConstructorArguments
  name: AddedConstructorArguments
  nameWithType: ActionArgument.AddedConstructorArguments
  fullName: TinyLife.Actions.ActionArgument.AddedConstructorArguments
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TinyLife.Goals.Project.Name
  commentId: F:TinyLife.Goals.Project.Name
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Name
  name: Name
  nameWithType: Project.Name
  fullName: TinyLife.Goals.Project.Name
- uid: System.Func{TinyLife.Goals.Project,System.String}
  commentId: T:System.Func{TinyLife.Goals.Project,System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Project, string>
  nameWithType: Func<Project, string>
  fullName: System.Func<TinyLife.Goals.Project, string>
  nameWithType.vb: Func(Of Project, String)
  fullName.vb: System.Func(Of TinyLife.Goals.Project, String)
  name.vb: Func(Of Project, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Goals.Project.Completed
  commentId: P:TinyLife.Goals.Project.Completed
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Completed
  name: Completed
  nameWithType: Project.Completed
  fullName: TinyLife.Goals.Project.Completed
- uid: System.Predicate{TinyLife.Goals.Project}
  commentId: T:System.Predicate{TinyLife.Goals.Project}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<Project>
  nameWithType: Predicate<Project>
  fullName: System.Predicate<TinyLife.Goals.Project>
  nameWithType.vb: Predicate(Of Project)
  fullName.vb: System.Predicate(Of TinyLife.Goals.Project)
  name.vb: Predicate(Of Project)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Goals.Project.Archived
  commentId: P:TinyLife.Goals.Project.Archived
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Archived
  name: Archived
  nameWithType: Project.Archived
  fullName: TinyLife.Goals.Project.Archived
- uid: TinyLife.Goals.Project.DailyPay
  commentId: P:TinyLife.Goals.Project.DailyPay
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_DailyPay
  name: DailyPay
  nameWithType: Project.DailyPay
  fullName: TinyLife.Goals.Project.DailyPay
- uid: TinyLife.Goals.Project.ActionSettings.#ctor*
  commentId: Overload:TinyLife.Goals.Project.ActionSettings.#ctor
  href: TinyLife.Goals.Project.ActionSettings.html#TinyLife_Goals_Project_ActionSettings__ctor_System_String_TinyLife_Objects_ObjectCategory_System_String_System_Type_
  name: ActionSettings
  nameWithType: Project.ActionSettings.ActionSettings
  fullName: TinyLife.Goals.Project.ActionSettings.ActionSettings
  nameWithType.vb: Project.ActionSettings.New
  fullName.vb: TinyLife.Goals.Project.ActionSettings.New
  name.vb: New
- uid: TinyLife.Objects.ObjectCategory
  commentId: T:TinyLife.Objects.ObjectCategory
  parent: TinyLife.Objects
  href: TinyLife.Objects.ObjectCategory.html
  name: ObjectCategory
  nameWithType: ObjectCategory
  fullName: TinyLife.Objects.ObjectCategory
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
