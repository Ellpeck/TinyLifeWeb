### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.FurnitureType.TypeSettings
  commentId: T:TinyLife.Objects.FurnitureType.TypeSettings
  id: FurnitureType.TypeSettings
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.FurnitureType.TypeSettings.#ctor(System.String,Microsoft.Xna.Framework.Point,TinyLife.Objects.ObjectCategory,System.Single,TinyLife.Utilities.ColorScheme[])
  - TinyLife.Objects.FurnitureType.TypeSettings.ActionSpots
  - TinyLife.Objects.FurnitureType.TypeSettings.BreakSettings
  - TinyLife.Objects.FurnitureType.TypeSettings.BuyableVariations
  - TinyLife.Objects.FurnitureType.TypeSettings.CanExecuteAction
  - TinyLife.Objects.FurnitureType.TypeSettings.Categories
  - TinyLife.Objects.FurnitureType.TypeSettings.Colors
  - TinyLife.Objects.FurnitureType.TypeSettings.ConstructedType
  - TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating
  - TinyLife.Objects.FurnitureType.TypeSettings.DefaultRotation
  - TinyLife.Objects.FurnitureType.TypeSettings.DirtyOverlayTextureName
  - TinyLife.Objects.FurnitureType.TypeSettings.DistanceFromObstructions
  - TinyLife.Objects.FurnitureType.TypeSettings.EfficiencyModifier
  - TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating
  - TinyLife.Objects.FurnitureType.TypeSettings.GetDataKeys
  - TinyLife.Objects.FurnitureType.TypeSettings.GetData``1(System.String)
  - TinyLife.Objects.FurnitureType.TypeSettings.GetDisplayName
  - TinyLife.Objects.FurnitureType.TypeSettings.HeldArmsOut
  - TinyLife.Objects.FurnitureType.TypeSettings.HeldPivot
  - TinyLife.Objects.FurnitureType.TypeSettings.Icon
  - TinyLife.Objects.FurnitureType.TypeSettings.IsAllowedInSpot
  - TinyLife.Objects.FurnitureType.TypeSettings.LightSettings
  - TinyLife.Objects.FurnitureType.TypeSettings.Migrations
  - TinyLife.Objects.FurnitureType.TypeSettings.Name
  - TinyLife.Objects.FurnitureType.TypeSettings.ObjectSpots
  - TinyLife.Objects.FurnitureType.TypeSettings.OnDescription
  - TinyLife.Objects.FurnitureType.TypeSettings.Price
  - TinyLife.Objects.FurnitureType.TypeSettings.RestoreNeedModifier
  - TinyLife.Objects.FurnitureType.TypeSettings.SetData``1(System.String,``0)
  - TinyLife.Objects.FurnitureType.TypeSettings.Size
  - TinyLife.Objects.FurnitureType.TypeSettings.Tab
  - TinyLife.Objects.FurnitureType.TypeSettings.TextureName
  - TinyLife.Objects.FurnitureType.TypeSettings.Visibility
  - TinyLife.Objects.FurnitureType.TypeSettings.WaterRating
  langs:
  - csharp
  - vb
  name: FurnitureType.TypeSettings
  nameWithType: FurnitureType.TypeSettings
  fullName: TinyLife.Objects.FurnitureType.TypeSettings
  type: Struct
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A set of settings that define the properties of a <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: 'public struct FurnitureType.TypeSettings : IGenericDataHolder'
    content.vb: Public Structure FurnitureType.TypeSettings Implements IGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - TinyLife.Objects.FurnitureType.TypeSettings.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Name
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Name
  id: Name
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FurnitureType.TypeSettings.Name
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The name of the furniture type. Should be unique across all game content, including all mods.
  example: []
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Size
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Size
  id: Size
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: FurnitureType.TypeSettings.Size
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Size
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The size, in full tiles, that this furniture should take up
  example: []
  syntax:
    content: public Point Size
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public Size As Point
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Categories
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Categories
  id: Categories
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: FurnitureType.TypeSettings.Categories
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Categories
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A set of <xref href="TinyLife.Objects.ObjectCategory" data-throw-if-not-resolved="false"></xref> flags that this furniture should have.
  example: []
  syntax:
    content: public ObjectCategory Categories
    return:
      type: TinyLife.Objects.ObjectCategory
    content.vb: Public Categories As ObjectCategory
- uid: TinyLife.Objects.FurnitureType.TypeSettings.ActionSpots
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.ActionSpots
  id: ActionSpots
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: ActionSpots
  nameWithType: FurnitureType.TypeSettings.ActionSpots
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.ActionSpots
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An array of <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> instances that this furniture type should have.

    By default, every tile that this furniture covers has an action spot reachable from all sides.
  example: []
  syntax:
    content: public ActionSpot[] ActionSpots
    return:
      type: TinyLife.Objects.ActionSpot[]
    content.vb: Public ActionSpots As ActionSpot()
- uid: TinyLife.Objects.FurnitureType.TypeSettings.ObjectSpots
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.ObjectSpots
  id: ObjectSpots
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: ObjectSpots
  nameWithType: FurnitureType.TypeSettings.ObjectSpots
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.ObjectSpots
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An array of <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> instances that this furniture type should have.

    By default, there are no object spots.
  example: []
  syntax:
    content: public ObjectSpot[] ObjectSpots
    return:
      type: TinyLife.Objects.ObjectSpot[]
    content.vb: Public ObjectSpots As ObjectSpot()
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Colors
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Colors
  id: Colors
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: Colors
  nameWithType: FurnitureType.TypeSettings.Colors
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Colors
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The color settings to use for this furniture type.
  example: []
  syntax:
    content: public ColorSettings Colors
    return:
      type: TinyLife.Utilities.ColorSettings
    content.vb: Public Colors As ColorSettings
- uid: TinyLife.Objects.FurnitureType.TypeSettings.DefaultRotation
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.DefaultRotation
  id: DefaultRotation
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: DefaultRotation
  nameWithType: FurnitureType.TypeSettings.DefaultRotation
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.DefaultRotation
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The rotation that this furniture type should have when picked from the <xref href="TinyLife.Tools.FurnitureTool" data-throw-if-not-resolved="false"></xref>. <xref href="MLEM.Maths.Direction2.Up" data-throw-if-not-resolved="false"></xref> by default.
  example: []
  syntax:
    content: public Direction2 DefaultRotation
    return:
      type: MLEM.Maths.Direction2
    content.vb: Public DefaultRotation As Direction2
- uid: TinyLife.Objects.FurnitureType.TypeSettings.ConstructedType
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.ConstructedType
  id: ConstructedType
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: ConstructedType
  nameWithType: FurnitureType.TypeSettings.ConstructedType
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.ConstructedType
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A delegate to a <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that is constructed when this furniture type is instantiated using <xref href="TinyLife.Objects.FurnitureType.Construct%60%601(System.Int32%5b%5d%2cTinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Nullable%7bSystem.Guid%7d)" data-throw-if-not-resolved="false"></xref>.

    The type needs to have a constructor with the same signature as <xref href="TinyLife.Objects.Furniture.%23ctor(System.Guid%2cTinyLife.Objects.FurnitureType%2cSystem.Int32%5b%5d%2cTinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.

    If this value is null, a <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> instance will be constructed from this type if its <xref href="TinyLife.Objects.FurnitureType.TypeSettings.BreakSettings" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Objects.IBreakableObject.Settings.Reliability" data-throw-if-not-resolved="false"></xref> is null, or a <xref href="TinyLife.Objects.BreakableFurniture" data-throw-if-not-resolved="false"></xref> instance if it is non-null.
  example: []
  syntax:
    content: public Type ConstructedType
    return:
      type: System.Type
    content.vb: Public ConstructedType As Type
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Price
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Price
  id: Price
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: FurnitureType.TypeSettings.Price
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Price
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The price that this furniture should have
  example: []
  syntax:
    content: public float Price
    return:
      type: System.Single
    content.vb: Public Price As Single
- uid: TinyLife.Objects.FurnitureType.TypeSettings.BuyableVariations
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.BuyableVariations
  id: BuyableVariations
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: BuyableVariations
  nameWithType: FurnitureType.TypeSettings.BuyableVariations
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.BuyableVariations
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An array of actions that can modify the passed <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> instance to allow for multiple variations of it to be displayed as a group in the furniture tool similarly.

    This is used, for example, for <xref href="TinyLife.Objects.FurnitureType.FoodPlate" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.FurnitureType.CustomPainting" data-throw-if-not-resolved="false"></xref>.

    If this is null or empty (the former of which it is by default), this furniture item will have no variations.
  example: []
  syntax:
    content: public Func<Action<Furniture>[]> BuyableVariations
    return:
      type: System.Func{System.Action{TinyLife.Objects.Furniture}[]}
    content.vb: Public BuyableVariations As Func(Of Action(Of Furniture)())
- uid: TinyLife.Objects.FurnitureType.TypeSettings.HeldPivot
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.HeldPivot
  id: HeldPivot
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: HeldPivot
  nameWithType: FurnitureType.TypeSettings.HeldPivot
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.HeldPivot
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Whether, when this object is held by a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>, its textures should maintain their defined pivot points.

    If this value is false, the item is centered, meaning that its center is in the person's hand.
  example: []
  syntax:
    content: public bool HeldPivot
    return:
      type: System.Boolean
    content.vb: Public HeldPivot As Boolean
- uid: TinyLife.Objects.FurnitureType.TypeSettings.HeldArmsOut
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.HeldArmsOut
  id: HeldArmsOut
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: HeldArmsOut
  nameWithType: FurnitureType.TypeSettings.HeldArmsOut
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.HeldArmsOut
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Whether, when this object is held by a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>, the <xref href="TinyLife.Objects.Pose.StandingArmsOut" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.Pose.WalkingArmsOut" data-throw-if-not-resolved="false"></xref> poses should be used instead of the regular <xref href="TinyLife.Objects.Pose.Standing" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.Pose.Walking" data-throw-if-not-resolved="false"></xref> poses.

    This looks better for bigger objects like <xref href="TinyLife.Objects.FurnitureType.CustomPainting" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool HeldArmsOut
    return:
      type: System.Boolean
    content.vb: Public HeldArmsOut As Boolean
- uid: TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating
  id: DecorativeRating
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: DecorativeRating
  nameWithType: FurnitureType.TypeSettings.DecorativeRating
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A function that returns an integer for a given <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> instance of this type.

    The integer represents the decoration (or prettiness) rating of the object. The rating determines some <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> values.

    A negative return value makes the object be perceived as ugly, whereas a positive rating makes the object be perceived as pretty.

    By default, this function returns 0.
  example: []
  syntax:
    content: public Func<Furniture, float> DecorativeRating
    return:
      type: System.Func{TinyLife.Objects.Furniture,System.Single}
    content.vb: Public DecorativeRating As Func(Of Furniture, Single)
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Icon
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Icon
  id: Icon
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: FurnitureType.TypeSettings.Icon
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Icon
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The build mode icon for this object, which represents the category / theme / mod that it comes from.

    If this value is nonnull, the icon will be displayed in the corner of the build mode button for this object.
  example: []
  syntax:
    content: public TextureRegion Icon
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public Icon As TextureRegion
- uid: TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating
  id: ElectricityRating
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: ElectricityRating
  nameWithType: FurnitureType.TypeSettings.ElectricityRating
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This object's electricity rating. A higher electricity rating means the bills for the lot this object is on will be higher.

    The electricity rating is also displayed in the furniture tool menu.
  example: []
  syntax:
    content: public Func<Furniture, float> ElectricityRating
    return:
      type: System.Func{TinyLife.Objects.Furniture,System.Single}
    content.vb: Public ElectricityRating As Func(Of Furniture, Single)
- uid: TinyLife.Objects.FurnitureType.TypeSettings.WaterRating
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.WaterRating
  id: WaterRating
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: WaterRating
  nameWithType: FurnitureType.TypeSettings.WaterRating
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.WaterRating
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This object's water consumption rating. A higher water consumption rating means the bills for the lot this object is on will be higher.

    The water consumption rating is also displayed in the furniture tool menu.
  example: []
  syntax:
    content: public Func<Furniture, float> WaterRating
    return:
      type: System.Func{TinyLife.Objects.Furniture,System.Single}
    content.vb: Public WaterRating As Func(Of Furniture, Single)
- uid: TinyLife.Objects.FurnitureType.TypeSettings.EfficiencyModifier
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.EfficiencyModifier
  id: EfficiencyModifier
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: EfficiencyModifier
  nameWithType: FurnitureType.TypeSettings.EfficiencyModifier
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.EfficiencyModifier
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This object's efficiency modifier, which is multiplied with a person's efficiency if this object is an involved object in a person's current action.

    This value is used in <xref href="TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean%2cTinyLife.Skills.SkillType%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Func<Furniture, float> EfficiencyModifier
    return:
      type: System.Func{TinyLife.Objects.Furniture,System.Single}
    content.vb: Public EfficiencyModifier As Func(Of Furniture, Single)
- uid: TinyLife.Objects.FurnitureType.TypeSettings.RestoreNeedModifier
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.RestoreNeedModifier
  id: RestoreNeedModifier
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: RestoreNeedModifier
  nameWithType: FurnitureType.TypeSettings.RestoreNeedModifier
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.RestoreNeedModifier
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This object's need restoration modifier, which is multiplied with a person's need restoration speed if this object is an involved object in a person's current action.

    This value is used in <xref href="TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean%2cTinyLife.NeedType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Func<Furniture, float> RestoreNeedModifier
    return:
      type: System.Func{TinyLife.Objects.Furniture,System.Single}
    content.vb: Public RestoreNeedModifier As Func(Of Furniture, Single)
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Visibility
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Visibility
  id: Visibility
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: FurnitureType.TypeSettings.Visibility
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Visibility
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The visibility settings for this furniture type.

    The visibility determines whether this object gets culled if the camera is far away, etc.

    This value defaults to <xref href="TinyLife.Objects.Visibility.WhenVisible" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Visibility Visibility
    return:
      type: TinyLife.Objects.Visibility
    content.vb: Public Visibility As Visibility
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Tab
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Tab
  id: Tab
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: Tab
  nameWithType: FurnitureType.TypeSettings.Tab
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Tab
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The <xref href="TinyLife.Tools.FurnitureTool" data-throw-if-not-resolved="false"></xref> tab that this object should display in.

    This value defaults to the tab returned by <xref href="TinyLife.Utilities.Extensions.GetDefaultTab(TinyLife.Objects.ObjectCategory)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public FurnitureTool.Tab Tab
    return:
      type: TinyLife.Tools.FurnitureTool.Tab
    content.vb: Public Tab As FurnitureTool.Tab
- uid: TinyLife.Objects.FurnitureType.TypeSettings.TextureName
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.TextureName
  id: TextureName
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: TextureName
  nameWithType: FurnitureType.TypeSettings.TextureName
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.TextureName
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The name of the base texture that this furniture type should use.

    If this is not explicitly set, it defaults to this furniture type's <xref href="TinyLife.Objects.FurnitureType.TypeSettings.Name" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string TextureName
    return:
      type: System.String
    content.vb: Public TextureName As String
- uid: TinyLife.Objects.FurnitureType.TypeSettings.LightSettings
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.LightSettings
  id: LightSettings
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: LightSettings
  nameWithType: FurnitureType.TypeSettings.LightSettings
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.LightSettings
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The light settings for an instance of this furniture type.

    Note that, if this value is set, <xref href="TinyLife.Objects.FurnitureType.Construct%60%601(System.Int32%5b%5d%2cTinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Nullable%7bSystem.Guid%7d)" data-throw-if-not-resolved="false"></xref> will automatically construct an instance of <xref href="TinyLife.Objects.LightFurniture" data-throw-if-not-resolved="false"></xref>, which extends <xref href="TinyLife.Objects.ILightObject" data-throw-if-not-resolved="false"></xref>, and any custom <xref href="TinyLife.Objects.FurnitureType.TypeSettings.ConstructedType" data-throw-if-not-resolved="false"></xref> should extend <xref href="TinyLife.Objects.ILightObject" data-throw-if-not-resolved="false"></xref> as well.
  example: []
  syntax:
    content: public ILightObject.Settings LightSettings
    return:
      type: TinyLife.Objects.ILightObject.Settings
    content.vb: Public LightSettings As ILightObject.Settings
- uid: TinyLife.Objects.FurnitureType.TypeSettings.BreakSettings
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.BreakSettings
  id: BreakSettings
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: BreakSettings
  nameWithType: FurnitureType.TypeSettings.BreakSettings
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.BreakSettings
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The reliability settings for an instance of this furniture type.

    Note that, if this value is set, <xref href="TinyLife.Objects.FurnitureType.Construct%60%601(System.Int32%5b%5d%2cTinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Nullable%7bSystem.Guid%7d)" data-throw-if-not-resolved="false"></xref> will construct a <xref href="TinyLife.Objects.BreakableFurniture" data-throw-if-not-resolved="false"></xref>, which extends <xref href="TinyLife.Objects.IBreakableObject" data-throw-if-not-resolved="false"></xref> by default, and any custom <xref href="TinyLife.Objects.FurnitureType.TypeSettings.ConstructedType" data-throw-if-not-resolved="false"></xref> should extend <xref href="TinyLife.Objects.IBreakableObject" data-throw-if-not-resolved="false"></xref> as well.
  example: []
  syntax:
    content: public IBreakableObject.Settings BreakSettings
    return:
      type: TinyLife.Objects.IBreakableObject.Settings
    content.vb: Public BreakSettings As IBreakableObject.Settings
- uid: TinyLife.Objects.FurnitureType.TypeSettings.DirtyOverlayTextureName
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.DirtyOverlayTextureName
  id: DirtyOverlayTextureName
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: DirtyOverlayTextureName
  nameWithType: FurnitureType.TypeSettings.DirtyOverlayTextureName
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.DirtyOverlayTextureName
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The name of an overlay texture that should be drawn on top of this object if it is <xref href="TinyLife.Objects.Furniture.Dirty" data-throw-if-not-resolved="false"></xref>.

    Giving this field a value will automatically allow the object to get dirty after a while of being used.

    The textures loaded through this texture name act similarly to the ones loaded through <xref href="TinyLife.Objects.FurnitureType.TypeSettings.TextureName" data-throw-if-not-resolved="false"></xref>, in that they adhere to the object's possible rotations, and have the same amount of layers as this <xref href="TinyLife.Objects.FurnitureType.TypeSettings.Colors" data-throw-if-not-resolved="false"></xref>' <xref href="TinyLife.Utilities.ColorSettings.Map" data-throw-if-not-resolved="false"></xref> has entries.

    By default, the texture to use is "approximated" using <xref href="TinyLife.Utilities.Extensions.GetDefaultDirtyOverlayTextureName(TinyLife.Objects.ObjectCategory)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string DirtyOverlayTextureName
    return:
      type: System.String
    content.vb: Public DirtyOverlayTextureName As String
- uid: TinyLife.Objects.FurnitureType.TypeSettings.DistanceFromObstructions
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.DistanceFromObstructions
  id: DistanceFromObstructions
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: DistanceFromObstructions
  nameWithType: FurnitureType.TypeSettings.DistanceFromObstructions
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.DistanceFromObstructions
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A minimum distance from obstructions (walls and roofs) that this object has to have to be placed.

    This value is used in <xref href="TinyLife.Objects.Furniture.GetWallsInTheWay%60%601(Microsoft.Xna.Framework.Vector2%2cSystem.Single%2cMLEM.Maths.Direction2%2cSystem.Single%2cSystem.Collections.Generic.ICollection%7bTinyLife.Objects.WallLike%7d)" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2%2cSystem.Int32%2cMLEM.Maths.Direction2%2cSystem.Single%2cSystem.Collections.Generic.ICollection%7bTinyLife.World.Roof%7d)" data-throw-if-not-resolved="false"></xref> by inflating the object's <xref href="TinyLife.Objects.FurnitureType.TypeSettings.Size" data-throw-if-not-resolved="false"></xref>.

    This value defaults to 0, and it is used by objects like trees.
  example: []
  syntax:
    content: public int DistanceFromObstructions
    return:
      type: System.Int32
    content.vb: Public DistanceFromObstructions As Integer
- uid: TinyLife.Objects.FurnitureType.TypeSettings.GetDisplayName
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.GetDisplayName
  id: GetDisplayName
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: GetDisplayName
  nameWithType: FurnitureType.TypeSettings.GetDisplayName
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.GetDisplayName
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A function that is used in <xref href="TinyLife.Objects.FurnitureType.TypeSettings.GetDisplayName" data-throw-if-not-resolved="false"></xref> to determine the display name that this furniture type's instances should have.

    Note that, when this function is invoked, the <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> instance passed may be null.
  example: []
  syntax:
    content: public Func<string, Furniture, string> GetDisplayName
    return:
      type: System.Func{System.String,TinyLife.Objects.Furniture,System.String}
    content.vb: Public GetDisplayName As Func(Of String, Furniture, String)
- uid: TinyLife.Objects.FurnitureType.TypeSettings.CanExecuteAction
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.CanExecuteAction
  id: CanExecuteAction
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: CanExecuteAction
  nameWithType: FurnitureType.TypeSettings.CanExecuteAction
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.CanExecuteAction
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A function that can be used to allow or disallow certain <xref href="TinyLife.Actions.ActionType" data-throw-if-not-resolved="false"></xref> instances to execute or not.

    By default, this function is null, meaning no special conditions are created by this <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref>, and all actions that themselves are valid can be executed on this furniture item.
  example: []
  syntax:
    content: public Func<(ActionType Type, ActionInfo Info, bool Automatic, bool IsAuxiliary), CanExecuteResult> CanExecuteAction
    return:
      type: System.Func{System.ValueTuple{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean},TinyLife.Actions.CanExecuteResult}
    content.vb: Public CanExecuteAction As Func(Of (Type As ActionType, Info As ActionInfo, Automatic As Boolean, IsAuxiliary As Boolean), CanExecuteResult)
- uid: TinyLife.Objects.FurnitureType.TypeSettings.IsAllowedInSpot
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.IsAllowedInSpot
  id: IsAllowedInSpot
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: IsAllowedInSpot
  nameWithType: FurnitureType.TypeSettings.IsAllowedInSpot
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.IsAllowedInSpot
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A function that can be used to allow or disallow this object to be slotted into an <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> on a given <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> instance.

    By default, this function is null, meaning no special conditions are created by this <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref>, and all object spots that allow this object will be able to accept it.
  example: []
  syntax:
    content: public Func<(Furniture Parent, ObjectSpot Spot), bool> IsAllowedInSpot
    return:
      type: System.Func{System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot},System.Boolean}
    content.vb: Public IsAllowedInSpot As Func(Of (Parent As Furniture, Spot As ObjectSpot), Boolean)
- uid: TinyLife.Objects.FurnitureType.TypeSettings.OnDescription
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.OnDescription
  id: OnDescription
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: OnDescription
  nameWithType: FurnitureType.TypeSettings.OnDescription
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.OnDescription
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An action that is invoked when the <xref href="TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List%7bSystem.String%7d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> method is called on a furniture instance that uses these type settings.

    This action can be used to add additional description lines, or remove existing ones.
  example: []
  syntax:
    content: public Action<List<string>, bool> OnDescription
    return:
      type: System.Action{System.Collections.Generic.List{System.String},System.Boolean}
    content.vb: Public OnDescription As Action(Of List(Of String), Boolean)
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Migrations
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Migrations
  id: Migrations
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: Migrations
  nameWithType: FurnitureType.TypeSettings.Migrations
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Migrations
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The set of migrations that should be applied to furniture objects of this type when loaded from disk.
  example: []
  syntax:
    content: public List<Migration<Furniture>> Migrations
    return:
      type: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Objects.Furniture}}
    content.vb: Public Migrations As List(Of Migration(Of Furniture))
- uid: TinyLife.Objects.FurnitureType.TypeSettings.#ctor(System.String,Microsoft.Xna.Framework.Point,TinyLife.Objects.ObjectCategory,System.Single,TinyLife.Utilities.ColorScheme[])
  commentId: M:TinyLife.Objects.FurnitureType.TypeSettings.#ctor(System.String,Microsoft.Xna.Framework.Point,TinyLife.Objects.ObjectCategory,System.Single,TinyLife.Utilities.ColorScheme[])
  id: '#ctor(System.String,Microsoft.Xna.Framework.Point,TinyLife.Objects.ObjectCategory,System.Single,TinyLife.Utilities.ColorScheme[])'
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: TypeSettings(string, Point, ObjectCategory, float, params ColorScheme[])
  nameWithType: FurnitureType.TypeSettings.TypeSettings(string, Point, ObjectCategory, float, params ColorScheme[])
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.TypeSettings(string, Microsoft.Xna.Framework.Point, TinyLife.Objects.ObjectCategory, float, params TinyLife.Utilities.ColorScheme[])
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Initializes a new <xref href="TinyLife.Objects.FurnitureType.TypeSettings" data-throw-if-not-resolved="false"></xref> instance with the given data
  example: []
  syntax:
    content: public TypeSettings(string name, Point size, ObjectCategory categories, float price, params ColorScheme[] colorSchemes)
    parameters:
    - id: name
      type: System.String
      description: The name that this furniture type should have
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size that this furniture type should have
    - id: categories
      type: TinyLife.Objects.ObjectCategory
      description: The categories that this furniture type should have
    - id: price
      type: System.Single
      description: The price of this furniture type
    - id: colorSchemes
      type: TinyLife.Utilities.ColorScheme[]
      description: The color schemes that this furniture type should have. Cannot be empty.
    content.vb: Public Sub New(name As String, size As Point, categories As ObjectCategory, price As Single, ParamArray colorSchemes As ColorScheme())
  overload: TinyLife.Objects.FurnitureType.TypeSettings.#ctor*
  nameWithType.vb: FurnitureType.TypeSettings.New(String, Point, ObjectCategory, Single, ParamArray ColorScheme())
  fullName.vb: TinyLife.Objects.FurnitureType.TypeSettings.New(String, Microsoft.Xna.Framework.Point, TinyLife.Objects.ObjectCategory, Single, ParamArray TinyLife.Utilities.ColorScheme())
  name.vb: New(String, Point, ObjectCategory, Single, ParamArray ColorScheme())
- uid: TinyLife.Objects.FurnitureType.TypeSettings.SetData``1(System.String,``0)
  commentId: M:TinyLife.Objects.FurnitureType.TypeSettings.SetData``1(System.String,``0)
  id: SetData``1(System.String,``0)
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: SetData<T>(string, T)
  nameWithType: FurnitureType.TypeSettings.SetData<T>(string, T)
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.SetData<T>(string, T)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Store a piece of generic data on this object.
  example: []
  syntax:
    content: public void SetData<T>(string key, T data)
    parameters:
    - id: key
      type: System.String
      description: The key to store the data by
    - id: data
      type: '{T}'
      description: The data to store in the object
    typeParameters:
    - id: T
    content.vb: Public Sub SetData(Of T)(key As String, data As T)
  overload: TinyLife.Objects.FurnitureType.TypeSettings.SetData*
  implements:
  - MLEM.Misc.IGenericDataHolder.SetData``1(System.String,{T})
  nameWithType.vb: FurnitureType.TypeSettings.SetData(Of T)(String, T)
  fullName.vb: TinyLife.Objects.FurnitureType.TypeSettings.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
- uid: TinyLife.Objects.FurnitureType.TypeSettings.GetData``1(System.String)
  commentId: M:TinyLife.Objects.FurnitureType.TypeSettings.GetData``1(System.String)
  id: GetData``1(System.String)
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: GetData<T>(string)
  nameWithType: FurnitureType.TypeSettings.GetData<T>(string)
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.GetData<T>(string)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns a piece of generic data of the given type on this object.
  example: []
  syntax:
    content: public readonly T GetData<T>(string key)
    parameters:
    - id: key
      type: System.String
      description: The key that the data is stored by
    typeParameters:
    - id: T
      description: The type of the data stored
    return:
      type: '{T}'
      description: The data, or default if it doesn't exist
    content.vb: Public Function GetData(Of T)(key As String) As T
  overload: TinyLife.Objects.FurnitureType.TypeSettings.GetData*
  implements:
  - MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
  nameWithType.vb: FurnitureType.TypeSettings.GetData(Of T)(String)
  fullName.vb: TinyLife.Objects.FurnitureType.TypeSettings.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
- uid: TinyLife.Objects.FurnitureType.TypeSettings.GetDataKeys
  commentId: M:TinyLife.Objects.FurnitureType.TypeSettings.GetDataKeys
  id: GetDataKeys
  parent: TinyLife.Objects.FurnitureType.TypeSettings
  langs:
  - csharp
  - vb
  name: GetDataKeys()
  nameWithType: FurnitureType.TypeSettings.GetDataKeys()
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.GetDataKeys()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns all of the generic data that this object stores.
  example: []
  syntax:
    content: public readonly IEnumerable<string> GetDataKeys()
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The generic data on this object
    content.vb: Public Function GetDataKeys() As IEnumerable(Of String)
  overload: TinyLife.Objects.FurnitureType.TypeSettings.GetDataKeys*
  implements:
  - MLEM.Misc.IGenericDataHolder.GetDataKeys
references:
- uid: TinyLife.Objects.FurnitureType
  commentId: T:TinyLife.Objects.FurnitureType
  parent: TinyLife.Objects
  href: TinyLife.Objects.FurnitureType.html
  name: FurnitureType
  nameWithType: FurnitureType
  fullName: TinyLife.Objects.FurnitureType
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.Objects.FurnitureType.TypeSettings.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<TypeSettings>(TypeSettings)
  nameWithType: Extensions.JsonCopy<FurnitureType.TypeSettings>(FurnitureType.TypeSettings)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.FurnitureType.TypeSettings>(TinyLife.Objects.FurnitureType.TypeSettings)
  nameWithType.vb: Extensions.JsonCopy(Of FurnitureType.TypeSettings)(FurnitureType.TypeSettings)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.FurnitureType.TypeSettings)(TinyLife.Objects.FurnitureType.TypeSettings)
  name.vb: JsonCopy(Of TypeSettings)(TypeSettings)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.FurnitureType.TypeSettings)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.FurnitureType.TypeSettings)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
  - name: )
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Objects.ObjectCategory
  commentId: T:TinyLife.Objects.ObjectCategory
  parent: TinyLife.Objects
  href: TinyLife.Objects.ObjectCategory.html
  name: ObjectCategory
  nameWithType: ObjectCategory
  fullName: TinyLife.Objects.ObjectCategory
- uid: TinyLife.Objects.ActionSpot
  commentId: T:TinyLife.Objects.ActionSpot
  parent: TinyLife.Objects
  href: TinyLife.Objects.ActionSpot.html
  name: ActionSpot
  nameWithType: ActionSpot
  fullName: TinyLife.Objects.ActionSpot
- uid: TinyLife.Objects.ActionSpot[]
  isExternal: true
  href: TinyLife.Objects.ActionSpot.html
  name: ActionSpot[]
  nameWithType: ActionSpot[]
  fullName: TinyLife.Objects.ActionSpot[]
  nameWithType.vb: ActionSpot()
  fullName.vb: TinyLife.Objects.ActionSpot()
  name.vb: ActionSpot()
  spec.csharp:
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: (
  - name: )
- uid: TinyLife.Objects.ObjectSpot
  commentId: T:TinyLife.Objects.ObjectSpot
  parent: TinyLife.Objects
  href: TinyLife.Objects.ObjectSpot.html
  name: ObjectSpot
  nameWithType: ObjectSpot
  fullName: TinyLife.Objects.ObjectSpot
- uid: TinyLife.Objects.ObjectSpot[]
  isExternal: true
  href: TinyLife.Objects.ObjectSpot.html
  name: ObjectSpot[]
  nameWithType: ObjectSpot[]
  fullName: TinyLife.Objects.ObjectSpot[]
  nameWithType.vb: ObjectSpot()
  fullName.vb: TinyLife.Objects.ObjectSpot()
  name.vb: ObjectSpot()
  spec.csharp:
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: (
  - name: )
- uid: TinyLife.Utilities.ColorSettings
  commentId: T:TinyLife.Utilities.ColorSettings
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.ColorSettings.html
  name: ColorSettings
  nameWithType: ColorSettings
  fullName: TinyLife.Utilities.ColorSettings
- uid: TinyLife.Tools.FurnitureTool
  commentId: T:TinyLife.Tools.FurnitureTool
  parent: TinyLife.Tools
  href: TinyLife.Tools.FurnitureTool.html
  name: FurnitureTool
  nameWithType: FurnitureTool
  fullName: TinyLife.Tools.FurnitureTool
- uid: MLEM.Maths.Direction2.Up
  commentId: F:MLEM.Maths.Direction2.Up
  isExternal: true
  name: Up
  nameWithType: Direction2.Up
  fullName: MLEM.Maths.Direction2.Up
- uid: MLEM.Maths.Direction2
  commentId: T:MLEM.Maths.Direction2
  parent: MLEM.Maths
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Maths.Direction2
- uid: TinyLife.Tools
  commentId: N:TinyLife.Tools
  href: TinyLife.html
  name: TinyLife.Tools
  nameWithType: TinyLife.Tools
  fullName: TinyLife.Tools
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Tools
    name: Tools
    href: TinyLife.Tools.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Tools
    name: Tools
    href: TinyLife.Tools.html
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  isExternal: true
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TinyLife.Objects.FurnitureType.Construct``1(System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Nullable{System.Guid})
  commentId: M:TinyLife.Objects.FurnitureType.Construct``1(System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Nullable{System.Guid})
  isExternal: true
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Construct__1_System_Int32___TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Nullable_System_Guid__
  name: Construct<T>(int[], Map, Vector2, float, Guid?)
  nameWithType: FurnitureType.Construct<T>(int[], Map, Vector2, float, Guid?)
  fullName: TinyLife.Objects.FurnitureType.Construct<T>(int[], TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float, System.Guid?)
  nameWithType.vb: FurnitureType.Construct(Of T)(Integer(), Map, Vector2, Single, Guid?)
  fullName.vb: TinyLife.Objects.FurnitureType.Construct(Of T)(Integer(), TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single, System.Guid?)
  name.vb: Construct(Of T)(Integer(), Map, Vector2, Single, Guid?)
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType.Construct``1(System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Nullable{System.Guid})
    name: Construct
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Construct__1_System_Int32___TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Nullable_System_Guid__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType.Construct``1(System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Nullable{System.Guid})
    name: Construct
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Construct__1_System_Int32___TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Nullable_System_Guid__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  - name: )
- uid: TinyLife.Objects.Furniture.#ctor(System.Guid,TinyLife.Objects.FurnitureType,System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:TinyLife.Objects.Furniture.#ctor(System.Guid,TinyLife.Objects.FurnitureType,System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single)
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture__ctor_System_Guid_TinyLife_Objects_FurnitureType_System_Int32___TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_
  name: Furniture(Guid, FurnitureType, int[], Map, Vector2, float)
  nameWithType: Furniture.Furniture(Guid, FurnitureType, int[], Map, Vector2, float)
  fullName: TinyLife.Objects.Furniture.Furniture(System.Guid, TinyLife.Objects.FurnitureType, int[], TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float)
  nameWithType.vb: Furniture.New(Guid, FurnitureType, Integer(), Map, Vector2, Single)
  fullName.vb: TinyLife.Objects.Furniture.New(System.Guid, TinyLife.Objects.FurnitureType, Integer(), TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single)
  name.vb: New(Guid, FurnitureType, Integer(), Map, Vector2, Single)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.#ctor(System.Guid,TinyLife.Objects.FurnitureType,System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single)
    name: Furniture
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture__ctor_System_Guid_TinyLife_Objects_FurnitureType_System_Int32___TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - name: New
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects.FurnitureType.TypeSettings.BreakSettings
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.BreakSettings
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_BreakSettings
  name: BreakSettings
  nameWithType: FurnitureType.TypeSettings.BreakSettings
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.BreakSettings
- uid: TinyLife.Objects.IBreakableObject.Settings.Reliability
  commentId: F:TinyLife.Objects.IBreakableObject.Settings.Reliability
  href: TinyLife.Objects.IBreakableObject.Settings.html#TinyLife_Objects_IBreakableObject_Settings_Reliability
  name: Reliability
  nameWithType: IBreakableObject.Settings.Reliability
  fullName: TinyLife.Objects.IBreakableObject.Settings.Reliability
- uid: TinyLife.Objects.BreakableFurniture
  commentId: T:TinyLife.Objects.BreakableFurniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.BreakableFurniture.html
  name: BreakableFurniture
  nameWithType: BreakableFurniture
  fullName: TinyLife.Objects.BreakableFurniture
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Objects.FurnitureType.FoodPlate
  commentId: F:TinyLife.Objects.FurnitureType.FoodPlate
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_FoodPlate
  name: FoodPlate
  nameWithType: FurnitureType.FoodPlate
  fullName: TinyLife.Objects.FurnitureType.FoodPlate
- uid: TinyLife.Objects.FurnitureType.CustomPainting
  commentId: F:TinyLife.Objects.FurnitureType.CustomPainting
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_CustomPainting
  name: CustomPainting
  nameWithType: FurnitureType.CustomPainting
  fullName: TinyLife.Objects.FurnitureType.CustomPainting
- uid: System.Func{System.Action{TinyLife.Objects.Furniture}[]}
  commentId: T:System.Func{System.Action{TinyLife.Objects.Furniture}[]}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<Action<Furniture>[]>
  nameWithType: Func<Action<Furniture>[]>
  fullName: System.Func<System.Action<TinyLife.Objects.Furniture>[]>
  nameWithType.vb: Func(Of Action(Of Furniture)())
  fullName.vb: System.Func(Of System.Action(Of TinyLife.Objects.Furniture)())
  name.vb: Func(Of Action(Of Furniture)())
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: '>'
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
  - name: (
  - name: )
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.Pose.StandingArmsOut
  commentId: F:TinyLife.Objects.Pose.StandingArmsOut
  href: TinyLife.Objects.Pose.html#TinyLife_Objects_Pose_StandingArmsOut
  name: StandingArmsOut
  nameWithType: Pose.StandingArmsOut
  fullName: TinyLife.Objects.Pose.StandingArmsOut
- uid: TinyLife.Objects.Pose.WalkingArmsOut
  commentId: F:TinyLife.Objects.Pose.WalkingArmsOut
  href: TinyLife.Objects.Pose.html#TinyLife_Objects_Pose_WalkingArmsOut
  name: WalkingArmsOut
  nameWithType: Pose.WalkingArmsOut
  fullName: TinyLife.Objects.Pose.WalkingArmsOut
- uid: TinyLife.Objects.Pose.Standing
  commentId: F:TinyLife.Objects.Pose.Standing
  href: TinyLife.Objects.Pose.html#TinyLife_Objects_Pose_Standing
  name: Standing
  nameWithType: Pose.Standing
  fullName: TinyLife.Objects.Pose.Standing
- uid: TinyLife.Objects.Pose.Walking
  commentId: F:TinyLife.Objects.Pose.Walking
  href: TinyLife.Objects.Pose.html#TinyLife_Objects_Pose_Walking
  name: Walking
  nameWithType: Pose.Walking
  fullName: TinyLife.Objects.Pose.Walking
- uid: TinyLife.Emotions.EmotionModifier
  commentId: T:TinyLife.Emotions.EmotionModifier
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionModifier.html
  name: EmotionModifier
  nameWithType: EmotionModifier
  fullName: TinyLife.Emotions.EmotionModifier
- uid: System.Func{TinyLife.Objects.Furniture,System.Single}
  commentId: T:System.Func{TinyLife.Objects.Furniture,System.Single}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Furniture, float>
  nameWithType: Func<Furniture, float>
  fullName: System.Func<TinyLife.Objects.Furniture, float>
  nameWithType.vb: Func(Of Furniture, Single)
  fullName.vb: System.Func(Of TinyLife.Objects.Furniture, Single)
  name.vb: Func(Of Furniture, Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  href: TinyLife.html
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetEfficiencyModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Single_
  name: GetEfficiencyModifier(PersonLike, ActionInfo, bool, SkillType, float)
  nameWithType: Furniture.GetEfficiencyModifier(PersonLike, ActionInfo, bool, SkillType, float)
  fullName: TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.Skills.SkillType, float)
  nameWithType.vb: Furniture.GetEfficiencyModifier(PersonLike, ActionInfo, Boolean, SkillType, Single)
  fullName.vb: TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Skills.SkillType, Single)
  name.vb: GetEfficiencyModifier(PersonLike, ActionInfo, Boolean, SkillType, Single)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetEfficiencyModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Single_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetEfficiencyModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Single_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  commentId: M:TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetRestoreNeedModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_NeedType_
  name: GetRestoreNeedModifier(PersonLike, ActionInfo, bool, NeedType)
  nameWithType: Furniture.GetRestoreNeedModifier(PersonLike, ActionInfo, bool, NeedType)
  fullName: TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.NeedType)
  nameWithType.vb: Furniture.GetRestoreNeedModifier(PersonLike, ActionInfo, Boolean, NeedType)
  fullName.vb: TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.NeedType)
  name.vb: GetRestoreNeedModifier(PersonLike, ActionInfo, Boolean, NeedType)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
    name: GetRestoreNeedModifier
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetRestoreNeedModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_NeedType_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
    name: GetRestoreNeedModifier
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetRestoreNeedModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_NeedType_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: )
- uid: TinyLife.Objects.Visibility.WhenVisible
  commentId: F:TinyLife.Objects.Visibility.WhenVisible
  href: TinyLife.Objects.Visibility.html#TinyLife_Objects_Visibility_WhenVisible
  name: WhenVisible
  nameWithType: Visibility.WhenVisible
  fullName: TinyLife.Objects.Visibility.WhenVisible
- uid: TinyLife.Objects.Visibility
  commentId: T:TinyLife.Objects.Visibility
  parent: TinyLife.Objects
  href: TinyLife.Objects.Visibility.html
  name: Visibility
  nameWithType: Visibility
  fullName: TinyLife.Objects.Visibility
- uid: TinyLife.Utilities.Extensions.GetDefaultTab(TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Utilities.Extensions.GetDefaultTab(TinyLife.Objects.ObjectCategory)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetDefaultTab_TinyLife_Objects_ObjectCategory_
  name: GetDefaultTab(ObjectCategory)
  nameWithType: Extensions.GetDefaultTab(ObjectCategory)
  fullName: TinyLife.Utilities.Extensions.GetDefaultTab(TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetDefaultTab(TinyLife.Objects.ObjectCategory)
    name: GetDefaultTab
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetDefaultTab_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetDefaultTab(TinyLife.Objects.ObjectCategory)
    name: GetDefaultTab
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetDefaultTab_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Tools.FurnitureTool.Tab
  commentId: T:TinyLife.Tools.FurnitureTool.Tab
  parent: TinyLife.Tools
  href: TinyLife.Tools.FurnitureTool.html
  name: FurnitureTool.Tab
  nameWithType: FurnitureTool.Tab
  fullName: TinyLife.Tools.FurnitureTool.Tab
  spec.csharp:
  - uid: TinyLife.Tools.FurnitureTool
    name: FurnitureTool
    href: TinyLife.Tools.FurnitureTool.html
  - name: .
  - uid: TinyLife.Tools.FurnitureTool.Tab
    name: Tab
    href: TinyLife.Tools.FurnitureTool.Tab.html
  spec.vb:
  - uid: TinyLife.Tools.FurnitureTool
    name: FurnitureTool
    href: TinyLife.Tools.FurnitureTool.html
  - name: .
  - uid: TinyLife.Tools.FurnitureTool.Tab
    name: Tab
    href: TinyLife.Tools.FurnitureTool.Tab.html
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Name
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Name
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_Name
  name: Name
  nameWithType: FurnitureType.TypeSettings.Name
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Name
- uid: TinyLife.Objects.LightFurniture
  commentId: T:TinyLife.Objects.LightFurniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.LightFurniture.html
  name: LightFurniture
  nameWithType: LightFurniture
  fullName: TinyLife.Objects.LightFurniture
- uid: TinyLife.Objects.ILightObject
  commentId: T:TinyLife.Objects.ILightObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.ILightObject.html
  name: ILightObject
  nameWithType: ILightObject
  fullName: TinyLife.Objects.ILightObject
- uid: TinyLife.Objects.FurnitureType.TypeSettings.ConstructedType
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.ConstructedType
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_ConstructedType
  name: ConstructedType
  nameWithType: FurnitureType.TypeSettings.ConstructedType
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.ConstructedType
- uid: TinyLife.Objects.ILightObject.Settings
  commentId: T:TinyLife.Objects.ILightObject.Settings
  parent: TinyLife.Objects
  href: TinyLife.Objects.ILightObject.html
  name: ILightObject.Settings
  nameWithType: ILightObject.Settings
  fullName: TinyLife.Objects.ILightObject.Settings
  spec.csharp:
  - uid: TinyLife.Objects.ILightObject
    name: ILightObject
    href: TinyLife.Objects.ILightObject.html
  - name: .
  - uid: TinyLife.Objects.ILightObject.Settings
    name: Settings
    href: TinyLife.Objects.ILightObject.Settings.html
  spec.vb:
  - uid: TinyLife.Objects.ILightObject
    name: ILightObject
    href: TinyLife.Objects.ILightObject.html
  - name: .
  - uid: TinyLife.Objects.ILightObject.Settings
    name: Settings
    href: TinyLife.Objects.ILightObject.Settings.html
- uid: TinyLife.Objects.IBreakableObject
  commentId: T:TinyLife.Objects.IBreakableObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.IBreakableObject.html
  name: IBreakableObject
  nameWithType: IBreakableObject
  fullName: TinyLife.Objects.IBreakableObject
- uid: TinyLife.Objects.IBreakableObject.Settings
  commentId: T:TinyLife.Objects.IBreakableObject.Settings
  parent: TinyLife.Objects
  href: TinyLife.Objects.IBreakableObject.html
  name: IBreakableObject.Settings
  nameWithType: IBreakableObject.Settings
  fullName: TinyLife.Objects.IBreakableObject.Settings
  spec.csharp:
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: .
  - uid: TinyLife.Objects.IBreakableObject.Settings
    name: Settings
    href: TinyLife.Objects.IBreakableObject.Settings.html
  spec.vb:
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: .
  - uid: TinyLife.Objects.IBreakableObject.Settings
    name: Settings
    href: TinyLife.Objects.IBreakableObject.Settings.html
- uid: TinyLife.Objects.Furniture.Dirty
  commentId: P:TinyLife.Objects.Furniture.Dirty
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Dirty
  name: Dirty
  nameWithType: Furniture.Dirty
  fullName: TinyLife.Objects.Furniture.Dirty
- uid: TinyLife.Objects.FurnitureType.TypeSettings.TextureName
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.TextureName
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_TextureName
  name: TextureName
  nameWithType: FurnitureType.TypeSettings.TextureName
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.TextureName
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Colors
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Colors
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_Colors
  name: Colors
  nameWithType: FurnitureType.TypeSettings.Colors
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Colors
- uid: TinyLife.Utilities.ColorSettings.Map
  commentId: F:TinyLife.Utilities.ColorSettings.Map
  href: TinyLife.Utilities.ColorSettings.html#TinyLife_Utilities_ColorSettings_Map
  name: Map
  nameWithType: ColorSettings.Map
  fullName: TinyLife.Utilities.ColorSettings.Map
- uid: TinyLife.Utilities.Extensions.GetDefaultDirtyOverlayTextureName(TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Utilities.Extensions.GetDefaultDirtyOverlayTextureName(TinyLife.Objects.ObjectCategory)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetDefaultDirtyOverlayTextureName_TinyLife_Objects_ObjectCategory_
  name: GetDefaultDirtyOverlayTextureName(ObjectCategory)
  nameWithType: Extensions.GetDefaultDirtyOverlayTextureName(ObjectCategory)
  fullName: TinyLife.Utilities.Extensions.GetDefaultDirtyOverlayTextureName(TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetDefaultDirtyOverlayTextureName(TinyLife.Objects.ObjectCategory)
    name: GetDefaultDirtyOverlayTextureName
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetDefaultDirtyOverlayTextureName_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetDefaultDirtyOverlayTextureName(TinyLife.Objects.ObjectCategory)
    name: GetDefaultDirtyOverlayTextureName
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetDefaultDirtyOverlayTextureName_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Objects.Furniture.GetWallsInTheWay``1(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.Objects.WallLike})
  commentId: M:TinyLife.Objects.Furniture.GetWallsInTheWay``1(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.Objects.WallLike})
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetWallsInTheWay__1_Microsoft_Xna_Framework_Vector2_System_Single_MLEM_Maths_Direction2_System_Single_System_Collections_Generic_ICollection_TinyLife_Objects_WallLike__
  name: GetWallsInTheWay<T>(Vector2, float, Direction2, float, ICollection<WallLike>)
  nameWithType: Furniture.GetWallsInTheWay<T>(Vector2, float, Direction2, float, ICollection<WallLike>)
  fullName: TinyLife.Objects.Furniture.GetWallsInTheWay<T>(Microsoft.Xna.Framework.Vector2, float, MLEM.Maths.Direction2, float, System.Collections.Generic.ICollection<TinyLife.Objects.WallLike>)
  nameWithType.vb: Furniture.GetWallsInTheWay(Of T)(Vector2, Single, Direction2, Single, ICollection(Of WallLike))
  fullName.vb: TinyLife.Objects.Furniture.GetWallsInTheWay(Of T)(Microsoft.Xna.Framework.Vector2, Single, MLEM.Maths.Direction2, Single, System.Collections.Generic.ICollection(Of TinyLife.Objects.WallLike))
  name.vb: GetWallsInTheWay(Of T)(Vector2, Single, Direction2, Single, ICollection(Of WallLike))
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetWallsInTheWay``1(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.Objects.WallLike})
    name: GetWallsInTheWay
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetWallsInTheWay__1_Microsoft_Xna_Framework_Vector2_System_Single_MLEM_Maths_Direction2_System_Single_System_Collections_Generic_ICollection_TinyLife_Objects_WallLike__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: TinyLife.Objects.WallLike
    name: WallLike
    href: TinyLife.Objects.WallLike.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetWallsInTheWay``1(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.Objects.WallLike})
    name: GetWallsInTheWay
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetWallsInTheWay__1_Microsoft_Xna_Framework_Vector2_System_Single_MLEM_Maths_Direction2_System_Single_System_Collections_Generic_ICollection_TinyLife_Objects_WallLike__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.WallLike
    name: WallLike
    href: TinyLife.Objects.WallLike.html
  - name: )
  - name: )
- uid: TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2,System.Int32,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.World.Roof})
  commentId: M:TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2,System.Int32,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.World.Roof})
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetRoofingInTheWay_Microsoft_Xna_Framework_Vector2_System_Int32_MLEM_Maths_Direction2_System_Single_System_Collections_Generic_ICollection_TinyLife_World_Roof__
  name: GetRoofingInTheWay(Vector2, int, Direction2, float, ICollection<Roof>)
  nameWithType: Furniture.GetRoofingInTheWay(Vector2, int, Direction2, float, ICollection<Roof>)
  fullName: TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2, int, MLEM.Maths.Direction2, float, System.Collections.Generic.ICollection<TinyLife.World.Roof>)
  nameWithType.vb: Furniture.GetRoofingInTheWay(Vector2, Integer, Direction2, Single, ICollection(Of Roof))
  fullName.vb: TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2, Integer, MLEM.Maths.Direction2, Single, System.Collections.Generic.ICollection(Of TinyLife.World.Roof))
  name.vb: GetRoofingInTheWay(Vector2, Integer, Direction2, Single, ICollection(Of Roof))
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2,System.Int32,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.World.Roof})
    name: GetRoofingInTheWay
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetRoofingInTheWay_Microsoft_Xna_Framework_Vector2_System_Int32_MLEM_Maths_Direction2_System_Single_System_Collections_Generic_ICollection_TinyLife_World_Roof__
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: TinyLife.World.Roof
    name: Roof
    href: TinyLife.World.Roof.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2,System.Int32,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.World.Roof})
    name: GetRoofingInTheWay
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetRoofingInTheWay_Microsoft_Xna_Framework_Vector2_System_Int32_MLEM_Maths_Direction2_System_Single_System_Collections_Generic_ICollection_TinyLife_World_Roof__
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Roof
    name: Roof
    href: TinyLife.World.Roof.html
  - name: )
  - name: )
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Size
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Size
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_Size
  name: Size
  nameWithType: FurnitureType.TypeSettings.Size
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Size
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Objects.FurnitureType.TypeSettings.GetDisplayName
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.GetDisplayName
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_GetDisplayName
  name: GetDisplayName
  nameWithType: FurnitureType.TypeSettings.GetDisplayName
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.GetDisplayName
- uid: System.Func{System.String,TinyLife.Objects.Furniture,System.String}
  commentId: T:System.Func{System.String,TinyLife.Objects.Furniture,System.String}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<string, Furniture, string>
  nameWithType: Func<string, Furniture, string>
  fullName: System.Func<string, TinyLife.Objects.Furniture, string>
  nameWithType.vb: Func(Of String, Furniture, String)
  fullName.vb: System.Func(Of String, TinyLife.Objects.Furniture, String)
  name.vb: Func(Of String, Furniture, String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: System.Func{System.ValueTuple{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean},TinyLife.Actions.CanExecuteResult}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean},TinyLife.Actions.CanExecuteResult}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(ActionType Type, ActionInfo Info, bool Automatic, bool IsAuxiliary), CanExecuteResult>
  nameWithType: Func<(ActionType Type, ActionInfo Info, bool Automatic, bool IsAuxiliary), CanExecuteResult>
  fullName: System.Func<(TinyLife.Actions.ActionType Type, TinyLife.Actions.ActionInfo Info, bool Automatic, bool IsAuxiliary), TinyLife.Actions.CanExecuteResult>
  nameWithType.vb: Func(Of (Type As ActionType, Info As ActionInfo, Automatic As Boolean, IsAuxiliary As Boolean), CanExecuteResult)
  fullName.vb: System.Func(Of (Type As TinyLife.Actions.ActionType, Info As TinyLife.Actions.ActionInfo, Automatic As Boolean, IsAuxiliary As Boolean), TinyLife.Actions.CanExecuteResult)
  name.vb: Func(Of (Type As ActionType, Info As ActionInfo, Automatic As Boolean, IsAuxiliary As Boolean), CanExecuteResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actiontype,tinylife.actions.actioninfo,system.boolean,system.boolean-.type
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actiontype,tinylife.actions.actioninfo,system.boolean,system.boolean-.info
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actiontype,tinylife.actions.actioninfo,system.boolean,system.boolean-.automatic
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean}.IsAuxiliary
    name: IsAuxiliary
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actiontype,tinylife.actions.actioninfo,system.boolean,system.boolean-.isauxiliary
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actiontype,tinylife.actions.actioninfo,system.boolean,system.boolean-.type
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actiontype,tinylife.actions.actioninfo,system.boolean,system.boolean-.info
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actiontype,tinylife.actions.actioninfo,system.boolean,system.boolean-.automatic
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean}.IsAuxiliary
    name: IsAuxiliary
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actiontype,tinylife.actions.actioninfo,system.boolean,system.boolean-.isauxiliary
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.Func{System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot},System.Boolean}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot},System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(Furniture Parent, ObjectSpot Spot), bool>
  nameWithType: Func<(Furniture Parent, ObjectSpot Spot), bool>
  fullName: System.Func<(TinyLife.Objects.Furniture Parent, TinyLife.Objects.ObjectSpot Spot), bool>
  nameWithType.vb: Func(Of (Parent As Furniture, Spot As ObjectSpot), Boolean)
  fullName.vb: System.Func(Of (Parent As TinyLife.Objects.Furniture, Spot As TinyLife.Objects.ObjectSpot), Boolean)
  name.vb: Func(Of (Parent As Furniture, Spot As ObjectSpot), Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot}.Parent
    name: Parent
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.furniture,tinylife.objects.objectspot-.parent
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot}.Spot
    name: Spot
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.furniture,tinylife.objects.objectspot-.spot
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot}.Parent
    name: Parent
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.furniture,tinylife.objects.objectspot-.parent
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot}.Spot
    name: Spot
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.furniture,tinylife.objects.objectspot-.spot
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDescription_System_Collections_Generic_List_System_String__System_Boolean_
  name: GetDescription(List<string>, bool)
  nameWithType: Furniture.GetDescription(List<string>, bool)
  fullName: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List<string>, bool)
  nameWithType.vb: Furniture.GetDescription(List(Of String), Boolean)
  fullName.vb: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List(Of String), Boolean)
  name.vb: GetDescription(List(Of String), Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
    name: GetDescription
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDescription_System_Collections_Generic_List_System_String__System_Boolean_
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
    name: GetDescription
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDescription_System_Collections_Generic_List_System_String__System_Boolean_
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action{System.Collections.Generic.List{System.String},System.Boolean}
  commentId: T:System.Action{System.Collections.Generic.List{System.String},System.Boolean}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<List<string>, bool>
  nameWithType: Action<List<string>, bool>
  fullName: System.Action<System.Collections.Generic.List<string>, bool>
  nameWithType.vb: Action(Of List(Of String), Boolean)
  fullName.vb: System.Action(Of System.Collections.Generic.List(Of String), Boolean)
  name.vb: Action(Of List(Of String), Boolean)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Objects.Furniture}}
  commentId: T:System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Objects.Furniture}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Migration<Furniture>>
  nameWithType: List<Migration<Furniture>>
  fullName: System.Collections.Generic.List<TinyLife.Utilities.Migration<TinyLife.Objects.Furniture>>
  nameWithType.vb: List(Of Migration(Of Furniture))
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Utilities.Migration(Of TinyLife.Objects.Furniture))
  name.vb: List(Of Migration(Of Furniture))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Objects.FurnitureType.TypeSettings
  commentId: T:TinyLife.Objects.FurnitureType.TypeSettings
  parent: TinyLife.Objects
  href: TinyLife.Objects.FurnitureType.html
  name: FurnitureType.TypeSettings
  nameWithType: FurnitureType.TypeSettings
  fullName: TinyLife.Objects.FurnitureType.TypeSettings
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: .
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: .
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
- uid: TinyLife.Objects.FurnitureType.TypeSettings.#ctor*
  commentId: Overload:TinyLife.Objects.FurnitureType.TypeSettings.#ctor
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings__ctor_System_String_Microsoft_Xna_Framework_Point_TinyLife_Objects_ObjectCategory_System_Single_TinyLife_Utilities_ColorScheme___
  name: TypeSettings
  nameWithType: FurnitureType.TypeSettings.TypeSettings
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.TypeSettings
  nameWithType.vb: FurnitureType.TypeSettings.New
  fullName.vb: TinyLife.Objects.FurnitureType.TypeSettings.New
  name.vb: New
- uid: TinyLife.Utilities.ColorScheme[]
  isExternal: true
  href: TinyLife.Utilities.ColorScheme.html
  name: ColorScheme[]
  nameWithType: ColorScheme[]
  fullName: TinyLife.Utilities.ColorScheme[]
  nameWithType.vb: ColorScheme()
  fullName.vb: TinyLife.Utilities.ColorScheme()
  name.vb: ColorScheme()
  spec.csharp:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    href: TinyLife.Utilities.ColorScheme.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    href: TinyLife.Utilities.ColorScheme.html
  - name: (
  - name: )
- uid: TinyLife.Objects.FurnitureType.TypeSettings.SetData*
  commentId: Overload:TinyLife.Objects.FurnitureType.TypeSettings.SetData
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_SetData__1_System_String___0_
  name: SetData
  nameWithType: FurnitureType.TypeSettings.SetData
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.SetData
- uid: MLEM.Misc.IGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Misc.IGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Misc.IGenericDataHolder
  definition: MLEM.Misc.IGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: IGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.IGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: IGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.IGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.IGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.IGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: MLEM.Misc.IGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.IGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: IGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.IGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: IGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.IGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.IGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.IGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TinyLife.Objects.FurnitureType.TypeSettings.GetData*
  commentId: Overload:TinyLife.Objects.FurnitureType.TypeSettings.GetData
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_GetData__1_System_String_
  name: GetData
  nameWithType: FurnitureType.TypeSettings.GetData
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.GetData
- uid: MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.IGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: IGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.IGenericDataHolder.GetData<T>(string)
  nameWithType.vb: IGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.IGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: TinyLife.Objects.FurnitureType.TypeSettings.GetDataKeys*
  commentId: Overload:TinyLife.Objects.FurnitureType.TypeSettings.GetDataKeys
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_GetDataKeys
  name: GetDataKeys
  nameWithType: FurnitureType.TypeSettings.GetDataKeys
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.GetDataKeys
- uid: MLEM.Misc.IGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.IGenericDataHolder.GetDataKeys
  parent: MLEM.Misc.IGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: IGenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.IGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.IGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.IGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
