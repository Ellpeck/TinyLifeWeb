### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.WalkAction.AStarWalk
  commentId: T:TinyLife.Actions.WalkAction.AStarWalk
  id: WalkAction.AStarWalk
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.WalkAction.AStarWalk.#ctor(TinyLife.Actions.Action)
  - TinyLife.Actions.WalkAction.AStarWalk.CollectNeighbors(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}})
  - TinyLife.Actions.WalkAction.AStarWalk.GetHeuristicDistance(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32})
  langs:
  - csharp
  - vb
  name: WalkAction.AStarWalk
  nameWithType: WalkAction.AStarWalk
  fullName: TinyLife.Actions.WalkAction.AStarWalk
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: The implementation of the A* algorithm for the <xref href="TinyLife.Actions.WalkAction" data-throw-if-not-resolved="false"></xref>, based on MLEM's generic <xref href="MLEM.Pathfinding.AStar%601" data-throw-if-not-resolved="false"></xref> implementation.
  example: []
  syntax:
    content: 'public class WalkAction.AStarWalk : AStar<(Point Pos, int Floor)>'
    content.vb: Public Class WalkAction.AStarWalk Inherits AStar(Of (Pos As Point, Floor As Integer))
  inheritance:
  - System.Object
  - MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  inheritedMembers:
  - MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultCostFunction
  - MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultCost
  - MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultMaxTries
  - MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultAdditionalNeighbors
  - MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.FindPath(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors)
  - MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.TryFindPath(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ICollection{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}},System.Collections.Generic.Stack{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}@,System.Single@,MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors)
  - MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetHeuristicDistance(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32})
  - MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectNeighbors(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}})
  - MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.LastTriesNeeded
  - MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.LastTimeNeeded
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.WalkAction.AStarWalk.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.WalkAction.AStarWalk.#ctor(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.WalkAction.AStarWalk.#ctor(TinyLife.Actions.Action)
  id: '#ctor(TinyLife.Actions.Action)'
  parent: TinyLife.Actions.WalkAction.AStarWalk
  langs:
  - csharp
  - vb
  name: AStarWalk(Action)
  nameWithType: WalkAction.AStarWalk.AStarWalk(Action)
  fullName: TinyLife.Actions.WalkAction.AStarWalk.AStarWalk(TinyLife.Actions.Action)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Creates a new A* pathfinder for the given action.
  example: []
  syntax:
    content: public AStarWalk(Action action)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The underlying action, which determines the <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> who will be walking.
    content.vb: Public Sub New(action As Action)
  overload: TinyLife.Actions.WalkAction.AStarWalk.#ctor*
  nameWithType.vb: WalkAction.AStarWalk.New(Action)
  fullName.vb: TinyLife.Actions.WalkAction.AStarWalk.New(TinyLife.Actions.Action)
  name.vb: New(Action)
- uid: TinyLife.Actions.WalkAction.AStarWalk.GetHeuristicDistance(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32})
  commentId: M:TinyLife.Actions.WalkAction.AStarWalk.GetHeuristicDistance(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32})
  id: GetHeuristicDistance(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32})
  parent: TinyLife.Actions.WalkAction.AStarWalk
  langs:
  - csharp
  - vb
  name: GetHeuristicDistance((Point Pos, int Floor), (Point Pos, int Floor))
  nameWithType: WalkAction.AStarWalk.GetHeuristicDistance((Point Pos, int Floor), (Point Pos, int Floor))
  fullName: TinyLife.Actions.WalkAction.AStarWalk.GetHeuristicDistance((Microsoft.Xna.Framework.Point Pos, int Floor), (Microsoft.Xna.Framework.Point Pos, int Floor))
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    This method should implement a heuristic that determines the total distance between the given <code class="paramref">start</code> position and the given second position <code class="paramref">position</code>.

    Note that this is multiplied with the <xref href="MLEM.Pathfinding.AStar%601.DefaultCost" data-throw-if-not-resolved="false"></xref> automatically, so no costs need to be considered in this method's return value.
  example: []
  syntax:
    content: protected override float GetHeuristicDistance((Point Pos, int Floor) start, (Point Pos, int Floor) position)
    parameters:
    - id: start
      type: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}
      description: The start position.
    - id: position
      type: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}
      description: The position to get the distance to.
    return:
      type: System.Single
      description: The total distance between the two positions.
    content.vb: Protected Overrides Function GetHeuristicDistance(start As (Pos As Point, Floor As Integer), position As (Pos As Point, Floor As Integer)) As Single
  overridden: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetHeuristicDistance(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32})
  overload: TinyLife.Actions.WalkAction.AStarWalk.GetHeuristicDistance*
  nameWithType.vb: WalkAction.AStarWalk.GetHeuristicDistance((Pos As Point, Floor As Integer), (Pos As Point, Floor As Integer))
  fullName.vb: TinyLife.Actions.WalkAction.AStarWalk.GetHeuristicDistance((Pos As Microsoft.Xna.Framework.Point, Floor As Integer), (Pos As Microsoft.Xna.Framework.Point, Floor As Integer))
  name.vb: GetHeuristicDistance((Pos As Point, Floor As Integer), (Pos As Point, Floor As Integer))
- uid: TinyLife.Actions.WalkAction.AStarWalk.CollectNeighbors(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}})
  commentId: M:TinyLife.Actions.WalkAction.AStarWalk.CollectNeighbors(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}})
  id: CollectNeighbors(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}})
  parent: TinyLife.Actions.WalkAction.AStarWalk
  langs:
  - csharp
  - vb
  name: CollectNeighbors((Point Pos, int Floor), ISet<(Point Pos, int Floor)>)
  nameWithType: WalkAction.AStarWalk.CollectNeighbors((Point Pos, int Floor), ISet<(Point Pos, int Floor)>)
  fullName: TinyLife.Actions.WalkAction.AStarWalk.CollectNeighbors((Microsoft.Xna.Framework.Point Pos, int Floor), System.Collections.Generic.ISet<(Microsoft.Xna.Framework.Point Pos, int Floor)>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: This method should populate a set of positions that are considered <code class="paramref">neighbors</code> to the given <code class="paramref">position</code>. For example, this method might return directly adjacent positions, diagonal positions, or faraway positions that can be teleported to.
  example: []
  syntax:
    content: protected override void CollectNeighbors((Point Pos, int Floor) position, ISet<(Point Pos, int Floor)> neighbors)
    parameters:
    - id: position
      type: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}
      description: The position whose neighbors to return.
    - id: neighbors
      type: System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
      description: The set to populate with neighbors.
    content.vb: Protected Overrides Sub CollectNeighbors(position As (Pos As Point, Floor As Integer), neighbors As ISet(Of (Pos As Point, Floor As Integer)))
  overridden: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectNeighbors(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}})
  overload: TinyLife.Actions.WalkAction.AStarWalk.CollectNeighbors*
  nameWithType.vb: WalkAction.AStarWalk.CollectNeighbors((Pos As Point, Floor As Integer), ISet(Of (Pos As Point, Floor As Integer)))
  fullName.vb: TinyLife.Actions.WalkAction.AStarWalk.CollectNeighbors((Pos As Microsoft.Xna.Framework.Point, Floor As Integer), System.Collections.Generic.ISet(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)))
  name.vb: CollectNeighbors((Pos As Point, Floor As Integer), ISet(Of (Pos As Point, Floor As Integer)))
references:
- uid: TinyLife.Actions.WalkAction
  commentId: T:TinyLife.Actions.WalkAction
  href: TinyLife.Actions.WalkAction.html
  name: WalkAction
  nameWithType: WalkAction
  fullName: TinyLife.Actions.WalkAction
- uid: MLEM.Pathfinding.AStar`1
  commentId: T:MLEM.Pathfinding.AStar`1
  isExternal: true
  name: AStar<T>
  nameWithType: AStar<T>
  fullName: MLEM.Pathfinding.AStar<T>
  nameWithType.vb: AStar(Of T)
  fullName.vb: MLEM.Pathfinding.AStar(Of T)
  name.vb: AStar(Of T)
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar`1
    name: AStar
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: MLEM.Pathfinding.AStar`1
    name: AStar
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  commentId: T:MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  parent: MLEM.Pathfinding
  definition: MLEM.Pathfinding.AStar`1
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  name: AStar<(Point Pos, int Floor)>
  nameWithType: AStar<(Point Pos, int Floor)>
  fullName: MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>
  nameWithType.vb: AStar(Of (Pos As Point, Floor As Integer))
  fullName.vb: MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer))
  name.vb: AStar(Of (Pos As Point, Floor As Integer))
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar`1
    name: AStar
    isExternal: true
  - name: <
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  - name: '>'
  spec.vb:
  - uid: MLEM.Pathfinding.AStar`1
    name: AStar
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultCostFunction
  commentId: F:MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultCostFunction
  parent: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  definition: MLEM.Pathfinding.AStar`1.DefaultCostFunction
  name: DefaultCostFunction
  nameWithType: AStar<(Point Pos, int Floor)>.DefaultCostFunction
  fullName: MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.DefaultCostFunction
  nameWithType.vb: AStar(Of (Pos As Point, Floor As Integer)).DefaultCostFunction
  fullName.vb: MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).DefaultCostFunction
- uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultCost
  commentId: F:MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultCost
  parent: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  definition: MLEM.Pathfinding.AStar`1.DefaultCost
  name: DefaultCost
  nameWithType: AStar<(Point Pos, int Floor)>.DefaultCost
  fullName: MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.DefaultCost
  nameWithType.vb: AStar(Of (Pos As Point, Floor As Integer)).DefaultCost
  fullName.vb: MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).DefaultCost
- uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultMaxTries
  commentId: F:MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultMaxTries
  parent: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  definition: MLEM.Pathfinding.AStar`1.DefaultMaxTries
  name: DefaultMaxTries
  nameWithType: AStar<(Point Pos, int Floor)>.DefaultMaxTries
  fullName: MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.DefaultMaxTries
  nameWithType.vb: AStar(Of (Pos As Point, Floor As Integer)).DefaultMaxTries
  fullName.vb: MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).DefaultMaxTries
- uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultAdditionalNeighbors
  commentId: F:MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.DefaultAdditionalNeighbors
  parent: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  definition: MLEM.Pathfinding.AStar`1.DefaultAdditionalNeighbors
  name: DefaultAdditionalNeighbors
  nameWithType: AStar<(Point Pos, int Floor)>.DefaultAdditionalNeighbors
  fullName: MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.DefaultAdditionalNeighbors
  nameWithType.vb: AStar(Of (Pos As Point, Floor As Integer)).DefaultAdditionalNeighbors
  fullName.vb: MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).DefaultAdditionalNeighbors
- uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.FindPath(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors)
  commentId: M:MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.FindPath(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors)
  parent: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  definition: MLEM.Pathfinding.AStar`1.FindPath(`0,`0,MLEM.Pathfinding.AStar{`0}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{`0}.CollectAdditionalNeighbors)
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  name: FindPath((Point Pos, int Floor), (Point Pos, int Floor), GetCost, float?, int?, CollectAdditionalNeighbors)
  nameWithType: AStar<(Point Pos, int Floor)>.FindPath((Point Pos, int Floor), (Point Pos, int Floor), AStar<(Point Pos, int Floor)>.GetCost, float?, int?, AStar<(Point Pos, int Floor)>.CollectAdditionalNeighbors)
  fullName: MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.FindPath((Microsoft.Xna.Framework.Point Pos, int Floor), (Microsoft.Xna.Framework.Point Pos, int Floor), MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.GetCost, float?, int?, MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.CollectAdditionalNeighbors)
  nameWithType.vb: AStar(Of (Pos As Point, Floor As Integer)).FindPath((Pos As Point, Floor As Integer), (Pos As Point, Floor As Integer), AStar(Of (Pos As Point, Floor As Integer)).GetCost, Single?, Integer?, AStar(Of (Pos As Point, Floor As Integer)).CollectAdditionalNeighbors)
  fullName.vb: MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).FindPath((Pos As Microsoft.Xna.Framework.Point, Floor As Integer), (Pos As Microsoft.Xna.Framework.Point, Floor As Integer), MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).GetCost, Single?, Integer?, MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).CollectAdditionalNeighbors)
  name.vb: FindPath((Pos As Point, Floor As Integer), (Pos As Point, Floor As Integer), GetCost, Single?, Integer?, CollectAdditionalNeighbors)
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.FindPath(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors)
    name: FindPath
    isExternal: true
  - name: (
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  - name: ','
  - name: " "
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost
    name: GetCost
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors
    name: CollectAdditionalNeighbors
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.FindPath(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors)
    name: FindPath
    isExternal: true
  - name: (
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost
    name: GetCost
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors
    name: CollectAdditionalNeighbors
    isExternal: true
  - name: )
- uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.TryFindPath(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ICollection{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}},System.Collections.Generic.Stack{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}@,System.Single@,MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors)
  commentId: M:MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.TryFindPath(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ICollection{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}},System.Collections.Generic.Stack{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}@,System.Single@,MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors)
  parent: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  definition: MLEM.Pathfinding.AStar`1.TryFindPath(`0,System.Collections.Generic.ICollection{`0},System.Collections.Generic.Stack{`0}@,System.Single@,MLEM.Pathfinding.AStar{`0}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{`0}.CollectAdditionalNeighbors)
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  name: TryFindPath((Point Pos, int Floor), ICollection<(Point Pos, int Floor)>, out Stack<(Point Pos, int Floor)>, out float, GetCost, float?, int?, CollectAdditionalNeighbors)
  nameWithType: AStar<(Point Pos, int Floor)>.TryFindPath((Point Pos, int Floor), ICollection<(Point Pos, int Floor)>, out Stack<(Point Pos, int Floor)>, out float, AStar<(Point Pos, int Floor)>.GetCost, float?, int?, AStar<(Point Pos, int Floor)>.CollectAdditionalNeighbors)
  fullName: MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.TryFindPath((Microsoft.Xna.Framework.Point Pos, int Floor), System.Collections.Generic.ICollection<(Microsoft.Xna.Framework.Point Pos, int Floor)>, out System.Collections.Generic.Stack<(Microsoft.Xna.Framework.Point Pos, int Floor)>, out float, MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.GetCost, float?, int?, MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.CollectAdditionalNeighbors)
  nameWithType.vb: AStar(Of (Pos As Point, Floor As Integer)).TryFindPath((Pos As Point, Floor As Integer), ICollection(Of (Pos As Point, Floor As Integer)), Stack(Of (Pos As Point, Floor As Integer)), Single, AStar(Of (Pos As Point, Floor As Integer)).GetCost, Single?, Integer?, AStar(Of (Pos As Point, Floor As Integer)).CollectAdditionalNeighbors)
  fullName.vb: MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).TryFindPath((Pos As Microsoft.Xna.Framework.Point, Floor As Integer), System.Collections.Generic.ICollection(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)), System.Collections.Generic.Stack(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)), Single, MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).GetCost, Single?, Integer?, MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).CollectAdditionalNeighbors)
  name.vb: TryFindPath((Pos As Point, Floor As Integer), ICollection(Of (Pos As Point, Floor As Integer)), Stack(Of (Pos As Point, Floor As Integer)), Single, GetCost, Single?, Integer?, CollectAdditionalNeighbors)
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.TryFindPath(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ICollection{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}},System.Collections.Generic.Stack{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}@,System.Single@,MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors)
    name: TryFindPath
    isExternal: true
  - name: (
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: <
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost
    name: GetCost
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors
    name: CollectAdditionalNeighbors
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.TryFindPath(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ICollection{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}},System.Collections.Generic.Stack{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}@,System.Single@,MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors)
    name: TryFindPath
    isExternal: true
  - name: (
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetCost
    name: GetCost
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectAdditionalNeighbors
    name: CollectAdditionalNeighbors
    isExternal: true
  - name: )
- uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetHeuristicDistance(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32})
  commentId: M:MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetHeuristicDistance(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32})
  parent: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  definition: MLEM.Pathfinding.AStar`1.GetHeuristicDistance(`0,`0)
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  name: GetHeuristicDistance((Point Pos, int Floor), (Point Pos, int Floor))
  nameWithType: AStar<(Point Pos, int Floor)>.GetHeuristicDistance((Point Pos, int Floor), (Point Pos, int Floor))
  fullName: MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.GetHeuristicDistance((Microsoft.Xna.Framework.Point Pos, int Floor), (Microsoft.Xna.Framework.Point Pos, int Floor))
  nameWithType.vb: AStar(Of (Pos As Point, Floor As Integer)).GetHeuristicDistance((Pos As Point, Floor As Integer), (Pos As Point, Floor As Integer))
  fullName.vb: MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).GetHeuristicDistance((Pos As Microsoft.Xna.Framework.Point, Floor As Integer), (Pos As Microsoft.Xna.Framework.Point, Floor As Integer))
  name.vb: GetHeuristicDistance((Pos As Point, Floor As Integer), (Pos As Point, Floor As Integer))
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetHeuristicDistance(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32})
    name: GetHeuristicDistance
    isExternal: true
  - name: (
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  - name: ','
  - name: " "
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  - name: )
  spec.vb:
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.GetHeuristicDistance(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32})
    name: GetHeuristicDistance
    isExternal: true
  - name: (
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectNeighbors(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}})
  commentId: M:MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectNeighbors(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}})
  parent: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  definition: MLEM.Pathfinding.AStar`1.CollectNeighbors(`0,System.Collections.Generic.ISet{`0})
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  name: CollectNeighbors((Point Pos, int Floor), ISet<(Point Pos, int Floor)>)
  nameWithType: AStar<(Point Pos, int Floor)>.CollectNeighbors((Point Pos, int Floor), ISet<(Point Pos, int Floor)>)
  fullName: MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.CollectNeighbors((Microsoft.Xna.Framework.Point Pos, int Floor), System.Collections.Generic.ISet<(Microsoft.Xna.Framework.Point Pos, int Floor)>)
  nameWithType.vb: AStar(Of (Pos As Point, Floor As Integer)).CollectNeighbors((Pos As Point, Floor As Integer), ISet(Of (Pos As Point, Floor As Integer)))
  fullName.vb: MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).CollectNeighbors((Pos As Microsoft.Xna.Framework.Point, Floor As Integer), System.Collections.Generic.ISet(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)))
  name.vb: CollectNeighbors((Pos As Point, Floor As Integer), ISet(Of (Pos As Point, Floor As Integer)))
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectNeighbors(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}})
    name: CollectNeighbors
    isExternal: true
  - name: (
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.CollectNeighbors(System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32},System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}})
    name: CollectNeighbors
    isExternal: true
  - name: (
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
  - name: )
- uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.LastTriesNeeded
  commentId: P:MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.LastTriesNeeded
  parent: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  definition: MLEM.Pathfinding.AStar`1.LastTriesNeeded
  name: LastTriesNeeded
  nameWithType: AStar<(Point Pos, int Floor)>.LastTriesNeeded
  fullName: MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.LastTriesNeeded
  nameWithType.vb: AStar(Of (Pos As Point, Floor As Integer)).LastTriesNeeded
  fullName.vb: MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).LastTriesNeeded
- uid: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.LastTimeNeeded
  commentId: P:MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}.LastTimeNeeded
  parent: MLEM.Pathfinding.AStar{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  definition: MLEM.Pathfinding.AStar`1.LastTimeNeeded
  name: LastTimeNeeded
  nameWithType: AStar<(Point Pos, int Floor)>.LastTimeNeeded
  fullName: MLEM.Pathfinding.AStar<(Microsoft.Xna.Framework.Point Pos, int Floor)>.LastTimeNeeded
  nameWithType.vb: AStar(Of (Pos As Point, Floor As Integer)).LastTimeNeeded
  fullName.vb: MLEM.Pathfinding.AStar(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)).LastTimeNeeded
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Actions.WalkAction.AStarWalk.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<AStarWalk>(AStarWalk)
  nameWithType: Extensions.JsonCopy<WalkAction.AStarWalk>(WalkAction.AStarWalk)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.WalkAction.AStarWalk>(TinyLife.Actions.WalkAction.AStarWalk)
  nameWithType.vb: Extensions.JsonCopy(Of WalkAction.AStarWalk)(WalkAction.AStarWalk)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.WalkAction.AStarWalk)(TinyLife.Actions.WalkAction.AStarWalk)
  name.vb: JsonCopy(Of AStarWalk)(AStarWalk)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.WalkAction.AStarWalk)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Actions.WalkAction.AStarWalk
    name: AStarWalk
    href: TinyLife.Actions.WalkAction.AStarWalk.html
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.WalkAction.AStarWalk
    name: AStarWalk
    href: TinyLife.Actions.WalkAction.AStarWalk.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.WalkAction.AStarWalk)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.WalkAction.AStarWalk
    name: AStarWalk
    href: TinyLife.Actions.WalkAction.AStarWalk.html
  - name: )
  - name: (
  - uid: TinyLife.Actions.WalkAction.AStarWalk
    name: AStarWalk
    href: TinyLife.Actions.WalkAction.AStarWalk.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Pathfinding
  commentId: N:MLEM.Pathfinding
  isExternal: true
  name: MLEM.Pathfinding
  nameWithType: MLEM.Pathfinding
  fullName: MLEM.Pathfinding
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Pathfinding
    name: Pathfinding
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Pathfinding
    name: Pathfinding
    isExternal: true
- uid: MLEM.Pathfinding.AStar`1.DefaultCostFunction
  commentId: F:MLEM.Pathfinding.AStar`1.DefaultCostFunction
  isExternal: true
  name: DefaultCostFunction
  nameWithType: AStar<T>.DefaultCostFunction
  fullName: MLEM.Pathfinding.AStar<T>.DefaultCostFunction
  nameWithType.vb: AStar(Of T).DefaultCostFunction
  fullName.vb: MLEM.Pathfinding.AStar(Of T).DefaultCostFunction
- uid: MLEM.Pathfinding.AStar`1.DefaultCost
  commentId: F:MLEM.Pathfinding.AStar`1.DefaultCost
  isExternal: true
  name: DefaultCost
  nameWithType: AStar<T>.DefaultCost
  fullName: MLEM.Pathfinding.AStar<T>.DefaultCost
  nameWithType.vb: AStar(Of T).DefaultCost
  fullName.vb: MLEM.Pathfinding.AStar(Of T).DefaultCost
- uid: MLEM.Pathfinding.AStar`1.DefaultMaxTries
  commentId: F:MLEM.Pathfinding.AStar`1.DefaultMaxTries
  isExternal: true
  name: DefaultMaxTries
  nameWithType: AStar<T>.DefaultMaxTries
  fullName: MLEM.Pathfinding.AStar<T>.DefaultMaxTries
  nameWithType.vb: AStar(Of T).DefaultMaxTries
  fullName.vb: MLEM.Pathfinding.AStar(Of T).DefaultMaxTries
- uid: MLEM.Pathfinding.AStar`1.DefaultAdditionalNeighbors
  commentId: F:MLEM.Pathfinding.AStar`1.DefaultAdditionalNeighbors
  isExternal: true
  name: DefaultAdditionalNeighbors
  nameWithType: AStar<T>.DefaultAdditionalNeighbors
  fullName: MLEM.Pathfinding.AStar<T>.DefaultAdditionalNeighbors
  nameWithType.vb: AStar(Of T).DefaultAdditionalNeighbors
  fullName.vb: MLEM.Pathfinding.AStar(Of T).DefaultAdditionalNeighbors
- uid: MLEM.Pathfinding.AStar`1.FindPath(`0,`0,MLEM.Pathfinding.AStar{`0}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{`0}.CollectAdditionalNeighbors)
  commentId: M:MLEM.Pathfinding.AStar`1.FindPath(`0,`0,MLEM.Pathfinding.AStar{`0}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{`0}.CollectAdditionalNeighbors)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: FindPath(T, T, GetCost, float?, int?, CollectAdditionalNeighbors)
  nameWithType: AStar<T>.FindPath(T, T, AStar<T>.GetCost, float?, int?, AStar<T>.CollectAdditionalNeighbors)
  fullName: MLEM.Pathfinding.AStar<T>.FindPath(T, T, MLEM.Pathfinding.AStar<T>.GetCost, float?, int?, MLEM.Pathfinding.AStar<T>.CollectAdditionalNeighbors)
  nameWithType.vb: AStar(Of T).FindPath(T, T, AStar(Of T).GetCost, Single?, Integer?, AStar(Of T).CollectAdditionalNeighbors)
  fullName.vb: MLEM.Pathfinding.AStar(Of T).FindPath(T, T, MLEM.Pathfinding.AStar(Of T).GetCost, Single?, Integer?, MLEM.Pathfinding.AStar(Of T).CollectAdditionalNeighbors)
  name.vb: FindPath(T, T, GetCost, Single?, Integer?, CollectAdditionalNeighbors)
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar`1.FindPath(`0,`0,MLEM.Pathfinding.AStar{`0}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{`0}.CollectAdditionalNeighbors)
    name: FindPath
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar`1.GetCost
    name: GetCost
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar`1.CollectAdditionalNeighbors
    name: CollectAdditionalNeighbors
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Pathfinding.AStar`1.FindPath(`0,`0,MLEM.Pathfinding.AStar{`0}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{`0}.CollectAdditionalNeighbors)
    name: FindPath
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar`1.GetCost
    name: GetCost
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar`1.CollectAdditionalNeighbors
    name: CollectAdditionalNeighbors
    isExternal: true
  - name: )
- uid: MLEM.Pathfinding.AStar`1.TryFindPath(`0,System.Collections.Generic.ICollection{`0},System.Collections.Generic.Stack{`0}@,System.Single@,MLEM.Pathfinding.AStar{`0}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{`0}.CollectAdditionalNeighbors)
  commentId: M:MLEM.Pathfinding.AStar`1.TryFindPath(`0,System.Collections.Generic.ICollection{`0},System.Collections.Generic.Stack{`0}@,System.Single@,MLEM.Pathfinding.AStar{`0}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{`0}.CollectAdditionalNeighbors)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: TryFindPath(T, ICollection<T>, out Stack<T>, out float, GetCost, float?, int?, CollectAdditionalNeighbors)
  nameWithType: AStar<T>.TryFindPath(T, ICollection<T>, out Stack<T>, out float, AStar<T>.GetCost, float?, int?, AStar<T>.CollectAdditionalNeighbors)
  fullName: MLEM.Pathfinding.AStar<T>.TryFindPath(T, System.Collections.Generic.ICollection<T>, out System.Collections.Generic.Stack<T>, out float, MLEM.Pathfinding.AStar<T>.GetCost, float?, int?, MLEM.Pathfinding.AStar<T>.CollectAdditionalNeighbors)
  nameWithType.vb: AStar(Of T).TryFindPath(T, ICollection(Of T), Stack(Of T), Single, AStar(Of T).GetCost, Single?, Integer?, AStar(Of T).CollectAdditionalNeighbors)
  fullName.vb: MLEM.Pathfinding.AStar(Of T).TryFindPath(T, System.Collections.Generic.ICollection(Of T), System.Collections.Generic.Stack(Of T), Single, MLEM.Pathfinding.AStar(Of T).GetCost, Single?, Integer?, MLEM.Pathfinding.AStar(Of T).CollectAdditionalNeighbors)
  name.vb: TryFindPath(T, ICollection(Of T), Stack(Of T), Single, GetCost, Single?, Integer?, CollectAdditionalNeighbors)
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar`1.TryFindPath(`0,System.Collections.Generic.ICollection{`0},System.Collections.Generic.Stack{`0}@,System.Single@,MLEM.Pathfinding.AStar{`0}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{`0}.CollectAdditionalNeighbors)
    name: TryFindPath
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar`1.GetCost
    name: GetCost
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar`1.CollectAdditionalNeighbors
    name: CollectAdditionalNeighbors
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Pathfinding.AStar`1.TryFindPath(`0,System.Collections.Generic.ICollection{`0},System.Collections.Generic.Stack{`0}@,System.Single@,MLEM.Pathfinding.AStar{`0}.GetCost,System.Nullable{System.Single},System.Nullable{System.Int32},MLEM.Pathfinding.AStar{`0}.CollectAdditionalNeighbors)
    name: TryFindPath
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar`1.GetCost
    name: GetCost
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Pathfinding.AStar`1.CollectAdditionalNeighbors
    name: CollectAdditionalNeighbors
    isExternal: true
  - name: )
- uid: MLEM.Pathfinding.AStar`1.GetHeuristicDistance(`0,`0)
  commentId: M:MLEM.Pathfinding.AStar`1.GetHeuristicDistance(`0,`0)
  isExternal: true
  name: GetHeuristicDistance(T, T)
  nameWithType: AStar<T>.GetHeuristicDistance(T, T)
  fullName: MLEM.Pathfinding.AStar<T>.GetHeuristicDistance(T, T)
  nameWithType.vb: AStar(Of T).GetHeuristicDistance(T, T)
  fullName.vb: MLEM.Pathfinding.AStar(Of T).GetHeuristicDistance(T, T)
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar`1.GetHeuristicDistance(`0,`0)
    name: GetHeuristicDistance
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Pathfinding.AStar`1.GetHeuristicDistance(`0,`0)
    name: GetHeuristicDistance
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Pathfinding.AStar`1.CollectNeighbors(`0,System.Collections.Generic.ISet{`0})
  commentId: M:MLEM.Pathfinding.AStar`1.CollectNeighbors(`0,System.Collections.Generic.ISet{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: CollectNeighbors(T, ISet<T>)
  nameWithType: AStar<T>.CollectNeighbors(T, ISet<T>)
  fullName: MLEM.Pathfinding.AStar<T>.CollectNeighbors(T, System.Collections.Generic.ISet<T>)
  nameWithType.vb: AStar(Of T).CollectNeighbors(T, ISet(Of T))
  fullName.vb: MLEM.Pathfinding.AStar(Of T).CollectNeighbors(T, System.Collections.Generic.ISet(Of T))
  name.vb: CollectNeighbors(T, ISet(Of T))
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar`1.CollectNeighbors(`0,System.Collections.Generic.ISet{`0})
    name: CollectNeighbors
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Pathfinding.AStar`1.CollectNeighbors(`0,System.Collections.Generic.ISet{`0})
    name: CollectNeighbors
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: MLEM.Pathfinding.AStar`1.LastTriesNeeded
  commentId: P:MLEM.Pathfinding.AStar`1.LastTriesNeeded
  isExternal: true
  name: LastTriesNeeded
  nameWithType: AStar<T>.LastTriesNeeded
  fullName: MLEM.Pathfinding.AStar<T>.LastTriesNeeded
  nameWithType.vb: AStar(Of T).LastTriesNeeded
  fullName.vb: MLEM.Pathfinding.AStar(Of T).LastTriesNeeded
- uid: MLEM.Pathfinding.AStar`1.LastTimeNeeded
  commentId: P:MLEM.Pathfinding.AStar`1.LastTimeNeeded
  isExternal: true
  name: LastTimeNeeded
  nameWithType: AStar<T>.LastTimeNeeded
  fullName: MLEM.Pathfinding.AStar<T>.LastTimeNeeded
  nameWithType.vb: AStar(Of T).LastTimeNeeded
  fullName.vb: MLEM.Pathfinding.AStar(Of T).LastTimeNeeded
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Actions.WalkAction.AStarWalk.#ctor*
  commentId: Overload:TinyLife.Actions.WalkAction.AStarWalk.#ctor
  href: TinyLife.Actions.WalkAction.AStarWalk.html#TinyLife_Actions_WalkAction_AStarWalk__ctor_TinyLife_Actions_Action_
  name: AStarWalk
  nameWithType: WalkAction.AStarWalk.AStarWalk
  fullName: TinyLife.Actions.WalkAction.AStarWalk.AStarWalk
  nameWithType.vb: WalkAction.AStarWalk.New
  fullName.vb: TinyLife.Actions.WalkAction.AStarWalk.New
  name.vb: New
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Actions.WalkAction.AStarWalk.GetHeuristicDistance*
  commentId: Overload:TinyLife.Actions.WalkAction.AStarWalk.GetHeuristicDistance
  href: TinyLife.Actions.WalkAction.AStarWalk.html#TinyLife_Actions_WalkAction_AStarWalk_GetHeuristicDistance_System_ValueTuple_Microsoft_Xna_Framework_Point_System_Int32__System_ValueTuple_Microsoft_Xna_Framework_Point_System_Int32__
  name: GetHeuristicDistance
  nameWithType: WalkAction.AStarWalk.GetHeuristicDistance
  fullName: TinyLife.Actions.WalkAction.AStarWalk.GetHeuristicDistance
- uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}
  commentId: T:System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  name: (Point Pos, int Floor)
  nameWithType: (Point Pos, int Floor)
  fullName: (Microsoft.Xna.Framework.Point Pos, int Floor)
  nameWithType.vb: (Pos As Point, Floor As Integer)
  fullName.vb: (Pos As Microsoft.Xna.Framework.Point, Floor As Integer)
  name.vb: (Pos As Point, Floor As Integer)
  spec.csharp:
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Actions.WalkAction.AStarWalk.CollectNeighbors*
  commentId: Overload:TinyLife.Actions.WalkAction.AStarWalk.CollectNeighbors
  href: TinyLife.Actions.WalkAction.AStarWalk.html#TinyLife_Actions_WalkAction_AStarWalk_CollectNeighbors_System_ValueTuple_Microsoft_Xna_Framework_Point_System_Int32__System_Collections_Generic_ISet_System_ValueTuple_Microsoft_Xna_Framework_Point_System_Int32___
  name: CollectNeighbors
  nameWithType: WalkAction.AStarWalk.CollectNeighbors
  fullName: TinyLife.Actions.WalkAction.AStarWalk.CollectNeighbors
- uid: System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  commentId: T:System.Collections.Generic.ISet{System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<(Point Pos, int Floor)>
  nameWithType: ISet<(Point Pos, int Floor)>
  fullName: System.Collections.Generic.ISet<(Microsoft.Xna.Framework.Point Pos, int Floor)>
  nameWithType.vb: ISet(Of (Pos As Point, Floor As Integer))
  fullName.vb: System.Collections.Generic.ISet(Of (Pos As Microsoft.Xna.Framework.Point, Floor As Integer))
  name.vb: ISet(Of (Pos As Point, Floor As Integer))
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Point,System.Int32}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.point,system.int32-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
