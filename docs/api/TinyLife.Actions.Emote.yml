### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.Emote
  commentId: T:TinyLife.Actions.Emote
  id: Emote
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.Emote.Angry
  - TinyLife.Actions.Emote.Apple
  - TinyLife.Actions.Emote.Book
  - TinyLife.Actions.Emote.Bowling
  - TinyLife.Actions.Emote.BrokenHeart
  - TinyLife.Actions.Emote.Bug
  - TinyLife.Actions.Emote.Burger
  - TinyLife.Actions.Emote.Cake
  - TinyLife.Actions.Emote.Cane
  - TinyLife.Actions.Emote.Cat
  - TinyLife.Actions.Emote.Categories
  - TinyLife.Actions.Emote.Clock
  - TinyLife.Actions.Emote.Clothes
  - TinyLife.Actions.Emote.Coffee
  - TinyLife.Actions.Emote.Coins
  - TinyLife.Actions.Emote.Controller
  - TinyLife.Actions.Emote.Crying
  - TinyLife.Actions.Emote.Cutlery
  - TinyLife.Actions.Emote.Death
  - TinyLife.Actions.Emote.Dice
  - TinyLife.Actions.Emote.DramaMasks
  - TinyLife.Actions.Emote.Draw(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,TinyLife.Actions.EmoteBubbleType,TinyLife.Objects.ParentInfo)
  - TinyLife.Actions.Emote.EightBall
  - TinyLife.Actions.Emote.EmptyBattery
  - TinyLife.Actions.Emote.FireExtinguisher
  - TinyLife.Actions.Emote.FullBattery
  - TinyLife.Actions.Emote.GetEmotes(TinyLife.Actions.EmoteCategory,System.Boolean)
  - TinyLife.Actions.Emote.Gift
  - TinyLife.Actions.Emote.Handcuffs
  - TinyLife.Actions.Emote.Happy
  - TinyLife.Actions.Emote.Heart
  - TinyLife.Actions.Emote.House
  - TinyLife.Actions.Emote.LightBulb
  - TinyLife.Actions.Emote.Lollipop
  - TinyLife.Actions.Emote.Mean
  - TinyLife.Actions.Emote.Medal
  - TinyLife.Actions.Emote.Money
  - TinyLife.Actions.Emote.MovieClapper
  - TinyLife.Actions.Emote.MusicNote
  - TinyLife.Actions.Emote.Newspaper
  - TinyLife.Actions.Emote.NoBrain
  - TinyLife.Actions.Emote.NoChild
  - TinyLife.Actions.Emote.NoClothes
  - TinyLife.Actions.Emote.OhNo
  - TinyLife.Actions.Emote.Painting
  - TinyLife.Actions.Emote.Party
  - TinyLife.Actions.Emote.Path
  - TinyLife.Actions.Emote.Pillow
  - TinyLife.Actions.Emote.Potion
  - TinyLife.Actions.Emote.Pushpin
  - TinyLife.Actions.Emote.Register(MLEM.Textures.TextureRegion,TinyLife.Actions.EmoteCategory)
  - TinyLife.Actions.Emote.Relaxed
  - TinyLife.Actions.Emote.Revert
  - TinyLife.Actions.Emote.SchoolBus
  - TinyLife.Actions.Emote.Skateboard
  - TinyLife.Actions.Emote.Sleep
  - TinyLife.Actions.Emote.SmallShovel
  - TinyLife.Actions.Emote.Smile
  - TinyLife.Actions.Emote.Stonks
  - TinyLife.Actions.Emote.Sunglasses
  - TinyLife.Actions.Emote.Texture
  - TinyLife.Actions.Emote.Tick
  - TinyLife.Actions.Emote.Tree
  - TinyLife.Actions.Emote.Trophy
  - TinyLife.Actions.Emote.UpStairs
  - TinyLife.Actions.Emote.Upgrade
  - TinyLife.Actions.Emote.Workout
  - TinyLife.Actions.Emote.X
  langs:
  - csharp
  - vb
  name: Emote
  nameWithType: Emote
  fullName: TinyLife.Actions.Emote
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: An emote is a graphic that can be displayed in a bubble over a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>, usually as part of a conversation.
  example: []
  syntax:
    content: public class Emote
    content.vb: Public Class Emote
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.Emote.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.Emote.SchoolBus
  commentId: F:TinyLife.Actions.Emote.SchoolBus
  id: SchoolBus
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: SchoolBus
  nameWithType: Emote.SchoolBus
  fullName: TinyLife.Actions.Emote.SchoolBus
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote SchoolBus
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly SchoolBus As Emote
- uid: TinyLife.Actions.Emote.DramaMasks
  commentId: F:TinyLife.Actions.Emote.DramaMasks
  id: DramaMasks
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: DramaMasks
  nameWithType: Emote.DramaMasks
  fullName: TinyLife.Actions.Emote.DramaMasks
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote DramaMasks
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly DramaMasks As Emote
- uid: TinyLife.Actions.Emote.Cutlery
  commentId: F:TinyLife.Actions.Emote.Cutlery
  id: Cutlery
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Cutlery
  nameWithType: Emote.Cutlery
  fullName: TinyLife.Actions.Emote.Cutlery
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Cutlery
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Cutlery As Emote
- uid: TinyLife.Actions.Emote.Apple
  commentId: F:TinyLife.Actions.Emote.Apple
  id: Apple
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Apple
  nameWithType: Emote.Apple
  fullName: TinyLife.Actions.Emote.Apple
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Apple
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Apple As Emote
- uid: TinyLife.Actions.Emote.Burger
  commentId: F:TinyLife.Actions.Emote.Burger
  id: Burger
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Burger
  nameWithType: Emote.Burger
  fullName: TinyLife.Actions.Emote.Burger
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Burger
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Burger As Emote
- uid: TinyLife.Actions.Emote.Lollipop
  commentId: F:TinyLife.Actions.Emote.Lollipop
  id: Lollipop
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Lollipop
  nameWithType: Emote.Lollipop
  fullName: TinyLife.Actions.Emote.Lollipop
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Lollipop
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Lollipop As Emote
- uid: TinyLife.Actions.Emote.Skateboard
  commentId: F:TinyLife.Actions.Emote.Skateboard
  id: Skateboard
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Skateboard
  nameWithType: Emote.Skateboard
  fullName: TinyLife.Actions.Emote.Skateboard
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Skateboard
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Skateboard As Emote
- uid: TinyLife.Actions.Emote.Medal
  commentId: F:TinyLife.Actions.Emote.Medal
  id: Medal
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Medal
  nameWithType: Emote.Medal
  fullName: TinyLife.Actions.Emote.Medal
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Medal
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Medal As Emote
- uid: TinyLife.Actions.Emote.Upgrade
  commentId: F:TinyLife.Actions.Emote.Upgrade
  id: Upgrade
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Upgrade
  nameWithType: Emote.Upgrade
  fullName: TinyLife.Actions.Emote.Upgrade
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Upgrade
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Upgrade As Emote
- uid: TinyLife.Actions.Emote.Revert
  commentId: F:TinyLife.Actions.Emote.Revert
  id: Revert
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Revert
  nameWithType: Emote.Revert
  fullName: TinyLife.Actions.Emote.Revert
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Revert
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Revert As Emote
- uid: TinyLife.Actions.Emote.Sunglasses
  commentId: F:TinyLife.Actions.Emote.Sunglasses
  id: Sunglasses
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Sunglasses
  nameWithType: Emote.Sunglasses
  fullName: TinyLife.Actions.Emote.Sunglasses
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Sunglasses
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Sunglasses As Emote
- uid: TinyLife.Actions.Emote.Potion
  commentId: F:TinyLife.Actions.Emote.Potion
  id: Potion
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Potion
  nameWithType: Emote.Potion
  fullName: TinyLife.Actions.Emote.Potion
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Potion
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Potion As Emote
- uid: TinyLife.Actions.Emote.Pillow
  commentId: F:TinyLife.Actions.Emote.Pillow
  id: Pillow
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Pillow
  nameWithType: Emote.Pillow
  fullName: TinyLife.Actions.Emote.Pillow
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Pillow
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Pillow As Emote
- uid: TinyLife.Actions.Emote.Clothes
  commentId: F:TinyLife.Actions.Emote.Clothes
  id: Clothes
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Clothes
  nameWithType: Emote.Clothes
  fullName: TinyLife.Actions.Emote.Clothes
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Clothes
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Clothes As Emote
- uid: TinyLife.Actions.Emote.NoClothes
  commentId: F:TinyLife.Actions.Emote.NoClothes
  id: NoClothes
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: NoClothes
  nameWithType: Emote.NoClothes
  fullName: TinyLife.Actions.Emote.NoClothes
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote NoClothes
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly NoClothes As Emote
- uid: TinyLife.Actions.Emote.Controller
  commentId: F:TinyLife.Actions.Emote.Controller
  id: Controller
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Controller
  nameWithType: Emote.Controller
  fullName: TinyLife.Actions.Emote.Controller
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Controller
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Controller As Emote
- uid: TinyLife.Actions.Emote.MusicNote
  commentId: F:TinyLife.Actions.Emote.MusicNote
  id: MusicNote
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: MusicNote
  nameWithType: Emote.MusicNote
  fullName: TinyLife.Actions.Emote.MusicNote
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote MusicNote
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly MusicNote As Emote
- uid: TinyLife.Actions.Emote.Clock
  commentId: F:TinyLife.Actions.Emote.Clock
  id: Clock
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Clock
  nameWithType: Emote.Clock
  fullName: TinyLife.Actions.Emote.Clock
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Clock
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Clock As Emote
- uid: TinyLife.Actions.Emote.House
  commentId: F:TinyLife.Actions.Emote.House
  id: House
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: House
  nameWithType: Emote.House
  fullName: TinyLife.Actions.Emote.House
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote House
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly House As Emote
- uid: TinyLife.Actions.Emote.Path
  commentId: F:TinyLife.Actions.Emote.Path
  id: Path
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: Emote.Path
  fullName: TinyLife.Actions.Emote.Path
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Path
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Path As Emote
- uid: TinyLife.Actions.Emote.X
  commentId: F:TinyLife.Actions.Emote.X
  id: X
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Emote.X
  fullName: TinyLife.Actions.Emote.X
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote X
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly X As Emote
- uid: TinyLife.Actions.Emote.Heart
  commentId: F:TinyLife.Actions.Emote.Heart
  id: Heart
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Heart
  nameWithType: Emote.Heart
  fullName: TinyLife.Actions.Emote.Heart
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Heart
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Heart As Emote
- uid: TinyLife.Actions.Emote.Smile
  commentId: F:TinyLife.Actions.Emote.Smile
  id: Smile
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Smile
  nameWithType: Emote.Smile
  fullName: TinyLife.Actions.Emote.Smile
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Smile
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Smile As Emote
- uid: TinyLife.Actions.Emote.Sleep
  commentId: F:TinyLife.Actions.Emote.Sleep
  id: Sleep
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Sleep
  nameWithType: Emote.Sleep
  fullName: TinyLife.Actions.Emote.Sleep
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Sleep
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Sleep As Emote
- uid: TinyLife.Actions.Emote.OhNo
  commentId: F:TinyLife.Actions.Emote.OhNo
  id: OhNo
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: OhNo
  nameWithType: Emote.OhNo
  fullName: TinyLife.Actions.Emote.OhNo
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote OhNo
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly OhNo As Emote
- uid: TinyLife.Actions.Emote.Happy
  commentId: F:TinyLife.Actions.Emote.Happy
  id: Happy
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Happy
  nameWithType: Emote.Happy
  fullName: TinyLife.Actions.Emote.Happy
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Happy
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Happy As Emote
- uid: TinyLife.Actions.Emote.Handcuffs
  commentId: F:TinyLife.Actions.Emote.Handcuffs
  id: Handcuffs
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Handcuffs
  nameWithType: Emote.Handcuffs
  fullName: TinyLife.Actions.Emote.Handcuffs
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Handcuffs
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Handcuffs As Emote
- uid: TinyLife.Actions.Emote.BrokenHeart
  commentId: F:TinyLife.Actions.Emote.BrokenHeart
  id: BrokenHeart
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: BrokenHeart
  nameWithType: Emote.BrokenHeart
  fullName: TinyLife.Actions.Emote.BrokenHeart
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote BrokenHeart
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly BrokenHeart As Emote
- uid: TinyLife.Actions.Emote.Bowling
  commentId: F:TinyLife.Actions.Emote.Bowling
  id: Bowling
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Bowling
  nameWithType: Emote.Bowling
  fullName: TinyLife.Actions.Emote.Bowling
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Bowling
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Bowling As Emote
- uid: TinyLife.Actions.Emote.EightBall
  commentId: F:TinyLife.Actions.Emote.EightBall
  id: EightBall
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: EightBall
  nameWithType: Emote.EightBall
  fullName: TinyLife.Actions.Emote.EightBall
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote EightBall
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly EightBall As Emote
- uid: TinyLife.Actions.Emote.Dice
  commentId: F:TinyLife.Actions.Emote.Dice
  id: Dice
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Dice
  nameWithType: Emote.Dice
  fullName: TinyLife.Actions.Emote.Dice
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Dice
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Dice As Emote
- uid: TinyLife.Actions.Emote.MovieClapper
  commentId: F:TinyLife.Actions.Emote.MovieClapper
  id: MovieClapper
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: MovieClapper
  nameWithType: Emote.MovieClapper
  fullName: TinyLife.Actions.Emote.MovieClapper
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote MovieClapper
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly MovieClapper As Emote
- uid: TinyLife.Actions.Emote.Gift
  commentId: F:TinyLife.Actions.Emote.Gift
  id: Gift
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Gift
  nameWithType: Emote.Gift
  fullName: TinyLife.Actions.Emote.Gift
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Gift
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Gift As Emote
- uid: TinyLife.Actions.Emote.Pushpin
  commentId: F:TinyLife.Actions.Emote.Pushpin
  id: Pushpin
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Pushpin
  nameWithType: Emote.Pushpin
  fullName: TinyLife.Actions.Emote.Pushpin
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Pushpin
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Pushpin As Emote
- uid: TinyLife.Actions.Emote.Cake
  commentId: F:TinyLife.Actions.Emote.Cake
  id: Cake
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Cake
  nameWithType: Emote.Cake
  fullName: TinyLife.Actions.Emote.Cake
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Cake
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Cake As Emote
- uid: TinyLife.Actions.Emote.Trophy
  commentId: F:TinyLife.Actions.Emote.Trophy
  id: Trophy
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Trophy
  nameWithType: Emote.Trophy
  fullName: TinyLife.Actions.Emote.Trophy
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Trophy
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Trophy As Emote
- uid: TinyLife.Actions.Emote.EmptyBattery
  commentId: F:TinyLife.Actions.Emote.EmptyBattery
  id: EmptyBattery
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: EmptyBattery
  nameWithType: Emote.EmptyBattery
  fullName: TinyLife.Actions.Emote.EmptyBattery
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote EmptyBattery
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly EmptyBattery As Emote
- uid: TinyLife.Actions.Emote.Painting
  commentId: F:TinyLife.Actions.Emote.Painting
  id: Painting
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Painting
  nameWithType: Emote.Painting
  fullName: TinyLife.Actions.Emote.Painting
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Painting
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Painting As Emote
- uid: TinyLife.Actions.Emote.Cat
  commentId: F:TinyLife.Actions.Emote.Cat
  id: Cat
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Cat
  nameWithType: Emote.Cat
  fullName: TinyLife.Actions.Emote.Cat
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Cat
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Cat As Emote
- uid: TinyLife.Actions.Emote.FullBattery
  commentId: F:TinyLife.Actions.Emote.FullBattery
  id: FullBattery
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: FullBattery
  nameWithType: Emote.FullBattery
  fullName: TinyLife.Actions.Emote.FullBattery
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote FullBattery
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly FullBattery As Emote
- uid: TinyLife.Actions.Emote.Party
  commentId: F:TinyLife.Actions.Emote.Party
  id: Party
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Party
  nameWithType: Emote.Party
  fullName: TinyLife.Actions.Emote.Party
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Party
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Party As Emote
- uid: TinyLife.Actions.Emote.NoBrain
  commentId: F:TinyLife.Actions.Emote.NoBrain
  id: NoBrain
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: NoBrain
  nameWithType: Emote.NoBrain
  fullName: TinyLife.Actions.Emote.NoBrain
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote NoBrain
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly NoBrain As Emote
- uid: TinyLife.Actions.Emote.Angry
  commentId: F:TinyLife.Actions.Emote.Angry
  id: Angry
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Angry
  nameWithType: Emote.Angry
  fullName: TinyLife.Actions.Emote.Angry
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Angry
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Angry As Emote
- uid: TinyLife.Actions.Emote.Relaxed
  commentId: F:TinyLife.Actions.Emote.Relaxed
  id: Relaxed
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Relaxed
  nameWithType: Emote.Relaxed
  fullName: TinyLife.Actions.Emote.Relaxed
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Relaxed
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Relaxed As Emote
- uid: TinyLife.Actions.Emote.FireExtinguisher
  commentId: F:TinyLife.Actions.Emote.FireExtinguisher
  id: FireExtinguisher
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: FireExtinguisher
  nameWithType: Emote.FireExtinguisher
  fullName: TinyLife.Actions.Emote.FireExtinguisher
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote FireExtinguisher
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly FireExtinguisher As Emote
- uid: TinyLife.Actions.Emote.Stonks
  commentId: F:TinyLife.Actions.Emote.Stonks
  id: Stonks
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Stonks
  nameWithType: Emote.Stonks
  fullName: TinyLife.Actions.Emote.Stonks
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Stonks
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Stonks As Emote
- uid: TinyLife.Actions.Emote.Coffee
  commentId: F:TinyLife.Actions.Emote.Coffee
  id: Coffee
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Coffee
  nameWithType: Emote.Coffee
  fullName: TinyLife.Actions.Emote.Coffee
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Coffee
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Coffee As Emote
- uid: TinyLife.Actions.Emote.Workout
  commentId: F:TinyLife.Actions.Emote.Workout
  id: Workout
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Workout
  nameWithType: Emote.Workout
  fullName: TinyLife.Actions.Emote.Workout
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Workout
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Workout As Emote
- uid: TinyLife.Actions.Emote.Tick
  commentId: F:TinyLife.Actions.Emote.Tick
  id: Tick
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Tick
  nameWithType: Emote.Tick
  fullName: TinyLife.Actions.Emote.Tick
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Tick
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Tick As Emote
- uid: TinyLife.Actions.Emote.Bug
  commentId: F:TinyLife.Actions.Emote.Bug
  id: Bug
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Bug
  nameWithType: Emote.Bug
  fullName: TinyLife.Actions.Emote.Bug
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Bug
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Bug As Emote
- uid: TinyLife.Actions.Emote.Money
  commentId: F:TinyLife.Actions.Emote.Money
  id: Money
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Money
  nameWithType: Emote.Money
  fullName: TinyLife.Actions.Emote.Money
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Money
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Money As Emote
- uid: TinyLife.Actions.Emote.LightBulb
  commentId: F:TinyLife.Actions.Emote.LightBulb
  id: LightBulb
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: LightBulb
  nameWithType: Emote.LightBulb
  fullName: TinyLife.Actions.Emote.LightBulb
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote LightBulb
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly LightBulb As Emote
- uid: TinyLife.Actions.Emote.Cane
  commentId: F:TinyLife.Actions.Emote.Cane
  id: Cane
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Cane
  nameWithType: Emote.Cane
  fullName: TinyLife.Actions.Emote.Cane
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Cane
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Cane As Emote
- uid: TinyLife.Actions.Emote.Newspaper
  commentId: F:TinyLife.Actions.Emote.Newspaper
  id: Newspaper
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Newspaper
  nameWithType: Emote.Newspaper
  fullName: TinyLife.Actions.Emote.Newspaper
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Newspaper
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Newspaper As Emote
- uid: TinyLife.Actions.Emote.NoChild
  commentId: F:TinyLife.Actions.Emote.NoChild
  id: NoChild
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: NoChild
  nameWithType: Emote.NoChild
  fullName: TinyLife.Actions.Emote.NoChild
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote NoChild
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly NoChild As Emote
- uid: TinyLife.Actions.Emote.Coins
  commentId: F:TinyLife.Actions.Emote.Coins
  id: Coins
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Coins
  nameWithType: Emote.Coins
  fullName: TinyLife.Actions.Emote.Coins
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Coins
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Coins As Emote
- uid: TinyLife.Actions.Emote.SmallShovel
  commentId: F:TinyLife.Actions.Emote.SmallShovel
  id: SmallShovel
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: SmallShovel
  nameWithType: Emote.SmallShovel
  fullName: TinyLife.Actions.Emote.SmallShovel
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote SmallShovel
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly SmallShovel As Emote
- uid: TinyLife.Actions.Emote.Crying
  commentId: F:TinyLife.Actions.Emote.Crying
  id: Crying
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Crying
  nameWithType: Emote.Crying
  fullName: TinyLife.Actions.Emote.Crying
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Crying
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Crying As Emote
- uid: TinyLife.Actions.Emote.Book
  commentId: F:TinyLife.Actions.Emote.Book
  id: Book
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Book
  nameWithType: Emote.Book
  fullName: TinyLife.Actions.Emote.Book
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Book
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Book As Emote
- uid: TinyLife.Actions.Emote.Death
  commentId: F:TinyLife.Actions.Emote.Death
  id: Death
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Death
  nameWithType: Emote.Death
  fullName: TinyLife.Actions.Emote.Death
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Death
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Death As Emote
- uid: TinyLife.Actions.Emote.Tree
  commentId: F:TinyLife.Actions.Emote.Tree
  id: Tree
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Tree
  nameWithType: Emote.Tree
  fullName: TinyLife.Actions.Emote.Tree
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Tree
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Tree As Emote
- uid: TinyLife.Actions.Emote.UpStairs
  commentId: F:TinyLife.Actions.Emote.UpStairs
  id: UpStairs
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: UpStairs
  nameWithType: Emote.UpStairs
  fullName: TinyLife.Actions.Emote.UpStairs
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote UpStairs
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly UpStairs As Emote
- uid: TinyLife.Actions.Emote.Mean
  commentId: F:TinyLife.Actions.Emote.Mean
  id: Mean
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Mean
  nameWithType: Emote.Mean
  fullName: TinyLife.Actions.Emote.Mean
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly Emote Mean
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared ReadOnly Mean As Emote
- uid: TinyLife.Actions.Emote.Texture
  commentId: F:TinyLife.Actions.Emote.Texture
  id: Texture
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: Emote.Texture
  fullName: TinyLife.Actions.Emote.Texture
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: The texture that is displayed for this emote
  example: []
  syntax:
    content: public readonly TextureRegion Texture
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Texture As TextureRegion
- uid: TinyLife.Actions.Emote.Categories
  commentId: F:TinyLife.Actions.Emote.Categories
  id: Categories
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: Emote.Categories
  fullName: TinyLife.Actions.Emote.Categories
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: A combined <xref href="TinyLife.Actions.EmoteCategory" data-throw-if-not-resolved="false"></xref> flag that determines the categories that this emote belongs to
  example: []
  syntax:
    content: public readonly EmoteCategory Categories
    return:
      type: TinyLife.Actions.EmoteCategory
    content.vb: Public ReadOnly Categories As EmoteCategory
- uid: TinyLife.Actions.Emote.Draw(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,TinyLife.Actions.EmoteBubbleType,TinyLife.Objects.ParentInfo)
  commentId: M:TinyLife.Actions.Emote.Draw(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,TinyLife.Actions.EmoteBubbleType,TinyLife.Objects.ParentInfo)
  id: Draw(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,TinyLife.Actions.EmoteBubbleType,TinyLife.Objects.ParentInfo)
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Draw(Map, Vector2, float, SpriteBatch, Vector2, EmoteBubbleType, ParentInfo)
  nameWithType: Emote.Draw(Map, Vector2, float, SpriteBatch, Vector2, EmoteBubbleType, ParentInfo)
  fullName: TinyLife.Actions.Emote.Draw(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, TinyLife.Actions.EmoteBubbleType, TinyLife.Objects.ParentInfo)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Draws the emote.
  example: []
  syntax:
    content: public void Draw(Map map, Vector2 depthPos, float floor, SpriteBatch batch, Vector2 drawPos, EmoteBubbleType type, ParentInfo parent = default)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to draw on.
    - id: depthPos
      type: Microsoft.Xna.Framework.Vector2
      description: The depth position.
    - id: floor
      type: System.Single
      description: The floor to display the emote on.
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position, in draw space, to draw this emote's bottom center at.
    - id: type
      type: TinyLife.Actions.EmoteBubbleType
      description: The type of bubble to draw.
    - id: parent
      type: TinyLife.Objects.ParentInfo
      description: The emote holder's parent info.
    content.vb: Public Sub Draw(map As Map, depthPos As Vector2, floor As Single, batch As SpriteBatch, drawPos As Vector2, type As EmoteBubbleType, parent As ParentInfo = Nothing)
  overload: TinyLife.Actions.Emote.Draw*
  nameWithType.vb: Emote.Draw(Map, Vector2, Single, SpriteBatch, Vector2, EmoteBubbleType, ParentInfo)
  fullName.vb: TinyLife.Actions.Emote.Draw(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, TinyLife.Actions.EmoteBubbleType, TinyLife.Objects.ParentInfo)
  name.vb: Draw(Map, Vector2, Single, SpriteBatch, Vector2, EmoteBubbleType, ParentInfo)
- uid: TinyLife.Actions.Emote.GetEmotes(TinyLife.Actions.EmoteCategory,System.Boolean)
  commentId: M:TinyLife.Actions.Emote.GetEmotes(TinyLife.Actions.EmoteCategory,System.Boolean)
  id: GetEmotes(TinyLife.Actions.EmoteCategory,System.Boolean)
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: GetEmotes(EmoteCategory, bool)
  nameWithType: Emote.GetEmotes(EmoteCategory, bool)
  fullName: TinyLife.Actions.Emote.GetEmotes(TinyLife.Actions.EmoteCategory, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Returns a set of all of the emotes in the given combined category flag
  example: []
  syntax:
    content: public static IEnumerable<Emote> GetEmotes(EmoteCategory possibleCategories, bool matchAll)
    parameters:
    - id: possibleCategories
      type: TinyLife.Actions.EmoteCategory
      description: The categories
    - id: matchAll
      type: System.Boolean
      description: Whether all <code class="paramref">possibleCategories</code> flags should be matched using <xref href="DynamicEnums.EnumHelper.HasAllFlags%60%601(%60%600%2c%60%600)" data-throw-if-not-resolved="false"></xref>. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, any flags are matched using <xref href="DynamicEnums.EnumHelper.HasAnyFlags%60%601(%60%600%2c%60%600)" data-throw-if-not-resolved="false"></xref> instead.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.Emote}
      description: A set of all emotes that match the categories
    content.vb: Public Shared Function GetEmotes(possibleCategories As EmoteCategory, matchAll As Boolean) As IEnumerable(Of Emote)
  overload: TinyLife.Actions.Emote.GetEmotes*
  nameWithType.vb: Emote.GetEmotes(EmoteCategory, Boolean)
  fullName.vb: TinyLife.Actions.Emote.GetEmotes(TinyLife.Actions.EmoteCategory, Boolean)
  name.vb: GetEmotes(EmoteCategory, Boolean)
- uid: TinyLife.Actions.Emote.Register(MLEM.Textures.TextureRegion,TinyLife.Actions.EmoteCategory)
  commentId: M:TinyLife.Actions.Emote.Register(MLEM.Textures.TextureRegion,TinyLife.Actions.EmoteCategory)
  id: Register(MLEM.Textures.TextureRegion,TinyLife.Actions.EmoteCategory)
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Register(TextureRegion, EmoteCategory)
  nameWithType: Emote.Register(TextureRegion, EmoteCategory)
  fullName: TinyLife.Actions.Emote.Register(MLEM.Textures.TextureRegion, TinyLife.Actions.EmoteCategory)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Registers a new <xref href="TinyLife.Actions.Emote" data-throw-if-not-resolved="false"></xref> with the given settings.
  example: []
  syntax:
    content: public static Emote Register(TextureRegion texture, EmoteCategory categories)
    parameters:
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The texture that this emote should display.
    - id: categories
      type: TinyLife.Actions.EmoteCategory
      description: The categories that this emote should have. Can be a combined flag.
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared Function Register(texture As TextureRegion, categories As EmoteCategory) As Emote
  overload: TinyLife.Actions.Emote.Register*
references:
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Actions.Emote.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Emote>(Emote)
  nameWithType: Extensions.JsonCopy<Emote>(Emote)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Emote>(TinyLife.Actions.Emote)
  nameWithType.vb: Extensions.JsonCopy(Of Emote)(Emote)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Emote)(TinyLife.Actions.Emote)
  name.vb: JsonCopy(Of Emote)(Emote)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.Emote)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Actions.Emote
    name: Emote
    href: TinyLife.Actions.Emote.html
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.Emote
    name: Emote
    href: TinyLife.Actions.Emote.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.Emote)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Emote
    name: Emote
    href: TinyLife.Actions.Emote.html
  - name: )
  - name: (
  - uid: TinyLife.Actions.Emote
    name: Emote
    href: TinyLife.Actions.Emote.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Actions.Emote
  commentId: T:TinyLife.Actions.Emote
  parent: TinyLife.Actions
  href: TinyLife.Actions.Emote.html
  name: Emote
  nameWithType: Emote
  fullName: TinyLife.Actions.Emote
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.Actions.EmoteCategory
  commentId: T:TinyLife.Actions.EmoteCategory
  parent: TinyLife.Actions
  href: TinyLife.Actions.EmoteCategory.html
  name: EmoteCategory
  nameWithType: EmoteCategory
  fullName: TinyLife.Actions.EmoteCategory
- uid: TinyLife.Actions.Emote.Draw*
  commentId: Overload:TinyLife.Actions.Emote.Draw
  href: TinyLife.Actions.Emote.html#TinyLife_Actions_Emote_Draw_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Graphics_SpriteBatch_Microsoft_Xna_Framework_Vector2_TinyLife_Actions_EmoteBubbleType_TinyLife_Objects_ParentInfo_
  name: Draw
  nameWithType: Emote.Draw
  fullName: TinyLife.Actions.Emote.Draw
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: TinyLife.Actions.EmoteBubbleType
  commentId: T:TinyLife.Actions.EmoteBubbleType
  parent: TinyLife.Actions
  href: TinyLife.Actions.EmoteBubbleType.html
  name: EmoteBubbleType
  nameWithType: EmoteBubbleType
  fullName: TinyLife.Actions.EmoteBubbleType
- uid: TinyLife.Objects.ParentInfo
  commentId: T:TinyLife.Objects.ParentInfo
  parent: TinyLife.Objects
  href: TinyLife.Objects.ParentInfo.html
  name: ParentInfo
  nameWithType: ParentInfo
  fullName: TinyLife.Objects.ParentInfo
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: DynamicEnums.EnumHelper.HasAllFlags``1(``0,``0)
  commentId: M:DynamicEnums.EnumHelper.HasAllFlags``1(``0,``0)
  isExternal: true
  name: HasAllFlags<T>(T, T)
  nameWithType: EnumHelper.HasAllFlags<T>(T, T)
  fullName: DynamicEnums.EnumHelper.HasAllFlags<T>(T, T)
  nameWithType.vb: EnumHelper.HasAllFlags(Of T)(T, T)
  fullName.vb: DynamicEnums.EnumHelper.HasAllFlags(Of T)(T, T)
  name.vb: HasAllFlags(Of T)(T, T)
  spec.csharp:
  - uid: DynamicEnums.EnumHelper.HasAllFlags``1(``0,``0)
    name: HasAllFlags
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: DynamicEnums.EnumHelper.HasAllFlags``1(``0,``0)
    name: HasAllFlags
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: DynamicEnums.EnumHelper.HasAnyFlags``1(``0,``0)
  commentId: M:DynamicEnums.EnumHelper.HasAnyFlags``1(``0,``0)
  isExternal: true
  name: HasAnyFlags<T>(T, T)
  nameWithType: EnumHelper.HasAnyFlags<T>(T, T)
  fullName: DynamicEnums.EnumHelper.HasAnyFlags<T>(T, T)
  nameWithType.vb: EnumHelper.HasAnyFlags(Of T)(T, T)
  fullName.vb: DynamicEnums.EnumHelper.HasAnyFlags(Of T)(T, T)
  name.vb: HasAnyFlags(Of T)(T, T)
  spec.csharp:
  - uid: DynamicEnums.EnumHelper.HasAnyFlags``1(``0,``0)
    name: HasAnyFlags
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: DynamicEnums.EnumHelper.HasAnyFlags``1(``0,``0)
    name: HasAnyFlags
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Actions.Emote.GetEmotes*
  commentId: Overload:TinyLife.Actions.Emote.GetEmotes
  href: TinyLife.Actions.Emote.html#TinyLife_Actions_Emote_GetEmotes_TinyLife_Actions_EmoteCategory_System_Boolean_
  name: GetEmotes
  nameWithType: Emote.GetEmotes
  fullName: TinyLife.Actions.Emote.GetEmotes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.Emote}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.Emote}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Emote>
  nameWithType: IEnumerable<Emote>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.Emote>
  nameWithType.vb: IEnumerable(Of Emote)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.Emote)
  name.vb: IEnumerable(Of Emote)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.Emote
    name: Emote
    href: TinyLife.Actions.Emote.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Emote
    name: Emote
    href: TinyLife.Actions.Emote.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Actions.Emote.Register*
  commentId: Overload:TinyLife.Actions.Emote.Register
  href: TinyLife.Actions.Emote.html#TinyLife_Actions_Emote_Register_MLEM_Textures_TextureRegion_TinyLife_Actions_EmoteCategory_
  name: Register
  nameWithType: Emote.Register
  fullName: TinyLife.Actions.Emote.Register
