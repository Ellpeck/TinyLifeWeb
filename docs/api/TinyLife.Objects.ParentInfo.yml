### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.ParentInfo
  commentId: T:TinyLife.Objects.ParentInfo
  id: ParentInfo
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.ParentInfo.#ctor(TinyLife.Objects.Furniture,TinyLife.Objects.AbstractSpot)
  - TinyLife.Objects.ParentInfo.#ctor(TinyLife.Objects.ParentInfo.AttachmentType)
  - TinyLife.Objects.ParentInfo.#ctor(TinyLife.Objects.PersonLike)
  - TinyLife.Objects.ParentInfo.#ctor(TinyLife.World.Roof)
  - TinyLife.Objects.ParentInfo.#ctor(TinyLife.World.Stairs)
  - TinyLife.Objects.ParentInfo.#ctor(TinyLife.World.Wall)
  - TinyLife.Objects.ParentInfo.GetDepthOffset(Microsoft.Xna.Framework.Vector2)
  - TinyLife.Objects.ParentInfo.GetDepthPos(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Boolean,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  - TinyLife.Objects.ParentInfo.GetDrawOffset(Microsoft.Xna.Framework.Vector2)
  - TinyLife.Objects.ParentInfo.GetRowColumnSize(Microsoft.Xna.Framework.Point)
  - TinyLife.Objects.ParentInfo.LayerDepth
  - TinyLife.Objects.ParentInfo.ShouldDraw
  - TinyLife.Objects.ParentInfo.Type
  langs:
  - csharp
  - vb
  name: ParentInfo
  nameWithType: ParentInfo
  fullName: TinyLife.Objects.ParentInfo
  type: Struct
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A parent info is a set of information used by <xref href="TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Object%2cMicrosoft.Xna.Framework.Vector2%2cMLEM.Textures.TextureRegion%2cMicrosoft.Xna.Framework.Color%2cMicrosoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Point%2cSystem.Collections.Generic.List%7bMLEM.Graphics.StaticSpriteBatch.Item%7d%2cSystem.Boolean%2cTinyLife.Objects.ParentInfo%2cSystem.Single%2cMicrosoft.Xna.Framework.Graphics.SpriteEffects%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> that allows for objects to be made to look like they're attached to another object.

    Currently, <xref href="TinyLife.Objects.ParentInfo" data-throw-if-not-resolved="false"></xref> supports <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.World.Wall" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.World.Roof" data-throw-if-not-resolved="false"></xref> parents.
  example: []
  syntax:
    content: public readonly struct ParentInfo
    content.vb: Public Structure ParentInfo
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - TinyLife.Objects.ParentInfo.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.ParentInfo.Type
  commentId: F:TinyLife.Objects.ParentInfo.Type
  id: Type
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ParentInfo.Type
  fullName: TinyLife.Objects.ParentInfo.Type
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The <xref href="TinyLife.Objects.ParentInfo.AttachmentType" data-throw-if-not-resolved="false"></xref> that this parent info exhibits, based on the constructor that was used to construct it.
  example: []
  syntax:
    content: public readonly ParentInfo.AttachmentType Type
    return:
      type: TinyLife.Objects.ParentInfo.AttachmentType
    content.vb: Public ReadOnly Type As ParentInfo.AttachmentType
- uid: TinyLife.Objects.ParentInfo.LayerDepth
  commentId: P:TinyLife.Objects.ParentInfo.LayerDepth
  id: LayerDepth
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: LayerDepth
  nameWithType: ParentInfo.LayerDepth
  fullName: TinyLife.Objects.ParentInfo.LayerDepth
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the layer depth that objects with this parent info should be displayed with.

    This results in objects in shelves and on tables being "squished" in terms of depth calculations so that higher shelf levels don't intersect.
  example: []
  syntax:
    content: public float LayerDepth { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LayerDepth As Single
  overload: TinyLife.Objects.ParentInfo.LayerDepth*
- uid: TinyLife.Objects.ParentInfo.ShouldDraw
  commentId: P:TinyLife.Objects.ParentInfo.ShouldDraw
  id: ShouldDraw
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: ShouldDraw
  nameWithType: ParentInfo.ShouldDraw
  fullName: TinyLife.Objects.ParentInfo.ShouldDraw
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Whether the object with this parent info should be drawn. This value is determined by the <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> that is holding the object.
  example: []
  syntax:
    content: public bool ShouldDraw { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ShouldDraw As Boolean
  overload: TinyLife.Objects.ParentInfo.ShouldDraw*
- uid: TinyLife.Objects.ParentInfo.#ctor(TinyLife.Objects.Furniture,TinyLife.Objects.AbstractSpot)
  commentId: M:TinyLife.Objects.ParentInfo.#ctor(TinyLife.Objects.Furniture,TinyLife.Objects.AbstractSpot)
  id: '#ctor(TinyLife.Objects.Furniture,TinyLife.Objects.AbstractSpot)'
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: ParentInfo(Furniture, AbstractSpot)
  nameWithType: ParentInfo.ParentInfo(Furniture, AbstractSpot)
  fullName: TinyLife.Objects.ParentInfo.ParentInfo(TinyLife.Objects.Furniture, TinyLife.Objects.AbstractSpot)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new parent info from the given parent.
  example: []
  syntax:
    content: public ParentInfo(Furniture furniture, AbstractSpot spot)
    parameters:
    - id: furniture
      type: TinyLife.Objects.Furniture
      description: The furniture to be attached to.
    - id: spot
      type: TinyLife.Objects.AbstractSpot
      description: The spot to be attached to.
    content.vb: Public Sub New(furniture As Furniture, spot As AbstractSpot)
  overload: TinyLife.Objects.ParentInfo.#ctor*
  nameWithType.vb: ParentInfo.New(Furniture, AbstractSpot)
  fullName.vb: TinyLife.Objects.ParentInfo.New(TinyLife.Objects.Furniture, TinyLife.Objects.AbstractSpot)
  name.vb: New(Furniture, AbstractSpot)
- uid: TinyLife.Objects.ParentInfo.#ctor(TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.Objects.ParentInfo.#ctor(TinyLife.Objects.PersonLike)
  id: '#ctor(TinyLife.Objects.PersonLike)'
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: ParentInfo(PersonLike)
  nameWithType: ParentInfo.ParentInfo(PersonLike)
  fullName: TinyLife.Objects.ParentInfo.ParentInfo(TinyLife.Objects.PersonLike)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new parent info from the given parent.
  example: []
  syntax:
    content: public ParentInfo(PersonLike holdingPerson)
    parameters:
    - id: holdingPerson
      type: TinyLife.Objects.PersonLike
      description: The person to be attached to.
    content.vb: Public Sub New(holdingPerson As PersonLike)
  overload: TinyLife.Objects.ParentInfo.#ctor*
  nameWithType.vb: ParentInfo.New(PersonLike)
  fullName.vb: TinyLife.Objects.ParentInfo.New(TinyLife.Objects.PersonLike)
  name.vb: New(PersonLike)
- uid: TinyLife.Objects.ParentInfo.#ctor(TinyLife.World.Wall)
  commentId: M:TinyLife.Objects.ParentInfo.#ctor(TinyLife.World.Wall)
  id: '#ctor(TinyLife.World.Wall)'
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: ParentInfo(Wall)
  nameWithType: ParentInfo.ParentInfo(Wall)
  fullName: TinyLife.Objects.ParentInfo.ParentInfo(TinyLife.World.Wall)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new parent info from the given parent.
  example: []
  syntax:
    content: public ParentInfo(Wall wall)
    parameters:
    - id: wall
      type: TinyLife.World.Wall
      description: The wall to be attached to.
    content.vb: Public Sub New(wall As Wall)
  overload: TinyLife.Objects.ParentInfo.#ctor*
  nameWithType.vb: ParentInfo.New(Wall)
  fullName.vb: TinyLife.Objects.ParentInfo.New(TinyLife.World.Wall)
  name.vb: New(Wall)
- uid: TinyLife.Objects.ParentInfo.#ctor(TinyLife.World.Roof)
  commentId: M:TinyLife.Objects.ParentInfo.#ctor(TinyLife.World.Roof)
  id: '#ctor(TinyLife.World.Roof)'
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: ParentInfo(Roof)
  nameWithType: ParentInfo.ParentInfo(Roof)
  fullName: TinyLife.Objects.ParentInfo.ParentInfo(TinyLife.World.Roof)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new parent info from the given parent.
  example: []
  syntax:
    content: public ParentInfo(Roof roof)
    parameters:
    - id: roof
      type: TinyLife.World.Roof
      description: The roof to be attached to.
    content.vb: Public Sub New(roof As Roof)
  overload: TinyLife.Objects.ParentInfo.#ctor*
  nameWithType.vb: ParentInfo.New(Roof)
  fullName.vb: TinyLife.Objects.ParentInfo.New(TinyLife.World.Roof)
  name.vb: New(Roof)
- uid: TinyLife.Objects.ParentInfo.#ctor(TinyLife.World.Stairs)
  commentId: M:TinyLife.Objects.ParentInfo.#ctor(TinyLife.World.Stairs)
  id: '#ctor(TinyLife.World.Stairs)'
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: ParentInfo(Stairs)
  nameWithType: ParentInfo.ParentInfo(Stairs)
  fullName: TinyLife.Objects.ParentInfo.ParentInfo(TinyLife.World.Stairs)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new parent info from the given parent.
  example: []
  syntax:
    content: public ParentInfo(Stairs stairs)
    parameters:
    - id: stairs
      type: TinyLife.World.Stairs
      description: The stairs to be attached to.
    content.vb: Public Sub New(stairs As Stairs)
  overload: TinyLife.Objects.ParentInfo.#ctor*
  nameWithType.vb: ParentInfo.New(Stairs)
  fullName.vb: TinyLife.Objects.ParentInfo.New(TinyLife.World.Stairs)
  name.vb: New(Stairs)
- uid: TinyLife.Objects.ParentInfo.#ctor(TinyLife.Objects.ParentInfo.AttachmentType)
  commentId: M:TinyLife.Objects.ParentInfo.#ctor(TinyLife.Objects.ParentInfo.AttachmentType)
  id: '#ctor(TinyLife.Objects.ParentInfo.AttachmentType)'
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: ParentInfo(AttachmentType)
  nameWithType: ParentInfo.ParentInfo(ParentInfo.AttachmentType)
  fullName: TinyLife.Objects.ParentInfo.ParentInfo(TinyLife.Objects.ParentInfo.AttachmentType)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Creates a new parent info from the given <xref href="TinyLife.Objects.ParentInfo.AttachmentType" data-throw-if-not-resolved="false"></xref>.

    This constructor can only be used for attachment types that don't require additional objects. Use the other constructors for those instead.
  example: []
  syntax:
    content: public ParentInfo(ParentInfo.AttachmentType type)
    parameters:
    - id: type
      type: TinyLife.Objects.ParentInfo.AttachmentType
      description: The attachment type.
    content.vb: Public Sub New(type As ParentInfo.AttachmentType)
  overload: TinyLife.Objects.ParentInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: If the given <code class="paramref">type</code> requires additional arguments and a different constructor should be used.
  nameWithType.vb: ParentInfo.New(ParentInfo.AttachmentType)
  fullName.vb: TinyLife.Objects.ParentInfo.New(TinyLife.Objects.ParentInfo.AttachmentType)
  name.vb: New(AttachmentType)
- uid: TinyLife.Objects.ParentInfo.GetDrawOffset(Microsoft.Xna.Framework.Vector2)
  commentId: M:TinyLife.Objects.ParentInfo.GetDrawOffset(Microsoft.Xna.Framework.Vector2)
  id: GetDrawOffset(Microsoft.Xna.Framework.Vector2)
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: GetDrawOffset(Vector2)
  nameWithType: ParentInfo.GetDrawOffset(Vector2)
  fullName: TinyLife.Objects.ParentInfo.GetDrawOffset(Microsoft.Xna.Framework.Vector2)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns the draw offset for an object that has this <xref href="TinyLife.Objects.ParentInfo" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Vector2 GetDrawOffset(Vector2 position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The object's position, which should be the same as the depth position passed to <xref href="TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Object%2cMicrosoft.Xna.Framework.Vector2%2cMLEM.Textures.TextureRegion%2cMicrosoft.Xna.Framework.Color%2cMicrosoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Point%2cSystem.Collections.Generic.List%7bMLEM.Graphics.StaticSpriteBatch.Item%7d%2cSystem.Boolean%2cTinyLife.Objects.ParentInfo%2cSystem.Single%2cMicrosoft.Xna.Framework.Graphics.SpriteEffects%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Vector2
      description: The draw offset.
    content.vb: Public Function GetDrawOffset(position As Vector2) As Vector2
  overload: TinyLife.Objects.ParentInfo.GetDrawOffset*
- uid: TinyLife.Objects.ParentInfo.GetDepthOffset(Microsoft.Xna.Framework.Vector2)
  commentId: M:TinyLife.Objects.ParentInfo.GetDepthOffset(Microsoft.Xna.Framework.Vector2)
  id: GetDepthOffset(Microsoft.Xna.Framework.Vector2)
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: GetDepthOffset(Vector2)
  nameWithType: ParentInfo.GetDepthOffset(Vector2)
  fullName: TinyLife.Objects.ParentInfo.GetDepthOffset(Microsoft.Xna.Framework.Vector2)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns the depth offset for an object that has this <xref href="TinyLife.Objects.ParentInfo" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float GetDepthOffset(Vector2 position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The object's position, which should be the same as the depth position passed to <xref href="TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Object%2cMicrosoft.Xna.Framework.Vector2%2cMLEM.Textures.TextureRegion%2cMicrosoft.Xna.Framework.Color%2cMicrosoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Point%2cSystem.Collections.Generic.List%7bMLEM.Graphics.StaticSpriteBatch.Item%7d%2cSystem.Boolean%2cTinyLife.Objects.ParentInfo%2cSystem.Single%2cMicrosoft.Xna.Framework.Graphics.SpriteEffects%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Single
      description: The depth offset.
    content.vb: Public Function GetDepthOffset(position As Vector2) As Single
  overload: TinyLife.Objects.ParentInfo.GetDepthOffset*
- uid: TinyLife.Objects.ParentInfo.GetDepthPos(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Boolean,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Objects.ParentInfo.GetDepthPos(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Boolean,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  id: GetDepthPos(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,System.Boolean,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: GetDepthPos(Map, Vector2, float, Point, Point, Point, Point, Point, bool, Point, Point)
  nameWithType: ParentInfo.GetDepthPos(Map, Vector2, float, Point, Point, Point, Point, Point, bool, Point, Point)
  fullName: TinyLife.Objects.ParentInfo.GetDepthPos(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, bool, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns the depth position, and depth floor, that an object with this parent info should be drawn at.
  example: []
  syntax:
    content: public (Vector2 Pos, float Floor) GetDepthPos(Map map, Vector2 position, float floor, Point size, Point drawCoords, Point widthHeightDrawn, Point firstRowColSize, Point textureSize, bool pivot, Point rowsColsDrawn, Point rowColSize)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map.
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position of the object with this parent info.
    - id: floor
      type: System.Single
      description: The floor that the object with this parent info is on.
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size of the object with this parent info.
    - id: drawCoords
      type: Microsoft.Xna.Framework.Point
      description: The draw position of the object with this parent info.
    - id: widthHeightDrawn
      type: Microsoft.Xna.Framework.Point
      description: The width and height of the object with this parent info that has already been drawn, out of <code class="paramref">textureSize</code>.
    - id: firstRowColSize
      type: Microsoft.Xna.Framework.Point
      description: The size that the first row and column of the object with this parent info has or had. This is included in <code class="paramref">widthHeightDrawn</code> if one column has already been drawn.
    - id: textureSize
      type: Microsoft.Xna.Framework.Point
      description: The texture size of the object with this parent info.
    - id: pivot
      type: System.Boolean
      description: Whether to draw the object with this parent info with a pivot in mind.
    - id: rowsColsDrawn
      type: Microsoft.Xna.Framework.Point
      description: The amount of rows and columns that have already been drawn of the object with this parent info.
    - id: rowColSize
      type: Microsoft.Xna.Framework.Point
      description: The size of the row and column that are currently being drawn, based on <xref href="TinyLife.Objects.ParentInfo.GetRowColumnSize(Microsoft.Xna.Framework.Point)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}
      description: The depth position and depth floor to draw an object with this parent info at.
    content.vb: Public Function GetDepthPos(map As Map, position As Vector2, floor As Single, size As Point, drawCoords As Point, widthHeightDrawn As Point, firstRowColSize As Point, textureSize As Point, pivot As Boolean, rowsColsDrawn As Point, rowColSize As Point) As (Pos As Vector2, Floor As Single)
  overload: TinyLife.Objects.ParentInfo.GetDepthPos*
  nameWithType.vb: ParentInfo.GetDepthPos(Map, Vector2, Single, Point, Point, Point, Point, Point, Boolean, Point, Point)
  fullName.vb: TinyLife.Objects.ParentInfo.GetDepthPos(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Boolean, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point)
  name.vb: GetDepthPos(Map, Vector2, Single, Point, Point, Point, Point, Point, Boolean, Point, Point)
- uid: TinyLife.Objects.ParentInfo.GetRowColumnSize(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Objects.ParentInfo.GetRowColumnSize(Microsoft.Xna.Framework.Point)
  id: GetRowColumnSize(Microsoft.Xna.Framework.Point)
  parent: TinyLife.Objects.ParentInfo
  langs:
  - csharp
  - vb
  name: GetRowColumnSize(Point)
  nameWithType: ParentInfo.GetRowColumnSize(Point)
  fullName: TinyLife.Objects.ParentInfo.GetRowColumnSize(Microsoft.Xna.Framework.Point)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the row and column sizes that an object with this parent info should be drawn at.

    For a coordinate that returns -1, the object should be drawn in its entirety, rather than with a specified row or column width.
  example: []
  syntax:
    content: public Point GetRowColumnSize(Point size)
    parameters:
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size of the object being drawn, in tiles.
    return:
      type: Microsoft.Xna.Framework.Point
      description: The row and column sizes that the object should be drawn with.
    content.vb: Public Function GetRowColumnSize(size As Point) As Point
  overload: TinyLife.Objects.ParentInfo.GetRowColumnSize*
references:
- uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Point_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Boolean_
  name: DrawColumns(Map, Vector2, float, object, Vector2, TextureRegion, Color, Vector2, Point, List<Item>, bool, ParentInfo, float, SpriteEffects, bool)
  nameWithType: MapObject.DrawColumns(Map, Vector2, float, object, Vector2, TextureRegion, Color, Vector2, Point, List<StaticSpriteBatch.Item>, bool, ParentInfo, float, SpriteEffects, bool)
  fullName: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float, object, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Point, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>, bool, TinyLife.Objects.ParentInfo, float, Microsoft.Xna.Framework.Graphics.SpriteEffects, bool)
  nameWithType.vb: MapObject.DrawColumns(Map, Vector2, Single, Object, Vector2, TextureRegion, Color, Vector2, Point, List(Of StaticSpriteBatch.Item), Boolean, ParentInfo, Single, SpriteEffects, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single, Object, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Point, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item), Boolean, TinyLife.Objects.ParentInfo, Single, Microsoft.Xna.Framework.Graphics.SpriteEffects, Boolean)
  name.vb: DrawColumns(Map, Vector2, Single, Object, Vector2, TextureRegion, Color, Vector2, Point, List(Of Item), Boolean, ParentInfo, Single, SpriteEffects, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
    name: DrawColumns
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Point_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Boolean_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
    name: DrawColumns
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Point_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Boolean_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.ParentInfo
  commentId: T:TinyLife.Objects.ParentInfo
  parent: TinyLife.Objects
  href: TinyLife.Objects.ParentInfo.html
  name: ParentInfo
  nameWithType: ParentInfo
  fullName: TinyLife.Objects.ParentInfo
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.World.Wall
  commentId: T:TinyLife.World.Wall
  parent: TinyLife.World
  href: TinyLife.World.Wall.html
  name: Wall
  nameWithType: Wall
  fullName: TinyLife.World.Wall
- uid: TinyLife.World.Roof
  commentId: T:TinyLife.World.Roof
  parent: TinyLife.World
  href: TinyLife.World.Roof.html
  name: Roof
  nameWithType: Roof
  fullName: TinyLife.World.Roof
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.Objects.ParentInfo.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<ParentInfo>(ParentInfo)
  nameWithType: Extensions.JsonCopy<ParentInfo>(ParentInfo)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.ParentInfo>(TinyLife.Objects.ParentInfo)
  nameWithType.vb: Extensions.JsonCopy(Of ParentInfo)(ParentInfo)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.ParentInfo)(TinyLife.Objects.ParentInfo)
  name.vb: JsonCopy(Of ParentInfo)(ParentInfo)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.ParentInfo)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.ParentInfo)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: )
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.ParentInfo.AttachmentType
  commentId: T:TinyLife.Objects.ParentInfo.AttachmentType
  parent: TinyLife.Objects
  href: TinyLife.Objects.ParentInfo.html
  name: ParentInfo.AttachmentType
  nameWithType: ParentInfo.AttachmentType
  fullName: TinyLife.Objects.ParentInfo.AttachmentType
  spec.csharp:
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: .
  - uid: TinyLife.Objects.ParentInfo.AttachmentType
    name: AttachmentType
    href: TinyLife.Objects.ParentInfo.AttachmentType.html
  spec.vb:
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: .
  - uid: TinyLife.Objects.ParentInfo.AttachmentType
    name: AttachmentType
    href: TinyLife.Objects.ParentInfo.AttachmentType.html
- uid: TinyLife.Objects.ParentInfo.LayerDepth*
  commentId: Overload:TinyLife.Objects.ParentInfo.LayerDepth
  href: TinyLife.Objects.ParentInfo.html#TinyLife_Objects_ParentInfo_LayerDepth
  name: LayerDepth
  nameWithType: ParentInfo.LayerDepth
  fullName: TinyLife.Objects.ParentInfo.LayerDepth
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Objects.ParentInfo.ShouldDraw*
  commentId: Overload:TinyLife.Objects.ParentInfo.ShouldDraw
  href: TinyLife.Objects.ParentInfo.html#TinyLife_Objects_ParentInfo_ShouldDraw
  name: ShouldDraw
  nameWithType: ParentInfo.ShouldDraw
  fullName: TinyLife.Objects.ParentInfo.ShouldDraw
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.ParentInfo.#ctor*
  commentId: Overload:TinyLife.Objects.ParentInfo.#ctor
  href: TinyLife.Objects.ParentInfo.html#TinyLife_Objects_ParentInfo__ctor_TinyLife_Objects_Furniture_TinyLife_Objects_AbstractSpot_
  name: ParentInfo
  nameWithType: ParentInfo.ParentInfo
  fullName: TinyLife.Objects.ParentInfo.ParentInfo
  nameWithType.vb: ParentInfo.New
  fullName.vb: TinyLife.Objects.ParentInfo.New
  name.vb: New
- uid: TinyLife.Objects.AbstractSpot
  commentId: T:TinyLife.Objects.AbstractSpot
  parent: TinyLife.Objects
  href: TinyLife.Objects.AbstractSpot.html
  name: AbstractSpot
  nameWithType: AbstractSpot
  fullName: TinyLife.Objects.AbstractSpot
- uid: TinyLife.World.Stairs
  commentId: T:TinyLife.World.Stairs
  parent: TinyLife.World
  href: TinyLife.World.Stairs.html
  name: Stairs
  nameWithType: Stairs
  fullName: TinyLife.World.Stairs
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: TinyLife.Objects.ParentInfo.GetDrawOffset*
  commentId: Overload:TinyLife.Objects.ParentInfo.GetDrawOffset
  href: TinyLife.Objects.ParentInfo.html#TinyLife_Objects_ParentInfo_GetDrawOffset_Microsoft_Xna_Framework_Vector2_
  name: GetDrawOffset
  nameWithType: ParentInfo.GetDrawOffset
  fullName: TinyLife.Objects.ParentInfo.GetDrawOffset
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Objects.ParentInfo.GetDepthOffset*
  commentId: Overload:TinyLife.Objects.ParentInfo.GetDepthOffset
  href: TinyLife.Objects.ParentInfo.html#TinyLife_Objects_ParentInfo_GetDepthOffset_Microsoft_Xna_Framework_Vector2_
  name: GetDepthOffset
  nameWithType: ParentInfo.GetDepthOffset
  fullName: TinyLife.Objects.ParentInfo.GetDepthOffset
- uid: TinyLife.Objects.ParentInfo.GetRowColumnSize(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Objects.ParentInfo.GetRowColumnSize(Microsoft.Xna.Framework.Point)
  isExternal: true
  href: TinyLife.Objects.ParentInfo.html#TinyLife_Objects_ParentInfo_GetRowColumnSize_Microsoft_Xna_Framework_Point_
  name: GetRowColumnSize(Point)
  nameWithType: ParentInfo.GetRowColumnSize(Point)
  fullName: TinyLife.Objects.ParentInfo.GetRowColumnSize(Microsoft.Xna.Framework.Point)
  spec.csharp:
  - uid: TinyLife.Objects.ParentInfo.GetRowColumnSize(Microsoft.Xna.Framework.Point)
    name: GetRowColumnSize
    href: TinyLife.Objects.ParentInfo.html#TinyLife_Objects_ParentInfo_GetRowColumnSize_Microsoft_Xna_Framework_Point_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.ParentInfo.GetRowColumnSize(Microsoft.Xna.Framework.Point)
    name: GetRowColumnSize
    href: TinyLife.Objects.ParentInfo.html#TinyLife_Objects_ParentInfo_GetRowColumnSize_Microsoft_Xna_Framework_Point_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: TinyLife.Objects.ParentInfo.GetDepthPos*
  commentId: Overload:TinyLife.Objects.ParentInfo.GetDepthPos
  href: TinyLife.Objects.ParentInfo.html#TinyLife_Objects_ParentInfo_GetDepthPos_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Point_Microsoft_Xna_Framework_Point_Microsoft_Xna_Framework_Point_Microsoft_Xna_Framework_Point_Microsoft_Xna_Framework_Point_System_Boolean_Microsoft_Xna_Framework_Point_Microsoft_Xna_Framework_Point_
  name: GetDepthPos
  nameWithType: ParentInfo.GetDepthPos
  fullName: TinyLife.Objects.ParentInfo.GetDepthPos
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}
  commentId: T:System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.vector2,system.single-.pos
  name: (Vector2 Pos, float Floor)
  nameWithType: (Vector2 Pos, float Floor)
  fullName: (Microsoft.Xna.Framework.Vector2 Pos, float Floor)
  nameWithType.vb: (Pos As Vector2, Floor As Single)
  fullName.vb: (Pos As Microsoft.Xna.Framework.Vector2, Floor As Single)
  name.vb: (Pos As Vector2, Floor As Single)
  spec.csharp:
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.vector2,system.single-.pos
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.vector2,system.single-.floor
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}.Pos
    name: Pos
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.vector2,system.single-.pos
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}.Floor
    name: Floor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.vector2,system.single-.floor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Objects.ParentInfo.GetRowColumnSize*
  commentId: Overload:TinyLife.Objects.ParentInfo.GetRowColumnSize
  href: TinyLife.Objects.ParentInfo.html#TinyLife_Objects_ParentInfo_GetRowColumnSize_Microsoft_Xna_Framework_Point_
  name: GetRowColumnSize
  nameWithType: ParentInfo.GetRowColumnSize
  fullName: TinyLife.Objects.ParentInfo.GetRowColumnSize
