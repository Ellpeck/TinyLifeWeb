### YamlMime:ManagedReference
items:
- uid: TinyLife.Need
  commentId: T:TinyLife.Need
  id: Need
  parent: TinyLife
  children:
  - TinyLife.Need.#ctor(TinyLife.NeedType)
  - TinyLife.Need.Max
  - TinyLife.Need.Percentage
  - TinyLife.Need.Type
  - TinyLife.Need.Value
  langs:
  - csharp
  - vb
  name: Need
  nameWithType: Need
  fullName: TinyLife.Need
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    A need is a desire that a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> can have to a given extent, defined by <xref href="TinyLife.Need.Value" data-throw-if-not-resolved="false"></xref>.

    Each need is instantiated through its associated <xref href="TinyLife.NeedType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Need
    content.vb: >-
      <DataContract>

      Public Class Need
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Need.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Need.Max
  commentId: F:TinyLife.Need.Max
  id: Max
  parent: TinyLife.Need
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: Need.Max
  fullName: TinyLife.Need.Max
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The maximum value that the <xref href="TinyLife.Need.Value" data-throw-if-not-resolved="false"></xref> can have
  example: []
  syntax:
    content: public const float Max = 100000
    return:
      type: System.Single
    content.vb: Public Const Max As Single = 100000
- uid: TinyLife.Need.Type
  commentId: F:TinyLife.Need.Type
  id: Type
  parent: TinyLife.Need
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Need.Type
  fullName: TinyLife.Need.Type
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The <xref href="TinyLife.NeedType" data-throw-if-not-resolved="false"></xref> that this need instance originates from
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly NeedType Type
    return:
      type: TinyLife.NeedType
    content.vb: >-
      <DataMember>

      Public ReadOnly Type As NeedType
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Need.Value
  commentId: P:TinyLife.Need.Value
  id: Value
  parent: TinyLife.Need
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Need.Value
  fullName: TinyLife.Need.Value
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    The current value of this need.

    Automatically gets clamped to a number between 0 and <xref href="TinyLife.Need.Max" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Value { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Property Value As Single
  overload: TinyLife.Need.Value*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Need.Percentage
  commentId: P:TinyLife.Need.Percentage
  id: Percentage
  parent: TinyLife.Need
  langs:
  - csharp
  - vb
  name: Percentage
  nameWithType: Need.Percentage
  fullName: TinyLife.Need.Percentage
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The <xref href="TinyLife.Need.Value" data-throw-if-not-resolved="false"></xref> divided by <xref href="TinyLife.Need.Max" data-throw-if-not-resolved="false"></xref>, yielding a floating point number between 0 and 1, representing the percentage fullness of this need
  example: []
  syntax:
    content: public float Percentage { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Percentage As Single
  overload: TinyLife.Need.Percentage*
- uid: TinyLife.Need.#ctor(TinyLife.NeedType)
  commentId: M:TinyLife.Need.#ctor(TinyLife.NeedType)
  id: '#ctor(TinyLife.NeedType)'
  parent: TinyLife.Need
  langs:
  - csharp
  - vb
  name: Need(NeedType)
  nameWithType: Need.Need(NeedType)
  fullName: TinyLife.Need.Need(TinyLife.NeedType)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Instantiate a new need from the given <xref href="TinyLife.NeedType" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Need(NeedType type)
    parameters:
    - id: type
      type: TinyLife.NeedType
      description: The type to instantiate the need from
    content.vb: Public Sub New(type As NeedType)
  overload: TinyLife.Need.#ctor*
  nameWithType.vb: Need.New(NeedType)
  fullName.vb: TinyLife.Need.New(TinyLife.NeedType)
  name.vb: New(NeedType)
references:
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Need.Value
  commentId: P:TinyLife.Need.Value
  href: TinyLife.Need.html#TinyLife_Need_Value
  name: Value
  nameWithType: Need.Value
  fullName: TinyLife.Need.Value
- uid: TinyLife.NeedType
  commentId: T:TinyLife.NeedType
  parent: TinyLife
  href: TinyLife.NeedType.html
  name: NeedType
  nameWithType: NeedType
  fullName: TinyLife.NeedType
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Need.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Need>(Need)
  nameWithType: Extensions.JsonCopy<Need>(Need)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Need>(TinyLife.Need)
  nameWithType.vb: Extensions.JsonCopy(Of Need)(Need)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Need)(TinyLife.Need)
  name.vb: JsonCopy(Of Need)(Need)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Need)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Need
    name: Need
    href: TinyLife.Need.html
  - name: '>'
  - name: (
  - uid: TinyLife.Need
    name: Need
    href: TinyLife.Need.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Need)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Need
    name: Need
    href: TinyLife.Need.html
  - name: )
  - name: (
  - uid: TinyLife.Need
    name: Need
    href: TinyLife.Need.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Need.Max
  commentId: F:TinyLife.Need.Max
  href: TinyLife.Need.html#TinyLife_Need_Max
  name: Max
  nameWithType: Need.Max
  fullName: TinyLife.Need.Max
- uid: TinyLife.Need.Value*
  commentId: Overload:TinyLife.Need.Value
  href: TinyLife.Need.html#TinyLife_Need_Value
  name: Value
  nameWithType: Need.Value
  fullName: TinyLife.Need.Value
- uid: TinyLife.Need.Percentage*
  commentId: Overload:TinyLife.Need.Percentage
  href: TinyLife.Need.html#TinyLife_Need_Percentage
  name: Percentage
  nameWithType: Need.Percentage
  fullName: TinyLife.Need.Percentage
- uid: TinyLife.Need.#ctor*
  commentId: Overload:TinyLife.Need.#ctor
  href: TinyLife.Need.html#TinyLife_Need__ctor_TinyLife_NeedType_
  name: Need
  nameWithType: Need.Need
  fullName: TinyLife.Need.Need
  nameWithType.vb: Need.New
  fullName.vb: TinyLife.Need.New
  name.vb: New
