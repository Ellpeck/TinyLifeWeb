### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.IBreakableObject
  commentId: T:TinyLife.Objects.IBreakableObject
  id: IBreakableObject
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.IBreakableObject.BreakSettings
  - TinyLife.Objects.IBreakableObject.Broken
  - TinyLife.Objects.IBreakableObject.BrokenParticleOffsets
  - TinyLife.Objects.IBreakableObject.OnBreak
  - TinyLife.Objects.IBreakableObject.OnWearDown
  - TinyLife.Objects.IBreakableObject.RepairProgress
  - TinyLife.Objects.IBreakableObject.Update``1(``0,MLEM.Maths.RectangleF,MLEM.Maths.Direction2,System.TimeSpan,System.Random,System.TimeSpan@,Microsoft.Xna.Framework.Audio.SoundEffectInstance@)
  - TinyLife.Objects.IBreakableObject.WearDown``1(``0,System.TimeSpan,System.Random,System.TimeSpan@)
  langs:
  - csharp
  - vb
  name: IBreakableObject
  nameWithType: IBreakableObject
  fullName: TinyLife.Objects.IBreakableObject
  type: Interface
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: An interface that can be applied to a <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref> if it should be breakable and repairable. A default implementation of a <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> object with this interface is <xref href="TinyLife.Objects.BreakableFurniture" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public interface IBreakableObject
    content.vb: Public Interface IBreakableObject
  extensionMethods:
  - TinyLife.Objects.IBreakableObject.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.IBreakableObject.BrokenParticleOffsets
  commentId: F:TinyLife.Objects.IBreakableObject.BrokenParticleOffsets
  id: BrokenParticleOffsets
  parent: TinyLife.Objects.IBreakableObject
  langs:
  - csharp
  - vb
  name: BrokenParticleOffsets
  nameWithType: IBreakableObject.BrokenParticleOffsets
  fullName: TinyLife.Objects.IBreakableObject.BrokenParticleOffsets
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  syntax:
    content: public static readonly List<(Func<IBreakableObject, bool> Predicate, Func<IBreakableObject, Vector2> AddedOffset)> BrokenParticleOffsets
    return:
      type: System.Collections.Generic.List{System.ValueTuple{System.Func{TinyLife.Objects.IBreakableObject,System.Boolean},System.Func{TinyLife.Objects.IBreakableObject,Microsoft.Xna.Framework.Vector2}}}
    content.vb: Public Shared ReadOnly BrokenParticleOffsets As List(Of (Predicate As Func(Of IBreakableObject, Boolean), AddedOffset As Func(Of IBreakableObject, Vector2)))
- uid: TinyLife.Objects.IBreakableObject.OnWearDown
  commentId: E:TinyLife.Objects.IBreakableObject.OnWearDown
  id: OnWearDown
  parent: TinyLife.Objects.IBreakableObject
  langs:
  - csharp
  - vb
  name: OnWearDown
  nameWithType: IBreakableObject.OnWearDown
  fullName: TinyLife.Objects.IBreakableObject.OnWearDown
  type: Event
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: An event that is invoked when this breakable furniture is worn down in <xref href="TinyLife.Objects.IBreakableObject.WearDown%60%601(%60%600%2cSystem.TimeSpan%2cSystem.Random%2cSystem.TimeSpan%40)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static event IBreakableObject.WearDownDelegate OnWearDown
    return:
      type: TinyLife.Objects.IBreakableObject.WearDownDelegate
    content.vb: Public Shared Event OnWearDown As IBreakableObject.WearDownDelegate
- uid: TinyLife.Objects.IBreakableObject.OnBreak
  commentId: E:TinyLife.Objects.IBreakableObject.OnBreak
  id: OnBreak
  parent: TinyLife.Objects.IBreakableObject
  langs:
  - csharp
  - vb
  name: OnBreak
  nameWithType: IBreakableObject.OnBreak
  fullName: TinyLife.Objects.IBreakableObject.OnBreak
  type: Event
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: An event that is invoked when this breakable furniture breaks.
  example: []
  syntax:
    content: public static event Action<IBreakableObject> OnBreak
    return:
      type: System.Action{TinyLife.Objects.IBreakableObject}
    content.vb: Public Shared Event OnBreak As Action(Of IBreakableObject)
- uid: TinyLife.Objects.IBreakableObject.Broken
  commentId: P:TinyLife.Objects.IBreakableObject.Broken
  id: Broken
  parent: TinyLife.Objects.IBreakableObject
  langs:
  - csharp
  - vb
  name: Broken
  nameWithType: IBreakableObject.Broken
  fullName: TinyLife.Objects.IBreakableObject.Broken
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: A field that stores whether this furniture is currently broken
  example: []
  syntax:
    content: bool Broken { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Broken As Boolean
  overload: TinyLife.Objects.IBreakableObject.Broken*
- uid: TinyLife.Objects.IBreakableObject.RepairProgress
  commentId: P:TinyLife.Objects.IBreakableObject.RepairProgress
  id: RepairProgress
  parent: TinyLife.Objects.IBreakableObject
  langs:
  - csharp
  - vb
  name: RepairProgress
  nameWithType: IBreakableObject.RepairProgress
  fullName: TinyLife.Objects.IBreakableObject.RepairProgress
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: The progress that has been made on repairing this object, between 0 and 1.
  example: []
  syntax:
    content: float RepairProgress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property RepairProgress As Single
  overload: TinyLife.Objects.IBreakableObject.RepairProgress*
- uid: TinyLife.Objects.IBreakableObject.BreakSettings
  commentId: P:TinyLife.Objects.IBreakableObject.BreakSettings
  id: BreakSettings
  parent: TinyLife.Objects.IBreakableObject
  langs:
  - csharp
  - vb
  name: BreakSettings
  nameWithType: IBreakableObject.BreakSettings
  fullName: TinyLife.Objects.IBreakableObject.BreakSettings
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: The <xref href="TinyLife.Objects.IBreakableObject.Settings" data-throw-if-not-resolved="false"></xref> that apply to this breakable object.
  example: []
  syntax:
    content: IBreakableObject.Settings BreakSettings { get; }
    parameters: []
    return:
      type: TinyLife.Objects.IBreakableObject.Settings
    content.vb: ReadOnly Property BreakSettings As IBreakableObject.Settings
  overload: TinyLife.Objects.IBreakableObject.BreakSettings*
- uid: TinyLife.Objects.IBreakableObject.WearDown``1(``0,System.TimeSpan,System.Random,System.TimeSpan@)
  commentId: M:TinyLife.Objects.IBreakableObject.WearDown``1(``0,System.TimeSpan,System.Random,System.TimeSpan@)
  id: WearDown``1(``0,System.TimeSpan,System.Random,System.TimeSpan@)
  parent: TinyLife.Objects.IBreakableObject
  langs:
  - csharp
  - vb
  name: WearDown<T>(T, TimeSpan, Random, ref TimeSpan)
  nameWithType: IBreakableObject.WearDown<T>(T, TimeSpan, Random, ref TimeSpan)
  fullName: TinyLife.Objects.IBreakableObject.WearDown<T>(T, System.TimeSpan, System.Random, ref System.TimeSpan)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: Causes an <xref href="TinyLife.Objects.IBreakableObject" data-throw-if-not-resolved="false"></xref> instance to wear down, increasing the likelihood of it becoming <xref href="TinyLife.Objects.IBreakableObject.Broken" data-throw-if-not-resolved="false"></xref> and randomly breaking it
  example: []
  syntax:
    content: 'protected static void WearDown<T>(T obj, TimeSpan passedInGame, Random random, ref TimeSpan breakTimer) where T : MapObject, IBreakableObject'
    parameters:
    - id: obj
      type: '{T}'
      description: The breakable object to be worn down.
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of in-game time that this furniture should be worn down by
    - id: random
      type: System.Random
      description: A <xref href="System.Random" data-throw-if-not-resolved="false"></xref> instance to use for breaking down.
    - id: breakTimer
      type: System.TimeSpan
      description: A timer that is used to store the amount of time that the object has been worn down for. The break timer is added onto in this method, and higher values increase the likelihood of a call to this method causing the object to break. Implementers should store their break timer to disk using <xref href="System.Runtime.Serialization.DataMemberAttribute" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: T
    content.vb: Protected Shared Sub WearDown(Of T As {MapObject, IBreakableObject})(obj As T, passedInGame As TimeSpan, random As Random, breakTimer As TimeSpan)
  overload: TinyLife.Objects.IBreakableObject.WearDown*
  nameWithType.vb: IBreakableObject.WearDown(Of T)(T, TimeSpan, Random, TimeSpan)
  fullName.vb: TinyLife.Objects.IBreakableObject.WearDown(Of T)(T, System.TimeSpan, System.Random, System.TimeSpan)
  name.vb: WearDown(Of T)(T, TimeSpan, Random, TimeSpan)
- uid: TinyLife.Objects.IBreakableObject.Update``1(``0,MLEM.Maths.RectangleF,MLEM.Maths.Direction2,System.TimeSpan,System.Random,System.TimeSpan@,Microsoft.Xna.Framework.Audio.SoundEffectInstance@)
  commentId: M:TinyLife.Objects.IBreakableObject.Update``1(``0,MLEM.Maths.RectangleF,MLEM.Maths.Direction2,System.TimeSpan,System.Random,System.TimeSpan@,Microsoft.Xna.Framework.Audio.SoundEffectInstance@)
  id: Update``1(``0,MLEM.Maths.RectangleF,MLEM.Maths.Direction2,System.TimeSpan,System.Random,System.TimeSpan@,Microsoft.Xna.Framework.Audio.SoundEffectInstance@)
  parent: TinyLife.Objects.IBreakableObject
  langs:
  - csharp
  - vb
  name: Update<T>(T, RectangleF, Direction2, TimeSpan, Random, ref TimeSpan, ref SoundEffectInstance)
  nameWithType: IBreakableObject.Update<T>(T, RectangleF, Direction2, TimeSpan, Random, ref TimeSpan, ref SoundEffectInstance)
  fullName: TinyLife.Objects.IBreakableObject.Update<T>(T, MLEM.Maths.RectangleF, MLEM.Maths.Direction2, System.TimeSpan, System.Random, ref System.TimeSpan, ref Microsoft.Xna.Framework.Audio.SoundEffectInstance)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: Causes a <xref href="TinyLife.Objects.IBreakableObject" data-throw-if-not-resolved="false"></xref> instance to be updated, namely displaying its broken visuals and playing or stopping any broken sounds.
  example: []
  syntax:
    content: 'protected static void Update<T>(T obj, RectangleF area, Direction2 visualRotation, TimeSpan passedInGame, Random random, ref TimeSpan puddleTimer, ref SoundEffectInstance playingBrokenSound) where T : MapObject, IBreakableObject'
    parameters:
    - id: obj
      type: '{T}'
      description: The breakable object to be worn down.
    - id: area
      type: MLEM.Maths.RectangleF
      description: The area covered by the breakable object, for spawning puddles and displaying particles.
    - id: visualRotation
      type: MLEM.Maths.Direction2
      description: The object's rotation, in camera space.
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of in-game time that this furniture should be worn down by
    - id: random
      type: System.Random
      description: A <xref href="System.Random" data-throw-if-not-resolved="false"></xref> instance to use for breaking down.
    - id: puddleTimer
      type: System.TimeSpan
      description: A timer that is used to store the amount of time that has passed for the purpose of spawning a puddle in the world. The puddle timer is added onto in this method, and higher values increase the likelihood of a call to this method causing the object to spawn a puddle. Generally, the puddle timer is short-lived and does not need to be stored to disk by implementers.
    - id: playingBrokenSound
      type: Microsoft.Xna.Framework.Audio.SoundEffectInstance
      description: A sound effect instance to store any playing broken sounds in.
    typeParameters:
    - id: T
    content.vb: Protected Shared Sub Update(Of T As {MapObject, IBreakableObject})(obj As T, area As RectangleF, visualRotation As Direction2, passedInGame As TimeSpan, random As Random, puddleTimer As TimeSpan, playingBrokenSound As SoundEffectInstance)
  overload: TinyLife.Objects.IBreakableObject.Update*
  nameWithType.vb: IBreakableObject.Update(Of T)(T, RectangleF, Direction2, TimeSpan, Random, TimeSpan, SoundEffectInstance)
  fullName.vb: TinyLife.Objects.IBreakableObject.Update(Of T)(T, MLEM.Maths.RectangleF, MLEM.Maths.Direction2, System.TimeSpan, System.Random, System.TimeSpan, Microsoft.Xna.Framework.Audio.SoundEffectInstance)
  name.vb: Update(Of T)(T, RectangleF, Direction2, TimeSpan, Random, TimeSpan, SoundEffectInstance)
references:
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects.BreakableFurniture
  commentId: T:TinyLife.Objects.BreakableFurniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.BreakableFurniture.html
  name: BreakableFurniture
  nameWithType: BreakableFurniture
  fullName: TinyLife.Objects.BreakableFurniture
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Objects.IBreakableObject.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<IBreakableObject>(IBreakableObject)
  nameWithType: Extensions.JsonCopy<IBreakableObject>(IBreakableObject)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.IBreakableObject>(TinyLife.Objects.IBreakableObject)
  nameWithType.vb: Extensions.JsonCopy(Of IBreakableObject)(IBreakableObject)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.IBreakableObject)(TinyLife.Objects.IBreakableObject)
  name.vb: JsonCopy(Of IBreakableObject)(IBreakableObject)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.IBreakableObject)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.IBreakableObject)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.Collections.Generic.List{System.ValueTuple{System.Func{TinyLife.Objects.IBreakableObject,System.Boolean},System.Func{TinyLife.Objects.IBreakableObject,Microsoft.Xna.Framework.Vector2}}}
  commentId: T:System.Collections.Generic.List{System.ValueTuple{System.Func{TinyLife.Objects.IBreakableObject,System.Boolean},System.Func{TinyLife.Objects.IBreakableObject,Microsoft.Xna.Framework.Vector2}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<(Func<IBreakableObject, bool> Predicate, Func<IBreakableObject, Vector2> AddedOffset)>
  nameWithType: List<(Func<IBreakableObject, bool> Predicate, Func<IBreakableObject, Vector2> AddedOffset)>
  fullName: System.Collections.Generic.List<(System.Func<TinyLife.Objects.IBreakableObject, bool> Predicate, System.Func<TinyLife.Objects.IBreakableObject, Microsoft.Xna.Framework.Vector2> AddedOffset)>
  nameWithType.vb: List(Of (Predicate As Func(Of IBreakableObject, Boolean), AddedOffset As Func(Of IBreakableObject, Vector2)))
  fullName.vb: System.Collections.Generic.List(Of (Predicate As System.Func(Of TinyLife.Objects.IBreakableObject, Boolean), AddedOffset As System.Func(Of TinyLife.Objects.IBreakableObject, Microsoft.Xna.Framework.Vector2)))
  name.vb: List(Of (Predicate As Func(Of IBreakableObject, Boolean), AddedOffset As Func(Of IBreakableObject, Vector2)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Func{TinyLife.Objects.IBreakableObject,System.Boolean},System.Func{TinyLife.Objects.IBreakableObject,Microsoft.Xna.Framework.Vector2}}.Predicate
    name: Predicate
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-tinylife.objects.ibreakableobject,system.boolean-,system.func-tinylife.objects.ibreakableobject,microsoft.xna.framework.vector2--.predicate
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Func{TinyLife.Objects.IBreakableObject,System.Boolean},System.Func{TinyLife.Objects.IBreakableObject,Microsoft.Xna.Framework.Vector2}}.AddedOffset
    name: AddedOffset
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-tinylife.objects.ibreakableobject,system.boolean-,system.func-tinylife.objects.ibreakableobject,microsoft.xna.framework.vector2--.addedoffset
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Func{TinyLife.Objects.IBreakableObject,System.Boolean},System.Func{TinyLife.Objects.IBreakableObject,Microsoft.Xna.Framework.Vector2}}.Predicate
    name: Predicate
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-tinylife.objects.ibreakableobject,system.boolean-,system.func-tinylife.objects.ibreakableobject,microsoft.xna.framework.vector2--.predicate
  - name: " "
  - name: As
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Func{TinyLife.Objects.IBreakableObject,System.Boolean},System.Func{TinyLife.Objects.IBreakableObject,Microsoft.Xna.Framework.Vector2}}.AddedOffset
    name: AddedOffset
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-tinylife.objects.ibreakableobject,system.boolean-,system.func-tinylife.objects.ibreakableobject,microsoft.xna.framework.vector2--.addedoffset
  - name: " "
  - name: As
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Objects.IBreakableObject.WearDown``1(``0,System.TimeSpan,System.Random,System.TimeSpan@)
  commentId: M:TinyLife.Objects.IBreakableObject.WearDown``1(``0,System.TimeSpan,System.Random,System.TimeSpan@)
  isExternal: true
  href: TinyLife.Objects.IBreakableObject.html#TinyLife_Objects_IBreakableObject_WearDown__1___0_System_TimeSpan_System_Random_System_TimeSpan__
  name: WearDown<T>(T, TimeSpan, Random, ref TimeSpan)
  nameWithType: IBreakableObject.WearDown<T>(T, TimeSpan, Random, ref TimeSpan)
  fullName: TinyLife.Objects.IBreakableObject.WearDown<T>(T, System.TimeSpan, System.Random, ref System.TimeSpan)
  nameWithType.vb: IBreakableObject.WearDown(Of T)(T, TimeSpan, Random, TimeSpan)
  fullName.vb: TinyLife.Objects.IBreakableObject.WearDown(Of T)(T, System.TimeSpan, System.Random, System.TimeSpan)
  name.vb: WearDown(Of T)(T, TimeSpan, Random, TimeSpan)
  spec.csharp:
  - uid: TinyLife.Objects.IBreakableObject.WearDown``1(``0,System.TimeSpan,System.Random,System.TimeSpan@)
    name: WearDown
    href: TinyLife.Objects.IBreakableObject.html#TinyLife_Objects_IBreakableObject_WearDown__1___0_System_TimeSpan_System_Random_System_TimeSpan__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.IBreakableObject.WearDown``1(``0,System.TimeSpan,System.Random,System.TimeSpan@)
    name: WearDown
    href: TinyLife.Objects.IBreakableObject.html#TinyLife_Objects_IBreakableObject_WearDown__1___0_System_TimeSpan_System_Random_System_TimeSpan__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: TinyLife.Objects.IBreakableObject.WearDownDelegate
  commentId: T:TinyLife.Objects.IBreakableObject.WearDownDelegate
  parent: TinyLife.Objects
  href: TinyLife.Objects.IBreakableObject.html
  name: IBreakableObject.WearDownDelegate
  nameWithType: IBreakableObject.WearDownDelegate
  fullName: TinyLife.Objects.IBreakableObject.WearDownDelegate
  spec.csharp:
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: .
  - uid: TinyLife.Objects.IBreakableObject.WearDownDelegate
    name: WearDownDelegate
    href: TinyLife.Objects.IBreakableObject.WearDownDelegate.html
  spec.vb:
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: .
  - uid: TinyLife.Objects.IBreakableObject.WearDownDelegate
    name: WearDownDelegate
    href: TinyLife.Objects.IBreakableObject.WearDownDelegate.html
- uid: System.Action{TinyLife.Objects.IBreakableObject}
  commentId: T:System.Action{TinyLife.Objects.IBreakableObject}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IBreakableObject>
  nameWithType: Action<IBreakableObject>
  fullName: System.Action<TinyLife.Objects.IBreakableObject>
  nameWithType.vb: Action(Of IBreakableObject)
  fullName.vb: System.Action(Of TinyLife.Objects.IBreakableObject)
  name.vb: Action(Of IBreakableObject)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Objects.IBreakableObject.Broken*
  commentId: Overload:TinyLife.Objects.IBreakableObject.Broken
  href: TinyLife.Objects.IBreakableObject.html#TinyLife_Objects_IBreakableObject_Broken
  name: Broken
  nameWithType: IBreakableObject.Broken
  fullName: TinyLife.Objects.IBreakableObject.Broken
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.IBreakableObject.RepairProgress*
  commentId: Overload:TinyLife.Objects.IBreakableObject.RepairProgress
  href: TinyLife.Objects.IBreakableObject.html#TinyLife_Objects_IBreakableObject_RepairProgress
  name: RepairProgress
  nameWithType: IBreakableObject.RepairProgress
  fullName: TinyLife.Objects.IBreakableObject.RepairProgress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Objects.IBreakableObject.Settings
  commentId: T:TinyLife.Objects.IBreakableObject.Settings
  parent: TinyLife.Objects
  href: TinyLife.Objects.IBreakableObject.html
  name: IBreakableObject.Settings
  nameWithType: IBreakableObject.Settings
  fullName: TinyLife.Objects.IBreakableObject.Settings
  spec.csharp:
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: .
  - uid: TinyLife.Objects.IBreakableObject.Settings
    name: Settings
    href: TinyLife.Objects.IBreakableObject.Settings.html
  spec.vb:
  - uid: TinyLife.Objects.IBreakableObject
    name: IBreakableObject
    href: TinyLife.Objects.IBreakableObject.html
  - name: .
  - uid: TinyLife.Objects.IBreakableObject.Settings
    name: Settings
    href: TinyLife.Objects.IBreakableObject.Settings.html
- uid: TinyLife.Objects.IBreakableObject.BreakSettings*
  commentId: Overload:TinyLife.Objects.IBreakableObject.BreakSettings
  href: TinyLife.Objects.IBreakableObject.html#TinyLife_Objects_IBreakableObject_BreakSettings
  name: BreakSettings
  nameWithType: IBreakableObject.BreakSettings
  fullName: TinyLife.Objects.IBreakableObject.BreakSettings
- uid: TinyLife.Objects.IBreakableObject
  commentId: T:TinyLife.Objects.IBreakableObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.IBreakableObject.html
  name: IBreakableObject
  nameWithType: IBreakableObject
  fullName: TinyLife.Objects.IBreakableObject
- uid: TinyLife.Objects.IBreakableObject.Broken
  commentId: P:TinyLife.Objects.IBreakableObject.Broken
  parent: TinyLife.Objects.IBreakableObject
  href: TinyLife.Objects.IBreakableObject.html#TinyLife_Objects_IBreakableObject_Broken
  name: Broken
  nameWithType: IBreakableObject.Broken
  fullName: TinyLife.Objects.IBreakableObject.Broken
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: System.Runtime.Serialization.DataMemberAttribute
  commentId: T:System.Runtime.Serialization.DataMemberAttribute
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.datamemberattribute
  name: DataMemberAttribute
  nameWithType: DataMemberAttribute
  fullName: System.Runtime.Serialization.DataMemberAttribute
- uid: TinyLife.Objects.IBreakableObject.WearDown*
  commentId: Overload:TinyLife.Objects.IBreakableObject.WearDown
  href: TinyLife.Objects.IBreakableObject.html#TinyLife_Objects_IBreakableObject_WearDown__1___0_System_TimeSpan_System_Random_System_TimeSpan__
  name: WearDown
  nameWithType: IBreakableObject.WearDown
  fullName: TinyLife.Objects.IBreakableObject.WearDown
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TinyLife.Objects.IBreakableObject.Update*
  commentId: Overload:TinyLife.Objects.IBreakableObject.Update
  href: TinyLife.Objects.IBreakableObject.html#TinyLife_Objects_IBreakableObject_Update__1___0_MLEM_Maths_RectangleF_MLEM_Maths_Direction2_System_TimeSpan_System_Random_System_TimeSpan__Microsoft_Xna_Framework_Audio_SoundEffectInstance__
  name: Update
  nameWithType: IBreakableObject.Update
  fullName: TinyLife.Objects.IBreakableObject.Update
- uid: MLEM.Maths.RectangleF
  commentId: T:MLEM.Maths.RectangleF
  parent: MLEM.Maths
  isExternal: true
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Maths.RectangleF
- uid: MLEM.Maths.Direction2
  commentId: T:MLEM.Maths.Direction2
  parent: MLEM.Maths
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Maths.Direction2
- uid: Microsoft.Xna.Framework.Audio.SoundEffectInstance
  commentId: T:Microsoft.Xna.Framework.Audio.SoundEffectInstance
  parent: Microsoft.Xna.Framework.Audio
  isExternal: true
  name: SoundEffectInstance
  nameWithType: SoundEffectInstance
  fullName: Microsoft.Xna.Framework.Audio.SoundEffectInstance
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  isExternal: true
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
- uid: Microsoft.Xna.Framework.Audio
  commentId: N:Microsoft.Xna.Framework.Audio
  isExternal: true
  name: Microsoft.Xna.Framework.Audio
  nameWithType: Microsoft.Xna.Framework.Audio
  fullName: Microsoft.Xna.Framework.Audio
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Audio
    name: Audio
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Audio
    name: Audio
    isExternal: true
