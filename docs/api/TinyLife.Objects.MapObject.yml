### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  id: MapObject
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.MapObject.#ctor(System.Guid,TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single)
  - TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  - TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  - TinyLife.Objects.MapObject.CurrentLot
  - TinyLife.Objects.MapObject.CurrentRoom
  - TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  - TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  - TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
  - TinyLife.Objects.MapObject.DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  - TinyLife.Objects.MapObject.Floor
  - TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
  - TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
  - TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  - TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.MapObject.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  - TinyLife.Objects.MapObject.GetPathCostModifier(Microsoft.Xna.Framework.Point)
  - TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  - TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.MapObject.HoldingPerson
  - TinyLife.Objects.MapObject.Id
  - TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
  - TinyLife.Objects.MapObject.IsFreeSpot(Microsoft.Xna.Framework.Point)
  - TinyLife.Objects.MapObject.IsInWorld
  - TinyLife.Objects.MapObject.Map
  - TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
  - TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  - TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  - TinyLife.Objects.MapObject.OnAdded
  - TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Maths.Direction2,MLEM.Maths.Direction2)
  - TinyLife.Objects.MapObject.OnCreated
  - TinyLife.Objects.MapObject.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
  - TinyLife.Objects.MapObject.OnDraw
  - TinyLife.Objects.MapObject.OnEventsAttachable
  - TinyLife.Objects.MapObject.OnGetDebugLines
  - TinyLife.Objects.MapObject.OnGetHoverInfo
  - TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
  - TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  - TinyLife.Objects.MapObject.OnRemoved
  - TinyLife.Objects.MapObject.OnUpdate
  - TinyLife.Objects.MapObject.OnValidated
  - TinyLife.Objects.MapObject.OnValidatedEarly
  - TinyLife.Objects.MapObject.ParentInfo
  - TinyLife.Objects.MapObject.Position
  - TinyLife.Objects.MapObject.ResetToStatic(System.Boolean,System.Boolean)
  - TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  - TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
  - TinyLife.Objects.MapObject.ValidateEarly
  - TinyLife.Objects.MapObject.Visibility
  langs:
  - csharp
  - vb
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: An instance of this class represents an object that can be, or is, part of a <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class MapObject : JsonTypeSafeGenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class MapObject Inherits JsonTypeSafeGenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  derivedClasses:
  - TinyLife.Objects.Furniture
  - TinyLife.Objects.PersonLike
  - TinyLife.Objects.Vehicle
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.MapObject.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.MapObject.OnCreated
  commentId: E:TinyLife.Objects.MapObject.OnCreated
  id: OnCreated
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnCreated
  nameWithType: MapObject.OnCreated
  fullName: TinyLife.Objects.MapObject.OnCreated
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is invoked when a map object is created.

    This event is invoked in the <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public static event Action<MapObject> OnCreated
    return:
      type: System.Action{TinyLife.Objects.MapObject}
    content.vb: Public Shared Event OnCreated As Action(Of MapObject)
- uid: TinyLife.Objects.MapObject.OnValidated
  commentId: E:TinyLife.Objects.MapObject.OnValidated
  id: OnValidated
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnValidated
  nameWithType: MapObject.OnValidated
  fullName: TinyLife.Objects.MapObject.OnValidated
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is invoked when a map object is validated.

    This event is invoked in <xref href="TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)" data-throw-if-not-resolved="false"></xref>, which is usually called after subclass validation.
  example: []
  syntax:
    content: public static event Action<MapObject> OnValidated
    return:
      type: System.Action{TinyLife.Objects.MapObject}
    content.vb: Public Shared Event OnValidated As Action(Of MapObject)
- uid: TinyLife.Objects.MapObject.OnValidatedEarly
  commentId: E:TinyLife.Objects.MapObject.OnValidatedEarly
  id: OnValidatedEarly
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnValidatedEarly
  nameWithType: MapObject.OnValidatedEarly
  fullName: TinyLife.Objects.MapObject.OnValidatedEarly
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is invoked when a map object is validated early.

    This event is invoked in <xref href="TinyLife.Objects.MapObject.ValidateEarly" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static event Action<MapObject> OnValidatedEarly
    return:
      type: System.Action{TinyLife.Objects.MapObject}
    content.vb: Public Shared Event OnValidatedEarly As Action(Of MapObject)
- uid: TinyLife.Objects.MapObject.OnEventsAttachable
  commentId: E:TinyLife.Objects.MapObject.OnEventsAttachable
  id: OnEventsAttachable
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnEventsAttachable
  nameWithType: MapObject.OnEventsAttachable
  fullName: TinyLife.Objects.MapObject.OnEventsAttachable
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is invoked when non-static events for an object are ready to be attached to.

    This event is invoked in the <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref> constructor, and in the <xref href="TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public static event Action<MapObject> OnEventsAttachable
    return:
      type: System.Action{TinyLife.Objects.MapObject}
    content.vb: Public Shared Event OnEventsAttachable As Action(Of MapObject)
- uid: TinyLife.Objects.MapObject.OnDraw
  commentId: E:TinyLife.Objects.MapObject.OnDraw
  id: OnDraw
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnDraw
  nameWithType: MapObject.OnDraw
  fullName: TinyLife.Objects.MapObject.OnDraw
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is invoked when this object is drawn, right after <xref href="TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime%2cSystem.Object%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Color%7d%2cSystem.Collections.Generic.List%7bMLEM.Graphics.StaticSpriteBatch.Item%7d)" data-throw-if-not-resolved="false"></xref> is called.

    This event can be subscribed to using <xref href="TinyLife.Objects.MapObject.OnEventsAttachable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public event MapObject.DrawDelegate OnDraw
    return:
      type: TinyLife.Objects.MapObject.DrawDelegate
    content.vb: Public Event OnDraw As MapObject.DrawDelegate
- uid: TinyLife.Objects.MapObject.OnUpdate
  commentId: E:TinyLife.Objects.MapObject.OnUpdate
  id: OnUpdate
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnUpdate
  nameWithType: MapObject.OnUpdate
  fullName: TinyLife.Objects.MapObject.OnUpdate
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is invoked when this object is updated, right after <xref href="Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref> is called.

    Note that, if this object does not extend <xref href="Microsoft.Xna.Framework.IUpdateable" data-throw-if-not-resolved="false"></xref>, this event is not invoked.

    This event can be subscribed to using <xref href="TinyLife.Objects.MapObject.OnEventsAttachable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public event MapObject.UpdateDelegate OnUpdate
    return:
      type: TinyLife.Objects.MapObject.UpdateDelegate
    content.vb: Public Event OnUpdate As MapObject.UpdateDelegate
- uid: TinyLife.Objects.MapObject.OnGetHoverInfo
  commentId: E:TinyLife.Objects.MapObject.OnGetHoverInfo
  id: OnGetHoverInfo
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnGetHoverInfo
  nameWithType: MapObject.OnGetHoverInfo
  fullName: TinyLife.Objects.MapObject.OnGetHoverInfo
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is invoked when this object's <xref href="TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)" data-throw-if-not-resolved="false"></xref> method is called.

    This event can be subscribed to using <xref href="TinyLife.Objects.MapObject.OnEventsAttachable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public event Action<Tooltip> OnGetHoverInfo
    return:
      type: System.Action{MLEM.Ui.Elements.Tooltip}
    content.vb: Public Event OnGetHoverInfo As Action(Of Tooltip)
- uid: TinyLife.Objects.MapObject.OnGetDebugLines
  commentId: E:TinyLife.Objects.MapObject.OnGetDebugLines
  id: OnGetDebugLines
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnGetDebugLines
  nameWithType: MapObject.OnGetDebugLines
  fullName: TinyLife.Objects.MapObject.OnGetDebugLines
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is invoked when debug lines for this object are being gathered as part of <xref href="TinyLife.Debug" data-throw-if-not-resolved="false"></xref>.

    This event can be subscribed to using <xref href="TinyLife.Objects.MapObject.OnEventsAttachable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public event Action<List<string>> OnGetDebugLines
    return:
      type: System.Action{System.Collections.Generic.List{System.String}}
    content.vb: Public Event OnGetDebugLines As Action(Of List(Of String))
- uid: TinyLife.Objects.MapObject.Position
  commentId: P:TinyLife.Objects.MapObject.Position
  id: Position
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: MapObject.Position
  fullName: TinyLife.Objects.MapObject.Position
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The position on the <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> of this object.
  example: []
  syntax:
    content: >-
      [DataMember]

      public Vector2 Position { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: >-
      <DataMember>

      Public Property Position As Vector2
  overload: TinyLife.Objects.MapObject.Position*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.MapObject.Floor
  commentId: P:TinyLife.Objects.MapObject.Floor
  id: Floor
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: Floor
  nameWithType: MapObject.Floor
  fullName: TinyLife.Objects.MapObject.Floor
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The floor that this map object is on.
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Floor { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Property Floor As Single
  overload: TinyLife.Objects.MapObject.Floor*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.MapObject.ParentInfo
  commentId: P:TinyLife.Objects.MapObject.ParentInfo
  id: ParentInfo
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: ParentInfo
  nameWithType: MapObject.ParentInfo
  fullName: TinyLife.Objects.MapObject.ParentInfo
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns a <xref href="TinyLife.Objects.MapObject.ParentInfo" data-throw-if-not-resolved="false"></xref> for this object in its current context.

    By default, this method returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/default">default</a>, and <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> returns a <xref href="TinyLife.Objects.MapObject.ParentInfo" data-throw-if-not-resolved="false"></xref> based on its current attachments.
  example: []
  syntax:
    content: public virtual ParentInfo ParentInfo { get; }
    parameters: []
    return:
      type: TinyLife.Objects.ParentInfo
    content.vb: Public Overridable ReadOnly Property ParentInfo As ParentInfo
  overload: TinyLife.Objects.MapObject.ParentInfo*
- uid: TinyLife.Objects.MapObject.Visibility
  commentId: P:TinyLife.Objects.MapObject.Visibility
  id: Visibility
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: MapObject.Visibility
  fullName: TinyLife.Objects.MapObject.Visibility
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the visibility settings of this object.

    By default, <xref href="TinyLife.Objects.Visibility.WhenVisible" data-throw-if-not-resolved="false"></xref> is returned.

    For <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref>, its <xref href="TinyLife.Objects.FurnitureType.TypeSettings.Visibility" data-throw-if-not-resolved="false"></xref> is returned instead.
  example: []
  syntax:
    content: public virtual Visibility Visibility { get; }
    parameters: []
    return:
      type: TinyLife.Objects.Visibility
      description: This object's visibility settings
    content.vb: Public Overridable ReadOnly Property Visibility As Visibility
  overload: TinyLife.Objects.MapObject.Visibility*
- uid: TinyLife.Objects.MapObject.Id
  commentId: P:TinyLife.Objects.MapObject.Id
  id: Id
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MapObject.Id
  fullName: TinyLife.Objects.MapObject.Id
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> of this object instance
  example: []
  syntax:
    content: >-
      [DataMember]

      public Guid Id { get; protected set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <DataMember>

      Public Property Id As Guid
  overload: TinyLife.Objects.MapObject.Id*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.MapObject.Map
  commentId: P:TinyLife.Objects.MapObject.Map
  id: Map
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: MapObject.Map
  fullName: TinyLife.Objects.MapObject.Map
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The map that this object is currently assigned to. Note that, if <xref href="TinyLife.Objects.MapObject.IsInWorld" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, this object is not actually present on the map (ie it has not been added using <xref href="TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)" data-throw-if-not-resolved="false"></xref>).

    While this property's setter is protected, it is generally advised to use <xref href="TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Vector2%7d%2cSystem.Nullable%7bSystem.Single%7d)" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map%2cTinyLife.Utilities.AppliedMigrations)" data-throw-if-not-resolved="false"></xref> instead, as they handle the necessary logic.
  example: []
  syntax:
    content: public Map Map { get; protected set; }
    parameters: []
    return:
      type: TinyLife.World.Map
    content.vb: Public Property Map As Map
  overload: TinyLife.Objects.MapObject.Map*
- uid: TinyLife.Objects.MapObject.CurrentLot
  commentId: P:TinyLife.Objects.MapObject.CurrentLot
  id: CurrentLot
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: CurrentLot
  nameWithType: MapObject.CurrentLot
  fullName: TinyLife.Objects.MapObject.CurrentLot
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A property that returns the <xref href="TinyLife.World.Lot" data-throw-if-not-resolved="false"></xref> that this object is currently on, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there is none.
  example: []
  syntax:
    content: public Lot CurrentLot { get; }
    parameters: []
    return:
      type: TinyLife.World.Lot
    content.vb: Public ReadOnly Property CurrentLot As Lot
  overload: TinyLife.Objects.MapObject.CurrentLot*
- uid: TinyLife.Objects.MapObject.CurrentRoom
  commentId: P:TinyLife.Objects.MapObject.CurrentRoom
  id: CurrentRoom
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: CurrentRoom
  nameWithType: MapObject.CurrentRoom
  fullName: TinyLife.Objects.MapObject.CurrentRoom
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A property that returns the <xref href="TinyLife.World.Room" data-throw-if-not-resolved="false"></xref> that this object is currently in, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there is none.
  example: []
  syntax:
    content: public Room CurrentRoom { get; }
    parameters: []
    return:
      type: TinyLife.World.Room
    content.vb: Public ReadOnly Property CurrentRoom As Room
  overload: TinyLife.Objects.MapObject.CurrentRoom*
- uid: TinyLife.Objects.MapObject.IsInWorld
  commentId: P:TinyLife.Objects.MapObject.IsInWorld
  id: IsInWorld
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: IsInWorld
  nameWithType: MapObject.IsInWorld
  fullName: TinyLife.Objects.MapObject.IsInWorld
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A property that returns true if this object is currently present on its <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref>.

    If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, it means that this object is assigned to its <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref>, but has not been added to it using <xref href="TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsInWorld { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInWorld As Boolean
  overload: TinyLife.Objects.MapObject.IsInWorld*
- uid: TinyLife.Objects.MapObject.HoldingPerson
  commentId: P:TinyLife.Objects.MapObject.HoldingPerson
  id: HoldingPerson
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: HoldingPerson
  nameWithType: MapObject.HoldingPerson
  fullName: TinyLife.Objects.MapObject.HoldingPerson
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The person that is currently holding this object.

    If no person is currently holding this object, this property returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: public PersonLike HoldingPerson { get; }
    parameters: []
    return:
      type: TinyLife.Objects.PersonLike
    content.vb: Public ReadOnly Property HoldingPerson As PersonLike
  overload: TinyLife.Objects.MapObject.HoldingPerson*
- uid: TinyLife.Objects.MapObject.#ctor(System.Guid,TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:TinyLife.Objects.MapObject.#ctor(System.Guid,TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single)
  id: '#ctor(System.Guid,TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single)'
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: MapObject(Guid, Map, Vector2, float)
  nameWithType: MapObject.MapObject(Guid, Map, Vector2, float)
  fullName: TinyLife.Objects.MapObject.MapObject(System.Guid, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new map object with the given settings
  example: []
  syntax:
    content: public MapObject(Guid id, Map map, Vector2 position, float floor)
    parameters:
    - id: id
      type: System.Guid
      description: The object's id
    - id: map
      type: TinyLife.World.Map
      description: The map the object should be on
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position that the object should have
    - id: floor
      type: System.Single
      description: The floor that this map object is on.
    content.vb: Public Sub New(id As Guid, map As Map, position As Vector2, floor As Single)
  overload: TinyLife.Objects.MapObject.#ctor*
  nameWithType.vb: MapObject.New(Guid, Map, Vector2, Single)
  fullName.vb: TinyLife.Objects.MapObject.New(System.Guid, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single)
  name.vb: New(Guid, Map, Vector2, Single)
- uid: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  id: Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: Draw(GameTime, object, Vector2, Color?, List<Item>)
  nameWithType: MapObject.Draw(GameTime, object, Vector2, Color?, List<StaticSpriteBatch.Item>)
  fullName: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime, object, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Draws this object on the current <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref>, at the current <xref href="TinyLife.Objects.MapObject.Position" data-throw-if-not-resolved="false"></xref>. When overriding this method, larger objects, and especially <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> objects, should use <xref href="TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Object%2cMicrosoft.Xna.Framework.Vector2%2cMLEM.Textures.TextureRegion%2cMicrosoft.Xna.Framework.Color%2cMicrosoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Point%2cSystem.Collections.Generic.List%7bMLEM.Graphics.StaticSpriteBatch.Item%7d%2cSystem.Boolean%2cTinyLife.Objects.ParentInfo%2cSystem.Single%2cMicrosoft.Xna.Framework.Graphics.SpriteEffects%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> for drawing their textures or alternatively manually calculate the depth to draw with using <xref href="TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Single%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    To draw a map object while invoking all the required events, use <xref href="TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime%2cSystem.Object%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Color%7d%2cSystem.Boolean%2cSystem.Collections.Generic.List%7bMLEM.Graphics.StaticSpriteBatch.Item%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void Draw(GameTime time, object batch, Vector2 drawPos, Color? overrideColor, List<StaticSpriteBatch.Item> items)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current time
    - id: batch
      type: System.Object
      description: The sprite batch to use for drawing, which is either a <xref href="Microsoft.Xna.Framework.Graphics.SpriteBatch" data-throw-if-not-resolved="false"></xref> or <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position, in draw space, to draw this furniture at
    - id: overrideColor
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: The color that should be used instead of this object's actual color. If null, the object's regular color should be used.
    - id: items
      type: System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item}
      description: A list of sprite batch items that items should be added to if the <code class="paramref">batch</code> is a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overridable Sub Draw(time As GameTime, batch As Object, drawPos As Vector2, overrideColor As Color?, items As List(Of StaticSpriteBatch.Item))
  overload: TinyLife.Objects.MapObject.Draw*
  nameWithType.vb: MapObject.Draw(GameTime, Object, Vector2, Color?, List(Of StaticSpriteBatch.Item))
  fullName.vb: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime, Object, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: Draw(GameTime, Object, Vector2, Color?, List(Of Item))
- uid: TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
  commentId: M:TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
  id: Intersects(MLEM.Maths.RectangleF)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: Intersects(RectangleF)
  nameWithType: MapObject.Intersects(RectangleF)
  fullName: TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns whether this map object intersects with the given rectangle.

    This is used for <xref href="TinyLife.World.Map.GetObjects%60%601(MLEM.Maths.RectangleF)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public virtual bool Intersects(RectangleF rectangle)
    parameters:
    - id: rectangle
      type: MLEM.Maths.RectangleF
      description: The area that should be checked for
    return:
      type: System.Boolean
      description: true if this object intersects with the given rectangle
    content.vb: Public Overridable Function Intersects(rectangle As RectangleF) As Boolean
  overload: TinyLife.Objects.MapObject.Intersects*
- uid: TinyLife.Objects.MapObject.ValidateEarly
  commentId: M:TinyLife.Objects.MapObject.ValidateEarly
  id: ValidateEarly
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: ValidateEarly()
  nameWithType: MapObject.ValidateEarly()
  fullName: TinyLife.Objects.MapObject.ValidateEarly()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called right after this object is loaded from disk, before <xref href="TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)" data-throw-if-not-resolved="false"></xref> is called on this object and all others.

    By default, this method invokes <xref href="TinyLife.Objects.MapObject.OnValidatedEarly" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void ValidateEarly()
    content.vb: Public Overridable Sub ValidateEarly()
  overload: TinyLife.Objects.MapObject.ValidateEarly*
- uid: TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
  id: Validate(TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: Validate(AppliedMigrations)
  nameWithType: MapObject.Validate(AppliedMigrations)
  fullName: TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when this object is loaded from disk.

    Returning false on this method causes the object to be removed from the map.

    By default, this method invokes <xref href="TinyLife.Objects.MapObject.OnValidated" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.MapObject.OnEventsAttachable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual bool Validate(AppliedMigrations appliedMigrations)
    parameters:
    - id: appliedMigrations
      type: TinyLife.Utilities.AppliedMigrations
      description: ''
    return:
      type: System.Boolean
      description: false if the object is not valid, true otherwise
    content.vb: Public Overridable Function Validate(appliedMigrations As AppliedMigrations) As Boolean
  overload: TinyLife.Objects.MapObject.Validate*
- uid: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
  id: GetCategories(TinyLife.Objects.PersonLike)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: GetCategories(PersonLike)
  nameWithType: MapObject.GetCategories(PersonLike)
  fullName: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns a set of <xref href="TinyLife.Objects.ObjectCategory" data-throw-if-not-resolved="false"></xref> flags that this object has, based on the given <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual ObjectCategory GetCategories(PersonLike person)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person to query categories for
    return:
      type: TinyLife.Objects.ObjectCategory
      description: A set of categories that this object has
    content.vb: Public Overridable Function GetCategories(person As PersonLike) As ObjectCategory
  overload: TinyLife.Objects.MapObject.GetCategories*
- uid: TinyLife.Objects.MapObject.OnAdded
  commentId: M:TinyLife.Objects.MapObject.OnAdded
  id: OnAdded
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnAdded()
  nameWithType: MapObject.OnAdded()
  fullName: TinyLife.Objects.MapObject.OnAdded()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when this object is added to a <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref>.

    By default, it does nothing.
  example: []
  syntax:
    content: public virtual void OnAdded()
    content.vb: Public Overridable Sub OnAdded()
  overload: TinyLife.Objects.MapObject.OnAdded*
- uid: TinyLife.Objects.MapObject.OnRemoved
  commentId: M:TinyLife.Objects.MapObject.OnRemoved
  id: OnRemoved
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnRemoved()
  nameWithType: MapObject.OnRemoved()
  fullName: TinyLife.Objects.MapObject.OnRemoved()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when this object is removed from a <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref>.

    By default, it does nothing.
  example: []
  syntax:
    content: public virtual void OnRemoved()
    content.vb: Public Overridable Sub OnRemoved()
  overload: TinyLife.Objects.MapObject.OnRemoved*
- uid: TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  commentId: M:TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  id: GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: GetHoverInfo(Tooltip)
  nameWithType: MapObject.GetHoverInfo(Tooltip)
  fullName: TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Allows adding a set of paragraphs and other ui elements to the given <code class="paramref">tooltip</code>, which is then displayed when this object is hovered over using the cursor in the world.

    By default, this method raises <xref href="TinyLife.Objects.MapObject.OnGetHoverInfo" data-throw-if-not-resolved="false"></xref> for <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref>, and adds additional information for <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void GetHoverInfo(Tooltip tooltip)
    parameters:
    - id: tooltip
      type: MLEM.Ui.Elements.Tooltip
      description: The tooltip that will be displayed.
    content.vb: Public Overridable Sub GetHoverInfo(tooltip As Tooltip)
  overload: TinyLife.Objects.MapObject.GetHoverInfo*
- uid: TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
  commentId: M:TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
  id: GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: GetDebugLines(GameImpl, List<string>)
  nameWithType: MapObject.GetDebugLines(GameImpl, List<string>)
  fullName: TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl, System.Collections.Generic.List<string>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the debug lines that should be displayed in <xref href="TinyLife.Debug" data-throw-if-not-resolved="false"></xref> when hovering over this object.

    By default, <xref href="TinyLife.Objects.MapObject.OnGetDebugLines" data-throw-if-not-resolved="false"></xref> is invoked, and the id and position of this object are appended to the list of lines.
  example: []
  syntax:
    content: public virtual void GetDebugLines(GameImpl game, List<string> lines)
    parameters:
    - id: game
      type: TinyLife.GameImpl
      description: The game.
    - id: lines
      type: System.Collections.Generic.List{System.String}
      description: The list of lines to append debug lines to.
    content.vb: Public Overridable Sub GetDebugLines(game As GameImpl, lines As List(Of String))
  overload: TinyLife.Objects.MapObject.GetDebugLines*
  nameWithType.vb: MapObject.GetDebugLines(GameImpl, List(Of String))
  fullName.vb: TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl, System.Collections.Generic.List(Of String))
  name.vb: GetDebugLines(GameImpl, List(Of String))
- uid: TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  id: GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: GetAiPriority(PersonLike, ObjectCategory)
  nameWithType: MapObject.GetAiPriority(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns an integer that represents a priority for the <xref href="TinyLife.Objects.PersonAi" data-throw-if-not-resolved="false"></xref>'s interaction with this object.

    A higher priority means that this object will be picked over other objects (with lower priority).

    The default return value is 0, meaning that no special priority is assigned to this object.

    For any <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> with the <xref href="TinyLife.Objects.ObjectCategory.SingleBed" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Objects.ObjectCategory.DoubleBed" data-throw-if-not-resolved="false"></xref> category that is the person's <xref href="TinyLife.Objects.Person.LastBedSleptIn" data-throw-if-not-resolved="false"></xref>, 10 is returned.

    This is invoked by a person in <xref href="TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject%2cTinyLife.Objects.ObjectCategory)" data-throw-if-not-resolved="false"></xref> with additional events being invoked.
  example: []
  syntax:
    content: public virtual float GetAiPriority(PersonLike person, ObjectCategory categories)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person whose AI is attempting to interact with this object
    - id: categories
      type: TinyLife.Objects.ObjectCategory
      description: The categories that are relevant for the ai interaction
    return:
      type: System.Single
      description: This object's priority
    content.vb: Public Overridable Function GetAiPriority(person As PersonLike, categories As ObjectCategory) As Single
  overload: TinyLife.Objects.MapObject.GetAiPriority*
- uid: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  id: CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: CanExecuteAction(ActionType, ActionInfo, bool, bool)
  nameWithType: MapObject.CanExecuteAction(ActionType, ActionInfo, bool, bool)
  fullName: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns whether the given <code class="paramref">action</code> can be executed at this map object.

    By default, this method returns <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> for all actions, but <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> additionally returns custom results based on whether the furniture is <xref href="TinyLife.Objects.IBreakableObject.Broken" data-throw-if-not-resolved="false"></xref> or based on <xref href="TinyLife.Objects.Furniture.AreUtilitiesDisabled" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual CanExecuteResult CanExecuteAction(ActionType action, ActionInfo info, bool automatic, bool isAuxiliary)
    parameters:
    - id: action
      type: TinyLife.Actions.ActionType
      description: The action that is querying whether it can be executed.
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: automatic
      type: System.Boolean
      description: Whether the action was started automatically.
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object is auxiliary (or the main action object).
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: Whether this object allows the action to be executed at it.
    content.vb: Public Overridable Function CanExecuteAction(action As ActionType, info As ActionInfo, automatic As Boolean, isAuxiliary As Boolean) As CanExecuteResult
  overload: TinyLife.Objects.MapObject.CanExecuteAction*
  nameWithType.vb: MapObject.CanExecuteAction(ActionType, ActionInfo, Boolean, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean, Boolean)
  name.vb: CanExecuteAction(ActionType, ActionInfo, Boolean, Boolean)
- uid: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  id: OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnActionCompleted(Action, CompletionType, bool)
  nameWithType: MapObject.OnActionCompleted(Action, CompletionType, bool)
  fullName: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when an <xref href="System.Action" data-throw-if-not-resolved="false"></xref> that this object is involved in is completed. Note that this includes actions that are underlying (see <xref href="TinyLife.Actions.Action.Parent" data-throw-if-not-resolved="false"></xref>).

    This object counts as involved in the action if its <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> includes this object.

    In general, the base method should be called for <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> objects, since it sets <xref href="TinyLife.Objects.Furniture.DevaluedThroughUse" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void OnActionCompleted(Action action, CompletionType type, bool isAuxiliary)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The action
    - id: type
      type: TinyLife.Actions.CompletionType
      description: The type of the action's completion
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object counts as an auxiliary object. If this value is false, the object is th e<xref href="TinyLife.Actions.ActionInfo.GetActionObject%60%601(System.Boolean)" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overridable Sub OnActionCompleted(action As Action, type As CompletionType, isAuxiliary As Boolean)
  overload: TinyLife.Objects.MapObject.OnActionCompleted*
  nameWithType.vb: MapObject.OnActionCompleted(Action, CompletionType, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, Boolean)
  name.vb: OnActionCompleted(Action, CompletionType, Boolean)
- uid: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  id: ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: ActionUpdate(Action, GameTime, TimeSpan, float, bool)
  nameWithType: MapObject.ActionUpdate(Action, GameTime, TimeSpan, float, bool)
  fullName: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action, Microsoft.Xna.Framework.GameTime, System.TimeSpan, float, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when an <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> that this object is involved in updates, which is every <xref href="Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref> frame. Note that this includes actions that are underlying (see <xref href="TinyLife.Actions.Action.Parent" data-throw-if-not-resolved="false"></xref>) and actions that aren't fully in progress yet (<xref href="TinyLife.Actions.Action.FullyInProgress" data-throw-if-not-resolved="false"></xref>).

    This object counts as involved in the action if its <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> includes this object.

    In general, the base method should be called for <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> objects, since it sets deals with <xref href="TinyLife.Objects.Furniture.Dirty" data-throw-if-not-resolved="false"></xref> objects.
  example: []
  syntax:
    content: public virtual void ActionUpdate(Action action, GameTime time, TimeSpan passedInGame, float speedMultiplier, bool isAuxiliary)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The action
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current game time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed, in game time
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object counts as an auxiliary object. If this value is false, the object is th e<xref href="TinyLife.Actions.ActionInfo.GetActionObject%60%601(System.Boolean)" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overridable Sub ActionUpdate(action As Action, time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single, isAuxiliary As Boolean)
  overload: TinyLife.Objects.MapObject.ActionUpdate*
  nameWithType.vb: MapObject.ActionUpdate(Action, GameTime, TimeSpan, Single, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action, Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single, Boolean)
  name.vb: ActionUpdate(Action, GameTime, TimeSpan, Single, Boolean)
- uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  id: GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: GetFreeActionSpotInfos(PersonLike, ObjectCategory)
  nameWithType: MapObject.GetFreeActionSpotInfos(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns a set of <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref> instances that represent action spots that the <code class="paramref">person</code> can currently use or interact with.

    By default, an empty collection is returned by <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref>, but relevant spots are returnd by objects like <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual IEnumerable<ActionInfo> GetFreeActionSpotInfos(PersonLike person, ObjectCategory context = null)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person who wants to interact with this object.
    - id: context
      type: TinyLife.Objects.ObjectCategory
      description: The context for which to return free action spots, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to return action spots for any contexts.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionInfo}
      description: The free action spots.
    content.vb: Public Overridable Function GetFreeActionSpotInfos(person As PersonLike, context As ObjectCategory = Nothing) As IEnumerable(Of ActionInfo)
  overload: TinyLife.Objects.MapObject.GetFreeActionSpotInfos*
- uid: TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Maths.Direction2,MLEM.Maths.Direction2)
  commentId: M:TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Maths.Direction2,MLEM.Maths.Direction2)
  id: OnCameraRotationChanged(MLEM.Maths.Direction2,MLEM.Maths.Direction2)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnCameraRotationChanged(Direction2, Direction2)
  nameWithType: MapObject.OnCameraRotationChanged(Direction2, Direction2)
  fullName: TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Maths.Direction2, MLEM.Maths.Direction2)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is invoked when the game's camera rotation changes.

    Additionally, the old and new rotations are passed.
  example: []
  syntax:
    content: public virtual void OnCameraRotationChanged(Direction2 oldRotation, Direction2 newRotation)
    parameters:
    - id: oldRotation
      type: MLEM.Maths.Direction2
      description: The old camera rotation
    - id: newRotation
      type: MLEM.Maths.Direction2
      description: The new camera rotation
    content.vb: Public Overridable Sub OnCameraRotationChanged(oldRotation As Direction2, newRotation As Direction2)
  overload: TinyLife.Objects.MapObject.OnCameraRotationChanged*
- uid: TinyLife.Objects.MapObject.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
  commentId: M:TinyLife.Objects.MapObject.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
  id: OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnCurrentGameMapChanged(Map, Map)
  nameWithType: MapObject.OnCurrentGameMapChanged(Map, Map)
  fullName: TinyLife.Objects.MapObject.OnCurrentGameMapChanged(TinyLife.World.Map, TinyLife.World.Map)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is invoked when the game's <xref href="TinyLife.GameImpl.CurrentMap" data-throw-if-not-resolved="false"></xref> is changed, ie when the camera is moved to a different map.

    For a method that is invoked when this object's <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> is changed, see <xref href="TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Vector2%7d%2cSystem.Nullable%7bSystem.Single%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void OnCurrentGameMapChanged(Map oldMap, Map newMap)
    parameters:
    - id: oldMap
      type: TinyLife.World.Map
      description: The previous map.
    - id: newMap
      type: TinyLife.World.Map
      description: The new map.
    content.vb: Public Overridable Sub OnCurrentGameMapChanged(oldMap As Map, newMap As Map)
  overload: TinyLife.Objects.MapObject.OnCurrentGameMapChanged*
- uid: TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
  commentId: M:TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
  id: ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: ModifyActionCategories(ActionType, ActionInfo, bool, List<string>)
  nameWithType: MapObject.ModifyActionCategories(ActionType, ActionInfo, bool, List<string>)
  fullName: TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool, System.Collections.Generic.List<string>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A method that allows changing the <xref href="TinyLife.Actions.ActionType.TypeSettings.Categories" data-throw-if-not-resolved="false"></xref> of an action when displaying it in the ring menu.

    This is used by objects like the <xref href="TinyLife.Objects.ObjectCategory.LandlinePhone" data-throw-if-not-resolved="false"></xref> to remove the "Phone..." category if the action is not invoked on <xref href="TinyLife.Objects.ObjectCategory.Self" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void ModifyActionCategories(ActionType type, ActionInfo info, bool isAuxiliary, List<string> categories)
    parameters:
    - id: type
      type: TinyLife.Actions.ActionType
      description: The action type.
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object is auxiliary.
    - id: categories
      type: System.Collections.Generic.List{System.String}
      description: The categories.
    content.vb: Public Overridable Sub ModifyActionCategories(type As ActionType, info As ActionInfo, isAuxiliary As Boolean, categories As List(Of String))
  overload: TinyLife.Objects.MapObject.ModifyActionCategories*
  nameWithType.vb: MapObject.ModifyActionCategories(ActionType, ActionInfo, Boolean, List(Of String))
  fullName.vb: TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean, System.Collections.Generic.List(Of String))
  name.vb: ModifyActionCategories(ActionType, ActionInfo, Boolean, List(Of String))
- uid: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  id: GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: GetEfficiencyModifier(PersonLike, ActionInfo, bool, SkillType, float)
  nameWithType: MapObject.GetEfficiencyModifier(PersonLike, ActionInfo, bool, SkillType, float)
  fullName: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.Skills.SkillType, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the efficiency modifier that this object multiplies the person's productivity with.

    This method is automatically called in <xref href="TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single%2cTinyLife.Actions.ActionInfo%2cTinyLife.Skills.SkillType%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.

    This action is invoked for all <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> of the passed <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref>.

    By default, this method returns 1, meaning the person's efficiency will not be influenced.
  example: []
  syntax:
    content: public virtual float GetEfficiencyModifier(PersonLike person, ActionInfo info, bool isAuxiliary, SkillType skill, float levelModifier)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person whose efficiency should be influenced
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object is auxiliary (or the main action object)
    - id: skill
      type: TinyLife.Skills.SkillType
      description: The skill that should influence the efficiency
    - id: levelModifier
      type: System.Single
      description: The level modifier for the <code class="paramref">skill</code>
    return:
      type: System.Single
      description: The efficiency modifier for this object
    content.vb: Public Overridable Function GetEfficiencyModifier(person As PersonLike, info As ActionInfo, isAuxiliary As Boolean, skill As SkillType, levelModifier As Single) As Single
  overload: TinyLife.Objects.MapObject.GetEfficiencyModifier*
  nameWithType.vb: MapObject.GetEfficiencyModifier(PersonLike, ActionInfo, Boolean, SkillType, Single)
  fullName.vb: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Skills.SkillType, Single)
  name.vb: GetEfficiencyModifier(PersonLike, ActionInfo, Boolean, SkillType, Single)
- uid: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  commentId: M:TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  id: OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnRandomQuality(PersonLike, ActionInfo, bool, SkillType, Random, bool, Dictionary<Quality, float>)
  nameWithType: MapObject.OnRandomQuality(PersonLike, ActionInfo, bool, SkillType, Random, bool, Dictionary<Quality, float>)
  fullName: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.Skills.SkillType, System.Random, bool, System.Collections.Generic.Dictionary<TinyLife.Skills.Quality, float>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A method that is invoked when a random quality is determined based on an action and skill in <xref href="TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike%2cSystem.Random%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean%2cTinyLife.Emotions.IEmotionSource%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    This method is invoked for all <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> of the passed <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void OnRandomQuality(PersonLike person, ActionInfo info, bool isAuxiliary, SkillType skill, Random random, bool alwaysAllowAverage, Dictionary<Quality, float> weights)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person.
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object is auxiliary (or the main action object).
    - id: skill
      type: TinyLife.Skills.SkillType
      description: The skill.
    - id: random
      type: System.Random
      description: The <xref href="System.Random" data-throw-if-not-resolved="false"></xref> instance used for determining the quality.
    - id: alwaysAllowAverage
      type: System.Boolean
      description: Whether the <xref href="TinyLife.Skills.Quality.Average" data-throw-if-not-resolved="false"></xref> quality should always be available as an option.
    - id: weights
      type: System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}
      description: The weights for each quality. This collection contains keys for all <xref href="TinyLife.Skills.Quality" data-throw-if-not-resolved="false"></xref> values, and entries should not be removed, only modified.
    content.vb: Public Overridable Sub OnRandomQuality(person As PersonLike, info As ActionInfo, isAuxiliary As Boolean, skill As SkillType, random As Random, alwaysAllowAverage As Boolean, weights As Dictionary(Of Quality, Single))
  overload: TinyLife.Objects.MapObject.OnRandomQuality*
  nameWithType.vb: MapObject.OnRandomQuality(PersonLike, ActionInfo, Boolean, SkillType, Random, Boolean, Dictionary(Of Quality, Single))
  fullName.vb: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Skills.SkillType, System.Random, Boolean, System.Collections.Generic.Dictionary(Of TinyLife.Skills.Quality, Single))
  name.vb: OnRandomQuality(PersonLike, ActionInfo, Boolean, SkillType, Random, Boolean, Dictionary(Of Quality, Single))
- uid: TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  commentId: M:TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  id: GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: GetRestoreNeedModifier(PersonLike, ActionInfo, bool, NeedType)
  nameWithType: MapObject.GetRestoreNeedModifier(PersonLike, ActionInfo, bool, NeedType)
  fullName: TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.NeedType)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the modifier that this object multiplies the person's restored need with.

    This method is automatically called in <xref href="TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType%2cSystem.Single%2cTinyLife.Actions.ActionInfo%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.

    This action is invoked for all <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> of the passed <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref>.

    By default, this method returns 1, meaning the need restoration modifier will not be influenced.
  example: []
  syntax:
    content: public virtual float GetRestoreNeedModifier(PersonLike person, ActionInfo info, bool isAuxiliary, NeedType type)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person whose need restoration should be influenced.
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object is auxiliary (or the main action object).
    - id: type
      type: TinyLife.NeedType
      description: The type of need that is being restored.
    return:
      type: System.Single
      description: The need restoration modifier for this object.
    content.vb: Public Overridable Function GetRestoreNeedModifier(person As PersonLike, info As ActionInfo, isAuxiliary As Boolean, type As NeedType) As Single
  overload: TinyLife.Objects.MapObject.GetRestoreNeedModifier*
  nameWithType.vb: MapObject.GetRestoreNeedModifier(PersonLike, ActionInfo, Boolean, NeedType)
  fullName.vb: TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.NeedType)
  name.vb: GetRestoreNeedModifier(PersonLike, ActionInfo, Boolean, NeedType)
- uid: TinyLife.Objects.MapObject.IsFreeSpot(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Objects.MapObject.IsFreeSpot(Microsoft.Xna.Framework.Point)
  id: IsFreeSpot(Microsoft.Xna.Framework.Point)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: IsFreeSpot(Point)
  nameWithType: MapObject.IsFreeSpot(Point)
  fullName: TinyLife.Objects.MapObject.IsFreeSpot(Microsoft.Xna.Framework.Point)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns whether a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> should be allowed to occupy or pass the given <code class="paramref">position</code>, which is contained in this object's intersection area (<xref href="TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)" data-throw-if-not-resolved="false"></xref>).

    By default, <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> objects return whether they have the <xref href="TinyLife.Objects.ObjectCategory.NonColliding" data-throw-if-not-resolved="false"></xref> category, and all other objects return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.

    Note that, if this object moves, <xref href="TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> should be invoked for its previous and resulting <xref href="TinyLife.Objects.MapObject.Position" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual bool IsFreeSpot(Point position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Point
      description: The position whose path cost modifier is being calculated.
    return:
      type: System.Boolean
      description: Whether a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> can occupy the given <code class="paramref">position</code>.
    content.vb: Public Overridable Function IsFreeSpot(position As Point) As Boolean
  overload: TinyLife.Objects.MapObject.IsFreeSpot*
- uid: TinyLife.Objects.MapObject.GetPathCostModifier(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Objects.MapObject.GetPathCostModifier(Microsoft.Xna.Framework.Point)
  id: GetPathCostModifier(Microsoft.Xna.Framework.Point)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: GetPathCostModifier(Point)
  nameWithType: MapObject.GetPathCostModifier(Point)
  fullName: TinyLife.Objects.MapObject.GetPathCostModifier(Microsoft.Xna.Framework.Point)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns a modifier that indicates the "cost" for pathfinding over this object.

    If this object is a <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> object, it has to have the <xref href="TinyLife.Objects.ObjectCategory.NonColliding" data-throw-if-not-resolved="false"></xref> category for the returned value to have an effect.

    Note that, if this object moves, <xref href="TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> should be invoked for its previous and resulting <xref href="TinyLife.Objects.MapObject.Position" data-throw-if-not-resolved="false"></xref>.

    By default, this method returns 0, meaning no additional pathfinding cost is added.
  example: []
  syntax:
    content: public virtual float GetPathCostModifier(Point position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Point
      description: The position whose path cost modifier is being calculated.
    return:
      type: System.Single
      description: This object's path cost modifier for the given <code class="paramref">position</code>
    content.vb: Public Overridable Function GetPathCostModifier(position As Point) As Single
  overload: TinyLife.Objects.MapObject.GetPathCostModifier*
- uid: TinyLife.Objects.MapObject.ResetToStatic(System.Boolean,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.ResetToStatic(System.Boolean,System.Boolean)
  id: ResetToStatic(System.Boolean,System.Boolean)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: ResetToStatic(bool, bool)
  nameWithType: MapObject.ResetToStatic(bool, bool)
  fullName: TinyLife.Objects.MapObject.ResetToStatic(bool, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Resets this map object to a static state when the <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> that is on is exported.
  example: []
  syntax:
    content: public virtual bool ResetToStatic(bool thorough, bool custom)
    parameters:
    - id: thorough
      type: System.Boolean
      description: Whether a more thorough reset is expected, which usually involves normalizing additional data and cleaning up player data entirely.
    - id: custom
      type: System.Boolean
      description: Whether the static reset is happening in a custom context, that is, a <xref href="TinyLife.World.Household" data-throw-if-not-resolved="false"></xref> being exported normally rather than through cheats, or a custom <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> being exported.
    return:
      type: System.Boolean
      description: Whether this object should stay on the map after the static reset. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> is returned, this object is removed.
    content.vb: Public Overridable Function ResetToStatic(thorough As Boolean, custom As Boolean) As Boolean
  overload: TinyLife.Objects.MapObject.ResetToStatic*
  nameWithType.vb: MapObject.ResetToStatic(Boolean, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.ResetToStatic(Boolean, Boolean)
  name.vb: ResetToStatic(Boolean, Boolean)
- uid: TinyLife.Objects.MapObject.DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:TinyLife.Objects.MapObject.DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  id: DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: DrawIcon(Element, GameTime, SpriteBatch)
  nameWithType: MapObject.DrawIcon(Element, GameTime, SpriteBatch)
  fullName: TinyLife.Objects.MapObject.DrawIcon(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Draws this object as an icon in UI space. This method is called by the action queue as well as for notifications.

    By default, people draw their <xref href="TinyLife.Objects.PersonLike.Portrait" data-throw-if-not-resolved="false"></xref>, and <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> draws itself in ui space.
  example: []
  syntax:
    content: public virtual bool DrawIcon(Element element, GameTime time, SpriteBatch batch)
    parameters:
    - id: element
      type: MLEM.Ui.Elements.Element
      description: The element to draw the object in.
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game time.
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing.
    return:
      type: System.Boolean
      description: Whether the object was actually drawn as an icon. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> is returned, a replacement icon can be drawn by the caller instead.
    content.vb: Public Overridable Function DrawIcon(element As Element, time As GameTime, batch As SpriteBatch) As Boolean
  overload: TinyLife.Objects.MapObject.DrawIcon*
- uid: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  commentId: M:TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  id: MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: MoveToMap(Map, Vector2?, float?)
  nameWithType: MapObject.MoveToMap(Map, Vector2?, float?)
  fullName: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, float?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Moves this object to the given <code class="paramref">map</code>, changing the current <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> in the process.

    If the object is currently on its <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> (<xref href="TinyLife.Objects.MapObject.IsInWorld" data-throw-if-not-resolved="false"></xref>), then it is removed from it using <xref href="TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)" data-throw-if-not-resolved="false"></xref> and added to the new <code class="paramref">map</code> using <xref href="TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)" data-throw-if-not-resolved="false"></xref>. If the object is not currently on its <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref>, then its map is changed without subsequently adding it to the new <code class="paramref">map</code>.
  example: []
  syntax:
    content: public virtual bool MoveToMap(Map map, Vector2? position = null, float? floor = null)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to move to.
    - id: position
      type: System.Nullable{Microsoft.Xna.Framework.Vector2}
      description: The position on the new map to move to, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to keep it the same.
    - id: floor
      type: System.Nullable{System.Single}
      description: The floor to move to, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to keep it the same.
    return:
      type: System.Boolean
      description: Whether moving to the map was successful, which is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if this object's <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> is already the given <code class="paramref">map</code>. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> is returned, its <xref href="TinyLife.Objects.MapObject.IsInWorld" data-throw-if-not-resolved="false"></xref> state is additionally guaranteed to be the same as it was before this method was called. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> is returned, no action was performed.
    content.vb: Public Overridable Function MoveToMap(map As Map, position As Vector2? = Nothing, floor As Single? = Nothing) As Boolean
  overload: TinyLife.Objects.MapObject.MoveToMap*
  nameWithType.vb: MapObject.MoveToMap(Map, Vector2?, Single?)
  fullName.vb: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, Single?)
  name.vb: MoveToMap(Map, Vector2?, Single?)
- uid: TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
  id: OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: OnPositionChanged(Vector2, float)
  nameWithType: MapObject.OnPositionChanged(Vector2, float)
  fullName: TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A method that is automatically called when this object's <xref href="TinyLife.Objects.MapObject.Position" data-throw-if-not-resolved="false"></xref> changes.

    By default, this method is overriden in <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> to call <xref href="TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.

    Note that this method is also called if this object is not in the world (<xref href="TinyLife.Objects.MapObject.IsInWorld" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: protected virtual void OnPositionChanged(Vector2 lastPosition, float lastFloor)
    parameters:
    - id: lastPosition
      type: Microsoft.Xna.Framework.Vector2
      description: This object's previous position.
    - id: lastFloor
      type: System.Single
      description: This object's previous floor.
    content.vb: Protected Overridable Sub OnPositionChanged(lastPosition As Vector2, lastFloor As Single)
  overload: TinyLife.Objects.MapObject.OnPositionChanged*
  nameWithType.vb: MapObject.OnPositionChanged(Vector2, Single)
  fullName.vb: TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2, Single)
  name.vb: OnPositionChanged(Vector2, Single)
- uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  id: GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: GetFreeActionSpotInfo(PersonLike, ObjectCategory)
  nameWithType: MapObject.GetFreeActionSpotInfo(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the first entry of a set of <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref> instances that represent action spots that the <code class="paramref">person</code> can currently use or interact with.

    By default, an empty collection is returned by <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref>, but relevant spots are returnd by objects like <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ActionInfo GetFreeActionSpotInfo(PersonLike person, ObjectCategory context = null)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person who wants to interact with this object.
    - id: context
      type: TinyLife.Objects.ObjectCategory
      description: The context for which to return free action spots, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to return action spots for any contexts.
    return:
      type: TinyLife.Actions.ActionInfo
      description: The first free action spot, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if there are none.
    content.vb: Public Function GetFreeActionSpotInfo(person As PersonLike, context As ObjectCategory = Nothing) As ActionInfo
  overload: TinyLife.Objects.MapObject.GetFreeActionSpotInfo*
- uid: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  id: SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: SetMapAndValidate(Map, AppliedMigrations)
  nameWithType: MapObject.SetMapAndValidate(Map, AppliedMigrations)
  fullName: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map, TinyLife.Utilities.AppliedMigrations)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Shorthand method for setting this object's <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> and then calling <xref href="TinyLife.Objects.MapObject.ValidateEarly" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)" data-throw-if-not-resolved="false"></xref>.

    If an exception occurs while validating, the exception is caught and <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> is returned.

    If moving an already validated object to a different map is desired, <xref href="TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Vector2%7d%2cSystem.Nullable%7bSystem.Single%7d)" data-throw-if-not-resolved="false"></xref> should be used instead.
  example: []
  syntax:
    content: public bool SetMapAndValidate(Map map, AppliedMigrations appliedMigrations)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to set
    - id: appliedMigrations
      type: TinyLife.Utilities.AppliedMigrations
      description: The set of migrations that have already been applied.
    return:
      type: System.Boolean
      description: false if the object is not valid, true otherwise
    content.vb: Public Function SetMapAndValidate(map As Map, appliedMigrations As AppliedMigrations) As Boolean
  overload: TinyLife.Objects.MapObject.SetMapAndValidate*
- uid: TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  id: HasCategory(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: HasCategory(PersonLike, ObjectCategory)
  nameWithType: MapObject.HasCategory(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A shorthand that checks whether <xref href="TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)" data-throw-if-not-resolved="false"></xref> overlaps with the given <code class="paramref">category</code> flags
  example: []
  syntax:
    content: public bool HasCategory(PersonLike person, ObjectCategory category)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person to query categories for
    - id: category
      type: TinyLife.Objects.ObjectCategory
      description: A set of categories, one of which this object needs to match
    return:
      type: System.Boolean
      description: Whether this object contains at least one of the given categories
    content.vb: Public Function HasCategory(person As PersonLike, category As ObjectCategory) As Boolean
  overload: TinyLife.Objects.MapObject.HasCategory*
- uid: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  id: DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: DoDraw(GameTime, object, Color?, bool, List<Item>)
  nameWithType: MapObject.DoDraw(GameTime, object, Color?, bool, List<StaticSpriteBatch.Item>)
  fullName: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime, object, Microsoft.Xna.Framework.Color?, bool, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Draws this map object, additionally invoking all required events and checking the <xref href="TinyLife.Objects.MapObject.Visibility" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void DoDraw(GameTime time, object batch, Color? color, bool ignoreVisibility, List<StaticSpriteBatch.Item> items)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current time
    - id: batch
      type: System.Object
      description: The sprite batch to use for drawing, which is either a <xref href="Microsoft.Xna.Framework.Graphics.SpriteBatch" data-throw-if-not-resolved="false"></xref> or <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    - id: color
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: The color that should be used instead of this object's actual color. If null, the object's regular color should be used.
    - id: ignoreVisibility
      type: System.Boolean
      description: Whether this object's <xref href="TinyLife.Objects.MapObject.Visibility" data-throw-if-not-resolved="false"></xref> should be ignored.
    - id: items
      type: System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item}
      description: A list of sprite batch items that items should be added to if the <code class="paramref">batch</code> is a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub DoDraw(time As GameTime, batch As Object, color As Color?, ignoreVisibility As Boolean, items As List(Of StaticSpriteBatch.Item))
  overload: TinyLife.Objects.MapObject.DoDraw*
  nameWithType.vb: MapObject.DoDraw(GameTime, Object, Color?, Boolean, List(Of StaticSpriteBatch.Item))
  fullName.vb: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime, Object, Microsoft.Xna.Framework.Color?, Boolean, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: DoDraw(GameTime, Object, Color?, Boolean, List(Of Item))
- uid: TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: DoUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: DoUpdate(GameTime, TimeSpan, float)
  nameWithType: MapObject.DoUpdate(GameTime, TimeSpan, float)
  fullName: TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Updates this map object if it is an <xref href="TinyLife.Objects.IUpdatingObject" data-throw-if-not-resolved="false"></xref>, additionally invoking all required events.
  example: []
  syntax:
    content: public bool DoUpdate(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed since the last call
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Boolean
    content.vb: Public Function DoUpdate(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single) As Boolean
  overload: TinyLife.Objects.MapObject.DoUpdate*
  nameWithType.vb: MapObject.DoUpdate(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: DoUpdate(GameTime, TimeSpan, Single)
- uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
  id: DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
  parent: TinyLife.Objects.MapObject
  langs:
  - csharp
  - vb
  name: DrawColumns(Map, Vector2, float, object, Vector2, TextureRegion, Color, Vector2, Point, List<Item>, bool, ParentInfo, float, SpriteEffects, bool)
  nameWithType: MapObject.DrawColumns(Map, Vector2, float, object, Vector2, TextureRegion, Color, Vector2, Point, List<StaticSpriteBatch.Item>, bool, ParentInfo, float, SpriteEffects, bool)
  fullName: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float, object, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Point, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>, bool, TinyLife.Objects.ParentInfo, float, Microsoft.Xna.Framework.Graphics.SpriteEffects, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Draws the given texture region in multiple rows and columns based on their <code class="paramref">parent</code>'s <xref href="TinyLife.Objects.ParentInfo.AttachmentType" data-throw-if-not-resolved="false"></xref>, which allows for depth calculation in isometric view to be possible.

    Bigger objects, including all furniture, are drawn in this matter.

    When drawing a furniture item, <xref href="TinyLife.Objects.FurnitureType.DrawColumns(TinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Object%2cMicrosoft.Xna.Framework.Vector2%2cMLEM.Maths.Direction2%2cMLEM.Textures.TextureRegion%2cMicrosoft.Xna.Framework.Color%2cSystem.Single%2cSystem.Collections.Generic.List%7bMLEM.Graphics.StaticSpriteBatch.Item%7d%2cSystem.Boolean%2cTinyLife.Objects.ParentInfo%2cSystem.Single%2cMicrosoft.Xna.Framework.Graphics.SpriteEffects)" data-throw-if-not-resolved="false"></xref> should be used instead, which automatically supplies various values based on <xref href="TinyLife.Objects.FurnitureType.HasCategory(TinyLife.Objects.ObjectCategory)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void DrawColumns(Map map, Vector2 position, float floor, object batch, Vector2 drawPos, TextureRegion texture, Color color, Vector2 scale, Point size, List<StaticSpriteBatch.Item> items, bool pivot = true, ParentInfo parent = default, float depthOffset = 0, SpriteEffects effects = SpriteEffects.None, bool editDrawPos = true)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map that the object is on
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position that the object is on, in world space
    - id: floor
      type: System.Single
      description: The floor to draw on.
    - id: batch
      type: System.Object
      description: The sprite batch to draw with, which is either a <xref href="Microsoft.Xna.Framework.Graphics.SpriteBatch" data-throw-if-not-resolved="false"></xref> or <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position to draw at, in draw space
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The texture region to draw
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The color to draw with
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
      description: The scale to draw at
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size, in tiles, that this object has
    - id: items
      type: System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item}
      description: A list of sprite batch items that items should be added to if the <code class="paramref">batch</code> is a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    - id: pivot
      type: System.Boolean
      description: The texture's pivot point, in texture-space pixels
    - id: parent
      type: TinyLife.Objects.ParentInfo
      description: The object's parent object
    - id: depthOffset
      type: System.Single
      description: A value that is added to the calculated object's depth
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: The sprite effects to use when rendering
    - id: editDrawPos
      type: System.Boolean
      description: Whether this object's <code class="paramref">drawPos</code> should be changed based on this object's circumstances, especially based on its <code class="paramref">parent</code>
    content.vb: Public Shared Sub DrawColumns(map As Map, position As Vector2, floor As Single, batch As Object, drawPos As Vector2, texture As TextureRegion, color As Color, scale As Vector2, size As Point, items As List(Of StaticSpriteBatch.Item), pivot As Boolean = True, parent As ParentInfo = Nothing, depthOffset As Single = 0, effects As SpriteEffects = SpriteEffects.None, editDrawPos As Boolean = True)
  overload: TinyLife.Objects.MapObject.DrawColumns*
  nameWithType.vb: MapObject.DrawColumns(Map, Vector2, Single, Object, Vector2, TextureRegion, Color, Vector2, Point, List(Of StaticSpriteBatch.Item), Boolean, ParentInfo, Single, SpriteEffects, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single, Object, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Point, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item), Boolean, TinyLife.Objects.ParentInfo, Single, Microsoft.Xna.Framework.Graphics.SpriteEffects, Boolean)
  name.vb: DrawColumns(Map, Vector2, Single, Object, Vector2, TextureRegion, Color, Vector2, Point, List(Of Item), Boolean, ParentInfo, Single, SpriteEffects, Boolean)
references:
- uid: TinyLife.Objects.MapObject.Map
  commentId: P:TinyLife.Objects.MapObject.Map
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Map
  name: Map
  nameWithType: MapObject.Map
  fullName: TinyLife.Objects.MapObject.Map
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Objects.MapObject.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<MapObject>(MapObject)
  nameWithType: Extensions.JsonCopy<MapObject>(MapObject)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.MapObject>(TinyLife.Objects.MapObject)
  nameWithType.vb: Extensions.JsonCopy(Of MapObject)(MapObject)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.MapObject)(TinyLife.Objects.MapObject)
  name.vb: JsonCopy(Of MapObject)(MapObject)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.MapObject)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.MapObject)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.Action{TinyLife.Objects.MapObject}
  commentId: T:System.Action{TinyLife.Objects.MapObject}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<MapObject>
  nameWithType: Action<MapObject>
  fullName: System.Action<TinyLife.Objects.MapObject>
  nameWithType.vb: Action(Of MapObject)
  fullName.vb: System.Action(Of TinyLife.Objects.MapObject)
  name.vb: Action(Of MapObject)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Validate_TinyLife_Utilities_AppliedMigrations_
  name: Validate(AppliedMigrations)
  nameWithType: MapObject.Validate(AppliedMigrations)
  fullName: TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Validate_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Validate_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
- uid: TinyLife.Objects.MapObject.ValidateEarly
  commentId: M:TinyLife.Objects.MapObject.ValidateEarly
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ValidateEarly
  name: ValidateEarly()
  nameWithType: MapObject.ValidateEarly()
  fullName: TinyLife.Objects.MapObject.ValidateEarly()
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.ValidateEarly
    name: ValidateEarly
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ValidateEarly
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.ValidateEarly
    name: ValidateEarly
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ValidateEarly
  - name: (
  - name: )
- uid: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Draw_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  name: Draw(GameTime, object, Vector2, Color?, List<Item>)
  nameWithType: MapObject.Draw(GameTime, object, Vector2, Color?, List<StaticSpriteBatch.Item>)
  fullName: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime, object, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>)
  nameWithType.vb: MapObject.Draw(GameTime, Object, Vector2, Color?, List(Of StaticSpriteBatch.Item))
  fullName.vb: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime, Object, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: Draw(GameTime, Object, Vector2, Color?, List(Of Item))
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
    name: Draw
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Draw_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
    name: Draw
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Draw_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
  - name: )
- uid: TinyLife.Objects.MapObject.OnEventsAttachable
  commentId: E:TinyLife.Objects.MapObject.OnEventsAttachable
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnEventsAttachable
  name: OnEventsAttachable
  nameWithType: MapObject.OnEventsAttachable
  fullName: TinyLife.Objects.MapObject.OnEventsAttachable
- uid: TinyLife.Objects.MapObject.DrawDelegate
  commentId: T:TinyLife.Objects.MapObject.DrawDelegate
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject.DrawDelegate
  nameWithType: MapObject.DrawDelegate
  fullName: TinyLife.Objects.MapObject.DrawDelegate
  spec.csharp:
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: .
  - uid: TinyLife.Objects.MapObject.DrawDelegate
    name: DrawDelegate
    href: TinyLife.Objects.MapObject.DrawDelegate.html
  spec.vb:
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: .
  - uid: TinyLife.Objects.MapObject.DrawDelegate
    name: DrawDelegate
    href: TinyLife.Objects.MapObject.DrawDelegate.html
- uid: Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)
  isExternal: true
  name: Update(GameTime)
  nameWithType: IUpdateable.Update(GameTime)
  fullName: Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.IUpdateable
  commentId: T:Microsoft.Xna.Framework.IUpdateable
  isExternal: true
  name: IUpdateable
  nameWithType: IUpdateable
  fullName: Microsoft.Xna.Framework.IUpdateable
- uid: TinyLife.Objects.MapObject.UpdateDelegate
  commentId: T:TinyLife.Objects.MapObject.UpdateDelegate
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject.UpdateDelegate
  nameWithType: MapObject.UpdateDelegate
  fullName: TinyLife.Objects.MapObject.UpdateDelegate
  spec.csharp:
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: .
  - uid: TinyLife.Objects.MapObject.UpdateDelegate
    name: UpdateDelegate
    href: TinyLife.Objects.MapObject.UpdateDelegate.html
  spec.vb:
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: .
  - uid: TinyLife.Objects.MapObject.UpdateDelegate
    name: UpdateDelegate
    href: TinyLife.Objects.MapObject.UpdateDelegate.html
- uid: TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  commentId: M:TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetHoverInfo_MLEM_Ui_Elements_Tooltip_
  name: GetHoverInfo(Tooltip)
  nameWithType: MapObject.GetHoverInfo(Tooltip)
  fullName: TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
    name: GetHoverInfo
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetHoverInfo_MLEM_Ui_Elements_Tooltip_
  - name: (
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
    name: GetHoverInfo
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetHoverInfo_MLEM_Ui_Elements_Tooltip_
  - name: (
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: )
- uid: System.Action{MLEM.Ui.Elements.Tooltip}
  commentId: T:System.Action{MLEM.Ui.Elements.Tooltip}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Tooltip>
  nameWithType: Action<Tooltip>
  fullName: System.Action<MLEM.Ui.Elements.Tooltip>
  nameWithType.vb: Action(Of Tooltip)
  fullName.vb: System.Action(Of MLEM.Ui.Elements.Tooltip)
  name.vb: Action(Of Tooltip)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: )
- uid: TinyLife.Debug
  commentId: T:TinyLife.Debug
  href: TinyLife.Debug.html
  name: Debug
  nameWithType: Debug
  fullName: TinyLife.Debug
- uid: System.Action{System.Collections.Generic.List{System.String}}
  commentId: T:System.Action{System.Collections.Generic.List{System.String}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<List<string>>
  nameWithType: Action<List<string>>
  fullName: System.Action<System.Collections.Generic.List<string>>
  nameWithType.vb: Action(Of List(Of String))
  fullName.vb: System.Action(Of System.Collections.Generic.List(Of String))
  name.vb: Action(Of List(Of String))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: TinyLife.Objects.MapObject.Position*
  commentId: Overload:TinyLife.Objects.MapObject.Position
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Position
  name: Position
  nameWithType: MapObject.Position
  fullName: TinyLife.Objects.MapObject.Position
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Objects.MapObject.Floor*
  commentId: Overload:TinyLife.Objects.MapObject.Floor
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Floor
  name: Floor
  nameWithType: MapObject.Floor
  fullName: TinyLife.Objects.MapObject.Floor
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Objects.MapObject.ParentInfo
  commentId: P:TinyLife.Objects.MapObject.ParentInfo
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ParentInfo
  name: ParentInfo
  nameWithType: MapObject.ParentInfo
  fullName: TinyLife.Objects.MapObject.ParentInfo
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects.MapObject.ParentInfo*
  commentId: Overload:TinyLife.Objects.MapObject.ParentInfo
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ParentInfo
  name: ParentInfo
  nameWithType: MapObject.ParentInfo
  fullName: TinyLife.Objects.MapObject.ParentInfo
- uid: TinyLife.Objects.ParentInfo
  commentId: T:TinyLife.Objects.ParentInfo
  parent: TinyLife.Objects
  href: TinyLife.Objects.ParentInfo.html
  name: ParentInfo
  nameWithType: ParentInfo
  fullName: TinyLife.Objects.ParentInfo
- uid: TinyLife.Objects.Visibility.WhenVisible
  commentId: F:TinyLife.Objects.Visibility.WhenVisible
  href: TinyLife.Objects.Visibility.html#TinyLife_Objects_Visibility_WhenVisible
  name: WhenVisible
  nameWithType: Visibility.WhenVisible
  fullName: TinyLife.Objects.Visibility.WhenVisible
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Visibility
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Visibility
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_Visibility
  name: Visibility
  nameWithType: FurnitureType.TypeSettings.Visibility
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Visibility
- uid: TinyLife.Objects.MapObject.Visibility*
  commentId: Overload:TinyLife.Objects.MapObject.Visibility
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Visibility
  name: Visibility
  nameWithType: MapObject.Visibility
  fullName: TinyLife.Objects.MapObject.Visibility
- uid: TinyLife.Objects.Visibility
  commentId: T:TinyLife.Objects.Visibility
  parent: TinyLife.Objects
  href: TinyLife.Objects.Visibility.html
  name: Visibility
  nameWithType: Visibility
  fullName: TinyLife.Objects.Visibility
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TinyLife.Objects.MapObject.Id*
  commentId: Overload:TinyLife.Objects.MapObject.Id
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Id
  name: Id
  nameWithType: MapObject.Id
  fullName: TinyLife.Objects.MapObject.Id
- uid: TinyLife.Objects.MapObject.IsInWorld
  commentId: P:TinyLife.Objects.MapObject.IsInWorld
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_IsInWorld
  name: IsInWorld
  nameWithType: MapObject.IsInWorld
  fullName: TinyLife.Objects.MapObject.IsInWorld
- uid: TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)
  commentId: M:TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)
  href: TinyLife.World.Map.html#TinyLife_World_Map_AddObject_TinyLife_Objects_MapObject_
  name: AddObject(MapObject)
  nameWithType: Map.AddObject(MapObject)
  fullName: TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)
  spec.csharp:
  - uid: TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)
    name: AddObject
    href: TinyLife.World.Map.html#TinyLife_World_Map_AddObject_TinyLife_Objects_MapObject_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)
    name: AddObject
    href: TinyLife.World.Map.html#TinyLife_World_Map_AddObject_TinyLife_Objects_MapObject_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
- uid: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  commentId: M:TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_MoveToMap_TinyLife_World_Map_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Nullable_System_Single__
  name: MoveToMap(Map, Vector2?, float?)
  nameWithType: MapObject.MoveToMap(Map, Vector2?, float?)
  fullName: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, float?)
  nameWithType.vb: MapObject.MoveToMap(Map, Vector2?, Single?)
  fullName.vb: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, Single?)
  name.vb: MoveToMap(Map, Vector2?, Single?)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
    name: MoveToMap
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_MoveToMap_TinyLife_World_Map_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Nullable_System_Single__
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
    name: MoveToMap
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_MoveToMap_TinyLife_World_Map_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Nullable_System_Single__
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: )
- uid: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_SetMapAndValidate_TinyLife_World_Map_TinyLife_Utilities_AppliedMigrations_
  name: SetMapAndValidate(Map, AppliedMigrations)
  nameWithType: MapObject.SetMapAndValidate(Map, AppliedMigrations)
  fullName: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map, TinyLife.Utilities.AppliedMigrations)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
    name: SetMapAndValidate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_SetMapAndValidate_TinyLife_World_Map_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
    name: SetMapAndValidate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_SetMapAndValidate_TinyLife_World_Map_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
- uid: TinyLife.Objects.MapObject.Map*
  commentId: Overload:TinyLife.Objects.MapObject.Map
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Map
  name: Map
  nameWithType: MapObject.Map
  fullName: TinyLife.Objects.MapObject.Map
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.World.Lot
  commentId: T:TinyLife.World.Lot
  parent: TinyLife.World
  href: TinyLife.World.Lot.html
  name: Lot
  nameWithType: Lot
  fullName: TinyLife.World.Lot
- uid: TinyLife.Objects.MapObject.CurrentLot*
  commentId: Overload:TinyLife.Objects.MapObject.CurrentLot
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_CurrentLot
  name: CurrentLot
  nameWithType: MapObject.CurrentLot
  fullName: TinyLife.Objects.MapObject.CurrentLot
- uid: TinyLife.World.Room
  commentId: T:TinyLife.World.Room
  parent: TinyLife.World
  href: TinyLife.World.Room.html
  name: Room
  nameWithType: Room
  fullName: TinyLife.World.Room
- uid: TinyLife.Objects.MapObject.CurrentRoom*
  commentId: Overload:TinyLife.Objects.MapObject.CurrentRoom
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_CurrentRoom
  name: CurrentRoom
  nameWithType: MapObject.CurrentRoom
  fullName: TinyLife.Objects.MapObject.CurrentRoom
- uid: TinyLife.Objects.MapObject.IsInWorld*
  commentId: Overload:TinyLife.Objects.MapObject.IsInWorld
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_IsInWorld
  name: IsInWorld
  nameWithType: MapObject.IsInWorld
  fullName: TinyLife.Objects.MapObject.IsInWorld
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.MapObject.HoldingPerson*
  commentId: Overload:TinyLife.Objects.MapObject.HoldingPerson
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_HoldingPerson
  name: HoldingPerson
  nameWithType: MapObject.HoldingPerson
  fullName: TinyLife.Objects.MapObject.HoldingPerson
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Objects.MapObject.#ctor*
  commentId: Overload:TinyLife.Objects.MapObject.#ctor
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject__ctor_System_Guid_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_
  name: MapObject
  nameWithType: MapObject.MapObject
  fullName: TinyLife.Objects.MapObject.MapObject
  nameWithType.vb: MapObject.New
  fullName.vb: TinyLife.Objects.MapObject.New
  name.vb: New
- uid: TinyLife.Objects.MapObject.Position
  commentId: P:TinyLife.Objects.MapObject.Position
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Position
  name: Position
  nameWithType: MapObject.Position
  fullName: TinyLife.Objects.MapObject.Position
- uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Point_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Boolean_
  name: DrawColumns(Map, Vector2, float, object, Vector2, TextureRegion, Color, Vector2, Point, List<Item>, bool, ParentInfo, float, SpriteEffects, bool)
  nameWithType: MapObject.DrawColumns(Map, Vector2, float, object, Vector2, TextureRegion, Color, Vector2, Point, List<StaticSpriteBatch.Item>, bool, ParentInfo, float, SpriteEffects, bool)
  fullName: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float, object, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Point, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>, bool, TinyLife.Objects.ParentInfo, float, Microsoft.Xna.Framework.Graphics.SpriteEffects, bool)
  nameWithType.vb: MapObject.DrawColumns(Map, Vector2, Single, Object, Vector2, TextureRegion, Color, Vector2, Point, List(Of StaticSpriteBatch.Item), Boolean, ParentInfo, Single, SpriteEffects, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single, Object, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Point, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item), Boolean, TinyLife.Objects.ParentInfo, Single, Microsoft.Xna.Framework.Graphics.SpriteEffects, Boolean)
  name.vb: DrawColumns(Map, Vector2, Single, Object, Vector2, TextureRegion, Color, Vector2, Point, List(Of Item), Boolean, ParentInfo, Single, SpriteEffects, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
    name: DrawColumns
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Point_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Boolean_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
    name: DrawColumns
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Point_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Boolean_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  href: TinyLife.World.Map.html#TinyLife_World_Map_GetDepth_Microsoft_Xna_Framework_Vector2_System_Single_System_Single_System_Boolean_System_Boolean_System_Boolean_
  name: GetDepth(Vector2, float, float, bool, bool, bool)
  nameWithType: Map.GetDepth(Vector2, float, float, bool, bool, bool)
  fullName: TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2, float, float, bool, bool, bool)
  nameWithType.vb: Map.GetDepth(Vector2, Single, Single, Boolean, Boolean, Boolean)
  fullName.vb: TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2, Single, Single, Boolean, Boolean, Boolean)
  name.vb: GetDepth(Vector2, Single, Single, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)
    name: GetDepth
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetDepth_Microsoft_Xna_Framework_Vector2_System_Single_System_Single_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)
    name: GetDepth
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetDepth_Microsoft_Xna_Framework_Vector2_System_Single_System_Single_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DoDraw_Microsoft_Xna_Framework_GameTime_System_Object_System_Nullable_Microsoft_Xna_Framework_Color__System_Boolean_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  name: DoDraw(GameTime, object, Color?, bool, List<Item>)
  nameWithType: MapObject.DoDraw(GameTime, object, Color?, bool, List<StaticSpriteBatch.Item>)
  fullName: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime, object, Microsoft.Xna.Framework.Color?, bool, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>)
  nameWithType.vb: MapObject.DoDraw(GameTime, Object, Color?, Boolean, List(Of StaticSpriteBatch.Item))
  fullName.vb: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime, Object, Microsoft.Xna.Framework.Color?, Boolean, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: DoDraw(GameTime, Object, Color?, Boolean, List(Of Item))
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
    name: DoDraw
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DoDraw_Microsoft_Xna_Framework_GameTime_System_Object_System_Nullable_Microsoft_Xna_Framework_Color__System_Boolean_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
    name: DoDraw
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DoDraw_Microsoft_Xna_Framework_GameTime_System_Object_System_Nullable_Microsoft_Xna_Framework_Color__System_Boolean_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
  - name: )
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: MLEM.Graphics.StaticSpriteBatch
  commentId: T:MLEM.Graphics.StaticSpriteBatch
  isExternal: true
  name: StaticSpriteBatch
  nameWithType: StaticSpriteBatch
  fullName: MLEM.Graphics.StaticSpriteBatch
- uid: TinyLife.Objects.MapObject.Draw*
  commentId: Overload:TinyLife.Objects.MapObject.Draw
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Draw_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  name: Draw
  nameWithType: MapObject.Draw
  fullName: TinyLife.Objects.MapObject.Draw
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.Nullable{Microsoft.Xna.Framework.Color}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: Microsoft.Xna.Framework.Color?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item}
  commentId: T:System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<StaticSpriteBatch.Item>
  nameWithType: List<StaticSpriteBatch.Item>
  fullName: System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>
  nameWithType.vb: List(Of StaticSpriteBatch.Item)
  fullName.vb: System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item)
  name.vb: List(Of StaticSpriteBatch.Item)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.World.Map.GetObjects``1(MLEM.Maths.RectangleF)
  commentId: M:TinyLife.World.Map.GetObjects``1(MLEM.Maths.RectangleF)
  isExternal: true
  href: TinyLife.World.Map.html#TinyLife_World_Map_GetObjects__1_MLEM_Maths_RectangleF_
  name: GetObjects<T>(RectangleF)
  nameWithType: Map.GetObjects<T>(RectangleF)
  fullName: TinyLife.World.Map.GetObjects<T>(MLEM.Maths.RectangleF)
  nameWithType.vb: Map.GetObjects(Of T)(RectangleF)
  fullName.vb: TinyLife.World.Map.GetObjects(Of T)(MLEM.Maths.RectangleF)
  name.vb: GetObjects(Of T)(RectangleF)
  spec.csharp:
  - uid: TinyLife.World.Map.GetObjects``1(MLEM.Maths.RectangleF)
    name: GetObjects
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetObjects__1_MLEM_Maths_RectangleF_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.GetObjects``1(MLEM.Maths.RectangleF)
    name: GetObjects
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetObjects__1_MLEM_Maths_RectangleF_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
- uid: TinyLife.Objects.MapObject.Intersects*
  commentId: Overload:TinyLife.Objects.MapObject.Intersects
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Intersects_MLEM_Maths_RectangleF_
  name: Intersects
  nameWithType: MapObject.Intersects
  fullName: TinyLife.Objects.MapObject.Intersects
- uid: MLEM.Maths.RectangleF
  commentId: T:MLEM.Maths.RectangleF
  parent: MLEM.Maths
  isExternal: true
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Maths.RectangleF
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  isExternal: true
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
- uid: TinyLife.Objects.MapObject.OnValidatedEarly
  commentId: E:TinyLife.Objects.MapObject.OnValidatedEarly
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnValidatedEarly
  name: OnValidatedEarly
  nameWithType: MapObject.OnValidatedEarly
  fullName: TinyLife.Objects.MapObject.OnValidatedEarly
- uid: TinyLife.Objects.MapObject.ValidateEarly*
  commentId: Overload:TinyLife.Objects.MapObject.ValidateEarly
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ValidateEarly
  name: ValidateEarly
  nameWithType: MapObject.ValidateEarly
  fullName: TinyLife.Objects.MapObject.ValidateEarly
- uid: TinyLife.Objects.MapObject.OnValidated
  commentId: E:TinyLife.Objects.MapObject.OnValidated
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnValidated
  name: OnValidated
  nameWithType: MapObject.OnValidated
  fullName: TinyLife.Objects.MapObject.OnValidated
- uid: TinyLife.Objects.MapObject.Validate*
  commentId: Overload:TinyLife.Objects.MapObject.Validate
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Validate_TinyLife_Utilities_AppliedMigrations_
  name: Validate
  nameWithType: MapObject.Validate
  fullName: TinyLife.Objects.MapObject.Validate
- uid: TinyLife.Utilities.AppliedMigrations
  commentId: T:TinyLife.Utilities.AppliedMigrations
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.AppliedMigrations.html
  name: AppliedMigrations
  nameWithType: AppliedMigrations
  fullName: TinyLife.Utilities.AppliedMigrations
- uid: TinyLife.Objects.ObjectCategory
  commentId: T:TinyLife.Objects.ObjectCategory
  parent: TinyLife.Objects
  href: TinyLife.Objects.ObjectCategory.html
  name: ObjectCategory
  nameWithType: ObjectCategory
  fullName: TinyLife.Objects.ObjectCategory
- uid: TinyLife.Objects.MapObject.GetCategories*
  commentId: Overload:TinyLife.Objects.MapObject.GetCategories
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetCategories_TinyLife_Objects_PersonLike_
  name: GetCategories
  nameWithType: MapObject.GetCategories
  fullName: TinyLife.Objects.MapObject.GetCategories
- uid: TinyLife.Objects.MapObject.OnAdded*
  commentId: Overload:TinyLife.Objects.MapObject.OnAdded
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnAdded
  name: OnAdded
  nameWithType: MapObject.OnAdded
  fullName: TinyLife.Objects.MapObject.OnAdded
- uid: TinyLife.Objects.MapObject.OnRemoved*
  commentId: Overload:TinyLife.Objects.MapObject.OnRemoved
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnRemoved
  name: OnRemoved
  nameWithType: MapObject.OnRemoved
  fullName: TinyLife.Objects.MapObject.OnRemoved
- uid: TinyLife.Objects.MapObject.OnGetHoverInfo
  commentId: E:TinyLife.Objects.MapObject.OnGetHoverInfo
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnGetHoverInfo
  name: OnGetHoverInfo
  nameWithType: MapObject.OnGetHoverInfo
  fullName: TinyLife.Objects.MapObject.OnGetHoverInfo
- uid: TinyLife.Objects.MapObject.GetHoverInfo*
  commentId: Overload:TinyLife.Objects.MapObject.GetHoverInfo
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetHoverInfo_MLEM_Ui_Elements_Tooltip_
  name: GetHoverInfo
  nameWithType: MapObject.GetHoverInfo
  fullName: TinyLife.Objects.MapObject.GetHoverInfo
- uid: MLEM.Ui.Elements.Tooltip
  commentId: T:MLEM.Ui.Elements.Tooltip
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Tooltip
  nameWithType: Tooltip
  fullName: MLEM.Ui.Elements.Tooltip
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: TinyLife.Objects.MapObject.OnGetDebugLines
  commentId: E:TinyLife.Objects.MapObject.OnGetDebugLines
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnGetDebugLines
  name: OnGetDebugLines
  nameWithType: MapObject.OnGetDebugLines
  fullName: TinyLife.Objects.MapObject.OnGetDebugLines
- uid: TinyLife.Objects.MapObject.GetDebugLines*
  commentId: Overload:TinyLife.Objects.MapObject.GetDebugLines
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetDebugLines_TinyLife_GameImpl_System_Collections_Generic_List_System_String__
  name: GetDebugLines
  nameWithType: MapObject.GetDebugLines
  fullName: TinyLife.Objects.MapObject.GetDebugLines
- uid: TinyLife.GameImpl
  commentId: T:TinyLife.GameImpl
  parent: TinyLife
  href: TinyLife.GameImpl.html
  name: GameImpl
  nameWithType: GameImpl
  fullName: TinyLife.GameImpl
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.Objects.PersonAi
  commentId: T:TinyLife.Objects.PersonAi
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonAi.html
  name: PersonAi
  nameWithType: PersonAi
  fullName: TinyLife.Objects.PersonAi
- uid: TinyLife.Objects.ObjectCategory.SingleBed
  commentId: F:TinyLife.Objects.ObjectCategory.SingleBed
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_SingleBed
  name: SingleBed
  nameWithType: ObjectCategory.SingleBed
  fullName: TinyLife.Objects.ObjectCategory.SingleBed
- uid: TinyLife.Objects.ObjectCategory.DoubleBed
  commentId: F:TinyLife.Objects.ObjectCategory.DoubleBed
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_DoubleBed
  name: DoubleBed
  nameWithType: ObjectCategory.DoubleBed
  fullName: TinyLife.Objects.ObjectCategory.DoubleBed
- uid: TinyLife.Objects.Person.LastBedSleptIn
  commentId: F:TinyLife.Objects.Person.LastBedSleptIn
  href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_LastBedSleptIn
  name: LastBedSleptIn
  nameWithType: Person.LastBedSleptIn
  fullName: TinyLife.Objects.Person.LastBedSleptIn
- uid: TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetAiPriorityForObject_TinyLife_Objects_MapObject_TinyLife_Objects_ObjectCategory_
  name: GetAiPriorityForObject(MapObject, ObjectCategory)
  nameWithType: PersonLike.GetAiPriorityForObject(MapObject, ObjectCategory)
  fullName: TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject,TinyLife.Objects.ObjectCategory)
    name: GetAiPriorityForObject
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetAiPriorityForObject_TinyLife_Objects_MapObject_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject,TinyLife.Objects.ObjectCategory)
    name: GetAiPriorityForObject
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetAiPriorityForObject_TinyLife_Objects_MapObject_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Objects.MapObject.GetAiPriority*
  commentId: Overload:TinyLife.Objects.MapObject.GetAiPriority
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetAiPriority_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetAiPriority
  nameWithType: MapObject.GetAiPriority
  fullName: TinyLife.Objects.MapObject.GetAiPriority
- uid: TinyLife.Actions.CanExecuteResult.Valid
  commentId: F:TinyLife.Actions.CanExecuteResult.Valid
  href: TinyLife.Actions.CanExecuteResult.html#TinyLife_Actions_CanExecuteResult_Valid
  name: Valid
  nameWithType: CanExecuteResult.Valid
  fullName: TinyLife.Actions.CanExecuteResult.Valid
- uid: TinyLife.Objects.IBreakableObject.Broken
  commentId: P:TinyLife.Objects.IBreakableObject.Broken
  parent: TinyLife.Objects.IBreakableObject
  href: TinyLife.Objects.IBreakableObject.html#TinyLife_Objects_IBreakableObject_Broken
  name: Broken
  nameWithType: IBreakableObject.Broken
  fullName: TinyLife.Objects.IBreakableObject.Broken
- uid: TinyLife.Objects.Furniture.AreUtilitiesDisabled
  commentId: P:TinyLife.Objects.Furniture.AreUtilitiesDisabled
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_AreUtilitiesDisabled
  name: AreUtilitiesDisabled
  nameWithType: Furniture.AreUtilitiesDisabled
  fullName: TinyLife.Objects.Furniture.AreUtilitiesDisabled
- uid: TinyLife.Objects.MapObject.CanExecuteAction*
  commentId: Overload:TinyLife.Objects.MapObject.CanExecuteAction
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_CanExecuteAction_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_System_Boolean_
  name: CanExecuteAction
  nameWithType: MapObject.CanExecuteAction
  fullName: TinyLife.Objects.MapObject.CanExecuteAction
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionInfo.html
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Actions.CanExecuteResult
  commentId: T:TinyLife.Actions.CanExecuteResult
  parent: TinyLife.Actions
  href: TinyLife.Actions.CanExecuteResult.html
  name: CanExecuteResult
  nameWithType: CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult
- uid: TinyLife.Objects.IBreakableObject
  commentId: T:TinyLife.Objects.IBreakableObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.IBreakableObject.html
  name: IBreakableObject
  nameWithType: IBreakableObject
  fullName: TinyLife.Objects.IBreakableObject
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: TinyLife.Actions.Action.Parent
  commentId: P:TinyLife.Actions.Action.Parent
  parent: TinyLife.Actions.Action
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_Parent
  name: Parent
  nameWithType: Action.Parent
  fullName: TinyLife.Actions.Action.Parent
- uid: TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
  isExternal: true
  href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetInvolvedObjects__1_TinyLife_Objects_ObjectCategory_System_Boolean_System_Boolean_
  name: GetInvolvedObjects<T>(ObjectCategory, bool, bool)
  nameWithType: ActionInfo.GetInvolvedObjects<T>(ObjectCategory, bool, bool)
  fullName: TinyLife.Actions.ActionInfo.GetInvolvedObjects<T>(TinyLife.Objects.ObjectCategory, bool, bool)
  nameWithType.vb: ActionInfo.GetInvolvedObjects(Of T)(ObjectCategory, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.ActionInfo.GetInvolvedObjects(Of T)(TinyLife.Objects.ObjectCategory, Boolean, Boolean)
  name.vb: GetInvolvedObjects(Of T)(ObjectCategory, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
    name: GetInvolvedObjects
    href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetInvolvedObjects__1_TinyLife_Objects_ObjectCategory_System_Boolean_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
    name: GetInvolvedObjects
    href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetInvolvedObjects__1_TinyLife_Objects_ObjectCategory_System_Boolean_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Furniture.DevaluedThroughUse
  commentId: F:TinyLife.Objects.Furniture.DevaluedThroughUse
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_DevaluedThroughUse
  name: DevaluedThroughUse
  nameWithType: Furniture.DevaluedThroughUse
  fullName: TinyLife.Objects.Furniture.DevaluedThroughUse
- uid: TinyLife.Actions.ActionInfo.GetActionObject``1(System.Boolean)
  commentId: M:TinyLife.Actions.ActionInfo.GetActionObject``1(System.Boolean)
  isExternal: true
  href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetActionObject__1_System_Boolean_
  name: GetActionObject<T>(bool)
  nameWithType: ActionInfo.GetActionObject<T>(bool)
  fullName: TinyLife.Actions.ActionInfo.GetActionObject<T>(bool)
  nameWithType.vb: ActionInfo.GetActionObject(Of T)(Boolean)
  fullName.vb: TinyLife.Actions.ActionInfo.GetActionObject(Of T)(Boolean)
  name.vb: GetActionObject(Of T)(Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.ActionInfo.GetActionObject``1(System.Boolean)
    name: GetActionObject
    href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetActionObject__1_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionInfo.GetActionObject``1(System.Boolean)
    name: GetActionObject
    href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetActionObject__1_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.MapObject.OnActionCompleted*
  commentId: Overload:TinyLife.Objects.MapObject.OnActionCompleted
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnActionCompleted_TinyLife_Actions_Action_TinyLife_Actions_CompletionType_System_Boolean_
  name: OnActionCompleted
  nameWithType: MapObject.OnActionCompleted
  fullName: TinyLife.Objects.MapObject.OnActionCompleted
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.CompletionType
  commentId: T:TinyLife.Actions.CompletionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.CompletionType.html
  name: CompletionType
  nameWithType: CompletionType
  fullName: TinyLife.Actions.CompletionType
- uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  isExternal: true
  name: Update(GameTime)
  nameWithType: Game.Update(GameTime)
  fullName: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: TinyLife.Actions.Action.FullyInProgress
  commentId: P:TinyLife.Actions.Action.FullyInProgress
  parent: TinyLife.Actions.Action
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_FullyInProgress
  name: FullyInProgress
  nameWithType: Action.FullyInProgress
  fullName: TinyLife.Actions.Action.FullyInProgress
- uid: TinyLife.Objects.Furniture.Dirty
  commentId: P:TinyLife.Objects.Furniture.Dirty
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Dirty
  name: Dirty
  nameWithType: Furniture.Dirty
  fullName: TinyLife.Objects.Furniture.Dirty
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Speed
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
- uid: TinyLife.Objects.MapObject.ActionUpdate*
  commentId: Overload:TinyLife.Objects.MapObject.ActionUpdate
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ActionUpdate_TinyLife_Actions_Action_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_System_Boolean_
  name: ActionUpdate
  nameWithType: MapObject.ActionUpdate
  fullName: TinyLife.Objects.MapObject.ActionUpdate
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfos*
  commentId: Overload:TinyLife.Objects.MapObject.GetFreeActionSpotInfos
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetFreeActionSpotInfos_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetFreeActionSpotInfos
  nameWithType: MapObject.GetFreeActionSpotInfos
  fullName: TinyLife.Objects.MapObject.GetFreeActionSpotInfos
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionInfo}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ActionInfo>
  nameWithType: IEnumerable<ActionInfo>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionInfo>
  nameWithType.vb: IEnumerable(Of ActionInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionInfo)
  name.vb: IEnumerable(Of ActionInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.MapObject.OnCameraRotationChanged*
  commentId: Overload:TinyLife.Objects.MapObject.OnCameraRotationChanged
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnCameraRotationChanged_MLEM_Maths_Direction2_MLEM_Maths_Direction2_
  name: OnCameraRotationChanged
  nameWithType: MapObject.OnCameraRotationChanged
  fullName: TinyLife.Objects.MapObject.OnCameraRotationChanged
- uid: MLEM.Maths.Direction2
  commentId: T:MLEM.Maths.Direction2
  parent: MLEM.Maths
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Maths.Direction2
- uid: TinyLife.GameImpl.CurrentMap
  commentId: P:TinyLife.GameImpl.CurrentMap
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentMap
  name: CurrentMap
  nameWithType: GameImpl.CurrentMap
  fullName: TinyLife.GameImpl.CurrentMap
- uid: TinyLife.Objects.MapObject.OnCurrentGameMapChanged*
  commentId: Overload:TinyLife.Objects.MapObject.OnCurrentGameMapChanged
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnCurrentGameMapChanged_TinyLife_World_Map_TinyLife_World_Map_
  name: OnCurrentGameMapChanged
  nameWithType: MapObject.OnCurrentGameMapChanged
  fullName: TinyLife.Objects.MapObject.OnCurrentGameMapChanged
- uid: TinyLife.Actions.ActionType.TypeSettings.Categories
  commentId: P:TinyLife.Actions.ActionType.TypeSettings.Categories
  href: TinyLife.Actions.ActionType.TypeSettings.html#TinyLife_Actions_ActionType_TypeSettings_Categories
  name: Categories
  nameWithType: ActionType.TypeSettings.Categories
  fullName: TinyLife.Actions.ActionType.TypeSettings.Categories
- uid: TinyLife.Objects.ObjectCategory.LandlinePhone
  commentId: F:TinyLife.Objects.ObjectCategory.LandlinePhone
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_LandlinePhone
  name: LandlinePhone
  nameWithType: ObjectCategory.LandlinePhone
  fullName: TinyLife.Objects.ObjectCategory.LandlinePhone
- uid: TinyLife.Objects.ObjectCategory.Self
  commentId: F:TinyLife.Objects.ObjectCategory.Self
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_Self
  name: Self
  nameWithType: ObjectCategory.Self
  fullName: TinyLife.Objects.ObjectCategory.Self
- uid: TinyLife.Objects.MapObject.ModifyActionCategories*
  commentId: Overload:TinyLife.Objects.MapObject.ModifyActionCategories
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ModifyActionCategories_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_System_Collections_Generic_List_System_String__
  name: ModifyActionCategories
  nameWithType: MapObject.ModifyActionCategories
  fullName: TinyLife.Objects.MapObject.ModifyActionCategories
- uid: TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetEfficiencyModifier_System_Single_TinyLife_Actions_ActionInfo_TinyLife_Skills_SkillType_System_Single_
  name: GetEfficiencyModifier(float, ActionInfo, SkillType, float)
  nameWithType: PersonLike.GetEfficiencyModifier(float, ActionInfo, SkillType, float)
  fullName: TinyLife.Objects.PersonLike.GetEfficiencyModifier(float, TinyLife.Actions.ActionInfo, TinyLife.Skills.SkillType, float)
  nameWithType.vb: PersonLike.GetEfficiencyModifier(Single, ActionInfo, SkillType, Single)
  fullName.vb: TinyLife.Objects.PersonLike.GetEfficiencyModifier(Single, TinyLife.Actions.ActionInfo, TinyLife.Skills.SkillType, Single)
  name.vb: GetEfficiencyModifier(Single, ActionInfo, SkillType, Single)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetEfficiencyModifier_System_Single_TinyLife_Actions_ActionInfo_TinyLife_Skills_SkillType_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetEfficiencyModifier_System_Single_TinyLife_Actions_ActionInfo_TinyLife_Skills_SkillType_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.MapObject.GetEfficiencyModifier*
  commentId: Overload:TinyLife.Objects.MapObject.GetEfficiencyModifier
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetEfficiencyModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Single_
  name: GetEfficiencyModifier
  nameWithType: MapObject.GetEfficiencyModifier
  fullName: TinyLife.Objects.MapObject.GetEfficiencyModifier
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  href: TinyLife.Skills.SkillType.html
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
  commentId: M:TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
  isExternal: true
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQuality_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Emotions_IEmotionSource_System_Boolean_
  name: GetRandomQuality(PersonLike, Random, ActionInfo, bool, IEmotionSource, bool)
  nameWithType: SkillType.GetRandomQuality(PersonLike, Random, ActionInfo, bool, IEmotionSource, bool)
  fullName: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, bool, TinyLife.Emotions.IEmotionSource, bool)
  nameWithType.vb: SkillType.GetRandomQuality(PersonLike, Random, ActionInfo, Boolean, IEmotionSource, Boolean)
  fullName.vb: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Emotions.IEmotionSource, Boolean)
  name.vb: GetRandomQuality(PersonLike, Random, ActionInfo, Boolean, IEmotionSource, Boolean)
  spec.csharp:
  - uid: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: GetRandomQuality
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQuality_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: GetRandomQuality
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQuality_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: TinyLife.Skills.Quality.Average
  commentId: F:TinyLife.Skills.Quality.Average
  href: TinyLife.Skills.Quality.html#TinyLife_Skills_Quality_Average
  name: Average
  nameWithType: Quality.Average
  fullName: TinyLife.Skills.Quality.Average
- uid: TinyLife.Skills.Quality
  commentId: T:TinyLife.Skills.Quality
  parent: TinyLife.Skills
  href: TinyLife.Skills.Quality.html
  name: Quality
  nameWithType: Quality
  fullName: TinyLife.Skills.Quality
- uid: TinyLife.Objects.MapObject.OnRandomQuality*
  commentId: Overload:TinyLife.Objects.MapObject.OnRandomQuality
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnRandomQuality_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Random_System_Boolean_System_Collections_Generic_Dictionary_TinyLife_Skills_Quality_System_Single__
  name: OnRandomQuality
  nameWithType: MapObject.OnRandomQuality
  fullName: TinyLife.Objects.MapObject.OnRandomQuality
- uid: System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}
  commentId: T:System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Quality, float>
  nameWithType: Dictionary<Quality, float>
  fullName: System.Collections.Generic.Dictionary<TinyLife.Skills.Quality, float>
  nameWithType.vb: Dictionary(Of Quality, Single)
  fullName.vb: System.Collections.Generic.Dictionary(Of TinyLife.Skills.Quality, Single)
  name.vb: Dictionary(Of Quality, Single)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
  commentId: M:TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_RestoreNeed_TinyLife_NeedType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  name: RestoreNeed(NeedType, float, ActionInfo, float)
  nameWithType: PersonLike.RestoreNeed(NeedType, float, ActionInfo, float)
  fullName: TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType, float, TinyLife.Actions.ActionInfo, float)
  nameWithType.vb: PersonLike.RestoreNeed(NeedType, Single, ActionInfo, Single)
  fullName.vb: TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType, Single, TinyLife.Actions.ActionInfo, Single)
  name.vb: RestoreNeed(NeedType, Single, ActionInfo, Single)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
    name: RestoreNeed
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_RestoreNeed_TinyLife_NeedType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
    name: RestoreNeed
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_RestoreNeed_TinyLife_NeedType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.MapObject.GetRestoreNeedModifier*
  commentId: Overload:TinyLife.Objects.MapObject.GetRestoreNeedModifier
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetRestoreNeedModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_NeedType_
  name: GetRestoreNeedModifier
  nameWithType: MapObject.GetRestoreNeedModifier
  fullName: TinyLife.Objects.MapObject.GetRestoreNeedModifier
- uid: TinyLife.NeedType
  commentId: T:TinyLife.NeedType
  parent: TinyLife
  href: TinyLife.NeedType.html
  name: NeedType
  nameWithType: NeedType
  fullName: TinyLife.NeedType
- uid: TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
  commentId: M:TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Intersects_MLEM_Maths_RectangleF_
  name: Intersects(RectangleF)
  nameWithType: MapObject.Intersects(RectangleF)
  fullName: TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
    name: Intersects
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Intersects_MLEM_Maths_RectangleF_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
    name: Intersects
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Intersects_MLEM_Maths_RectangleF_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
- uid: TinyLife.Objects.ObjectCategory.NonColliding
  commentId: F:TinyLife.Objects.ObjectCategory.NonColliding
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_NonColliding
  name: NonColliding
  nameWithType: ObjectCategory.NonColliding
  fullName: TinyLife.Objects.ObjectCategory.NonColliding
- uid: TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point,System.Int32)
  commentId: M:TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point,System.Int32)
  isExternal: true
  href: TinyLife.World.Map.html#TinyLife_World_Map_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Point_System_Int32_
  name: MarkDirtyForPathfinding(Point, int)
  nameWithType: Map.MarkDirtyForPathfinding(Point, int)
  fullName: TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point, int)
  nameWithType.vb: Map.MarkDirtyForPathfinding(Point, Integer)
  fullName.vb: TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point, Integer)
  name.vb: MarkDirtyForPathfinding(Point, Integer)
  spec.csharp:
  - uid: TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point,System.Int32)
    name: MarkDirtyForPathfinding
    href: TinyLife.World.Map.html#TinyLife_World_Map_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Point_System_Int32_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point,System.Int32)
    name: MarkDirtyForPathfinding
    href: TinyLife.World.Map.html#TinyLife_World_Map_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Point_System_Int32_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.Objects.MapObject.IsFreeSpot*
  commentId: Overload:TinyLife.Objects.MapObject.IsFreeSpot
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_IsFreeSpot_Microsoft_Xna_Framework_Point_
  name: IsFreeSpot
  nameWithType: MapObject.IsFreeSpot
  fullName: TinyLife.Objects.MapObject.IsFreeSpot
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: TinyLife.Objects.MapObject.GetPathCostModifier*
  commentId: Overload:TinyLife.Objects.MapObject.GetPathCostModifier
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetPathCostModifier_Microsoft_Xna_Framework_Point_
  name: GetPathCostModifier
  nameWithType: MapObject.GetPathCostModifier
  fullName: TinyLife.Objects.MapObject.GetPathCostModifier
- uid: TinyLife.World.Household
  commentId: T:TinyLife.World.Household
  parent: TinyLife.World
  href: TinyLife.World.Household.html
  name: Household
  nameWithType: Household
  fullName: TinyLife.World.Household
- uid: TinyLife.Objects.MapObject.ResetToStatic*
  commentId: Overload:TinyLife.Objects.MapObject.ResetToStatic
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ResetToStatic_System_Boolean_System_Boolean_
  name: ResetToStatic
  nameWithType: MapObject.ResetToStatic
  fullName: TinyLife.Objects.MapObject.ResetToStatic
- uid: TinyLife.Objects.PersonLike.Portrait
  commentId: P:TinyLife.Objects.PersonLike.Portrait
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Portrait
  name: Portrait
  nameWithType: PersonLike.Portrait
  fullName: TinyLife.Objects.PersonLike.Portrait
- uid: TinyLife.Objects.MapObject.DrawIcon*
  commentId: Overload:TinyLife.Objects.MapObject.DrawIcon
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawIcon_MLEM_Ui_Elements_Element_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  name: DrawIcon
  nameWithType: MapObject.DrawIcon
  fullName: TinyLife.Objects.MapObject.DrawIcon
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)
  commentId: M:TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)
  href: TinyLife.World.Map.html#TinyLife_World_Map_RemoveObject_TinyLife_Objects_MapObject_
  name: RemoveObject(MapObject)
  nameWithType: Map.RemoveObject(MapObject)
  fullName: TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)
  spec.csharp:
  - uid: TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)
    name: RemoveObject
    href: TinyLife.World.Map.html#TinyLife_World_Map_RemoveObject_TinyLife_Objects_MapObject_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)
    name: RemoveObject
    href: TinyLife.World.Map.html#TinyLife_World_Map_RemoveObject_TinyLife_Objects_MapObject_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
- uid: TinyLife.Objects.MapObject.MoveToMap*
  commentId: Overload:TinyLife.Objects.MapObject.MoveToMap
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_MoveToMap_TinyLife_World_Map_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Nullable_System_Single__
  name: MoveToMap
  nameWithType: MapObject.MoveToMap
  fullName: TinyLife.Objects.MapObject.MoveToMap
- uid: System.Nullable{Microsoft.Xna.Framework.Vector2}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: Microsoft.Xna.Framework.Vector2?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Vector2_System_Single_
  name: MarkDirtyForPathfinding(Vector2, float)
  nameWithType: Furniture.MarkDirtyForPathfinding(Vector2, float)
  fullName: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2, float)
  nameWithType.vb: Furniture.MarkDirtyForPathfinding(Vector2, Single)
  fullName.vb: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2, Single)
  name.vb: MarkDirtyForPathfinding(Vector2, Single)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
    name: MarkDirtyForPathfinding
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Vector2_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
    name: MarkDirtyForPathfinding
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Vector2_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.MapObject.OnPositionChanged*
  commentId: Overload:TinyLife.Objects.MapObject.OnPositionChanged
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnPositionChanged_Microsoft_Xna_Framework_Vector2_System_Single_
  name: OnPositionChanged
  nameWithType: MapObject.OnPositionChanged
  fullName: TinyLife.Objects.MapObject.OnPositionChanged
- uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfo*
  commentId: Overload:TinyLife.Objects.MapObject.GetFreeActionSpotInfo
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetFreeActionSpotInfo_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetFreeActionSpotInfo
  nameWithType: MapObject.GetFreeActionSpotInfo
  fullName: TinyLife.Objects.MapObject.GetFreeActionSpotInfo
- uid: TinyLife.Objects.MapObject.SetMapAndValidate*
  commentId: Overload:TinyLife.Objects.MapObject.SetMapAndValidate
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_SetMapAndValidate_TinyLife_World_Map_TinyLife_Utilities_AppliedMigrations_
  name: SetMapAndValidate
  nameWithType: MapObject.SetMapAndValidate
  fullName: TinyLife.Objects.MapObject.SetMapAndValidate
- uid: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetCategories_TinyLife_Objects_PersonLike_
  name: GetCategories(PersonLike)
  nameWithType: MapObject.GetCategories(PersonLike)
  fullName: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
    name: GetCategories
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetCategories_TinyLife_Objects_PersonLike_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
    name: GetCategories
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetCategories_TinyLife_Objects_PersonLike_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
- uid: TinyLife.Objects.MapObject.HasCategory*
  commentId: Overload:TinyLife.Objects.MapObject.HasCategory
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_HasCategory_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: HasCategory
  nameWithType: MapObject.HasCategory
  fullName: TinyLife.Objects.MapObject.HasCategory
- uid: TinyLife.Objects.MapObject.Visibility
  commentId: P:TinyLife.Objects.MapObject.Visibility
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Visibility
  name: Visibility
  nameWithType: MapObject.Visibility
  fullName: TinyLife.Objects.MapObject.Visibility
- uid: TinyLife.Objects.MapObject.DoDraw*
  commentId: Overload:TinyLife.Objects.MapObject.DoDraw
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DoDraw_Microsoft_Xna_Framework_GameTime_System_Object_System_Nullable_Microsoft_Xna_Framework_Color__System_Boolean_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  name: DoDraw
  nameWithType: MapObject.DoDraw
  fullName: TinyLife.Objects.MapObject.DoDraw
- uid: TinyLife.Objects.IUpdatingObject
  commentId: T:TinyLife.Objects.IUpdatingObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.IUpdatingObject.html
  name: IUpdatingObject
  nameWithType: IUpdatingObject
  fullName: TinyLife.Objects.IUpdatingObject
- uid: TinyLife.Objects.MapObject.DoUpdate*
  commentId: Overload:TinyLife.Objects.MapObject.DoUpdate
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DoUpdate_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: DoUpdate
  nameWithType: MapObject.DoUpdate
  fullName: TinyLife.Objects.MapObject.DoUpdate
- uid: TinyLife.Objects.ParentInfo.AttachmentType
  commentId: T:TinyLife.Objects.ParentInfo.AttachmentType
  parent: TinyLife.Objects
  href: TinyLife.Objects.ParentInfo.html
  name: ParentInfo.AttachmentType
  nameWithType: ParentInfo.AttachmentType
  fullName: TinyLife.Objects.ParentInfo.AttachmentType
  spec.csharp:
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: .
  - uid: TinyLife.Objects.ParentInfo.AttachmentType
    name: AttachmentType
    href: TinyLife.Objects.ParentInfo.AttachmentType.html
  spec.vb:
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: .
  - uid: TinyLife.Objects.ParentInfo.AttachmentType
    name: AttachmentType
    href: TinyLife.Objects.ParentInfo.AttachmentType.html
- uid: TinyLife.Objects.FurnitureType.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects)
  commentId: M:TinyLife.Objects.FurnitureType.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects)
  isExternal: true
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Maths_Direction2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_System_Single_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_
  name: DrawColumns(Map, Vector2, float, object, Vector2, Direction2, TextureRegion, Color, float, List<Item>, bool, ParentInfo, float, SpriteEffects)
  nameWithType: FurnitureType.DrawColumns(Map, Vector2, float, object, Vector2, Direction2, TextureRegion, Color, float, List<StaticSpriteBatch.Item>, bool, ParentInfo, float, SpriteEffects)
  fullName: TinyLife.Objects.FurnitureType.DrawColumns(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float, object, Microsoft.Xna.Framework.Vector2, MLEM.Maths.Direction2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, float, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>, bool, TinyLife.Objects.ParentInfo, float, Microsoft.Xna.Framework.Graphics.SpriteEffects)
  nameWithType.vb: FurnitureType.DrawColumns(Map, Vector2, Single, Object, Vector2, Direction2, TextureRegion, Color, Single, List(Of StaticSpriteBatch.Item), Boolean, ParentInfo, Single, SpriteEffects)
  fullName.vb: TinyLife.Objects.FurnitureType.DrawColumns(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single, Object, Microsoft.Xna.Framework.Vector2, MLEM.Maths.Direction2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, Single, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item), Boolean, TinyLife.Objects.ParentInfo, Single, Microsoft.Xna.Framework.Graphics.SpriteEffects)
  name.vb: DrawColumns(Map, Vector2, Single, Object, Vector2, Direction2, TextureRegion, Color, Single, List(Of Item), Boolean, ParentInfo, Single, SpriteEffects)
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects)
    name: DrawColumns
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Maths_Direction2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_System_Single_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects)
    name: DrawColumns
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Maths_Direction2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_System_Single_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: )
- uid: TinyLife.Objects.FurnitureType.HasCategory(TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.FurnitureType.HasCategory(TinyLife.Objects.ObjectCategory)
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_HasCategory_TinyLife_Objects_ObjectCategory_
  name: HasCategory(ObjectCategory)
  nameWithType: FurnitureType.HasCategory(ObjectCategory)
  fullName: TinyLife.Objects.FurnitureType.HasCategory(TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType.HasCategory(TinyLife.Objects.ObjectCategory)
    name: HasCategory
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_HasCategory_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType.HasCategory(TinyLife.Objects.ObjectCategory)
    name: HasCategory
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_HasCategory_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Objects.MapObject.DrawColumns*
  commentId: Overload:TinyLife.Objects.MapObject.DrawColumns
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Point_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Boolean_
  name: DrawColumns
  nameWithType: MapObject.DrawColumns
  fullName: TinyLife.Objects.MapObject.DrawColumns
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteEffects
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteEffects
  nameWithType: SpriteEffects
  fullName: Microsoft.Xna.Framework.Graphics.SpriteEffects
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
