### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler
  commentId: T:TinyLife.Actions.Handlers.UnderlyingActionHandler
  id: UnderlyingActionHandler
  parent: TinyLife.Actions.Handlers
  children:
  - TinyLife.Actions.Handlers.UnderlyingActionHandler.#ctor(TinyLife.Actions.Action)
  - TinyLife.Actions.Handlers.UnderlyingActionHandler.Action
  - TinyLife.Actions.Handlers.UnderlyingActionHandler.InitializeExact(TinyLife.Actions.Action)
  - TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize``1(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.Handlers.UnderlyingActionHandler.IsCompleted
  - TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate(TinyLife.Actions.Action,TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  langs:
  - csharp
  - vb
  name: UnderlyingActionHandler
  nameWithType: UnderlyingActionHandler
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions.Handlers
  summary: >-
    An UnderlyingAction is a class that can instantiate a single <xref href="TinyLife.Actions.Handlers.UnderlyingActionHandler.Action" data-throw-if-not-resolved="false"></xref> that will be executed as part of the action it is used in.

    Note that, when using this class, <xref href="TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate(TinyLife.Actions.Action%2cTinyLife.Objects.PersonLike%2cTinyLife.Utilities.AppliedMigrations)" data-throw-if-not-resolved="false"></xref> and especially <xref href="TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted(TinyLife.Actions.CompletionType)" data-throw-if-not-resolved="false"></xref> have to be called in the appropriate places.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class UnderlyingActionHandler
    content.vb: >-
      <DataContract>

      Public Class UnderlyingActionHandler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.Handlers.UnderlyingActionHandler.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Action
  commentId: P:TinyLife.Actions.Handlers.UnderlyingActionHandler.Action
  id: Action
  parent: TinyLife.Actions.Handlers.UnderlyingActionHandler
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: UnderlyingActionHandler.Action
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Action
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions.Handlers
  summary: >-
    The underlying action.

    This should be initialized using <xref href="TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize%60%601(TinyLife.Actions.ActionType%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public Action Action { get; }
    parameters: []
    return:
      type: TinyLife.Actions.Action
    content.vb: >-
      <DataMember>

      Public Property Action As Action
  overload: TinyLife.Actions.Handlers.UnderlyingActionHandler.Action*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.#ctor(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.Handlers.UnderlyingActionHandler.#ctor(TinyLife.Actions.Action)
  id: '#ctor(TinyLife.Actions.Action)'
  parent: TinyLife.Actions.Handlers.UnderlyingActionHandler
  langs:
  - csharp
  - vb
  name: UnderlyingActionHandler(Action)
  nameWithType: UnderlyingActionHandler.UnderlyingActionHandler(Action)
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.UnderlyingActionHandler(TinyLife.Actions.Action)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions.Handlers
  summary: Creates a new <xref href="TinyLife.Actions.Handlers.UnderlyingActionHandler" data-throw-if-not-resolved="false"></xref> with the given containing action.
  example: []
  syntax:
    content: public UnderlyingActionHandler(Action containingAction)
    parameters:
    - id: containingAction
      type: TinyLife.Actions.Action
      description: The action that contains this underlying action handler.
    content.vb: Public Sub New(containingAction As Action)
  overload: TinyLife.Actions.Handlers.UnderlyingActionHandler.#ctor*
  nameWithType.vb: UnderlyingActionHandler.New(Action)
  fullName.vb: TinyLife.Actions.Handlers.UnderlyingActionHandler.New(TinyLife.Actions.Action)
  name.vb: New(Action)
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize``1(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize``1(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
  id: Initialize``1(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.Handlers.UnderlyingActionHandler
  langs:
  - csharp
  - vb
  name: Initialize<T>(ActionType, ActionInfo, bool)
  nameWithType: UnderlyingActionHandler.Initialize<T>(ActionType, ActionInfo, bool)
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize<T>(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions.Handlers
  summary: Initializes the underlying action of this action
  example: []
  syntax:
    content: 'public T Initialize<T>(ActionType type, ActionInfo info, bool force = true) where T : Action'
    parameters:
    - id: type
      type: TinyLife.Actions.ActionType
      description: The type of action to initialize
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The info to pass to the action
    - id: force
      type: System.Boolean
      description: Whether the action should be created even if <xref href="TinyLife.Objects.PersonLike.CanExecuteAction(TinyLife.Actions.ActionType%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> returns false
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Initialize(Of T As Action)(type As ActionType, info As ActionInfo, force As Boolean = True) As T
  overload: TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize*
  nameWithType.vb: UnderlyingActionHandler.Initialize(Of T)(ActionType, ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize(Of T)(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean)
  name.vb: Initialize(Of T)(ActionType, ActionInfo, Boolean)
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.InitializeExact(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.Handlers.UnderlyingActionHandler.InitializeExact(TinyLife.Actions.Action)
  id: InitializeExact(TinyLife.Actions.Action)
  parent: TinyLife.Actions.Handlers.UnderlyingActionHandler
  langs:
  - csharp
  - vb
  name: InitializeExact(Action)
  nameWithType: UnderlyingActionHandler.InitializeExact(Action)
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.InitializeExact(TinyLife.Actions.Action)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions.Handlers
  summary: >-
    Initializes the underlying action of this action using the given <xref href="TinyLife.Actions.Handlers.UnderlyingActionHandler.Action" data-throw-if-not-resolved="false"></xref>.

    If <xref href="TinyLife.Objects.PersonLike.CanExecuteAction(TinyLife.Actions.ActionType%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> should be tested, <xref href="TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize%60%601(TinyLife.Actions.ActionType%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> can be used instead.
  example: []
  syntax:
    content: public void InitializeExact(Action action)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The action to initialize
    content.vb: Public Sub InitializeExact(action As Action)
  overload: TinyLife.Actions.Handlers.UnderlyingActionHandler.InitializeExact*
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.Handlers.UnderlyingActionHandler
  langs:
  - csharp
  - vb
  name: Update(GameTime, TimeSpan, float)
  nameWithType: UnderlyingActionHandler.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions.Handlers
  summary: >-
    Updates the <xref href="TinyLife.Actions.Handlers.UnderlyingActionHandler.Action" data-throw-if-not-resolved="false"></xref>, if it exists.

    This action should be called at the end of <xref href="TinyLife.Actions.Action.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> or any derived methods.
  example: []
  syntax:
    content: public void Update(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current game time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed, in game time
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub Update(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.Actions.Handlers.UnderlyingActionHandler.Update*
  nameWithType.vb: UnderlyingActionHandler.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate(TinyLife.Actions.Action,TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate(TinyLife.Actions.Action,TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  id: Validate(TinyLife.Actions.Action,TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Actions.Handlers.UnderlyingActionHandler
  langs:
  - csharp
  - vb
  name: Validate(Action, PersonLike, AppliedMigrations)
  nameWithType: UnderlyingActionHandler.Validate(Action, PersonLike, AppliedMigrations)
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate(TinyLife.Actions.Action, TinyLife.Objects.PersonLike, TinyLife.Utilities.AppliedMigrations)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions.Handlers
  summary: >-
    Validates this action container and its <xref href="TinyLife.Actions.Handlers.UnderlyingActionHandler.Action" data-throw-if-not-resolved="false"></xref>.

    This method should be called in <xref href="TinyLife.Actions.Action.Validate(TinyLife.Objects.PersonLike%2cTinyLife.Utilities.AppliedMigrations)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool Validate(Action containingAction, PersonLike person, AppliedMigrations appliedMigrations)
    parameters:
    - id: containingAction
      type: TinyLife.Actions.Action
      description: The action that contains this underlying action handler.
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person that is passed to the <code class="paramref">containingAction</code>'s <xref href="TinyLife.Actions.Action.Validate(TinyLife.Objects.PersonLike%2cTinyLife.Utilities.AppliedMigrations)" data-throw-if-not-resolved="false"></xref> method.
    - id: appliedMigrations
      type: TinyLife.Utilities.AppliedMigrations
      description: The set of migrations that have already been applied on this object.
    return:
      type: System.Boolean
      description: Whether this underlying action handler is still valid.
    content.vb: Public Function Validate(containingAction As Action, person As PersonLike, appliedMigrations As AppliedMigrations) As Boolean
  overload: TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate*
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.IsCompleted
  commentId: M:TinyLife.Actions.Handlers.UnderlyingActionHandler.IsCompleted
  id: IsCompleted
  parent: TinyLife.Actions.Handlers.UnderlyingActionHandler
  langs:
  - csharp
  - vb
  name: IsCompleted()
  nameWithType: UnderlyingActionHandler.IsCompleted()
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.IsCompleted()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions.Handlers
  summary: Returns whether the current <xref href="TinyLife.Actions.Handlers.UnderlyingActionHandler.Action" data-throw-if-not-resolved="false"></xref> is completed, or returns <xref href="TinyLife.Actions.CompletionType.Completed" data-throw-if-not-resolved="false"></xref> if there is no current or previously executed action.
  example: []
  syntax:
    content: public CompletionType IsCompleted()
    return:
      type: TinyLife.Actions.CompletionType
      description: Whether this underlying action handler is completed.
    content.vb: Public Function IsCompleted() As CompletionType
  overload: TinyLife.Actions.Handlers.UnderlyingActionHandler.IsCompleted*
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted(TinyLife.Actions.CompletionType)
  id: OnCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.Handlers.UnderlyingActionHandler
  langs:
  - csharp
  - vb
  name: OnCompleted(CompletionType)
  nameWithType: UnderlyingActionHandler.OnCompleted(CompletionType)
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted(TinyLife.Actions.CompletionType)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions.Handlers
  summary: >-
    Calls this underlying action's <xref href="TinyLife.Actions.Action.OnCompleted(TinyLife.Actions.CompletionType)" data-throw-if-not-resolved="false"></xref> method.

    This should be called for any completion type that the action that uses this underlying action experiences, even <xref href="TinyLife.Actions.CompletionType.Canceled" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Actions.CompletionType.Failed" data-throw-if-not-resolved="false"></xref>.

    If the underlying action is null or already completed, this method has no effect.
  example: []
  syntax:
    content: public bool OnCompleted(CompletionType type)
    parameters:
    - id: type
      type: TinyLife.Actions.CompletionType
      description: The completion type
    return:
      type: System.Boolean
      description: Whether the completion type was consumed by this underlying action handler
    content.vb: Public Function OnCompleted(type As CompletionType) As Boolean
  overload: TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted*
references:
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Action
  commentId: P:TinyLife.Actions.Handlers.UnderlyingActionHandler.Action
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Action
  name: Action
  nameWithType: UnderlyingActionHandler.Action
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Action
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  isExternal: true
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: Update(GameTime, TimeSpan, float)
  nameWithType: UnderlyingActionHandler.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: UnderlyingActionHandler.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate(TinyLife.Actions.Action,TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate(TinyLife.Actions.Action,TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Validate_TinyLife_Actions_Action_TinyLife_Objects_PersonLike_TinyLife_Utilities_AppliedMigrations_
  name: Validate(Action, PersonLike, AppliedMigrations)
  nameWithType: UnderlyingActionHandler.Validate(Action, PersonLike, AppliedMigrations)
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate(TinyLife.Actions.Action, TinyLife.Objects.PersonLike, TinyLife.Utilities.AppliedMigrations)
  spec.csharp:
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate(TinyLife.Actions.Action,TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Validate_TinyLife_Actions_Action_TinyLife_Objects_PersonLike_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate(TinyLife.Actions.Action,TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Validate_TinyLife_Actions_Action_TinyLife_Objects_PersonLike_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted(TinyLife.Actions.CompletionType)
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_OnCompleted_TinyLife_Actions_CompletionType_
  name: OnCompleted(CompletionType)
  nameWithType: UnderlyingActionHandler.OnCompleted(CompletionType)
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_OnCompleted_TinyLife_Actions_CompletionType_
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    href: TinyLife.Actions.CompletionType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_OnCompleted_TinyLife_Actions_CompletionType_
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    href: TinyLife.Actions.CompletionType.html
  - name: )
- uid: TinyLife.Actions.Handlers
  commentId: N:TinyLife.Actions.Handlers
  href: TinyLife.html
  name: TinyLife.Actions.Handlers
  nameWithType: TinyLife.Actions.Handlers
  fullName: TinyLife.Actions.Handlers
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  - name: .
  - uid: TinyLife.Actions.Handlers
    name: Handlers
    href: TinyLife.Actions.Handlers.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  - name: .
  - uid: TinyLife.Actions.Handlers
    name: Handlers
    href: TinyLife.Actions.Handlers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<UnderlyingActionHandler>(UnderlyingActionHandler)
  nameWithType: Extensions.JsonCopy<UnderlyingActionHandler>(UnderlyingActionHandler)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Handlers.UnderlyingActionHandler>(TinyLife.Actions.Handlers.UnderlyingActionHandler)
  nameWithType.vb: Extensions.JsonCopy(Of UnderlyingActionHandler)(UnderlyingActionHandler)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Handlers.UnderlyingActionHandler)(TinyLife.Actions.Handlers.UnderlyingActionHandler)
  name.vb: JsonCopy(Of UnderlyingActionHandler)(UnderlyingActionHandler)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.Handlers.UnderlyingActionHandler)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler
    name: UnderlyingActionHandler
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler
    name: UnderlyingActionHandler
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.Handlers.UnderlyingActionHandler)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler
    name: UnderlyingActionHandler
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html
  - name: )
  - name: (
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler
    name: UnderlyingActionHandler
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize``1(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize``1(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Initialize__1_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_
  name: Initialize<T>(ActionType, ActionInfo, bool)
  nameWithType: UnderlyingActionHandler.Initialize<T>(ActionType, ActionInfo, bool)
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize<T>(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool)
  nameWithType.vb: UnderlyingActionHandler.Initialize(Of T)(ActionType, ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize(Of T)(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean)
  name.vb: Initialize(Of T)(ActionType, ActionInfo, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize``1(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
    name: Initialize
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Initialize__1_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize``1(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
    name: Initialize
    href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Initialize__1_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Action*
  commentId: Overload:TinyLife.Actions.Handlers.UnderlyingActionHandler.Action
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Action
  name: Action
  nameWithType: UnderlyingActionHandler.Action
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Action
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler
  commentId: T:TinyLife.Actions.Handlers.UnderlyingActionHandler
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html
  name: UnderlyingActionHandler
  nameWithType: UnderlyingActionHandler
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.#ctor*
  commentId: Overload:TinyLife.Actions.Handlers.UnderlyingActionHandler.#ctor
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler__ctor_TinyLife_Actions_Action_
  name: UnderlyingActionHandler
  nameWithType: UnderlyingActionHandler.UnderlyingActionHandler
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.UnderlyingActionHandler
  nameWithType.vb: UnderlyingActionHandler.New
  fullName.vb: TinyLife.Actions.Handlers.UnderlyingActionHandler.New
  name.vb: New
- uid: TinyLife.Objects.PersonLike.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Objects.PersonLike.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_CanExecuteAction_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_
  name: CanExecuteAction(ActionType, ActionInfo, bool)
  nameWithType: PersonLike.CanExecuteAction(ActionType, ActionInfo, bool)
  fullName: TinyLife.Objects.PersonLike.CanExecuteAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool)
  nameWithType.vb: PersonLike.CanExecuteAction(ActionType, ActionInfo, Boolean)
  fullName.vb: TinyLife.Objects.PersonLike.CanExecuteAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanExecuteAction(ActionType, ActionInfo, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
    name: CanExecuteAction
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_CanExecuteAction_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
    name: CanExecuteAction
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_CanExecuteAction_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize*
  commentId: Overload:TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Initialize__1_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_
  name: Initialize
  nameWithType: UnderlyingActionHandler.Initialize
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Initialize
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionInfo.html
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.InitializeExact*
  commentId: Overload:TinyLife.Actions.Handlers.UnderlyingActionHandler.InitializeExact
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_InitializeExact_TinyLife_Actions_Action_
  name: InitializeExact
  nameWithType: UnderlyingActionHandler.InitializeExact
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.InitializeExact
- uid: TinyLife.Actions.Action.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.Action.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: Update(GameTime, TimeSpan, float)
  nameWithType: Action.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.Action.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: Action.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.Action.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Actions.Action.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Speed
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Update*
  commentId: Overload:TinyLife.Actions.Handlers.UnderlyingActionHandler.Update
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: Update
  nameWithType: UnderlyingActionHandler.Update
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Actions.Action.Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Actions.Action.Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Actions.Action
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_Validate_TinyLife_Objects_PersonLike_TinyLife_Utilities_AppliedMigrations_
  name: Validate(PersonLike, AppliedMigrations)
  nameWithType: Action.Validate(PersonLike, AppliedMigrations)
  fullName: TinyLife.Actions.Action.Validate(TinyLife.Objects.PersonLike, TinyLife.Utilities.AppliedMigrations)
  spec.csharp:
  - uid: TinyLife.Actions.Action.Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_Validate_TinyLife_Objects_PersonLike_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.Validate(TinyLife.Objects.PersonLike,TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_Validate_TinyLife_Objects_PersonLike_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate*
  commentId: Overload:TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_Validate_TinyLife_Actions_Action_TinyLife_Objects_PersonLike_TinyLife_Utilities_AppliedMigrations_
  name: Validate
  nameWithType: UnderlyingActionHandler.Validate
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.Validate
- uid: TinyLife.Utilities.AppliedMigrations
  commentId: T:TinyLife.Utilities.AppliedMigrations
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.AppliedMigrations.html
  name: AppliedMigrations
  nameWithType: AppliedMigrations
  fullName: TinyLife.Utilities.AppliedMigrations
- uid: TinyLife.Actions.CompletionType.Completed
  commentId: F:TinyLife.Actions.CompletionType.Completed
  href: TinyLife.Actions.CompletionType.html#TinyLife_Actions_CompletionType_Completed
  name: Completed
  nameWithType: CompletionType.Completed
  fullName: TinyLife.Actions.CompletionType.Completed
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.IsCompleted*
  commentId: Overload:TinyLife.Actions.Handlers.UnderlyingActionHandler.IsCompleted
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_IsCompleted
  name: IsCompleted
  nameWithType: UnderlyingActionHandler.IsCompleted
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.IsCompleted
- uid: TinyLife.Actions.CompletionType
  commentId: T:TinyLife.Actions.CompletionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.CompletionType.html
  name: CompletionType
  nameWithType: CompletionType
  fullName: TinyLife.Actions.CompletionType
- uid: TinyLife.Actions.Action.OnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Action.OnCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.Action
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_OnCompleted_TinyLife_Actions_CompletionType_
  name: OnCompleted(CompletionType)
  nameWithType: Action.OnCompleted(CompletionType)
  fullName: TinyLife.Actions.Action.OnCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_OnCompleted_TinyLife_Actions_CompletionType_
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    href: TinyLife.Actions.CompletionType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_OnCompleted_TinyLife_Actions_CompletionType_
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    href: TinyLife.Actions.CompletionType.html
  - name: )
- uid: TinyLife.Actions.CompletionType.Canceled
  commentId: F:TinyLife.Actions.CompletionType.Canceled
  href: TinyLife.Actions.CompletionType.html#TinyLife_Actions_CompletionType_Canceled
  name: Canceled
  nameWithType: CompletionType.Canceled
  fullName: TinyLife.Actions.CompletionType.Canceled
- uid: TinyLife.Actions.CompletionType.Failed
  commentId: F:TinyLife.Actions.CompletionType.Failed
  href: TinyLife.Actions.CompletionType.html#TinyLife_Actions_CompletionType_Failed
  name: Failed
  nameWithType: CompletionType.Failed
  fullName: TinyLife.Actions.CompletionType.Failed
- uid: TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted*
  commentId: Overload:TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted
  href: TinyLife.Actions.Handlers.UnderlyingActionHandler.html#TinyLife_Actions_Handlers_UnderlyingActionHandler_OnCompleted_TinyLife_Actions_CompletionType_
  name: OnCompleted
  nameWithType: UnderlyingActionHandler.OnCompleted
  fullName: TinyLife.Actions.Handlers.UnderlyingActionHandler.OnCompleted
