### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  id: Furniture
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.Furniture.#ctor(System.Guid,TinyLife.Objects.FurnitureType,System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single)
  - TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  - TinyLife.Objects.Furniture.AddChild(TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2},System.Nullable{Microsoft.Xna.Framework.Vector2})
  - TinyLife.Objects.Furniture.AddChild``1(TinyLife.Objects.FurnitureType,MLEM.Maths.Direction2,System.Int32[],System.Nullable{System.Guid},System.Nullable{Microsoft.Xna.Framework.Vector2})
  - TinyLife.Objects.Furniture.AppliedUpgrades
  - TinyLife.Objects.Furniture.ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)
  - TinyLife.Objects.Furniture.AreUtilitiesDisabled
  - TinyLife.Objects.Furniture.Area
  - TinyLife.Objects.Furniture.AttachedWall
  - TinyLife.Objects.Furniture.CanBeDirty
  - TinyLife.Objects.Furniture.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  - TinyLife.Objects.Furniture.Colors
  - TinyLife.Objects.Furniture.CoveredTiles
  - TinyLife.Objects.Furniture.Creator
  - TinyLife.Objects.Furniture.CreatorId
  - TinyLife.Objects.Furniture.CustomPrice
  - TinyLife.Objects.Furniture.DevaluedThroughUse
  - TinyLife.Objects.Furniture.Dirty
  - TinyLife.Objects.Furniture.DisplayName
  - TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  - TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},MLEM.Maths.Direction2,System.Int32[],System.Single,System.Boolean,TinyLife.Objects.ParentInfo,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  - TinyLife.Objects.Furniture.DrawDirtyOverlay(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},MLEM.Maths.Direction2,System.Int32[],System.Single,System.Boolean,TinyLife.Objects.ParentInfo,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  - TinyLife.Objects.Furniture.DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  - TinyLife.Objects.Furniture.DrawUi(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Ui.Elements.Element,System.Single,System.Int32[])
  - TinyLife.Objects.Furniture.GetActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2)
  - TinyLife.Objects.Furniture.GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
  - TinyLife.Objects.Furniture.GetCategories(TinyLife.Objects.PersonLike)
  - TinyLife.Objects.Furniture.GetChildren``1
  - TinyLife.Objects.Furniture.GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
  - TinyLife.Objects.Furniture.GetDecorativeRating(TinyLife.World.Room)
  - TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
  - TinyLife.Objects.Furniture.GetDirty(TinyLife.Objects.PersonLike,System.TimeSpan)
  - TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  - TinyLife.Objects.Furniture.GetFreeActionSpot(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.Furniture.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.Furniture.GetFreeObjectSpot(TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  - TinyLife.Objects.Furniture.GetFreeObjectSpots(TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  - TinyLife.Objects.Furniture.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  - TinyLife.Objects.Furniture.GetOccupants(TinyLife.Objects.ObjectCategory,System.Boolean)
  - TinyLife.Objects.Furniture.GetPrice
  - TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  - TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2,System.Int32,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.World.Roof})
  - TinyLife.Objects.Furniture.GetWallsInTheWay``1(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.Objects.WallLike})
  - TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
  - TinyLife.Objects.Furniture.HideFromDraw
  - TinyLife.Objects.Furniture.Intersects(MLEM.Maths.RectangleF)
  - TinyLife.Objects.Furniture.IsFreeSpot(Microsoft.Xna.Framework.Point)
  - TinyLife.Objects.Furniture.IsStatic
  - TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
  - TinyLife.Objects.Furniture.Migrations
  - TinyLife.Objects.Furniture.ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
  - TinyLife.Objects.Furniture.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  - TinyLife.Objects.Furniture.NotifyNeighbors
  - TinyLife.Objects.Furniture.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  - TinyLife.Objects.Furniture.OnAdded
  - TinyLife.Objects.Furniture.OnAppliedUpgrade
  - TinyLife.Objects.Furniture.OnDirty
  - TinyLife.Objects.Furniture.OnFurnitureTypeConstructed
  - TinyLife.Objects.Furniture.OnGetDescription
  - TinyLife.Objects.Furniture.OnGetDirty
  - TinyLife.Objects.Furniture.OnNeighborChanged(TinyLife.Objects.Furniture)
  - TinyLife.Objects.Furniture.OnPlacedInBuildMode(TinyLife.Tools.FurniturePlacer,System.Boolean,TinyLife.Tools.UndoableAction)
  - TinyLife.Objects.Furniture.OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
  - TinyLife.Objects.Furniture.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  - TinyLife.Objects.Furniture.OnRemoved
  - TinyLife.Objects.Furniture.OnSetCreator
  - TinyLife.Objects.Furniture.ParentFurniture
  - TinyLife.Objects.Furniture.ParentFurnitureId
  - TinyLife.Objects.Furniture.ParentInfo
  - TinyLife.Objects.Furniture.ParentObjectSpot
  - TinyLife.Objects.Furniture.ParentObjectSpotId
  - TinyLife.Objects.Furniture.Quality
  - TinyLife.Objects.Furniture.Random
  - TinyLife.Objects.Furniture.RemoveAndUnlink
  - TinyLife.Objects.Furniture.RemoveChild(TinyLife.Objects.Furniture)
  - TinyLife.Objects.Furniture.ResetToStatic(System.Boolean,System.Boolean)
  - TinyLife.Objects.Furniture.Rotation
  - TinyLife.Objects.Furniture.SetChild(TinyLife.Objects.ObjectSpot,TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2})
  - TinyLife.Objects.Furniture.SetChild``1(TinyLife.Objects.ObjectSpot,TinyLife.Objects.FurnitureType,System.Nullable{MLEM.Maths.Direction2},System.Int32[],System.Nullable{System.Guid})
  - TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
  - TinyLife.Objects.Furniture.SetNewId(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture})
  - TinyLife.Objects.Furniture.SetParent(TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot)
  - TinyLife.Objects.Furniture.Type
  - TinyLife.Objects.Furniture.UnlinkParentsAndChildren
  - TinyLife.Objects.Furniture.Validate(TinyLife.Utilities.AppliedMigrations)
  - TinyLife.Objects.Furniture.Visibility
  - TinyLife.Objects.Furniture.VisualRotation
  langs:
  - csharp
  - vb
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A furniture is an instance of a <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> which is placed in the world, or in a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>'s hand.

    To register a custom furniture, use <xref href="TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class Furniture : MapObject, IGenericDataHolder'
    content.vb: Public Class Furniture Inherits MapObject Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  - TinyLife.Objects.MapObject
  derivedClasses:
  - TinyLife.Objects.Book
  - TinyLife.Objects.BreakableFurniture
  - TinyLife.Objects.Chimney
  - TinyLife.Objects.CornerFurniture
  - TinyLife.Objects.Fence
  - TinyLife.Objects.FoodTypedItem
  - TinyLife.Objects.Fridge
  - TinyLife.Objects.Gravestone
  - TinyLife.Objects.LightFurniture
  - TinyLife.Objects.Newspaper
  - TinyLife.Objects.OverlayWallHanging
  - TinyLife.Objects.Painting
  - TinyLife.Objects.TrashBag
  - TinyLife.Objects.TrashCan
  - TinyLife.Objects.UnfinishedWoodwork
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.Objects.MapObject.OnCreated
  - TinyLife.Objects.MapObject.OnValidated
  - TinyLife.Objects.MapObject.OnValidatedEarly
  - TinyLife.Objects.MapObject.OnEventsAttachable
  - TinyLife.Objects.MapObject.OnDraw
  - TinyLife.Objects.MapObject.OnUpdate
  - TinyLife.Objects.MapObject.OnGetHoverInfo
  - TinyLife.Objects.MapObject.OnGetDebugLines
  - TinyLife.Objects.MapObject.Position
  - TinyLife.Objects.MapObject.Floor
  - TinyLife.Objects.MapObject.Id
  - TinyLife.Objects.MapObject.Map
  - TinyLife.Objects.MapObject.CurrentLot
  - TinyLife.Objects.MapObject.CurrentRoom
  - TinyLife.Objects.MapObject.IsInWorld
  - TinyLife.Objects.MapObject.HoldingPerson
  - TinyLife.Objects.MapObject.ValidateEarly
  - TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Maths.Direction2,MLEM.Maths.Direction2)
  - TinyLife.Objects.MapObject.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
  - TinyLife.Objects.MapObject.GetPathCostModifier(Microsoft.Xna.Framework.Point)
  - TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  - TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  - TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.Furniture.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.Furniture.Migrations
  commentId: F:TinyLife.Objects.Furniture.Migrations
  id: Migrations
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Migrations
  nameWithType: Furniture.Migrations
  fullName: TinyLife.Objects.Furniture.Migrations
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The set of migrations that should be applied to all <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> objects when they are loaded from disk.

    To register a migration that should only be applied to specific <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> values, use <xref href="TinyLife.Objects.FurnitureType.TypeSettings.Migrations" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static readonly List<Migration<Furniture>> Migrations
    return:
      type: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Objects.Furniture}}
    content.vb: Public Shared ReadOnly Migrations As List(Of Migration(Of Furniture))
- uid: TinyLife.Objects.Furniture.Random
  commentId: F:TinyLife.Objects.Furniture.Random
  id: Random
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Random
  nameWithType: Furniture.Random
  fullName: TinyLife.Objects.Furniture.Random
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A <xref href="TinyLife.Objects.Furniture.Random" data-throw-if-not-resolved="false"></xref> instance that can be used by furniture items.

    This value has the default seed.
  example: []
  syntax:
    content: protected static readonly Random Random
    return:
      type: System.Random
    content.vb: Protected Shared ReadOnly Random As Random
- uid: TinyLife.Objects.Furniture.OnFurnitureTypeConstructed
  commentId: E:TinyLife.Objects.Furniture.OnFurnitureTypeConstructed
  id: OnFurnitureTypeConstructed
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnFurnitureTypeConstructed
  nameWithType: Furniture.OnFurnitureTypeConstructed
  fullName: TinyLife.Objects.Furniture.OnFurnitureTypeConstructed
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is invoked when a <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> instance is constructed using the private constructor invoked in <xref href="TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)" data-throw-if-not-resolved="false"></xref>.

    This event can be used to modify the <xref href="TinyLife.Objects.FurnitureType.TypeSettings" data-throw-if-not-resolved="false"></xref> of the furniture type before they are made readonly.
  example: []
  syntax:
    content: public static event Furniture.FurnitureTypeConstructedDelegate OnFurnitureTypeConstructed
    return:
      type: TinyLife.Objects.Furniture.FurnitureTypeConstructedDelegate
    content.vb: Public Shared Event OnFurnitureTypeConstructed As Furniture.FurnitureTypeConstructedDelegate
- uid: TinyLife.Objects.Furniture.OnGetDescription
  commentId: E:TinyLife.Objects.Furniture.OnGetDescription
  id: OnGetDescription
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnGetDescription
  nameWithType: Furniture.OnGetDescription
  fullName: TinyLife.Objects.Furniture.OnGetDescription
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is fired when <xref href="TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List%7bSystem.String%7d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> is called.

    This event can be used to change the description of furniture instances by adding to the provided <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref>.

    This event can be subscribed to using <xref href="TinyLife.Objects.MapObject.OnEventsAttachable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public event Action<List<string>, bool> OnGetDescription
    return:
      type: System.Action{System.Collections.Generic.List{System.String},System.Boolean}
    content.vb: Public Event OnGetDescription As Action(Of List(Of String), Boolean)
- uid: TinyLife.Objects.Furniture.OnSetCreator
  commentId: E:TinyLife.Objects.Furniture.OnSetCreator
  id: OnSetCreator
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnSetCreator
  nameWithType: Furniture.OnSetCreator
  fullName: TinyLife.Objects.Furniture.OnSetCreator
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is fired when <xref href="TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> is called.

    The arguments passed to this event are the same that are passed to <xref href="TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    This event can be subscribed to using <xref href="TinyLife.Objects.MapObject.OnEventsAttachable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public event Action<PersonLike, bool, EventPhase> OnSetCreator
    return:
      type: System.Action{TinyLife.Objects.PersonLike,System.Boolean,TinyLife.Mods.EventPhase}
    content.vb: Public Event OnSetCreator As Action(Of PersonLike, Boolean, EventPhase)
- uid: TinyLife.Objects.Furniture.OnGetDirty
  commentId: E:TinyLife.Objects.Furniture.OnGetDirty
  id: OnGetDirty
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnGetDirty
  nameWithType: Furniture.OnGetDirty
  fullName: TinyLife.Objects.Furniture.OnGetDirty
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is fired when this furniture gets more dirty in <xref href="TinyLife.Objects.Furniture.GetDirty(TinyLife.Objects.PersonLike%2cSystem.TimeSpan)" data-throw-if-not-resolved="false"></xref>, even for objects that cannot get dirty (<xref href="TinyLife.Objects.Furniture.CanBeDirty" data-throw-if-not-resolved="false"></xref>).

    This event can be subscribed to using <xref href="TinyLife.Objects.MapObject.OnEventsAttachable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public event Action<PersonLike, TimeSpan> OnGetDirty
    return:
      type: System.Action{TinyLife.Objects.PersonLike,System.TimeSpan}
    content.vb: Public Event OnGetDirty As Action(Of PersonLike, TimeSpan)
- uid: TinyLife.Objects.Furniture.OnDirty
  commentId: E:TinyLife.Objects.Furniture.OnDirty
  id: OnDirty
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnDirty
  nameWithType: Furniture.OnDirty
  fullName: TinyLife.Objects.Furniture.OnDirty
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is fired when this furniture's <xref href="TinyLife.Objects.Furniture.Dirty" data-throw-if-not-resolved="false"></xref> value is changed.

    This event can be subscribed to using <xref href="TinyLife.Objects.MapObject.OnEventsAttachable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public event Action OnDirty
    return:
      type: System.Action
    content.vb: Public Event OnDirty As Action
- uid: TinyLife.Objects.Furniture.OnAppliedUpgrade
  commentId: E:TinyLife.Objects.Furniture.OnAppliedUpgrade
  id: OnAppliedUpgrade
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnAppliedUpgrade
  nameWithType: Furniture.OnAppliedUpgrade
  fullName: TinyLife.Objects.Furniture.OnAppliedUpgrade
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An event that is fired when an upgrade is freshly applied to this item in <xref href="TinyLife.Objects.Furniture.ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)" data-throw-if-not-resolved="false"></xref>. Please note that the upgrade may not be fully completed when this event is fired, see <xref href="TinyLife.Objects.AppliedUpgrade.Progress" data-throw-if-not-resolved="false"></xref>.

    An event that is fired when this furniture's <xref href="TinyLife.Objects.Furniture.Dirty" data-throw-if-not-resolved="false"></xref> value is changed.
  example: []
  syntax:
    content: public event Action<AppliedUpgrade> OnAppliedUpgrade
    return:
      type: System.Action{TinyLife.Objects.AppliedUpgrade}
    content.vb: Public Event OnAppliedUpgrade As Action(Of AppliedUpgrade)
- uid: TinyLife.Objects.Furniture.DisplayName
  commentId: P:TinyLife.Objects.Furniture.DisplayName
  id: DisplayName
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: Furniture.DisplayName
  fullName: TinyLife.Objects.Furniture.DisplayName
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the display name of this furniture item.

    By default, <xref href="TinyLife.Objects.FurnitureType.GetDisplayName(TinyLife.Objects.Furniture)" data-throw-if-not-resolved="false"></xref> is returned.
  example: []
  syntax:
    content: public virtual string DisplayName { get; }
    parameters: []
    return:
      type: System.String
      description: This furniture item's display name.
    content.vb: Public Overridable ReadOnly Property DisplayName As String
  overload: TinyLife.Objects.Furniture.DisplayName*
- uid: TinyLife.Objects.Furniture.ParentInfo
  commentId: P:TinyLife.Objects.Furniture.ParentInfo
  id: ParentInfo
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: ParentInfo
  nameWithType: Furniture.ParentInfo
  fullName: TinyLife.Objects.Furniture.ParentInfo
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns a <xref href="TinyLife.Objects.MapObject.ParentInfo" data-throw-if-not-resolved="false"></xref> for this object in its current context.

    By default, this method returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/default">default</a>, and <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> returns a <xref href="TinyLife.Objects.MapObject.ParentInfo" data-throw-if-not-resolved="false"></xref> based on its current attachments.
  example: []
  syntax:
    content: public override ParentInfo ParentInfo { get; }
    parameters: []
    return:
      type: TinyLife.Objects.ParentInfo
    content.vb: Public Overrides ReadOnly Property ParentInfo As ParentInfo
  overridden: TinyLife.Objects.MapObject.ParentInfo
  overload: TinyLife.Objects.Furniture.ParentInfo*
- uid: TinyLife.Objects.Furniture.Visibility
  commentId: P:TinyLife.Objects.Furniture.Visibility
  id: Visibility
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: Furniture.Visibility
  fullName: TinyLife.Objects.Furniture.Visibility
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the visibility settings of this object.

    By default, <xref href="TinyLife.Objects.Visibility.WhenVisible" data-throw-if-not-resolved="false"></xref> is returned.

    For <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref>, its <xref href="TinyLife.Objects.FurnitureType.TypeSettings.Visibility" data-throw-if-not-resolved="false"></xref> is returned instead.
  example: []
  syntax:
    content: public override Visibility Visibility { get; }
    parameters: []
    return:
      type: TinyLife.Objects.Visibility
      description: This object's visibility settings
    content.vb: Public Overrides ReadOnly Property Visibility As Visibility
  overridden: TinyLife.Objects.MapObject.Visibility
  overload: TinyLife.Objects.Furniture.Visibility*
- uid: TinyLife.Objects.Furniture.Type
  commentId: F:TinyLife.Objects.Furniture.Type
  id: Type
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Furniture.Type
  fullName: TinyLife.Objects.Furniture.Type
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> that this furniture has
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly FurnitureType Type
    return:
      type: TinyLife.Objects.FurnitureType
    content.vb: >-
      <DataMember>

      Public ReadOnly Type As FurnitureType
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.Furniture.AppliedUpgrades
  commentId: F:TinyLife.Objects.Furniture.AppliedUpgrades
  id: AppliedUpgrades
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: AppliedUpgrades
  nameWithType: Furniture.AppliedUpgrades
  fullName: TinyLife.Objects.Furniture.AppliedUpgrades
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A collection of the upgrades that are currently applied to this furniture upgrade.

    To query and modify this collection effectively, use <xref href="TinyLife.Objects.Furniture.ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly Dictionary<string, AppliedUpgrade> AppliedUpgrades
    return:
      type: System.Collections.Generic.Dictionary{System.String,TinyLife.Objects.AppliedUpgrade}
    content.vb: >-
      <DataMember>

      Public ReadOnly AppliedUpgrades As Dictionary(Of String, AppliedUpgrade)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.Furniture.Rotation
  commentId: F:TinyLife.Objects.Furniture.Rotation
  id: Rotation
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Furniture.Rotation
  fullName: TinyLife.Objects.Furniture.Rotation
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The current rotation of this furniture.

    Since furniture has a wide variety of looks, the specific value of the rotation doesn't necessarily have much practical meaning.
  example: []
  syntax:
    content: >-
      [DataMember]

      public Direction2 Rotation
    return:
      type: MLEM.Maths.Direction2
    content.vb: >-
      <DataMember>

      Public Rotation As Direction2
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.Furniture.ParentFurniture
  commentId: P:TinyLife.Objects.Furniture.ParentFurniture
  id: ParentFurniture
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: ParentFurniture
  nameWithType: Furniture.ParentFurniture
  fullName: TinyLife.Objects.Furniture.ParentFurniture
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> that this furniture is currently latched on to.

    If this value is non-null, <xref href="TinyLife.Objects.Furniture.ParentObjectSpot" data-throw-if-not-resolved="false"></xref> returns the object spot that this furniture is in.
  example: []
  syntax:
    content: public Furniture ParentFurniture { get; }
    parameters: []
    return:
      type: TinyLife.Objects.Furniture
    content.vb: Public ReadOnly Property ParentFurniture As Furniture
  overload: TinyLife.Objects.Furniture.ParentFurniture*
- uid: TinyLife.Objects.Furniture.ParentObjectSpot
  commentId: P:TinyLife.Objects.Furniture.ParentObjectSpot
  id: ParentObjectSpot
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: ParentObjectSpot
  nameWithType: Furniture.ParentObjectSpot
  fullName: TinyLife.Objects.Furniture.ParentObjectSpot
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> that this furniture is currently in.

    If this value is non-null, <xref href="TinyLife.Objects.Furniture.ParentFurniture" data-throw-if-not-resolved="false"></xref> returns the furniture that this object spot belongs to.
  example: []
  syntax:
    content: public ObjectSpot ParentObjectSpot { get; }
    parameters: []
    return:
      type: TinyLife.Objects.ObjectSpot
    content.vb: Public ReadOnly Property ParentObjectSpot As ObjectSpot
  overload: TinyLife.Objects.Furniture.ParentObjectSpot*
- uid: TinyLife.Objects.Furniture.Colors
  commentId: F:TinyLife.Objects.Furniture.Colors
  id: Colors
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Colors
  nameWithType: Furniture.Colors
  fullName: TinyLife.Objects.Furniture.Colors
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The indices of the colors that this furniture has.

    Refer to <xref href="TinyLife.Objects.FurnitureType.TypeSettings.Colors" data-throw-if-not-resolved="false"></xref> for the actual colors that these indices represent.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int[] Colors
    return:
      type: System.Int32[]
    content.vb: >-
      <DataMember>

      Public Colors As Integer()
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Objects.Furniture.Area
  commentId: P:TinyLife.Objects.Furniture.Area
  id: Area
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: Furniture.Area
  fullName: TinyLife.Objects.Furniture.Area
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A <xref href="MLEM.Maths.RectangleF" data-throw-if-not-resolved="false"></xref> that represents the area that this furniture piece is currently taking up, based on its <xref href="TinyLife.Objects.FurnitureType.GetSize(MLEM.Maths.Direction2)" data-throw-if-not-resolved="false"></xref> and its <xref href="TinyLife.Objects.MapObject.Position" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public virtual RectangleF Area { get; }
    parameters: []
    return:
      type: MLEM.Maths.RectangleF
    content.vb: Public Overridable ReadOnly Property Area As RectangleF
  overload: TinyLife.Objects.Furniture.Area*
- uid: TinyLife.Objects.Furniture.CoveredTiles
  commentId: P:TinyLife.Objects.Furniture.CoveredTiles
  id: CoveredTiles
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: CoveredTiles
  nameWithType: Furniture.CoveredTiles
  fullName: TinyLife.Objects.Furniture.CoveredTiles
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The tiles that are currently being covered by this furniture item.

    This differs from <xref href="TinyLife.Objects.Furniture.Area" data-throw-if-not-resolved="false"></xref> in that it calculates the full covered tiles in integer coordinates, rather than the exact area covered by the object.
  example: []
  syntax:
    content: public virtual Rectangle CoveredTiles { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Public Overridable ReadOnly Property CoveredTiles As Rectangle
  overload: TinyLife.Objects.Furniture.CoveredTiles*
- uid: TinyLife.Objects.Furniture.DevaluedThroughUse
  commentId: F:TinyLife.Objects.Furniture.DevaluedThroughUse
  id: DevaluedThroughUse
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: DevaluedThroughUse
  nameWithType: Furniture.DevaluedThroughUse
  fullName: TinyLife.Objects.Furniture.DevaluedThroughUse
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A field that gets set to true in <xref href="TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action%2cMicrosoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    If this value is true, the <xref href="TinyLife.Objects.Furniture.GetPrice" data-throw-if-not-resolved="false"></xref> of this object is greatly reduced.
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public bool DevaluedThroughUse
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public DevaluedThroughUse As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Objects.Furniture.AreUtilitiesDisabled
  commentId: P:TinyLife.Objects.Furniture.AreUtilitiesDisabled
  id: AreUtilitiesDisabled
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: AreUtilitiesDisabled
  nameWithType: Furniture.AreUtilitiesDisabled
  fullName: TinyLife.Objects.Furniture.AreUtilitiesDisabled
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns whether utilities are disabled on the current lot.

    This is a shorthand for <xref href="TinyLife.World.Household.AreUtilitiesDisabled(System.Nullable%7bSystem.TimeSpan%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool AreUtilitiesDisabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AreUtilitiesDisabled As Boolean
  overload: TinyLife.Objects.Furniture.AreUtilitiesDisabled*
- uid: TinyLife.Objects.Furniture.IsStatic
  commentId: F:TinyLife.Objects.Furniture.IsStatic
  id: IsStatic
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: IsStatic
  nameWithType: Furniture.IsStatic
  fullName: TinyLife.Objects.Furniture.IsStatic
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A field that is true for objects that are part of the exported base map that the current map is created from
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public bool IsStatic
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public IsStatic As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Objects.Furniture.CreatorId
  commentId: P:TinyLife.Objects.Furniture.CreatorId
  id: CreatorId
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: CreatorId
  nameWithType: Furniture.CreatorId
  fullName: TinyLife.Objects.Furniture.CreatorId
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> of the <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> that created this object in some capacity.

    This value defaults to <xref href="System.Guid.Empty" data-throw-if-not-resolved="false"></xref>, meaning no creator.

    To easily access the creator <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>, see <xref href="TinyLife.Objects.Furniture.Creator" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public Guid CreatorId { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public Property CreatorId As Guid
  overload: TinyLife.Objects.Furniture.CreatorId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Objects.Furniture.Quality
  commentId: F:TinyLife.Objects.Furniture.Quality
  id: Quality
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Quality
  nameWithType: Furniture.Quality
  fullName: TinyLife.Objects.Furniture.Quality
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The quality of this object, which defaults to null, meaning no quality.

    The quality is used by <xref href="TinyLife.Objects.Food" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Objects.Painting" data-throw-if-not-resolved="false"></xref>, and items crafted on the woodworking table.

    If this value is nonnull, the quality is displayed in the furniture item's description (<xref href="TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List%7bSystem.String%7d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>) and it influences the furniture's price (<xref href="TinyLife.Objects.Furniture.GetPrice" data-throw-if-not-resolved="false"></xref>) using <xref href="TinyLife.Utilities.Extensions.GetPriceModifier(TinyLife.Skills.Quality)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public Quality? Quality
    return:
      type: System.Nullable{TinyLife.Skills.Quality}
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public Quality As Quality?
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Objects.Furniture.CanBeDirty
  commentId: P:TinyLife.Objects.Furniture.CanBeDirty
  id: CanBeDirty
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: CanBeDirty
  nameWithType: Furniture.CanBeDirty
  fullName: TinyLife.Objects.Furniture.CanBeDirty
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A property that queries whether this object can be made dirty.

    If this property is false, <xref href="TinyLife.Objects.Furniture.Dirty" data-throw-if-not-resolved="false"></xref> will not automatically be set to true.
  example: []
  syntax:
    content: public virtual bool CanBeDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property CanBeDirty As Boolean
  overload: TinyLife.Objects.Furniture.CanBeDirty*
- uid: TinyLife.Objects.Furniture.Dirty
  commentId: P:TinyLife.Objects.Furniture.Dirty
  id: Dirty
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Dirty
  nameWithType: Furniture.Dirty
  fullName: TinyLife.Objects.Furniture.Dirty
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Whether this object is currently dirty.

    If <xref href="TinyLife.Objects.Furniture.CanBeDirty" data-throw-if-not-resolved="false"></xref> is false, this field is usually unused.
  example: []
  syntax:
    content: public virtual bool Dirty { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property Dirty As Boolean
  overload: TinyLife.Objects.Furniture.Dirty*
- uid: TinyLife.Objects.Furniture.CustomPrice
  commentId: F:TinyLife.Objects.Furniture.CustomPrice
  id: CustomPrice
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: CustomPrice
  nameWithType: Furniture.CustomPrice
  fullName: TinyLife.Objects.Furniture.CustomPrice
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An optional custom price that this furniture item has over its regular price (<xref href="TinyLife.Objects.Furniture.GetPrice" data-throw-if-not-resolved="false"></xref>).

    If this field has a value, the regularly calculated price from <xref href="TinyLife.Objects.Furniture.GetPrice" data-throw-if-not-resolved="false"></xref> will be ignored and this value will be used as the object's price instead.
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public float? CustomPrice
    return:
      type: System.Nullable{System.Single}
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public CustomPrice As Single?
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Objects.Furniture.Creator
  commentId: P:TinyLife.Objects.Furniture.Creator
  id: Creator
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Creator
  nameWithType: Furniture.Creator
  fullName: TinyLife.Objects.Furniture.Creator
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> that created this object in some capacity.

    This value is based on the underlying <xref href="TinyLife.Objects.Furniture.CreatorId" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public PersonLike Creator { get; }
    parameters: []
    return:
      type: TinyLife.Objects.PersonLike
    content.vb: Public ReadOnly Property Creator As PersonLike
  overload: TinyLife.Objects.Furniture.Creator*
- uid: TinyLife.Objects.Furniture.AttachedWall
  commentId: P:TinyLife.Objects.Furniture.AttachedWall
  id: AttachedWall
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: AttachedWall
  nameWithType: Furniture.AttachedWall
  fullName: TinyLife.Objects.Furniture.AttachedWall
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The <xref href="TinyLife.World.Wall" data-throw-if-not-resolved="false"></xref> that this object is attached to.

    Note that this will return a wall regardless of whether this object is actually attached to a wall, or is even a wall-hanging object.
  example: []
  syntax:
    content: public Wall AttachedWall { get; }
    parameters: []
    return:
      type: TinyLife.World.Wall
    content.vb: Public ReadOnly Property AttachedWall As Wall
  overload: TinyLife.Objects.Furniture.AttachedWall*
- uid: TinyLife.Objects.Furniture.HideFromDraw
  commentId: P:TinyLife.Objects.Furniture.HideFromDraw
  id: HideFromDraw
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: HideFromDraw
  nameWithType: Furniture.HideFromDraw
  fullName: TinyLife.Objects.Furniture.HideFromDraw
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns whether this object should currently be hidden from drawing.
  example: []
  syntax:
    content: public virtual bool HideFromDraw { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property HideFromDraw As Boolean
  overload: TinyLife.Objects.Furniture.HideFromDraw*
- uid: TinyLife.Objects.Furniture.VisualRotation
  commentId: P:TinyLife.Objects.Furniture.VisualRotation
  id: VisualRotation
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: VisualRotation
  nameWithType: Furniture.VisualRotation
  fullName: TinyLife.Objects.Furniture.VisualRotation
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The rotation that this furniture item currently has from the camera's perspective.

    This is a combination of <xref href="TinyLife.Objects.Furniture.Rotation" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Options.CameraRotation" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.FurnitureType.GetBestRotationForDrawing(MLEM.Maths.Direction2)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Direction2 VisualRotation { get; }
    parameters: []
    return:
      type: MLEM.Maths.Direction2
    content.vb: Public ReadOnly Property VisualRotation As Direction2
  overload: TinyLife.Objects.Furniture.VisualRotation*
- uid: TinyLife.Objects.Furniture.ParentObjectSpotId
  commentId: P:TinyLife.Objects.Furniture.ParentObjectSpotId
  id: ParentObjectSpotId
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: ParentObjectSpotId
  nameWithType: Furniture.ParentObjectSpotId
  fullName: TinyLife.Objects.Furniture.ParentObjectSpotId
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The index of this furniture's <xref href="TinyLife.Objects.Furniture.ParentObjectSpot" data-throw-if-not-resolved="false"></xref> on this furniture's <xref href="TinyLife.Objects.Furniture.ParentFurniture" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public int ParentObjectSpotId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public Property ParentObjectSpotId As Integer
  overload: TinyLife.Objects.Furniture.ParentObjectSpotId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Objects.Furniture.ParentFurnitureId
  commentId: P:TinyLife.Objects.Furniture.ParentFurnitureId
  id: ParentFurnitureId
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: ParentFurnitureId
  nameWithType: Furniture.ParentFurnitureId
  fullName: TinyLife.Objects.Furniture.ParentFurnitureId
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The <xref href="TinyLife.Objects.MapObject.Id" data-throw-if-not-resolved="false"></xref> of this furniture's <xref href="TinyLife.Objects.Furniture.ParentFurniture" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public Guid ParentFurnitureId { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public Property ParentFurnitureId As Guid
  overload: TinyLife.Objects.Furniture.ParentFurnitureId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Objects.Furniture.#ctor(System.Guid,TinyLife.Objects.FurnitureType,System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:TinyLife.Objects.Furniture.#ctor(System.Guid,TinyLife.Objects.FurnitureType,System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single)
  id: '#ctor(System.Guid,TinyLife.Objects.FurnitureType,System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single)'
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Furniture(Guid, FurnitureType, int[], Map, Vector2, float)
  nameWithType: Furniture.Furniture(Guid, FurnitureType, int[], Map, Vector2, float)
  fullName: TinyLife.Objects.Furniture.Furniture(System.Guid, TinyLife.Objects.FurnitureType, int[], TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Creates a new furniture instance.

    By default, this is done using <xref href="TinyLife.Objects.FurnitureType.Construct%60%601(System.Int32%5b%5d%2cTinyLife.World.Map%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Nullable%7bSystem.Guid%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Furniture(Guid id, FurnitureType type, int[] colors, Map map, Vector2 pos, float floor)
    parameters:
    - id: id
      type: System.Guid
      description: The id to apply to the created furniture instance
    - id: type
      type: TinyLife.Objects.FurnitureType
      description: The type to create an instance of
    - id: colors
      type: System.Int32[]
      description: The colors to apply to the furniture
    - id: map
      type: TinyLife.World.Map
      description: The map to create the furniture on
    - id: pos
      type: Microsoft.Xna.Framework.Vector2
      description: The position that the furniture should have
    - id: floor
      type: System.Single
      description: The floor that this object is on.
    content.vb: Public Sub New(id As Guid, type As FurnitureType, colors As Integer(), map As Map, pos As Vector2, floor As Single)
  overload: TinyLife.Objects.Furniture.#ctor*
  nameWithType.vb: Furniture.New(Guid, FurnitureType, Integer(), Map, Vector2, Single)
  fullName.vb: TinyLife.Objects.Furniture.New(System.Guid, TinyLife.Objects.FurnitureType, Integer(), TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single)
  name.vb: New(Guid, FurnitureType, Integer(), Map, Vector2, Single)
- uid: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  id: Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Draw(GameTime, object, Vector2, Color?, List<Item>)
  nameWithType: Furniture.Draw(GameTime, object, Vector2, Color?, List<StaticSpriteBatch.Item>)
  fullName: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime, object, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Draws this object on the current <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref>, at the current <xref href="TinyLife.Objects.MapObject.Position" data-throw-if-not-resolved="false"></xref>.

    To draw a map object while invoking all the required events, use <xref href="TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime%2cSystem.Object%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Color%7d%2cSystem.Boolean%2cSystem.Collections.Generic.List%7bMLEM.Graphics.StaticSpriteBatch.Item%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override sealed void Draw(GameTime time, object batch, Vector2 drawPos, Color? overrideColor, List<StaticSpriteBatch.Item> items)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current time
    - id: batch
      type: System.Object
      description: The sprite batch to use for drawing, which is either a <xref href="Microsoft.Xna.Framework.Graphics.SpriteBatch" data-throw-if-not-resolved="false"></xref> or <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position, in draw space, to draw this furniture at
    - id: overrideColor
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: The color that should be used instead of this object's actual color. If null, the object's regular color should be used.
    - id: items
      type: System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item}
      description: A list of sprite batch items that items should be added to if the <code class="paramref">batch</code> is a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public NotOverridable Overrides Sub Draw(time As GameTime, batch As Object, drawPos As Vector2, overrideColor As Color?, items As List(Of StaticSpriteBatch.Item))
  overridden: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  overload: TinyLife.Objects.Furniture.Draw*
  nameWithType.vb: Furniture.Draw(GameTime, Object, Vector2, Color?, List(Of StaticSpriteBatch.Item))
  fullName.vb: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime, Object, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: Draw(GameTime, Object, Vector2, Color?, List(Of Item))
- uid: TinyLife.Objects.Furniture.Validate(TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Objects.Furniture.Validate(TinyLife.Utilities.AppliedMigrations)
  id: Validate(TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Validate(AppliedMigrations)
  nameWithType: Furniture.Validate(AppliedMigrations)
  fullName: TinyLife.Objects.Furniture.Validate(TinyLife.Utilities.AppliedMigrations)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when this object is loaded from disk.

    Returning false on this method causes the object to be removed from the map.

    By default, this method invokes <xref href="TinyLife.Objects.MapObject.OnValidated" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.MapObject.OnEventsAttachable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override bool Validate(AppliedMigrations appliedMigrations)
    parameters:
    - id: appliedMigrations
      type: TinyLife.Utilities.AppliedMigrations
      description: ''
    return:
      type: System.Boolean
      description: false if the object is not valid, true otherwise
    content.vb: Public Overrides Function Validate(appliedMigrations As AppliedMigrations) As Boolean
  overridden: TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
  overload: TinyLife.Objects.Furniture.Validate*
- uid: TinyLife.Objects.Furniture.Intersects(MLEM.Maths.RectangleF)
  commentId: M:TinyLife.Objects.Furniture.Intersects(MLEM.Maths.RectangleF)
  id: Intersects(MLEM.Maths.RectangleF)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Intersects(RectangleF)
  nameWithType: Furniture.Intersects(RectangleF)
  fullName: TinyLife.Objects.Furniture.Intersects(MLEM.Maths.RectangleF)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns whether this map object intersects with the given rectangle.

    This is used for <xref href="TinyLife.World.Map.GetObjects%60%601(MLEM.Maths.RectangleF)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override bool Intersects(RectangleF rectangle)
    parameters:
    - id: rectangle
      type: MLEM.Maths.RectangleF
      description: The area that should be checked for
    return:
      type: System.Boolean
      description: true if this object intersects with the given rectangle
    content.vb: Public Overrides Function Intersects(rectangle As RectangleF) As Boolean
  overridden: TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
  overload: TinyLife.Objects.Furniture.Intersects*
- uid: TinyLife.Objects.Furniture.GetCategories(TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.Objects.Furniture.GetCategories(TinyLife.Objects.PersonLike)
  id: GetCategories(TinyLife.Objects.PersonLike)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetCategories(PersonLike)
  nameWithType: Furniture.GetCategories(PersonLike)
  fullName: TinyLife.Objects.Furniture.GetCategories(TinyLife.Objects.PersonLike)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns a set of <xref href="TinyLife.Objects.ObjectCategory" data-throw-if-not-resolved="false"></xref> flags that this object has, based on the given <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override ObjectCategory GetCategories(PersonLike person)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person to query categories for
    return:
      type: TinyLife.Objects.ObjectCategory
      description: A set of categories that this object has
    content.vb: Public Overrides Function GetCategories(person As PersonLike) As ObjectCategory
  overridden: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
  overload: TinyLife.Objects.Furniture.GetCategories*
- uid: TinyLife.Objects.Furniture.OnAdded
  commentId: M:TinyLife.Objects.Furniture.OnAdded
  id: OnAdded
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnAdded()
  nameWithType: Furniture.OnAdded()
  fullName: TinyLife.Objects.Furniture.OnAdded()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when this object is added to a <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref>.

    By default, it does nothing.
  example: []
  syntax:
    content: public override void OnAdded()
    content.vb: Public Overrides Sub OnAdded()
  overridden: TinyLife.Objects.MapObject.OnAdded
  overload: TinyLife.Objects.Furniture.OnAdded*
- uid: TinyLife.Objects.Furniture.OnRemoved
  commentId: M:TinyLife.Objects.Furniture.OnRemoved
  id: OnRemoved
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnRemoved()
  nameWithType: Furniture.OnRemoved()
  fullName: TinyLife.Objects.Furniture.OnRemoved()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when this object is removed from a <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref>.

    By default, it does nothing.
  example: []
  syntax:
    content: public override void OnRemoved()
    content.vb: Public Overrides Sub OnRemoved()
  overridden: TinyLife.Objects.MapObject.OnRemoved
  overload: TinyLife.Objects.Furniture.OnRemoved*
- uid: TinyLife.Objects.Furniture.GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.Furniture.GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  id: GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetAiPriority(PersonLike, ObjectCategory)
  nameWithType: Furniture.GetAiPriority(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.Furniture.GetAiPriority(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns an integer that represents a priority for the <xref href="TinyLife.Objects.PersonAi" data-throw-if-not-resolved="false"></xref>'s interaction with this object.

    A higher priority means that this object will be picked over other objects (with lower priority).

    The default return value is 0, meaning that no special priority is assigned to this object.

    For any <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> with the <xref href="TinyLife.Objects.ObjectCategory.SingleBed" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Objects.ObjectCategory.DoubleBed" data-throw-if-not-resolved="false"></xref> category that is the person's <xref href="TinyLife.Objects.Person.LastBedSleptIn" data-throw-if-not-resolved="false"></xref>, 10 is returned.

    This is invoked by a person in <xref href="TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject%2cTinyLife.Objects.ObjectCategory)" data-throw-if-not-resolved="false"></xref> with additional events being invoked.
  example: []
  syntax:
    content: public override float GetAiPriority(PersonLike person, ObjectCategory categories)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person whose AI is attempting to interact with this object
    - id: categories
      type: TinyLife.Objects.ObjectCategory
      description: The categories that are relevant for the ai interaction
    return:
      type: System.Single
      description: This object's priority
    content.vb: Public Overrides Function GetAiPriority(person As PersonLike, categories As ObjectCategory) As Single
  overridden: TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  overload: TinyLife.Objects.Furniture.GetAiPriority*
- uid: TinyLife.Objects.Furniture.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  id: CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: CanExecuteAction(ActionType, ActionInfo, bool, bool)
  nameWithType: Furniture.CanExecuteAction(ActionType, ActionInfo, bool, bool)
  fullName: TinyLife.Objects.Furniture.CanExecuteAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns whether the given <code class="paramref">action</code> can be executed at this map object.

    By default, this method returns <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> for all actions, but <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> additionally returns custom results based on whether the furniture is <xref href="TinyLife.Objects.IBreakableObject.Broken" data-throw-if-not-resolved="false"></xref> or based on <xref href="TinyLife.Objects.Furniture.AreUtilitiesDisabled" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override CanExecuteResult CanExecuteAction(ActionType action, ActionInfo info, bool automatic, bool isAuxiliary)
    parameters:
    - id: action
      type: TinyLife.Actions.ActionType
      description: The action that is querying whether it can be executed.
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: automatic
      type: System.Boolean
      description: Whether the action was started automatically.
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object is auxiliary (or the main action object).
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: Whether this object allows the action to be executed at it.
    content.vb: Public Overrides Function CanExecuteAction(action As ActionType, info As ActionInfo, automatic As Boolean, isAuxiliary As Boolean) As CanExecuteResult
  overridden: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  overload: TinyLife.Objects.Furniture.CanExecuteAction*
  nameWithType.vb: Furniture.CanExecuteAction(ActionType, ActionInfo, Boolean, Boolean)
  fullName.vb: TinyLife.Objects.Furniture.CanExecuteAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean, Boolean)
  name.vb: CanExecuteAction(ActionType, ActionInfo, Boolean, Boolean)
- uid: TinyLife.Objects.Furniture.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  id: OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnActionCompleted(Action, CompletionType, bool)
  nameWithType: Furniture.OnActionCompleted(Action, CompletionType, bool)
  fullName: TinyLife.Objects.Furniture.OnActionCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when an <xref href="System.Action" data-throw-if-not-resolved="false"></xref> that this object is involved in is completed. Note that this includes actions that are underlying (see <xref href="TinyLife.Actions.Action.Parent" data-throw-if-not-resolved="false"></xref>).

    This object counts as involved in the action if its <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> includes this object.

    In general, the base method should be called for <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> objects, since it sets <xref href="TinyLife.Objects.Furniture.DevaluedThroughUse" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override void OnActionCompleted(Action action, CompletionType type, bool isAuxiliary)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The action
    - id: type
      type: TinyLife.Actions.CompletionType
      description: The type of the action's completion
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object counts as an auxiliary object. If this value is false, the object is th e<xref href="TinyLife.Actions.ActionInfo.GetActionObject%60%601(System.Boolean)" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overrides Sub OnActionCompleted(action As Action, type As CompletionType, isAuxiliary As Boolean)
  overridden: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  overload: TinyLife.Objects.Furniture.OnActionCompleted*
  nameWithType.vb: Furniture.OnActionCompleted(Action, CompletionType, Boolean)
  fullName.vb: TinyLife.Objects.Furniture.OnActionCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, Boolean)
  name.vb: OnActionCompleted(Action, CompletionType, Boolean)
- uid: TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  id: ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: ActionUpdate(Action, GameTime, TimeSpan, float, bool)
  nameWithType: Furniture.ActionUpdate(Action, GameTime, TimeSpan, float, bool)
  fullName: TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action, Microsoft.Xna.Framework.GameTime, System.TimeSpan, float, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when an <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> that this object is involved in updates, which is every <xref href="Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref> frame. Note that this includes actions that are underlying (see <xref href="TinyLife.Actions.Action.Parent" data-throw-if-not-resolved="false"></xref>) and actions that aren't fully in progress yet (<xref href="TinyLife.Actions.Action.FullyInProgress" data-throw-if-not-resolved="false"></xref>).

    This object counts as involved in the action if its <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> includes this object.

    In general, the base method should be called for <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> objects, since it sets deals with <xref href="TinyLife.Objects.Furniture.Dirty" data-throw-if-not-resolved="false"></xref> objects.
  example: []
  syntax:
    content: public override void ActionUpdate(Action action, GameTime time, TimeSpan passedInGame, float speedMultiplier, bool isAuxiliary)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The action
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current game time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed, in game time
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object counts as an auxiliary object. If this value is false, the object is th e<xref href="TinyLife.Actions.ActionInfo.GetActionObject%60%601(System.Boolean)" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overrides Sub ActionUpdate(action As Action, time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single, isAuxiliary As Boolean)
  overridden: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  overload: TinyLife.Objects.Furniture.ActionUpdate*
  nameWithType.vb: Furniture.ActionUpdate(Action, GameTime, TimeSpan, Single, Boolean)
  fullName.vb: TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action, Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single, Boolean)
  name.vb: ActionUpdate(Action, GameTime, TimeSpan, Single, Boolean)
- uid: TinyLife.Objects.Furniture.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.Furniture.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  id: GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetFreeActionSpotInfos(PersonLike, ObjectCategory)
  nameWithType: Furniture.GetFreeActionSpotInfos(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.Furniture.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns a set of <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref> instances that represent action spots that the <code class="paramref">person</code> can currently use or interact with.

    By default, an empty collection is returned by <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref>, but relevant spots are returnd by objects like <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override IEnumerable<ActionInfo> GetFreeActionSpotInfos(PersonLike person, ObjectCategory context = null)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person who wants to interact with this object.
    - id: context
      type: TinyLife.Objects.ObjectCategory
      description: The context for which to return free action spots, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to return action spots for any contexts.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionInfo}
      description: The free action spots.
    content.vb: Public Overrides Function GetFreeActionSpotInfos(person As PersonLike, context As ObjectCategory = Nothing) As IEnumerable(Of ActionInfo)
  overridden: TinyLife.Objects.MapObject.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  overload: TinyLife.Objects.Furniture.GetFreeActionSpotInfos*
- uid: TinyLife.Objects.Furniture.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  commentId: M:TinyLife.Objects.Furniture.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  id: GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetHoverInfo(Tooltip)
  nameWithType: Furniture.GetHoverInfo(Tooltip)
  fullName: TinyLife.Objects.Furniture.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Allows adding a set of paragraphs and other ui elements to the given <code class="paramref">tooltip</code>, which is then displayed when this object is hovered over using the cursor in the world.

    By default, this method raises <xref href="TinyLife.Objects.MapObject.OnGetHoverInfo" data-throw-if-not-resolved="false"></xref> for <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref>, and adds additional information for <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override void GetHoverInfo(Tooltip tooltip)
    parameters:
    - id: tooltip
      type: MLEM.Ui.Elements.Tooltip
      description: The tooltip that will be displayed.
    content.vb: Public Overrides Sub GetHoverInfo(tooltip As Tooltip)
  overridden: TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  overload: TinyLife.Objects.Furniture.GetHoverInfo*
- uid: TinyLife.Objects.Furniture.GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
  commentId: M:TinyLife.Objects.Furniture.GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
  id: GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetDebugLines(GameImpl, List<string>)
  nameWithType: Furniture.GetDebugLines(GameImpl, List<string>)
  fullName: TinyLife.Objects.Furniture.GetDebugLines(TinyLife.GameImpl, System.Collections.Generic.List<string>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the debug lines that should be displayed in <xref href="TinyLife.Debug" data-throw-if-not-resolved="false"></xref> when hovering over this object.

    By default, <xref href="TinyLife.Objects.MapObject.OnGetDebugLines" data-throw-if-not-resolved="false"></xref> is invoked, and the id and position of this object are appended to the list of lines.
  example: []
  syntax:
    content: public override void GetDebugLines(GameImpl game, List<string> lines)
    parameters:
    - id: game
      type: TinyLife.GameImpl
      description: The game.
    - id: lines
      type: System.Collections.Generic.List{System.String}
      description: The list of lines to append debug lines to.
    content.vb: Public Overrides Sub GetDebugLines(game As GameImpl, lines As List(Of String))
  overridden: TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
  overload: TinyLife.Objects.Furniture.GetDebugLines*
  nameWithType.vb: Furniture.GetDebugLines(GameImpl, List(Of String))
  fullName.vb: TinyLife.Objects.Furniture.GetDebugLines(TinyLife.GameImpl, System.Collections.Generic.List(Of String))
  name.vb: GetDebugLines(GameImpl, List(Of String))
- uid: TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  id: GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetEfficiencyModifier(PersonLike, ActionInfo, bool, SkillType, float)
  nameWithType: Furniture.GetEfficiencyModifier(PersonLike, ActionInfo, bool, SkillType, float)
  fullName: TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.Skills.SkillType, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the efficiency modifier that this object multiplies the person's productivity with.

    This method is automatically called in <xref href="TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single%2cTinyLife.Actions.ActionInfo%2cTinyLife.Skills.SkillType%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.

    This action is invoked for all <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> of the passed <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref>.

    By default, this method returns 1, meaning the person's efficiency will not be influenced.
  example: []
  syntax:
    content: public override float GetEfficiencyModifier(PersonLike person, ActionInfo info, bool isAuxiliary, SkillType skill, float levelModifier)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person whose efficiency should be influenced
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object is auxiliary (or the main action object)
    - id: skill
      type: TinyLife.Skills.SkillType
      description: The skill that should influence the efficiency
    - id: levelModifier
      type: System.Single
      description: The level modifier for the <code class="paramref">skill</code>
    return:
      type: System.Single
      description: The efficiency modifier for this object
    content.vb: Public Overrides Function GetEfficiencyModifier(person As PersonLike, info As ActionInfo, isAuxiliary As Boolean, skill As SkillType, levelModifier As Single) As Single
  overridden: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  overload: TinyLife.Objects.Furniture.GetEfficiencyModifier*
  nameWithType.vb: Furniture.GetEfficiencyModifier(PersonLike, ActionInfo, Boolean, SkillType, Single)
  fullName.vb: TinyLife.Objects.Furniture.GetEfficiencyModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Skills.SkillType, Single)
  name.vb: GetEfficiencyModifier(PersonLike, ActionInfo, Boolean, SkillType, Single)
- uid: TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  commentId: M:TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  id: GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetRestoreNeedModifier(PersonLike, ActionInfo, bool, NeedType)
  nameWithType: Furniture.GetRestoreNeedModifier(PersonLike, ActionInfo, bool, NeedType)
  fullName: TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.NeedType)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the modifier that this object multiplies the person's restored need with.

    This method is automatically called in <xref href="TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType%2cSystem.Single%2cTinyLife.Actions.ActionInfo%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.

    This action is invoked for all <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> of the passed <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref>.

    By default, this method returns 1, meaning the need restoration modifier will not be influenced.
  example: []
  syntax:
    content: public override float GetRestoreNeedModifier(PersonLike person, ActionInfo info, bool isAuxiliary, NeedType type)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person whose need restoration should be influenced.
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object is auxiliary (or the main action object).
    - id: type
      type: TinyLife.NeedType
      description: The type of need that is being restored.
    return:
      type: System.Single
      description: The need restoration modifier for this object.
    content.vb: Public Overrides Function GetRestoreNeedModifier(person As PersonLike, info As ActionInfo, isAuxiliary As Boolean, type As NeedType) As Single
  overridden: TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  overload: TinyLife.Objects.Furniture.GetRestoreNeedModifier*
  nameWithType.vb: Furniture.GetRestoreNeedModifier(PersonLike, ActionInfo, Boolean, NeedType)
  fullName.vb: TinyLife.Objects.Furniture.GetRestoreNeedModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.NeedType)
  name.vb: GetRestoreNeedModifier(PersonLike, ActionInfo, Boolean, NeedType)
- uid: TinyLife.Objects.Furniture.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  commentId: M:TinyLife.Objects.Furniture.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  id: OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnRandomQuality(PersonLike, ActionInfo, bool, SkillType, Random, bool, Dictionary<Quality, float>)
  nameWithType: Furniture.OnRandomQuality(PersonLike, ActionInfo, bool, SkillType, Random, bool, Dictionary<Quality, float>)
  fullName: TinyLife.Objects.Furniture.OnRandomQuality(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.Skills.SkillType, System.Random, bool, System.Collections.Generic.Dictionary<TinyLife.Skills.Quality, float>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A method that is invoked when a random quality is determined based on an action and skill in <xref href="TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike%2cSystem.Random%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean%2cTinyLife.Emotions.IEmotionSource%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    This method is invoked for all <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> of the passed <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override void OnRandomQuality(PersonLike person, ActionInfo info, bool isAuxiliary, SkillType skill, Random random, bool alwaysAllowAverage, Dictionary<Quality, float> weights)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person.
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object is auxiliary (or the main action object).
    - id: skill
      type: TinyLife.Skills.SkillType
      description: The skill.
    - id: random
      type: System.Random
      description: The <xref href="System.Random" data-throw-if-not-resolved="false"></xref> instance used for determining the quality.
    - id: alwaysAllowAverage
      type: System.Boolean
      description: Whether the <xref href="TinyLife.Skills.Quality.Average" data-throw-if-not-resolved="false"></xref> quality should always be available as an option.
    - id: weights
      type: System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}
      description: The weights for each quality. This collection contains keys for all <xref href="TinyLife.Skills.Quality" data-throw-if-not-resolved="false"></xref> values, and entries should not be removed, only modified.
    content.vb: Public Overrides Sub OnRandomQuality(person As PersonLike, info As ActionInfo, isAuxiliary As Boolean, skill As SkillType, random As Random, alwaysAllowAverage As Boolean, weights As Dictionary(Of Quality, Single))
  overridden: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  overload: TinyLife.Objects.Furniture.OnRandomQuality*
  nameWithType.vb: Furniture.OnRandomQuality(PersonLike, ActionInfo, Boolean, SkillType, Random, Boolean, Dictionary(Of Quality, Single))
  fullName.vb: TinyLife.Objects.Furniture.OnRandomQuality(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Skills.SkillType, System.Random, Boolean, System.Collections.Generic.Dictionary(Of TinyLife.Skills.Quality, Single))
  name.vb: OnRandomQuality(PersonLike, ActionInfo, Boolean, SkillType, Random, Boolean, Dictionary(Of Quality, Single))
- uid: TinyLife.Objects.Furniture.IsFreeSpot(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Objects.Furniture.IsFreeSpot(Microsoft.Xna.Framework.Point)
  id: IsFreeSpot(Microsoft.Xna.Framework.Point)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: IsFreeSpot(Point)
  nameWithType: Furniture.IsFreeSpot(Point)
  fullName: TinyLife.Objects.Furniture.IsFreeSpot(Microsoft.Xna.Framework.Point)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns whether a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> should be allowed to occupy or pass the given <code class="paramref">position</code>, which is contained in this object's intersection area (<xref href="TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)" data-throw-if-not-resolved="false"></xref>).

    By default, <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> objects return whether they have the <xref href="TinyLife.Objects.ObjectCategory.NonColliding" data-throw-if-not-resolved="false"></xref> category, and all other objects return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.

    Note that, if this object moves, <xref href="TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> should be invoked for its previous and resulting <xref href="TinyLife.Objects.MapObject.Position" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override bool IsFreeSpot(Point position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Point
      description: The position whose path cost modifier is being calculated.
    return:
      type: System.Boolean
      description: Whether a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> can occupy the given <code class="paramref">position</code>.
    content.vb: Public Overrides Function IsFreeSpot(position As Point) As Boolean
  overridden: TinyLife.Objects.MapObject.IsFreeSpot(Microsoft.Xna.Framework.Point)
  overload: TinyLife.Objects.Furniture.IsFreeSpot*
- uid: TinyLife.Objects.Furniture.ResetToStatic(System.Boolean,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.ResetToStatic(System.Boolean,System.Boolean)
  id: ResetToStatic(System.Boolean,System.Boolean)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: ResetToStatic(bool, bool)
  nameWithType: Furniture.ResetToStatic(bool, bool)
  fullName: TinyLife.Objects.Furniture.ResetToStatic(bool, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Resets this map object to a static state when the <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> that is on is exported.
  example: []
  syntax:
    content: public override bool ResetToStatic(bool thorough, bool custom)
    parameters:
    - id: thorough
      type: System.Boolean
      description: Whether a more thorough reset is expected, which usually involves normalizing additional data and cleaning up player data entirely.
    - id: custom
      type: System.Boolean
      description: Whether the static reset is happening in a custom context, that is, a <xref href="TinyLife.World.Household" data-throw-if-not-resolved="false"></xref> being exported normally rather than through cheats, or a custom <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> being exported.
    return:
      type: System.Boolean
      description: Whether this object should stay on the map after the static reset. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> is returned, this object is removed.
    content.vb: Public Overrides Function ResetToStatic(thorough As Boolean, custom As Boolean) As Boolean
  overridden: TinyLife.Objects.MapObject.ResetToStatic(System.Boolean,System.Boolean)
  overload: TinyLife.Objects.Furniture.ResetToStatic*
  nameWithType.vb: Furniture.ResetToStatic(Boolean, Boolean)
  fullName.vb: TinyLife.Objects.Furniture.ResetToStatic(Boolean, Boolean)
  name.vb: ResetToStatic(Boolean, Boolean)
- uid: TinyLife.Objects.Furniture.ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
  commentId: M:TinyLife.Objects.Furniture.ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
  id: ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: ModifyActionCategories(ActionType, ActionInfo, bool, List<string>)
  nameWithType: Furniture.ModifyActionCategories(ActionType, ActionInfo, bool, List<string>)
  fullName: TinyLife.Objects.Furniture.ModifyActionCategories(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool, System.Collections.Generic.List<string>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A method that allows changing the <xref href="TinyLife.Actions.ActionType.TypeSettings.Categories" data-throw-if-not-resolved="false"></xref> of an action when displaying it in the ring menu.

    This is used by objects like the <xref href="TinyLife.Objects.ObjectCategory.LandlinePhone" data-throw-if-not-resolved="false"></xref> to remove the "Phone..." category if the action is not invoked on <xref href="TinyLife.Objects.ObjectCategory.Self" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override void ModifyActionCategories(ActionType type, ActionInfo info, bool isAuxiliary, List<string> categories)
    parameters:
    - id: type
      type: TinyLife.Actions.ActionType
      description: The action type.
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: isAuxiliary
      type: System.Boolean
      description: Whether this object is auxiliary.
    - id: categories
      type: System.Collections.Generic.List{System.String}
      description: The categories.
    content.vb: Public Overrides Sub ModifyActionCategories(type As ActionType, info As ActionInfo, isAuxiliary As Boolean, categories As List(Of String))
  overridden: TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
  overload: TinyLife.Objects.Furniture.ModifyActionCategories*
  nameWithType.vb: Furniture.ModifyActionCategories(ActionType, ActionInfo, Boolean, List(Of String))
  fullName.vb: TinyLife.Objects.Furniture.ModifyActionCategories(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean, System.Collections.Generic.List(Of String))
  name.vb: ModifyActionCategories(ActionType, ActionInfo, Boolean, List(Of String))
- uid: TinyLife.Objects.Furniture.DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:TinyLife.Objects.Furniture.DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  id: DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: DrawIcon(Element, GameTime, SpriteBatch)
  nameWithType: Furniture.DrawIcon(Element, GameTime, SpriteBatch)
  fullName: TinyLife.Objects.Furniture.DrawIcon(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Draws this object as an icon in UI space. This method is called by the action queue as well as for notifications.

    By default, people draw their <xref href="TinyLife.Objects.PersonLike.Portrait" data-throw-if-not-resolved="false"></xref>, and <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> draws itself in ui space.
  example: []
  syntax:
    content: public override bool DrawIcon(Element element, GameTime time, SpriteBatch batch)
    parameters:
    - id: element
      type: MLEM.Ui.Elements.Element
      description: The element to draw the object in.
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game time.
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing.
    return:
      type: System.Boolean
      description: Whether the object was actually drawn as an icon. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> is returned, a replacement icon can be drawn by the caller instead.
    content.vb: Public Overrides Function DrawIcon(element As Element, time As GameTime, batch As SpriteBatch) As Boolean
  overridden: TinyLife.Objects.MapObject.DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  overload: TinyLife.Objects.Furniture.DrawIcon*
- uid: TinyLife.Objects.Furniture.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  commentId: M:TinyLife.Objects.Furniture.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  id: MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: MoveToMap(Map, Vector2?, float?)
  nameWithType: Furniture.MoveToMap(Map, Vector2?, float?)
  fullName: TinyLife.Objects.Furniture.MoveToMap(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, float?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Moves this object to the given <code class="paramref">map</code>, changing the current <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> in the process.

    If the object is currently on its <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> (<xref href="TinyLife.Objects.MapObject.IsInWorld" data-throw-if-not-resolved="false"></xref>), then it is removed from it using <xref href="TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)" data-throw-if-not-resolved="false"></xref> and added to the new <code class="paramref">map</code> using <xref href="TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)" data-throw-if-not-resolved="false"></xref>. If the object is not currently on its <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref>, then its map is changed without subsequently adding it to the new <code class="paramref">map</code>.
  example: []
  syntax:
    content: public override bool MoveToMap(Map map, Vector2? position = null, float? floor = null)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to move to.
    - id: position
      type: System.Nullable{Microsoft.Xna.Framework.Vector2}
      description: The position on the new map to move to, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to keep it the same.
    - id: floor
      type: System.Nullable{System.Single}
      description: The floor to move to, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to keep it the same.
    return:
      type: System.Boolean
      description: Whether moving to the map was successful, which is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if this object's <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> is already the given <code class="paramref">map</code>. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> is returned, its <xref href="TinyLife.Objects.MapObject.IsInWorld" data-throw-if-not-resolved="false"></xref> state is additionally guaranteed to be the same as it was before this method was called. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> is returned, no action was performed.
    content.vb: Public Overrides Function MoveToMap(map As Map, position As Vector2? = Nothing, floor As Single? = Nothing) As Boolean
  overridden: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  overload: TinyLife.Objects.Furniture.MoveToMap*
  nameWithType.vb: Furniture.MoveToMap(Map, Vector2?, Single?)
  fullName.vb: TinyLife.Objects.Furniture.MoveToMap(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, Single?)
  name.vb: MoveToMap(Map, Vector2?, Single?)
- uid: TinyLife.Objects.Furniture.OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:TinyLife.Objects.Furniture.OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
  id: OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnPositionChanged(Vector2, float)
  nameWithType: Furniture.OnPositionChanged(Vector2, float)
  fullName: TinyLife.Objects.Furniture.OnPositionChanged(Microsoft.Xna.Framework.Vector2, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A method that is automatically called when this object's <xref href="TinyLife.Objects.MapObject.Position" data-throw-if-not-resolved="false"></xref> changes.

    By default, this method is overriden in <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> to call <xref href="TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.

    Note that this method is also called if this object is not in the world (<xref href="TinyLife.Objects.MapObject.IsInWorld" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: protected override void OnPositionChanged(Vector2 lastPosition, float lastFloor)
    parameters:
    - id: lastPosition
      type: Microsoft.Xna.Framework.Vector2
      description: This object's previous position.
    - id: lastFloor
      type: System.Single
      description: This object's previous floor.
    content.vb: Protected Overrides Sub OnPositionChanged(lastPosition As Vector2, lastFloor As Single)
  overridden: TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
  overload: TinyLife.Objects.Furniture.OnPositionChanged*
  nameWithType.vb: Furniture.OnPositionChanged(Vector2, Single)
  fullName.vb: TinyLife.Objects.Furniture.OnPositionChanged(Microsoft.Xna.Framework.Vector2, Single)
  name.vb: OnPositionChanged(Vector2, Single)
- uid: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},MLEM.Maths.Direction2,System.Int32[],System.Single,System.Boolean,TinyLife.Objects.ParentInfo,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},MLEM.Maths.Direction2,System.Int32[],System.Single,System.Boolean,TinyLife.Objects.ParentInfo,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  id: Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},MLEM.Maths.Direction2,System.Int32[],System.Single,System.Boolean,TinyLife.Objects.ParentInfo,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: Draw(GameTime, object, Vector2, float, Vector2, Color?, Direction2, int[], float, bool, ParentInfo, float, List<Item>)
  nameWithType: Furniture.Draw(GameTime, object, Vector2, float, Vector2, Color?, Direction2, int[], float, bool, ParentInfo, float, List<StaticSpriteBatch.Item>)
  fullName: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime, object, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, MLEM.Maths.Direction2, int[], float, bool, TinyLife.Objects.ParentInfo, float, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Draws this furniture in the world with the given settings.

    This is a more generalized version of <xref href="TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime%2cSystem.Object%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Color%7d%2cSystem.Collections.Generic.List%7bMLEM.Graphics.StaticSpriteBatch.Item%7d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public virtual void Draw(GameTime time, object batch, Vector2 pos, float floor, Vector2 drawPos, Color? overrideColor, Direction2 rotation, int[] colors, float drawScale, bool pivot, ParentInfo parent, float depthOffset, List<StaticSpriteBatch.Item> items)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game time
    - id: batch
      type: System.Object
      description: The sprite batch to draw with, which is either a <xref href="Microsoft.Xna.Framework.Graphics.SpriteBatch" data-throw-if-not-resolved="false"></xref> or <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    - id: pos
      type: Microsoft.Xna.Framework.Vector2
      description: The position, in world space, that the furniture is at
    - id: floor
      type: System.Single
      description: The floor to draw at.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position, in draw space, to draw the furniture at
    - id: overrideColor
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: An optional color to override the default colors of the furniture
    - id: rotation
      type: MLEM.Maths.Direction2
      description: The rotation that the furniture should be drawn with.
    - id: colors
      type: System.Int32[]
      description: The colors to draw the furniture with
    - id: drawScale
      type: System.Single
      description: The scale to draw the furniture with
    - id: pivot
      type: System.Boolean
      description: Whether or not to move the furniture by its texture's pivot point
    - id: parent
      type: TinyLife.Objects.ParentInfo
      description: The object that this furniture is latched on to, or null if there is none
    - id: depthOffset
      type: System.Single
      description: A value that is added onto the calculated depth of the object
    - id: items
      type: System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item}
      description: A list of sprite batch items that items should be added to if the <code class="paramref">batch</code> is a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overridable Sub Draw(time As GameTime, batch As Object, pos As Vector2, floor As Single, drawPos As Vector2, overrideColor As Color?, rotation As Direction2, colors As Integer(), drawScale As Single, pivot As Boolean, parent As ParentInfo, depthOffset As Single, items As List(Of StaticSpriteBatch.Item))
  overload: TinyLife.Objects.Furniture.Draw*
  nameWithType.vb: Furniture.Draw(GameTime, Object, Vector2, Single, Vector2, Color?, Direction2, Integer(), Single, Boolean, ParentInfo, Single, List(Of StaticSpriteBatch.Item))
  fullName.vb: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime, Object, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, MLEM.Maths.Direction2, Integer(), Single, Boolean, TinyLife.Objects.ParentInfo, Single, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: Draw(GameTime, Object, Vector2, Single, Vector2, Color?, Direction2, Integer(), Single, Boolean, ParentInfo, Single, List(Of Item))
- uid: TinyLife.Objects.Furniture.GetPrice
  commentId: M:TinyLife.Objects.Furniture.GetPrice
  id: GetPrice
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetPrice()
  nameWithType: Furniture.GetPrice()
  fullName: TinyLife.Objects.Furniture.GetPrice()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns the price of this furniture item, including its <xref href="TinyLife.Objects.Furniture.CustomPrice" data-throw-if-not-resolved="false"></xref> or its <xref href="TinyLife.Objects.Furniture.Type" data-throw-if-not-resolved="false"></xref>'s base price, whether it was devalued through use, whether it is dirty, its <xref href="TinyLife.Objects.Furniture.Quality" data-throw-if-not-resolved="false"></xref>, and more.
  example: []
  syntax:
    content: public virtual float GetPrice()
    return:
      type: System.Single
      description: This furniture item's price.
    content.vb: Public Overridable Function GetPrice() As Single
  overload: TinyLife.Objects.Furniture.GetPrice*
- uid: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
  id: GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetDescription(List<string>, bool)
  nameWithType: Furniture.GetDescription(List<string>, bool)
  fullName: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List<string>, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method allows adding a set of strings to the <code class="paramref">description</code> list that get displayed when the object is hovered over in the build mode or household storage UIs.

    By default, this method adds various strings related to the <xref href="TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Objects.Furniture.Quality" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Objects.Furniture.Creator" data-throw-if-not-resolved="false"></xref>, and also invokes the <xref href="TinyLife.Objects.Furniture.OnGetDescription" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public virtual void GetDescription(List<string> description, bool forHoverInfo)
    parameters:
    - id: description
      type: System.Collections.Generic.List{System.String}
      description: The description to add to.
    - id: forHoverInfo
      type: System.Boolean
      description: Whether this method is being called by <xref href="TinyLife.Objects.Furniture.GetHoverInfo(MLEM.Ui.Elements.Tooltip)" data-throw-if-not-resolved="false"></xref> (or by build mode).
    content.vb: Public Overridable Sub GetDescription(description As List(Of String), forHoverInfo As Boolean)
  overload: TinyLife.Objects.Furniture.GetDescription*
  nameWithType.vb: Furniture.GetDescription(List(Of String), Boolean)
  fullName.vb: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List(Of String), Boolean)
  name.vb: GetDescription(List(Of String), Boolean)
- uid: TinyLife.Objects.Furniture.GetDecorativeRating(TinyLife.World.Room)
  commentId: M:TinyLife.Objects.Furniture.GetDecorativeRating(TinyLife.World.Room)
  id: GetDecorativeRating(TinyLife.World.Room)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetDecorativeRating(Room)
  nameWithType: Furniture.GetDecorativeRating(Room)
  fullName: TinyLife.Objects.Furniture.GetDecorativeRating(TinyLife.World.Room)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the decorative rating of this object in the given room.

    By default, the underlying <xref href="TinyLife.Objects.Furniture.Type" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating" data-throw-if-not-resolved="false"></xref>, influeced by whether this object is <xref href="TinyLife.Objects.Furniture.Dirty" data-throw-if-not-resolved="false"></xref>, is returned.
  example: []
  syntax:
    content: public virtual float GetDecorativeRating(Room room)
    parameters:
    - id: room
      type: TinyLife.World.Room
      description: The room that the object is in, or null if it is not in a room at all
    return:
      type: System.Single
      description: The decorative rating of this object
    content.vb: Public Overridable Function GetDecorativeRating(room As Room) As Single
  overload: TinyLife.Objects.Furniture.GetDecorativeRating*
- uid: TinyLife.Objects.Furniture.GetDirty(TinyLife.Objects.PersonLike,System.TimeSpan)
  commentId: M:TinyLife.Objects.Furniture.GetDirty(TinyLife.Objects.PersonLike,System.TimeSpan)
  id: GetDirty(TinyLife.Objects.PersonLike,System.TimeSpan)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetDirty(PersonLike, TimeSpan)
  nameWithType: Furniture.GetDirty(PersonLike, TimeSpan)
  fullName: TinyLife.Objects.Furniture.GetDirty(TinyLife.Objects.PersonLike, System.TimeSpan)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Causes this object to get "more dirty" by increasing a timer and randomly, based on the amount of time that the timer has, turns <xref href="TinyLife.Objects.Furniture.Dirty" data-throw-if-not-resolved="false"></xref> to true.

    If this object cannot be dirty (<xref href="TinyLife.Objects.Furniture.CanBeDirty" data-throw-if-not-resolved="false"></xref>), or it is already <xref href="TinyLife.Objects.Furniture.Dirty" data-throw-if-not-resolved="false"></xref>, this method has no effect.

    By default, this method is called in <xref href="TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action%2cMicrosoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> every update frame if this object isn't already <xref href="TinyLife.Objects.Furniture.Dirty" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void GetDirty(PersonLike person, TimeSpan passedInGame)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person who is responsible for making this object more dirty.
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that should be simulated in game.
    content.vb: Public Overridable Sub GetDirty(person As PersonLike, passedInGame As TimeSpan)
  overload: TinyLife.Objects.Furniture.GetDirty*
- uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
  id: SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: SetCreator(PersonLike, bool)
  nameWithType: Furniture.SetCreator(PersonLike, bool)
  fullName: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Sets the <xref href="TinyLife.Objects.Furniture.CreatorId" data-throw-if-not-resolved="false"></xref> (and thus, the <xref href="TinyLife.Objects.Furniture.Creator" data-throw-if-not-resolved="false"></xref>) of this furniture item, optionally triggering goals that react to the <xref href="TinyLife.Goals.GoalTrigger.FurnitureCreated" data-throw-if-not-resolved="false"></xref> goal trigger
  example: []
  syntax:
    content: public virtual void SetCreator(PersonLike person, bool triggerGoals = true)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person to set as the creator
    - id: triggerGoals
      type: System.Boolean
      description: Whether <xref href="TinyLife.Goals.GoalTrigger.FurnitureCreated" data-throw-if-not-resolved="false"></xref> goal triggers should be triggered
    content.vb: Public Overridable Sub SetCreator(person As PersonLike, triggerGoals As Boolean = True)
  overload: TinyLife.Objects.Furniture.SetCreator*
  nameWithType.vb: Furniture.SetCreator(PersonLike, Boolean)
  fullName.vb: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike, Boolean)
  name.vb: SetCreator(PersonLike, Boolean)
- uid: TinyLife.Objects.Furniture.OnPlacedInBuildMode(TinyLife.Tools.FurniturePlacer,System.Boolean,TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.Objects.Furniture.OnPlacedInBuildMode(TinyLife.Tools.FurniturePlacer,System.Boolean,TinyLife.Tools.UndoableAction)
  id: OnPlacedInBuildMode(TinyLife.Tools.FurniturePlacer,System.Boolean,TinyLife.Tools.UndoableAction)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnPlacedInBuildMode(FurniturePlacer, bool, UndoableAction)
  nameWithType: Furniture.OnPlacedInBuildMode(FurniturePlacer, bool, UndoableAction)
  fullName: TinyLife.Objects.Furniture.OnPlacedInBuildMode(TinyLife.Tools.FurniturePlacer, bool, TinyLife.Tools.UndoableAction)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when this furniture item is placed using the <xref href="TinyLife.Tools.FurniturePlacer" data-throw-if-not-resolved="false"></xref>. It can be used to award emotion modifiers or other information based on whether this item was <code class="paramref">freshlyBought</code>.

    By default, this method awards emotion modifiers based on the <xref href="TinyLife.Objects.MapObject.CurrentLot" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.World.Household" data-throw-if-not-resolved="false"></xref>'s members' <xref href="TinyLife.PersonalityType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void OnPlacedInBuildMode(FurniturePlacer placer, bool freshlyBought, UndoableAction action)
    parameters:
    - id: placer
      type: TinyLife.Tools.FurniturePlacer
      description: The furniture placer used to place this object.
    - id: freshlyBought
      type: System.Boolean
      description: Whether this item was freshly bought (or placed from storage).
    - id: action
      type: TinyLife.Tools.UndoableAction
      description: The undoable action that is being used to place this furniture in build mode, which additional steps can optionally be added to by this method.
    content.vb: Public Overridable Sub OnPlacedInBuildMode(placer As FurniturePlacer, freshlyBought As Boolean, action As UndoableAction)
  overload: TinyLife.Objects.Furniture.OnPlacedInBuildMode*
  nameWithType.vb: Furniture.OnPlacedInBuildMode(FurniturePlacer, Boolean, UndoableAction)
  fullName.vb: TinyLife.Objects.Furniture.OnPlacedInBuildMode(TinyLife.Tools.FurniturePlacer, Boolean, TinyLife.Tools.UndoableAction)
  name.vb: OnPlacedInBuildMode(FurniturePlacer, Boolean, UndoableAction)
- uid: TinyLife.Objects.Furniture.GetWallsInTheWay``1(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.Objects.WallLike})
  commentId: M:TinyLife.Objects.Furniture.GetWallsInTheWay``1(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.Objects.WallLike})
  id: GetWallsInTheWay``1(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.Objects.WallLike})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetWallsInTheWay<T>(Vector2, float, Direction2, float, ICollection<WallLike>)
  nameWithType: Furniture.GetWallsInTheWay<T>(Vector2, float, Direction2, float, ICollection<WallLike>)
  fullName: TinyLife.Objects.Furniture.GetWallsInTheWay<T>(Microsoft.Xna.Framework.Vector2, float, MLEM.Maths.Direction2, float, System.Collections.Generic.ICollection<TinyLife.Objects.WallLike>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns a set of walls that would be in the way if this furniture type was placed at the given position with the given rotation
  example: []
  syntax:
    content: 'public virtual IEnumerable<T> GetWallsInTheWay<T>(Vector2 pos, float floor, Direction2 rotation, float distanceFromObstructions = 0, ICollection<WallLike> possibleAdditionalWalls = null) where T : WallLike'
    parameters:
    - id: pos
      type: Microsoft.Xna.Framework.Vector2
      description: The position that the furniture should be placed at
    - id: floor
      type: System.Single
      description: The floor to query.
    - id: rotation
      type: MLEM.Maths.Direction2
      description: The rotation that the furniture should have
    - id: distanceFromObstructions
      type: System.Single
      description: The maximum distance from obstructions.
    - id: possibleAdditionalWalls
      type: System.Collections.Generic.ICollection{TinyLife.Objects.WallLike}
      description: A set of walls that have not been placed yet, but might also be in the way.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: A set of walls that would be in the way
    content.vb: Public Overridable Function GetWallsInTheWay(Of T As WallLike)(pos As Vector2, floor As Single, rotation As Direction2, distanceFromObstructions As Single = 0, possibleAdditionalWalls As ICollection(Of WallLike) = Nothing) As IEnumerable(Of T)
  overload: TinyLife.Objects.Furniture.GetWallsInTheWay*
  nameWithType.vb: Furniture.GetWallsInTheWay(Of T)(Vector2, Single, Direction2, Single, ICollection(Of WallLike))
  fullName.vb: TinyLife.Objects.Furniture.GetWallsInTheWay(Of T)(Microsoft.Xna.Framework.Vector2, Single, MLEM.Maths.Direction2, Single, System.Collections.Generic.ICollection(Of TinyLife.Objects.WallLike))
  name.vb: GetWallsInTheWay(Of T)(Vector2, Single, Direction2, Single, ICollection(Of WallLike))
- uid: TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2,System.Int32,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.World.Roof})
  commentId: M:TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2,System.Int32,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.World.Roof})
  id: GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2,System.Int32,MLEM.Maths.Direction2,System.Single,System.Collections.Generic.ICollection{TinyLife.World.Roof})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetRoofingInTheWay(Vector2, int, Direction2, float, ICollection<Roof>)
  nameWithType: Furniture.GetRoofingInTheWay(Vector2, int, Direction2, float, ICollection<Roof>)
  fullName: TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2, int, MLEM.Maths.Direction2, float, System.Collections.Generic.ICollection<TinyLife.World.Roof>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns a set of roofing that would be in the way if this furniture type was placed at the given position with the given rotation.

    Note that, if this furniture type does not have the <xref href="TinyLife.Objects.ObjectCategory.ObstructedByRoofs" data-throw-if-not-resolved="false"></xref> category, no roofs will be returned.
  example: []
  syntax:
    content: public virtual IEnumerable<Roof> GetRoofingInTheWay(Vector2 pos, int floor, Direction2 rotation, float distanceFromObstructions = 0, ICollection<Roof> possibleAdditionalRoofs = null)
    parameters:
    - id: pos
      type: Microsoft.Xna.Framework.Vector2
      description: The position that the furniture should be placed at, or is already at.
    - id: floor
      type: System.Int32
      description: The floor that the furniture should be placed at, or is already at.
    - id: rotation
      type: MLEM.Maths.Direction2
      description: The rotation that the furniture should have
    - id: distanceFromObstructions
      type: System.Single
      description: The maximum distance from obstructions.
    - id: possibleAdditionalRoofs
      type: System.Collections.Generic.ICollection{TinyLife.World.Roof}
      description: A set of roofs that have not been placed yet, but might also be in the way.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.World.Roof}
      description: A set of roofing that would be in the way
    content.vb: Public Overridable Function GetRoofingInTheWay(pos As Vector2, floor As Integer, rotation As Direction2, distanceFromObstructions As Single = 0, possibleAdditionalRoofs As ICollection(Of Roof) = Nothing) As IEnumerable(Of Roof)
  overload: TinyLife.Objects.Furniture.GetRoofingInTheWay*
  nameWithType.vb: Furniture.GetRoofingInTheWay(Vector2, Integer, Direction2, Single, ICollection(Of Roof))
  fullName.vb: TinyLife.Objects.Furniture.GetRoofingInTheWay(Microsoft.Xna.Framework.Vector2, Integer, MLEM.Maths.Direction2, Single, System.Collections.Generic.ICollection(Of TinyLife.World.Roof))
  name.vb: GetRoofingInTheWay(Vector2, Integer, Direction2, Single, ICollection(Of Roof))
- uid: TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
  commentId: M:TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
  id: GetAppliedUpgrade(TinyLife.Objects.Upgrade)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetAppliedUpgrade(Upgrade)
  nameWithType: Furniture.GetAppliedUpgrade(Upgrade)
  fullName: TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns the <xref href="TinyLife.Objects.AppliedUpgrade" data-throw-if-not-resolved="false"></xref> instance that this furniture item has for the given <xref href="TinyLife.Objects.Upgrade" data-throw-if-not-resolved="false"></xref>. If the upgrade is not applied, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> is returned.
  example: []
  syntax:
    content: public virtual AppliedUpgrade GetAppliedUpgrade(Upgrade upgrade)
    parameters:
    - id: upgrade
      type: TinyLife.Objects.Upgrade
      description: The upgrade to query.
    return:
      type: TinyLife.Objects.AppliedUpgrade
      description: The applied upgrade, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the upgrade is not applied.
    content.vb: Public Overridable Function GetAppliedUpgrade(upgrade As Upgrade) As AppliedUpgrade
  overload: TinyLife.Objects.Furniture.GetAppliedUpgrade*
- uid: TinyLife.Objects.Furniture.ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)
  commentId: M:TinyLife.Objects.Furniture.ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)
  id: ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: ApplyUpgrade(AppliedUpgrade)
  nameWithType: Furniture.ApplyUpgrade(AppliedUpgrade)
  fullName: TinyLife.Objects.Furniture.ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Adds the given <xref href="TinyLife.Objects.AppliedUpgrade" data-throw-if-not-resolved="false"></xref> to this furniture item's collection of <xref href="TinyLife.Objects.Furniture.AppliedUpgrades" data-throw-if-not-resolved="false"></xref> and invokes the <xref href="TinyLife.Objects.Furniture.OnAppliedUpgrade" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public virtual bool ApplyUpgrade(AppliedUpgrade upgrade)
    parameters:
    - id: upgrade
      type: TinyLife.Objects.AppliedUpgrade
      description: The upgrade to apply.
    return:
      type: System.Boolean
      description: Whether the upgrade was successfully applied. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, it means the upgrade is either not compatible, or already applied.
    content.vb: Public Overridable Function ApplyUpgrade(upgrade As AppliedUpgrade) As Boolean
  overload: TinyLife.Objects.Furniture.ApplyUpgrade*
- uid: TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
  commentId: M:TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
  id: HasFullUpgrade(TinyLife.Objects.Upgrade)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: HasFullUpgrade(Upgrade)
  nameWithType: Furniture.HasFullUpgrade(Upgrade)
  fullName: TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns whether this furniture item has a <xref href="TinyLife.Objects.Upgrade" data-throw-if-not-resolved="false"></xref> applied that also has a <xref href="TinyLife.Objects.AppliedUpgrade.Progress" data-throw-if-not-resolved="false"></xref> of 1.

    This method should be used to check for whether an upgrade should currently have an effect on a furniture item.
  example: []
  syntax:
    content: public virtual bool HasFullUpgrade(Upgrade upgrade)
    parameters:
    - id: upgrade
      type: TinyLife.Objects.Upgrade
      description: The upgrade to query.
    return:
      type: System.Boolean
      description: Whether the upgrade is fully applied.
    content.vb: Public Overridable Function HasFullUpgrade(upgrade As Upgrade) As Boolean
  overload: TinyLife.Objects.Furniture.HasFullUpgrade*
- uid: TinyLife.Objects.Furniture.OnNeighborChanged(TinyLife.Objects.Furniture)
  commentId: M:TinyLife.Objects.Furniture.OnNeighborChanged(TinyLife.Objects.Furniture)
  id: OnNeighborChanged(TinyLife.Objects.Furniture)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: OnNeighborChanged(Furniture)
  nameWithType: Furniture.OnNeighborChanged(Furniture)
  fullName: TinyLife.Objects.Furniture.OnNeighborChanged(TinyLife.Objects.Furniture)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method gets called when any neighboring furniture changes in <xref href="TinyLife.Objects.Furniture.NotifyNeighbors" data-throw-if-not-resolved="false"></xref>. The neighboring furniture is passed.

    By default, this method does nothing, so calling base is not necessary.
  example: []
  syntax:
    content: protected virtual void OnNeighborChanged(Furniture neighbor)
    parameters:
    - id: neighbor
      type: TinyLife.Objects.Furniture
      description: The neighbor furniture that changed
    content.vb: Protected Overridable Sub OnNeighborChanged(neighbor As Furniture)
  overload: TinyLife.Objects.Furniture.OnNeighborChanged*
- uid: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
  id: MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: MarkDirtyForPathfinding(Vector2, float)
  nameWithType: Furniture.MarkDirtyForPathfinding(Vector2, float)
  fullName: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A method that is called when this object is moved, placed or picked up to alert all of its surrounding tiles that their pathfinding cache should be invalidated using <xref href="TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected virtual void MarkDirtyForPathfinding(Vector2 position, float floor)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position that this furniture had or will have when picked up or placed.
    - id: floor
      type: System.Single
      description: The floor this furniture was or will be on when picked up or placed.
    content.vb: Protected Overridable Sub MarkDirtyForPathfinding(position As Vector2, floor As Single)
  overload: TinyLife.Objects.Furniture.MarkDirtyForPathfinding*
  nameWithType.vb: Furniture.MarkDirtyForPathfinding(Vector2, Single)
  fullName.vb: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2, Single)
  name.vb: MarkDirtyForPathfinding(Vector2, Single)
- uid: TinyLife.Objects.Furniture.DrawDirtyOverlay(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},MLEM.Maths.Direction2,System.Int32[],System.Single,System.Boolean,TinyLife.Objects.ParentInfo,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.Objects.Furniture.DrawDirtyOverlay(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},MLEM.Maths.Direction2,System.Int32[],System.Single,System.Boolean,TinyLife.Objects.ParentInfo,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  id: DrawDirtyOverlay(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},MLEM.Maths.Direction2,System.Int32[],System.Single,System.Boolean,TinyLife.Objects.ParentInfo,System.Single,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: DrawDirtyOverlay(GameTime, object, Vector2, float, Vector2, Color?, Direction2, int[], float, bool, ParentInfo, float, List<Item>)
  nameWithType: Furniture.DrawDirtyOverlay(GameTime, object, Vector2, float, Vector2, Color?, Direction2, int[], float, bool, ParentInfo, float, List<StaticSpriteBatch.Item>)
  fullName: TinyLife.Objects.Furniture.DrawDirtyOverlay(Microsoft.Xna.Framework.GameTime, object, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, MLEM.Maths.Direction2, int[], float, bool, TinyLife.Objects.ParentInfo, float, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Draws the <xref href="TinyLife.Objects.FurnitureType.DirtyTextures" data-throw-if-not-resolved="false"></xref> of this object into the world.

    Note that, if this object cannot get dirty, this method will throw a <xref href="System.NullReferenceException" data-throw-if-not-resolved="false"></xref>.

    By default, the dirty overlay is automatically drawn by a <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> object that is <xref href="TinyLife.Objects.Furniture.Dirty" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected virtual void DrawDirtyOverlay(GameTime time, object batch, Vector2 pos, float floor, Vector2 drawPos, Color? overrideColor, Direction2 rotation, int[] colors, float drawScale, bool pivot, ParentInfo parent, float depthOffset, List<StaticSpriteBatch.Item> items)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current game time
    - id: batch
      type: System.Object
      description: The sprite batch to draw with, which is either a <xref href="Microsoft.Xna.Framework.Graphics.SpriteBatch" data-throw-if-not-resolved="false"></xref> or <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    - id: pos
      type: Microsoft.Xna.Framework.Vector2
      description: The current position
    - id: floor
      type: System.Single
      description: The floor to draw at.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position to draw at, in draw space
    - id: overrideColor
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: An optional color to override the default colors of the furniture
    - id: rotation
      type: MLEM.Maths.Direction2
      description: The rotation that this object has, used for some calculations
    - id: colors
      type: System.Int32[]
      description: The colors that this object has.
    - id: drawScale
      type: System.Single
      description: The scale to dra with.
    - id: pivot
      type: System.Boolean
      description: The texture's pivot point, in texture-space pixels
    - id: parent
      type: TinyLife.Objects.ParentInfo
      description: The object's parent object
    - id: depthOffset
      type: System.Single
      description: A value that is added to the calculated object's depth
    - id: items
      type: System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item}
      description: A list of sprite batch items that items should be added to if the <code class="paramref">batch</code> is a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    content.vb: Protected Overridable Sub DrawDirtyOverlay(time As GameTime, batch As Object, pos As Vector2, floor As Single, drawPos As Vector2, overrideColor As Color?, rotation As Direction2, colors As Integer(), drawScale As Single, pivot As Boolean, parent As ParentInfo, depthOffset As Single, items As List(Of StaticSpriteBatch.Item))
  overload: TinyLife.Objects.Furniture.DrawDirtyOverlay*
  nameWithType.vb: Furniture.DrawDirtyOverlay(GameTime, Object, Vector2, Single, Vector2, Color?, Direction2, Integer(), Single, Boolean, ParentInfo, Single, List(Of StaticSpriteBatch.Item))
  fullName.vb: TinyLife.Objects.Furniture.DrawDirtyOverlay(Microsoft.Xna.Framework.GameTime, Object, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, MLEM.Maths.Direction2, Integer(), Single, Boolean, TinyLife.Objects.ParentInfo, Single, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: DrawDirtyOverlay(GameTime, Object, Vector2, Single, Vector2, Color?, Direction2, Integer(), Single, Boolean, ParentInfo, Single, List(Of Item))
- uid: TinyLife.Objects.Furniture.DrawUi(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Ui.Elements.Element,System.Single,System.Int32[])
  commentId: M:TinyLife.Objects.Furniture.DrawUi(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Ui.Elements.Element,System.Single,System.Int32[])
  id: DrawUi(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Ui.Elements.Element,System.Single,System.Int32[])
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: DrawUi(GameTime, SpriteBatch, Element, float, int[])
  nameWithType: Furniture.DrawUi(GameTime, SpriteBatch, Element, float, int[])
  fullName: TinyLife.Objects.Furniture.DrawUi(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, MLEM.Ui.Elements.Element, float, int[])
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Draws this furniture in a ui context, rather than a world context.

    Scale is determined based on the element that is passed.
  example: []
  syntax:
    content: public void DrawUi(GameTime time, SpriteBatch batch, Element element, float drawScale, int[] colors)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current game time
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to draw with
    - id: element
      type: MLEM.Ui.Elements.Element
      description: The element to calculate scaling based on
    - id: drawScale
      type: System.Single
      description: The scale to draw the furniture with
    - id: colors
      type: System.Int32[]
      description: The colors to draw the furniture with
    content.vb: Public Sub DrawUi(time As GameTime, batch As SpriteBatch, element As Element, drawScale As Single, colors As Integer())
  overload: TinyLife.Objects.Furniture.DrawUi*
  nameWithType.vb: Furniture.DrawUi(GameTime, SpriteBatch, Element, Single, Integer())
  fullName.vb: TinyLife.Objects.Furniture.DrawUi(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, MLEM.Ui.Elements.Element, Single, Integer())
  name.vb: DrawUi(GameTime, SpriteBatch, Element, Single, Integer())
- uid: TinyLife.Objects.Furniture.GetOccupants(TinyLife.Objects.ObjectCategory,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.GetOccupants(TinyLife.Objects.ObjectCategory,System.Boolean)
  id: GetOccupants(TinyLife.Objects.ObjectCategory,System.Boolean)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetOccupants(ObjectCategory, bool)
  nameWithType: Furniture.GetOccupants(ObjectCategory, bool)
  fullName: TinyLife.Objects.Furniture.GetOccupants(TinyLife.Objects.ObjectCategory, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns a set of <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> instances that are currently occupying any <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> on this furniture item in some way.
  example: []
  syntax:
    content: public IEnumerable<PersonLike> GetOccupants(ObjectCategory context = null, bool visualOnly = false)
    parameters:
    - id: context
      type: TinyLife.Objects.ObjectCategory
      description: The context for the <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> to support for it to be included in the search. Note that, if this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, the spots' <xref href="TinyLife.Objects.ActionSpot.CategoryRestriction" data-throw-if-not-resolved="false"></xref> will not be applied.
    - id: visualOnly
      type: System.Boolean
      description: Whether only occupants that occupy a spot visually, using <xref href="TinyLife.Objects.PersonLike.VisuallyOccupiedSpot" data-throw-if-not-resolved="false"></xref>, should be returned.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
      description: A set of people that are currently occupying this furniture item in some way.
    content.vb: Public Function GetOccupants(context As ObjectCategory = Nothing, visualOnly As Boolean = False) As IEnumerable(Of PersonLike)
  overload: TinyLife.Objects.Furniture.GetOccupants*
  nameWithType.vb: Furniture.GetOccupants(ObjectCategory, Boolean)
  fullName.vb: TinyLife.Objects.Furniture.GetOccupants(TinyLife.Objects.ObjectCategory, Boolean)
  name.vb: GetOccupants(ObjectCategory, Boolean)
- uid: TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  id: GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetFreeActionSpots(PersonLike, ObjectCategory)
  nameWithType: Furniture.GetFreeActionSpots(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns a list of <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> instances that are part of this furniture, which are considered free.

    Free, in this instance, is any spot that has the given category and is not currently occupied by another person.
  example: []
  syntax:
    content: public IEnumerable<(ActionSpot Spot, Direction2 Dir)> GetFreeActionSpots(PersonLike person, ObjectCategory context = null)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person to query free action spots for
    - id: context
      type: TinyLife.Objects.ObjectCategory
      description: The object category that this action spot needs to have. Note that, if this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, the spots' <xref href="TinyLife.Objects.ActionSpot.CategoryRestriction" data-throw-if-not-resolved="false"></xref> will not be applied.
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}}
      description: A set of action spots and the directions which they're free in
    content.vb: Public Function GetFreeActionSpots(person As PersonLike, context As ObjectCategory = Nothing) As IEnumerable(Of (Spot As ActionSpot, Dir As Direction2))
  overload: TinyLife.Objects.Furniture.GetFreeActionSpots*
- uid: TinyLife.Objects.Furniture.GetFreeActionSpot(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.Furniture.GetFreeActionSpot(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  id: GetFreeActionSpot(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetFreeActionSpot(PersonLike, ObjectCategory)
  nameWithType: Furniture.GetFreeActionSpot(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.Furniture.GetFreeActionSpot(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns the first free action spot from <xref href="TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike%2cTinyLife.Objects.ObjectCategory)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public (ActionSpot Spot, Direction2 Dir) GetFreeActionSpot(PersonLike person, ObjectCategory context = null)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person to query free action spots for
    - id: context
      type: TinyLife.Objects.ObjectCategory
      description: The object category that this action spot needs to have
    return:
      type: System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}
      description: A free action spot and the direction it's free in, or an empty tuple if there is no free action spot
    content.vb: Public Function GetFreeActionSpot(person As PersonLike, context As ObjectCategory = Nothing) As (Spot As ActionSpot, Dir As Direction2)
  overload: TinyLife.Objects.Furniture.GetFreeActionSpot*
- uid: TinyLife.Objects.Furniture.GetActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2)
  commentId: M:TinyLife.Objects.Furniture.GetActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2)
  id: GetActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetActionSpotInfo(PersonLike, ActionSpot, Direction2)
  nameWithType: Furniture.GetActionSpotInfo(PersonLike, ActionSpot, Direction2)
  fullName: TinyLife.Objects.Furniture.GetActionSpotInfo(TinyLife.Objects.PersonLike, TinyLife.Objects.ActionSpot, MLEM.Maths.Direction2)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Returns a <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref> that corresponds to the given <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> and rotation
  example: []
  syntax:
    content: public ActionInfo GetActionSpotInfo(PersonLike person, ActionSpot spot, Direction2 direction = Direction2.None)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person to query free action spots for
    - id: spot
      type: TinyLife.Objects.ActionSpot
      description: The action spot to return an info for
    - id: direction
      type: MLEM.Maths.Direction2
      description: The direction to offset the <xref href="TinyLife.Actions.ActionInfo.ActionLocation" data-throw-if-not-resolved="false"></xref> by. Defaults to <xref href="MLEM.Maths.Direction2.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: TinyLife.Actions.ActionInfo
      description: A new action info with the given settings
    content.vb: Public Function GetActionSpotInfo(person As PersonLike, spot As ActionSpot, direction As Direction2 = Direction2.None) As ActionInfo
  overload: TinyLife.Objects.Furniture.GetActionSpotInfo*
- uid: TinyLife.Objects.Furniture.GetFreeObjectSpot(TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  commentId: M:TinyLife.Objects.Furniture.GetFreeObjectSpot(TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  id: GetFreeObjectSpot(TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetFreeObjectSpot(FurnitureType, Vector2?)
  nameWithType: Furniture.GetFreeObjectSpot(FurnitureType, Vector2?)
  fullName: TinyLife.Objects.Furniture.GetFreeObjectSpot(TinyLife.Objects.FurnitureType, Microsoft.Xna.Framework.Vector2?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns the first free <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> on this furniture.

    Free, in this case, is any object spot that isn't already occupied by a different furniture.
  example: []
  syntax:
    content: public ObjectSpot GetFreeObjectSpot(FurnitureType type, Vector2? position = null)
    parameters:
    - id: type
      type: TinyLife.Objects.FurnitureType
      description: The furniture type to find a free object spot for
    - id: position
      type: System.Nullable{Microsoft.Xna.Framework.Vector2}
      description: The position that the object spot should be closest too. If null, no position will be preferred. Defaults to null.
    return:
      type: TinyLife.Objects.ObjectSpot
      description: A free object spot, or null if there is none
    content.vb: Public Function GetFreeObjectSpot(type As FurnitureType, position As Vector2? = Nothing) As ObjectSpot
  overload: TinyLife.Objects.Furniture.GetFreeObjectSpot*
- uid: TinyLife.Objects.Furniture.GetFreeObjectSpots(TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  commentId: M:TinyLife.Objects.Furniture.GetFreeObjectSpots(TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  id: GetFreeObjectSpots(TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetFreeObjectSpots(FurnitureType, Vector2?)
  nameWithType: Furniture.GetFreeObjectSpots(FurnitureType, Vector2?)
  fullName: TinyLife.Objects.Furniture.GetFreeObjectSpots(TinyLife.Objects.FurnitureType, Microsoft.Xna.Framework.Vector2?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns a set of free <xref href="TinyLife.Objects.ObjectSpot" data-throw-if-not-resolved="false"></xref> instances on this furniture.

    Free, in this case, is any object spot that isn't already occupied by a different furniture.
  example: []
  syntax:
    content: public IEnumerable<ObjectSpot> GetFreeObjectSpots(FurnitureType type, Vector2? position = null)
    parameters:
    - id: type
      type: TinyLife.Objects.FurnitureType
      description: The furniture type to find a free object spot for
    - id: position
      type: System.Nullable{Microsoft.Xna.Framework.Vector2}
      description: The position that the object spot should be closest too. If null, no position will be preferred. Defaults to null.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.ObjectSpot}
      description: A free object spot, or null if there is none
    content.vb: Public Function GetFreeObjectSpots(type As FurnitureType, position As Vector2? = Nothing) As IEnumerable(Of ObjectSpot)
  overload: TinyLife.Objects.Furniture.GetFreeObjectSpots*
- uid: TinyLife.Objects.Furniture.SetParent(TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot)
  commentId: M:TinyLife.Objects.Furniture.SetParent(TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot)
  id: SetParent(TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: SetParent(Furniture, ObjectSpot)
  nameWithType: Furniture.SetParent(Furniture, ObjectSpot)
  fullName: TinyLife.Objects.Furniture.SetParent(TinyLife.Objects.Furniture, TinyLife.Objects.ObjectSpot)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Sets the parent of this furniture, changing its <xref href="TinyLife.Objects.MapObject.Position" data-throw-if-not-resolved="false"></xref> and settings its <xref href="TinyLife.Objects.Furniture.ParentObjectSpot" data-throw-if-not-resolved="false"></xref> value.

    Note that this does not add the object to the map (<xref href="TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)" data-throw-if-not-resolved="false"></xref>).

    When modifying furniture in the world, it is preferred to use <xref href="TinyLife.Objects.Furniture.SetChild(TinyLife.Objects.ObjectSpot%2cTinyLife.Objects.Furniture%2cSystem.Nullable%7bMLEM.Maths.Direction2%7d)" data-throw-if-not-resolved="false"></xref> on the parent furniture instead.
  example: []
  syntax:
    content: public void SetParent(Furniture parent, ObjectSpot spot)
    parameters:
    - id: parent
      type: TinyLife.Objects.Furniture
      description: The parent furniture to slot into
    - id: spot
      type: TinyLife.Objects.ObjectSpot
      description: The object spot to slot into
    content.vb: Public Sub SetParent(parent As Furniture, spot As ObjectSpot)
  overload: TinyLife.Objects.Furniture.SetParent*
- uid: TinyLife.Objects.Furniture.UnlinkParentsAndChildren
  commentId: M:TinyLife.Objects.Furniture.UnlinkParentsAndChildren
  id: UnlinkParentsAndChildren
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: UnlinkParentsAndChildren()
  nameWithType: Furniture.UnlinkParentsAndChildren()
  fullName: TinyLife.Objects.Furniture.UnlinkParentsAndChildren()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Unlinks this object from its parents and its children by setting its <xref href="TinyLife.Objects.Furniture.ParentFurniture" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.Furniture.ParentObjectSpot" data-throw-if-not-resolved="false"></xref> to their default values and doing the same for all of its children (<xref href="TinyLife.Objects.Furniture.GetChildren%60%601" data-throw-if-not-resolved="false"></xref>) as well as any <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> that is holding this object.
  example: []
  syntax:
    content: public void UnlinkParentsAndChildren()
    content.vb: Public Sub UnlinkParentsAndChildren()
  overload: TinyLife.Objects.Furniture.UnlinkParentsAndChildren*
- uid: TinyLife.Objects.Furniture.RemoveAndUnlink
  commentId: M:TinyLife.Objects.Furniture.RemoveAndUnlink
  id: RemoveAndUnlink
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: RemoveAndUnlink()
  nameWithType: Furniture.RemoveAndUnlink()
  fullName: TinyLife.Objects.Furniture.RemoveAndUnlink()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A compound helper method that calls <xref href="TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.Furniture.UnlinkParentsAndChildren" data-throw-if-not-resolved="false"></xref>.

    For furniture that is being removed from the world entirely, this method is usually preferred over <xref href="TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void RemoveAndUnlink()
    content.vb: Public Sub RemoveAndUnlink()
  overload: TinyLife.Objects.Furniture.RemoveAndUnlink*
- uid: TinyLife.Objects.Furniture.GetChildren``1
  commentId: M:TinyLife.Objects.Furniture.GetChildren``1
  id: GetChildren``1
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: GetChildren<T>()
  nameWithType: Furniture.GetChildren<T>()
  fullName: TinyLife.Objects.Furniture.GetChildren<T>()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns a list of all of the children of this furniture.

    Children are all furnitures in the world that have their <xref href="TinyLife.Objects.Furniture.ParentFurniture" data-throw-if-not-resolved="false"></xref> set to this furniture instance.
  example: []
  syntax:
    content: 'public IEnumerable<T> GetChildren<T>() where T : MapObject'
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: A list of this furniture's children
    content.vb: Public Function GetChildren(Of T As MapObject)() As IEnumerable(Of T)
  overload: TinyLife.Objects.Furniture.GetChildren*
  nameWithType.vb: Furniture.GetChildren(Of T)()
  fullName.vb: TinyLife.Objects.Furniture.GetChildren(Of T)()
  name.vb: GetChildren(Of T)()
- uid: TinyLife.Objects.Furniture.AddChild``1(TinyLife.Objects.FurnitureType,MLEM.Maths.Direction2,System.Int32[],System.Nullable{System.Guid},System.Nullable{Microsoft.Xna.Framework.Vector2})
  commentId: M:TinyLife.Objects.Furniture.AddChild``1(TinyLife.Objects.FurnitureType,MLEM.Maths.Direction2,System.Int32[],System.Nullable{System.Guid},System.Nullable{Microsoft.Xna.Framework.Vector2})
  id: AddChild``1(TinyLife.Objects.FurnitureType,MLEM.Maths.Direction2,System.Int32[],System.Nullable{System.Guid},System.Nullable{Microsoft.Xna.Framework.Vector2})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: AddChild<T>(FurnitureType, Direction2, int[], Guid?, Vector2?)
  nameWithType: Furniture.AddChild<T>(FurnitureType, Direction2, int[], Guid?, Vector2?)
  fullName: TinyLife.Objects.Furniture.AddChild<T>(TinyLife.Objects.FurnitureType, MLEM.Maths.Direction2, int[], System.Guid?, Microsoft.Xna.Framework.Vector2?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Adds a child to this furniture, setting its parent (<xref href="TinyLife.Objects.Furniture.SetParent(TinyLife.Objects.Furniture%2cTinyLife.Objects.ObjectSpot)" data-throw-if-not-resolved="false"></xref>) to this furniture.
  example: []
  syntax:
    content: 'public T AddChild<T>(FurnitureType type, Direction2 rotation, int[] colors = null, Guid? id = null, Vector2? position = null) where T : Furniture'
    parameters:
    - id: type
      type: TinyLife.Objects.FurnitureType
      description: The type of furniture to construct as the child
    - id: rotation
      type: MLEM.Maths.Direction2
      description: The desired rotation of the child furniture.
    - id: colors
      type: System.Int32[]
      description: The colors that the child should have
    - id: id
      type: System.Nullable{System.Guid}
      description: The id that the child should have, random by default
    - id: position
      type: System.Nullable{Microsoft.Xna.Framework.Vector2}
      description: The position that the object spot to add this child to should be closest too. If null, no position will be preferred. Defaults to null.
    typeParameters:
    - id: T
      description: The type of furniture that the child is
    return:
      type: '{T}'
      description: The child that was added, or null if there is no space for it.
    content.vb: Public Function AddChild(Of T As Furniture)(type As FurnitureType, rotation As Direction2, colors As Integer() = Nothing, id As Guid? = Nothing, position As Vector2? = Nothing) As T
  overload: TinyLife.Objects.Furniture.AddChild*
  nameWithType.vb: Furniture.AddChild(Of T)(FurnitureType, Direction2, Integer(), Guid?, Vector2?)
  fullName.vb: TinyLife.Objects.Furniture.AddChild(Of T)(TinyLife.Objects.FurnitureType, MLEM.Maths.Direction2, Integer(), System.Guid?, Microsoft.Xna.Framework.Vector2?)
  name.vb: AddChild(Of T)(FurnitureType, Direction2, Integer(), Guid?, Vector2?)
- uid: TinyLife.Objects.Furniture.AddChild(TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2},System.Nullable{Microsoft.Xna.Framework.Vector2})
  commentId: M:TinyLife.Objects.Furniture.AddChild(TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2},System.Nullable{Microsoft.Xna.Framework.Vector2})
  id: AddChild(TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2},System.Nullable{Microsoft.Xna.Framework.Vector2})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: AddChild(Furniture, Direction2?, Vector2?)
  nameWithType: Furniture.AddChild(Furniture, Direction2?, Vector2?)
  fullName: TinyLife.Objects.Furniture.AddChild(TinyLife.Objects.Furniture, MLEM.Maths.Direction2?, Microsoft.Xna.Framework.Vector2?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Adds a child to this furniture, setting its parent (<xref href="TinyLife.Objects.Furniture.SetParent(TinyLife.Objects.Furniture%2cTinyLife.Objects.ObjectSpot)" data-throw-if-not-resolved="false"></xref>) to this furniture.

    The object spot selected is the first available object spot.

    Note that the given <code class="paramref">item</code> has to be added to this furniture item's <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref> manually.
  example: []
  syntax:
    content: public bool AddChild(Furniture item, Direction2? rotation = null, Vector2? position = null)
    parameters:
    - id: item
      type: TinyLife.Objects.Furniture
      description: The furniture to add as the child
    - id: rotation
      type: System.Nullable{MLEM.Maths.Direction2}
      description: The desired rotation of the child furniture, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use one of the default supported rotations of the free object spot chosen.
    - id: position
      type: System.Nullable{Microsoft.Xna.Framework.Vector2}
      description: The position that the object spot to add this child to should be closest too. If null, no position will be preferred. Defaults to null.
    return:
      type: System.Boolean
      description: If there was a free object spot to add the furniture to
    content.vb: Public Function AddChild(item As Furniture, rotation As Direction2? = Nothing, position As Vector2? = Nothing) As Boolean
  overload: TinyLife.Objects.Furniture.AddChild*
- uid: TinyLife.Objects.Furniture.SetChild``1(TinyLife.Objects.ObjectSpot,TinyLife.Objects.FurnitureType,System.Nullable{MLEM.Maths.Direction2},System.Int32[],System.Nullable{System.Guid})
  commentId: M:TinyLife.Objects.Furniture.SetChild``1(TinyLife.Objects.ObjectSpot,TinyLife.Objects.FurnitureType,System.Nullable{MLEM.Maths.Direction2},System.Int32[],System.Nullable{System.Guid})
  id: SetChild``1(TinyLife.Objects.ObjectSpot,TinyLife.Objects.FurnitureType,System.Nullable{MLEM.Maths.Direction2},System.Int32[],System.Nullable{System.Guid})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: SetChild<T>(ObjectSpot, FurnitureType, Direction2?, int[], Guid?)
  nameWithType: Furniture.SetChild<T>(ObjectSpot, FurnitureType, Direction2?, int[], Guid?)
  fullName: TinyLife.Objects.Furniture.SetChild<T>(TinyLife.Objects.ObjectSpot, TinyLife.Objects.FurnitureType, MLEM.Maths.Direction2?, int[], System.Guid?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Sets the child element in the given object spot to the given furniture and adds it to this furniture's <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public T SetChild<T>(ObjectSpot spot, FurnitureType type, Direction2? rotation = null, int[] colors = null, Guid? id = null) where T : Furniture'
    parameters:
    - id: spot
      type: TinyLife.Objects.ObjectSpot
      description: The spot to add the child to
    - id: type
      type: TinyLife.Objects.FurnitureType
      description: The type of furniture to construct as the child
    - id: rotation
      type: System.Nullable{MLEM.Maths.Direction2}
      description: The desired rotation of the child furniture, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use one of the default supported rotations of the <code class="paramref">spot</code>.
    - id: colors
      type: System.Int32[]
      description: The colors that the child should have
    - id: id
      type: System.Nullable{System.Guid}
      description: The id that the child should have, random by default
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function SetChild(Of T As Furniture)(spot As ObjectSpot, type As FurnitureType, rotation As Direction2? = Nothing, colors As Integer() = Nothing, id As Guid? = Nothing) As T
  overload: TinyLife.Objects.Furniture.SetChild*
  nameWithType.vb: Furniture.SetChild(Of T)(ObjectSpot, FurnitureType, Direction2?, Integer(), Guid?)
  fullName.vb: TinyLife.Objects.Furniture.SetChild(Of T)(TinyLife.Objects.ObjectSpot, TinyLife.Objects.FurnitureType, MLEM.Maths.Direction2?, Integer(), System.Guid?)
  name.vb: SetChild(Of T)(ObjectSpot, FurnitureType, Direction2?, Integer(), Guid?)
- uid: TinyLife.Objects.Furniture.SetChild(TinyLife.Objects.ObjectSpot,TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2})
  commentId: M:TinyLife.Objects.Furniture.SetChild(TinyLife.Objects.ObjectSpot,TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2})
  id: SetChild(TinyLife.Objects.ObjectSpot,TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: SetChild(ObjectSpot, Furniture, Direction2?)
  nameWithType: Furniture.SetChild(ObjectSpot, Furniture, Direction2?)
  fullName: TinyLife.Objects.Furniture.SetChild(TinyLife.Objects.ObjectSpot, TinyLife.Objects.Furniture, MLEM.Maths.Direction2?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Sets the child element in the given object spot to the given furniture.

    Note that the given <code class="paramref">item</code> has to be added to this furniture item's <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref> manually.
  example: []
  syntax:
    content: public void SetChild(ObjectSpot spot, Furniture item, Direction2? rotation = null)
    parameters:
    - id: spot
      type: TinyLife.Objects.ObjectSpot
      description: The spot to add the child to
    - id: item
      type: TinyLife.Objects.Furniture
      description: The furniture to add to the spot
    - id: rotation
      type: System.Nullable{MLEM.Maths.Direction2}
      description: The desired rotation of the child furniture, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use one of the default supported rotations of the <code class="paramref">spot</code>.
    content.vb: Public Sub SetChild(spot As ObjectSpot, item As Furniture, rotation As Direction2? = Nothing)
  overload: TinyLife.Objects.Furniture.SetChild*
- uid: TinyLife.Objects.Furniture.RemoveChild(TinyLife.Objects.Furniture)
  commentId: M:TinyLife.Objects.Furniture.RemoveChild(TinyLife.Objects.Furniture)
  id: RemoveChild(TinyLife.Objects.Furniture)
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: RemoveChild(Furniture)
  nameWithType: Furniture.RemoveChild(Furniture)
  fullName: TinyLife.Objects.Furniture.RemoveChild(TinyLife.Objects.Furniture)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Removes the given child from the world and sets its <xref href="TinyLife.Objects.Furniture.ParentFurniture" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.Furniture.ParentObjectSpot" data-throw-if-not-resolved="false"></xref> to their default values, unlinking it from this object
  example: []
  syntax:
    content: public bool RemoveChild(Furniture child)
    parameters:
    - id: child
      type: TinyLife.Objects.Furniture
      description: The child to remove
    return:
      type: System.Boolean
      description: Whether the object was actually a child of this furniture (true) or not (false)
    content.vb: Public Function RemoveChild(child As Furniture) As Boolean
  overload: TinyLife.Objects.Furniture.RemoveChild*
- uid: TinyLife.Objects.Furniture.NotifyNeighbors
  commentId: M:TinyLife.Objects.Furniture.NotifyNeighbors
  id: NotifyNeighbors
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: NotifyNeighbors()
  nameWithType: Furniture.NotifyNeighbors()
  fullName: TinyLife.Objects.Furniture.NotifyNeighbors()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Notifies all of the neighboring <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> objects of a change by calling their <xref href="TinyLife.Objects.Furniture.OnNeighborChanged(TinyLife.Objects.Furniture)" data-throw-if-not-resolved="false"></xref> methods.

    This is used by things like fences, which change their orientation if their neighbors are added or removed.
  example: []
  syntax:
    content: public void NotifyNeighbors()
    content.vb: Public Sub NotifyNeighbors()
  overload: TinyLife.Objects.Furniture.NotifyNeighbors*
- uid: TinyLife.Objects.Furniture.SetNewId(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture})
  commentId: M:TinyLife.Objects.Furniture.SetNewId(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture})
  id: SetNewId(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture})
  parent: TinyLife.Objects.Furniture
  langs:
  - csharp
  - vb
  name: SetNewId(IEnumerable<Furniture>)
  nameWithType: Furniture.SetNewId(IEnumerable<Furniture>)
  fullName: TinyLife.Objects.Furniture.SetNewId(System.Collections.Generic.IEnumerable<TinyLife.Objects.Furniture>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Assigns a new, randomly generated <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> to this furniture item's <xref href="TinyLife.Objects.MapObject.Id" data-throw-if-not-resolved="false"></xref> and additionally updates the <xref href="TinyLife.Objects.Furniture.ParentFurniture" data-throw-if-not-resolved="false"></xref> relation of any objects passed that might be children of this object.

    When assigning a new id, it usually makes sense to pass all of the objects in this furniture item's vicinity, or all of the objects that might otherwise be attached to it.

    Note that objects which are passed as <code class="paramref">possibleChildren</code> that aren't children of this object are ignored.
  example: []
  syntax:
    content: public void SetNewId(IEnumerable<Furniture> possibleChildren = null)
    parameters:
    - id: possibleChildren
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture}
      description: A set of furniture items that might (but do not have to be) children of this furniture
    content.vb: Public Sub SetNewId(possibleChildren As IEnumerable(Of Furniture) = Nothing)
  overload: TinyLife.Objects.Furniture.SetNewId*
  nameWithType.vb: Furniture.SetNewId(IEnumerable(Of Furniture))
  fullName.vb: TinyLife.Objects.Furniture.SetNewId(System.Collections.Generic.IEnumerable(Of TinyLife.Objects.Furniture))
  name.vb: SetNewId(IEnumerable(Of Furniture))
references:
- uid: TinyLife.Objects.FurnitureType
  commentId: T:TinyLife.Objects.FurnitureType
  parent: TinyLife.Objects
  href: TinyLife.Objects.FurnitureType.html
  name: FurnitureType
  nameWithType: FurnitureType
  fullName: TinyLife.Objects.FurnitureType
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)
  commentId: M:TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Register_TinyLife_Objects_FurnitureType_TypeSettings_
  name: Register(TypeSettings)
  nameWithType: FurnitureType.Register(FurnitureType.TypeSettings)
  fullName: TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)
    name: Register
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Register_TinyLife_Objects_FurnitureType_TypeSettings_
  - name: (
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType.Register(TinyLife.Objects.FurnitureType.TypeSettings)
    name: Register
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Register_TinyLife_Objects_FurnitureType_TypeSettings_
  - name: (
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Objects.MapObject.OnCreated
  commentId: E:TinyLife.Objects.MapObject.OnCreated
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnCreated
  name: OnCreated
  nameWithType: MapObject.OnCreated
  fullName: TinyLife.Objects.MapObject.OnCreated
- uid: TinyLife.Objects.MapObject.OnValidated
  commentId: E:TinyLife.Objects.MapObject.OnValidated
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnValidated
  name: OnValidated
  nameWithType: MapObject.OnValidated
  fullName: TinyLife.Objects.MapObject.OnValidated
- uid: TinyLife.Objects.MapObject.OnValidatedEarly
  commentId: E:TinyLife.Objects.MapObject.OnValidatedEarly
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnValidatedEarly
  name: OnValidatedEarly
  nameWithType: MapObject.OnValidatedEarly
  fullName: TinyLife.Objects.MapObject.OnValidatedEarly
- uid: TinyLife.Objects.MapObject.OnEventsAttachable
  commentId: E:TinyLife.Objects.MapObject.OnEventsAttachable
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnEventsAttachable
  name: OnEventsAttachable
  nameWithType: MapObject.OnEventsAttachable
  fullName: TinyLife.Objects.MapObject.OnEventsAttachable
- uid: TinyLife.Objects.MapObject.OnDraw
  commentId: E:TinyLife.Objects.MapObject.OnDraw
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnDraw
  name: OnDraw
  nameWithType: MapObject.OnDraw
  fullName: TinyLife.Objects.MapObject.OnDraw
- uid: TinyLife.Objects.MapObject.OnUpdate
  commentId: E:TinyLife.Objects.MapObject.OnUpdate
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnUpdate
  name: OnUpdate
  nameWithType: MapObject.OnUpdate
  fullName: TinyLife.Objects.MapObject.OnUpdate
- uid: TinyLife.Objects.MapObject.OnGetHoverInfo
  commentId: E:TinyLife.Objects.MapObject.OnGetHoverInfo
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnGetHoverInfo
  name: OnGetHoverInfo
  nameWithType: MapObject.OnGetHoverInfo
  fullName: TinyLife.Objects.MapObject.OnGetHoverInfo
- uid: TinyLife.Objects.MapObject.OnGetDebugLines
  commentId: E:TinyLife.Objects.MapObject.OnGetDebugLines
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnGetDebugLines
  name: OnGetDebugLines
  nameWithType: MapObject.OnGetDebugLines
  fullName: TinyLife.Objects.MapObject.OnGetDebugLines
- uid: TinyLife.Objects.MapObject.Position
  commentId: P:TinyLife.Objects.MapObject.Position
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Position
  name: Position
  nameWithType: MapObject.Position
  fullName: TinyLife.Objects.MapObject.Position
- uid: TinyLife.Objects.MapObject.Floor
  commentId: P:TinyLife.Objects.MapObject.Floor
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Floor
  name: Floor
  nameWithType: MapObject.Floor
  fullName: TinyLife.Objects.MapObject.Floor
- uid: TinyLife.Objects.MapObject.Id
  commentId: P:TinyLife.Objects.MapObject.Id
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Id
  name: Id
  nameWithType: MapObject.Id
  fullName: TinyLife.Objects.MapObject.Id
- uid: TinyLife.Objects.MapObject.Map
  commentId: P:TinyLife.Objects.MapObject.Map
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Map
  name: Map
  nameWithType: MapObject.Map
  fullName: TinyLife.Objects.MapObject.Map
- uid: TinyLife.Objects.MapObject.CurrentLot
  commentId: P:TinyLife.Objects.MapObject.CurrentLot
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_CurrentLot
  name: CurrentLot
  nameWithType: MapObject.CurrentLot
  fullName: TinyLife.Objects.MapObject.CurrentLot
- uid: TinyLife.Objects.MapObject.CurrentRoom
  commentId: P:TinyLife.Objects.MapObject.CurrentRoom
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_CurrentRoom
  name: CurrentRoom
  nameWithType: MapObject.CurrentRoom
  fullName: TinyLife.Objects.MapObject.CurrentRoom
- uid: TinyLife.Objects.MapObject.IsInWorld
  commentId: P:TinyLife.Objects.MapObject.IsInWorld
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_IsInWorld
  name: IsInWorld
  nameWithType: MapObject.IsInWorld
  fullName: TinyLife.Objects.MapObject.IsInWorld
- uid: TinyLife.Objects.MapObject.HoldingPerson
  commentId: P:TinyLife.Objects.MapObject.HoldingPerson
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_HoldingPerson
  name: HoldingPerson
  nameWithType: MapObject.HoldingPerson
  fullName: TinyLife.Objects.MapObject.HoldingPerson
- uid: TinyLife.Objects.MapObject.ValidateEarly
  commentId: M:TinyLife.Objects.MapObject.ValidateEarly
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ValidateEarly
  name: ValidateEarly()
  nameWithType: MapObject.ValidateEarly()
  fullName: TinyLife.Objects.MapObject.ValidateEarly()
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.ValidateEarly
    name: ValidateEarly
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ValidateEarly
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.ValidateEarly
    name: ValidateEarly
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ValidateEarly
  - name: (
  - name: )
- uid: TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Maths.Direction2,MLEM.Maths.Direction2)
  commentId: M:TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Maths.Direction2,MLEM.Maths.Direction2)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnCameraRotationChanged_MLEM_Maths_Direction2_MLEM_Maths_Direction2_
  name: OnCameraRotationChanged(Direction2, Direction2)
  nameWithType: MapObject.OnCameraRotationChanged(Direction2, Direction2)
  fullName: TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Maths.Direction2, MLEM.Maths.Direction2)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Maths.Direction2,MLEM.Maths.Direction2)
    name: OnCameraRotationChanged
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnCameraRotationChanged_MLEM_Maths_Direction2_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Maths.Direction2,MLEM.Maths.Direction2)
    name: OnCameraRotationChanged
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnCameraRotationChanged_MLEM_Maths_Direction2_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
- uid: TinyLife.Objects.MapObject.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
  commentId: M:TinyLife.Objects.MapObject.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnCurrentGameMapChanged_TinyLife_World_Map_TinyLife_World_Map_
  name: OnCurrentGameMapChanged(Map, Map)
  nameWithType: MapObject.OnCurrentGameMapChanged(Map, Map)
  fullName: TinyLife.Objects.MapObject.OnCurrentGameMapChanged(TinyLife.World.Map, TinyLife.World.Map)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
    name: OnCurrentGameMapChanged
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnCurrentGameMapChanged_TinyLife_World_Map_TinyLife_World_Map_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
    name: OnCurrentGameMapChanged
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnCurrentGameMapChanged_TinyLife_World_Map_TinyLife_World_Map_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: )
- uid: TinyLife.Objects.MapObject.GetPathCostModifier(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Objects.MapObject.GetPathCostModifier(Microsoft.Xna.Framework.Point)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetPathCostModifier_Microsoft_Xna_Framework_Point_
  name: GetPathCostModifier(Point)
  nameWithType: MapObject.GetPathCostModifier(Point)
  fullName: TinyLife.Objects.MapObject.GetPathCostModifier(Microsoft.Xna.Framework.Point)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetPathCostModifier(Microsoft.Xna.Framework.Point)
    name: GetPathCostModifier
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetPathCostModifier_Microsoft_Xna_Framework_Point_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetPathCostModifier(Microsoft.Xna.Framework.Point)
    name: GetPathCostModifier
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetPathCostModifier_Microsoft_Xna_Framework_Point_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetFreeActionSpotInfo_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetFreeActionSpotInfo(PersonLike, ObjectCategory)
  nameWithType: MapObject.GetFreeActionSpotInfo(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpotInfo
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetFreeActionSpotInfo_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpotInfo
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetFreeActionSpotInfo_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_SetMapAndValidate_TinyLife_World_Map_TinyLife_Utilities_AppliedMigrations_
  name: SetMapAndValidate(Map, AppliedMigrations)
  nameWithType: MapObject.SetMapAndValidate(Map, AppliedMigrations)
  fullName: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map, TinyLife.Utilities.AppliedMigrations)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
    name: SetMapAndValidate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_SetMapAndValidate_TinyLife_World_Map_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map,TinyLife.Utilities.AppliedMigrations)
    name: SetMapAndValidate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_SetMapAndValidate_TinyLife_World_Map_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
- uid: TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_HasCategory_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: HasCategory(PersonLike, ObjectCategory)
  nameWithType: MapObject.HasCategory(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: HasCategory
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_HasCategory_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: HasCategory
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_HasCategory_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DoDraw_Microsoft_Xna_Framework_GameTime_System_Object_System_Nullable_Microsoft_Xna_Framework_Color__System_Boolean_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  name: DoDraw(GameTime, object, Color?, bool, List<Item>)
  nameWithType: MapObject.DoDraw(GameTime, object, Color?, bool, List<StaticSpriteBatch.Item>)
  fullName: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime, object, Microsoft.Xna.Framework.Color?, bool, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>)
  nameWithType.vb: MapObject.DoDraw(GameTime, Object, Color?, Boolean, List(Of StaticSpriteBatch.Item))
  fullName.vb: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime, Object, Microsoft.Xna.Framework.Color?, Boolean, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: DoDraw(GameTime, Object, Color?, Boolean, List(Of Item))
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
    name: DoDraw
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DoDraw_Microsoft_Xna_Framework_GameTime_System_Object_System_Nullable_Microsoft_Xna_Framework_Color__System_Boolean_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.DoDraw(Microsoft.Xna.Framework.GameTime,System.Object,System.Nullable{Microsoft.Xna.Framework.Color},System.Boolean,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
    name: DoDraw
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DoDraw_Microsoft_Xna_Framework_GameTime_System_Object_System_Nullable_Microsoft_Xna_Framework_Color__System_Boolean_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
  - name: )
- uid: TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DoUpdate_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: DoUpdate(GameTime, TimeSpan, float)
  nameWithType: MapObject.DoUpdate(GameTime, TimeSpan, float)
  fullName: TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: MapObject.DoUpdate(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: DoUpdate(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: DoUpdate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DoUpdate_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.DoUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: DoUpdate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DoUpdate_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Point_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Boolean_
  name: DrawColumns(Map, Vector2, float, object, Vector2, TextureRegion, Color, Vector2, Point, List<Item>, bool, ParentInfo, float, SpriteEffects, bool)
  nameWithType: MapObject.DrawColumns(Map, Vector2, float, object, Vector2, TextureRegion, Color, Vector2, Point, List<StaticSpriteBatch.Item>, bool, ParentInfo, float, SpriteEffects, bool)
  fullName: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float, object, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Point, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>, bool, TinyLife.Objects.ParentInfo, float, Microsoft.Xna.Framework.Graphics.SpriteEffects, bool)
  nameWithType.vb: MapObject.DrawColumns(Map, Vector2, Single, Object, Vector2, TextureRegion, Color, Vector2, Point, List(Of StaticSpriteBatch.Item), Boolean, ParentInfo, Single, SpriteEffects, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single, Object, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Point, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item), Boolean, TinyLife.Objects.ParentInfo, Single, Microsoft.Xna.Framework.Graphics.SpriteEffects, Boolean)
  name.vb: DrawColumns(Map, Vector2, Single, Object, Vector2, TextureRegion, Color, Vector2, Point, List(Of Item), Boolean, ParentInfo, Single, SpriteEffects, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
    name: DrawColumns
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Point_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Boolean_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Object,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean,TinyLife.Objects.ParentInfo,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Boolean)
    name: DrawColumns
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawColumns_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Object_Microsoft_Xna_Framework_Vector2_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Point_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__System_Boolean_TinyLife_Objects_ParentInfo_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Boolean_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ParentInfo
    name: ParentInfo
    href: TinyLife.Objects.ParentInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Objects.Furniture.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Furniture>(Furniture)
  nameWithType: Extensions.JsonCopy<Furniture>(Furniture)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Furniture>(TinyLife.Objects.Furniture)
  nameWithType.vb: Extensions.JsonCopy(Of Furniture)(Furniture)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Furniture)(TinyLife.Objects.Furniture)
  name.vb: JsonCopy(Of Furniture)(Furniture)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Furniture)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Furniture)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Migrations
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Migrations
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_Migrations
  name: Migrations
  nameWithType: FurnitureType.TypeSettings.Migrations
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Migrations
- uid: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Objects.Furniture}}
  commentId: T:System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Objects.Furniture}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Migration<Furniture>>
  nameWithType: List<Migration<Furniture>>
  fullName: System.Collections.Generic.List<TinyLife.Utilities.Migration<TinyLife.Objects.Furniture>>
  nameWithType.vb: List(Of Migration(Of Furniture))
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Utilities.Migration(Of TinyLife.Objects.Furniture))
  name.vb: List(Of Migration(Of Furniture))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Objects.Furniture.Random
  commentId: F:TinyLife.Objects.Furniture.Random
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Random
  name: Random
  nameWithType: Furniture.Random
  fullName: TinyLife.Objects.Furniture.Random
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: TinyLife.Objects.FurnitureType.TypeSettings
  commentId: T:TinyLife.Objects.FurnitureType.TypeSettings
  parent: TinyLife.Objects
  href: TinyLife.Objects.FurnitureType.html
  name: FurnitureType.TypeSettings
  nameWithType: FurnitureType.TypeSettings
  fullName: TinyLife.Objects.FurnitureType.TypeSettings
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: .
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: .
  - uid: TinyLife.Objects.FurnitureType.TypeSettings
    name: TypeSettings
    href: TinyLife.Objects.FurnitureType.TypeSettings.html
- uid: TinyLife.Objects.Furniture.FurnitureTypeConstructedDelegate
  commentId: T:TinyLife.Objects.Furniture.FurnitureTypeConstructedDelegate
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture.FurnitureTypeConstructedDelegate
  nameWithType: Furniture.FurnitureTypeConstructedDelegate
  fullName: TinyLife.Objects.Furniture.FurnitureTypeConstructedDelegate
  spec.csharp:
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: .
  - uid: TinyLife.Objects.Furniture.FurnitureTypeConstructedDelegate
    name: FurnitureTypeConstructedDelegate
    href: TinyLife.Objects.Furniture.FurnitureTypeConstructedDelegate.html
  spec.vb:
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: .
  - uid: TinyLife.Objects.Furniture.FurnitureTypeConstructedDelegate
    name: FurnitureTypeConstructedDelegate
    href: TinyLife.Objects.Furniture.FurnitureTypeConstructedDelegate.html
- uid: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDescription_System_Collections_Generic_List_System_String__System_Boolean_
  name: GetDescription(List<string>, bool)
  nameWithType: Furniture.GetDescription(List<string>, bool)
  fullName: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List<string>, bool)
  nameWithType.vb: Furniture.GetDescription(List(Of String), Boolean)
  fullName.vb: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List(Of String), Boolean)
  name.vb: GetDescription(List(Of String), Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
    name: GetDescription
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDescription_System_Collections_Generic_List_System_String__System_Boolean_
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetDescription(System.Collections.Generic.List{System.String},System.Boolean)
    name: GetDescription
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDescription_System_Collections_Generic_List_System_String__System_Boolean_
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action{System.Collections.Generic.List{System.String},System.Boolean}
  commentId: T:System.Action{System.Collections.Generic.List{System.String},System.Boolean}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<List<string>, bool>
  nameWithType: Action<List<string>, bool>
  fullName: System.Action<System.Collections.Generic.List<string>, bool>
  nameWithType.vb: Action(Of List(Of String), Boolean)
  fullName.vb: System.Action(Of System.Collections.Generic.List(Of String), Boolean)
  name.vb: Action(Of List(Of String), Boolean)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_PersonLike_System_Boolean_
  name: SetCreator(PersonLike, bool)
  nameWithType: Furniture.SetCreator(PersonLike, bool)
  fullName: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike, bool)
  nameWithType.vb: Furniture.SetCreator(PersonLike, Boolean)
  fullName.vb: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike, Boolean)
  name.vb: SetCreator(PersonLike, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
    name: SetCreator
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_PersonLike_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
    name: SetCreator
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_PersonLike_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action{TinyLife.Objects.PersonLike,System.Boolean,TinyLife.Mods.EventPhase}
  commentId: T:System.Action{TinyLife.Objects.PersonLike,System.Boolean,TinyLife.Mods.EventPhase}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<PersonLike, bool, EventPhase>
  nameWithType: Action<PersonLike, bool, EventPhase>
  fullName: System.Action<TinyLife.Objects.PersonLike, bool, TinyLife.Mods.EventPhase>
  nameWithType.vb: Action(Of PersonLike, Boolean, EventPhase)
  fullName.vb: System.Action(Of TinyLife.Objects.PersonLike, Boolean, TinyLife.Mods.EventPhase)
  name.vb: Action(Of PersonLike, Boolean, EventPhase)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
    href: TinyLife.Mods.EventPhase.html
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
    href: TinyLife.Mods.EventPhase.html
  - name: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: TinyLife.Objects.Furniture.GetDirty(TinyLife.Objects.PersonLike,System.TimeSpan)
  commentId: M:TinyLife.Objects.Furniture.GetDirty(TinyLife.Objects.PersonLike,System.TimeSpan)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDirty_TinyLife_Objects_PersonLike_System_TimeSpan_
  name: GetDirty(PersonLike, TimeSpan)
  nameWithType: Furniture.GetDirty(PersonLike, TimeSpan)
  fullName: TinyLife.Objects.Furniture.GetDirty(TinyLife.Objects.PersonLike, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetDirty(TinyLife.Objects.PersonLike,System.TimeSpan)
    name: GetDirty
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDirty_TinyLife_Objects_PersonLike_System_TimeSpan_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetDirty(TinyLife.Objects.PersonLike,System.TimeSpan)
    name: GetDirty
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDirty_TinyLife_Objects_PersonLike_System_TimeSpan_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: TinyLife.Objects.Furniture.CanBeDirty
  commentId: P:TinyLife.Objects.Furniture.CanBeDirty
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_CanBeDirty
  name: CanBeDirty
  nameWithType: Furniture.CanBeDirty
  fullName: TinyLife.Objects.Furniture.CanBeDirty
- uid: System.Action{TinyLife.Objects.PersonLike,System.TimeSpan}
  commentId: T:System.Action{TinyLife.Objects.PersonLike,System.TimeSpan}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<PersonLike, TimeSpan>
  nameWithType: Action<PersonLike, TimeSpan>
  fullName: System.Action<TinyLife.Objects.PersonLike, System.TimeSpan>
  nameWithType.vb: Action(Of PersonLike, TimeSpan)
  fullName.vb: System.Action(Of TinyLife.Objects.PersonLike, System.TimeSpan)
  name.vb: Action(Of PersonLike, TimeSpan)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: TinyLife.Objects.Furniture.Dirty
  commentId: P:TinyLife.Objects.Furniture.Dirty
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Dirty
  name: Dirty
  nameWithType: Furniture.Dirty
  fullName: TinyLife.Objects.Furniture.Dirty
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: TinyLife.Objects.Furniture.ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)
  commentId: M:TinyLife.Objects.Furniture.ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ApplyUpgrade_TinyLife_Objects_AppliedUpgrade_
  name: ApplyUpgrade(AppliedUpgrade)
  nameWithType: Furniture.ApplyUpgrade(AppliedUpgrade)
  fullName: TinyLife.Objects.Furniture.ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)
    name: ApplyUpgrade
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ApplyUpgrade_TinyLife_Objects_AppliedUpgrade_
  - name: (
  - uid: TinyLife.Objects.AppliedUpgrade
    name: AppliedUpgrade
    href: TinyLife.Objects.AppliedUpgrade.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.ApplyUpgrade(TinyLife.Objects.AppliedUpgrade)
    name: ApplyUpgrade
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ApplyUpgrade_TinyLife_Objects_AppliedUpgrade_
  - name: (
  - uid: TinyLife.Objects.AppliedUpgrade
    name: AppliedUpgrade
    href: TinyLife.Objects.AppliedUpgrade.html
  - name: )
- uid: TinyLife.Objects.AppliedUpgrade.Progress
  commentId: F:TinyLife.Objects.AppliedUpgrade.Progress
  href: TinyLife.Objects.AppliedUpgrade.html#TinyLife_Objects_AppliedUpgrade_Progress
  name: Progress
  nameWithType: AppliedUpgrade.Progress
  fullName: TinyLife.Objects.AppliedUpgrade.Progress
- uid: System.Action{TinyLife.Objects.AppliedUpgrade}
  commentId: T:System.Action{TinyLife.Objects.AppliedUpgrade}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<AppliedUpgrade>
  nameWithType: Action<AppliedUpgrade>
  fullName: System.Action<TinyLife.Objects.AppliedUpgrade>
  nameWithType.vb: Action(Of AppliedUpgrade)
  fullName.vb: System.Action(Of TinyLife.Objects.AppliedUpgrade)
  name.vb: Action(Of AppliedUpgrade)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: TinyLife.Objects.AppliedUpgrade
    name: AppliedUpgrade
    href: TinyLife.Objects.AppliedUpgrade.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.AppliedUpgrade
    name: AppliedUpgrade
    href: TinyLife.Objects.AppliedUpgrade.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.FurnitureType.GetDisplayName(TinyLife.Objects.Furniture)
  commentId: M:TinyLife.Objects.FurnitureType.GetDisplayName(TinyLife.Objects.Furniture)
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_GetDisplayName_TinyLife_Objects_Furniture_
  name: GetDisplayName(Furniture)
  nameWithType: FurnitureType.GetDisplayName(Furniture)
  fullName: TinyLife.Objects.FurnitureType.GetDisplayName(TinyLife.Objects.Furniture)
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType.GetDisplayName(TinyLife.Objects.Furniture)
    name: GetDisplayName
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_GetDisplayName_TinyLife_Objects_Furniture_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType.GetDisplayName(TinyLife.Objects.Furniture)
    name: GetDisplayName
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_GetDisplayName_TinyLife_Objects_Furniture_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
- uid: TinyLife.Objects.Furniture.DisplayName*
  commentId: Overload:TinyLife.Objects.Furniture.DisplayName
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_DisplayName
  name: DisplayName
  nameWithType: Furniture.DisplayName
  fullName: TinyLife.Objects.Furniture.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Objects.MapObject.ParentInfo
  commentId: P:TinyLife.Objects.MapObject.ParentInfo
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ParentInfo
  name: ParentInfo
  nameWithType: MapObject.ParentInfo
  fullName: TinyLife.Objects.MapObject.ParentInfo
- uid: TinyLife.Objects.Furniture.ParentInfo*
  commentId: Overload:TinyLife.Objects.Furniture.ParentInfo
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ParentInfo
  name: ParentInfo
  nameWithType: Furniture.ParentInfo
  fullName: TinyLife.Objects.Furniture.ParentInfo
- uid: TinyLife.Objects.ParentInfo
  commentId: T:TinyLife.Objects.ParentInfo
  parent: TinyLife.Objects
  href: TinyLife.Objects.ParentInfo.html
  name: ParentInfo
  nameWithType: ParentInfo
  fullName: TinyLife.Objects.ParentInfo
- uid: TinyLife.Objects.Visibility.WhenVisible
  commentId: F:TinyLife.Objects.Visibility.WhenVisible
  href: TinyLife.Objects.Visibility.html#TinyLife_Objects_Visibility_WhenVisible
  name: WhenVisible
  nameWithType: Visibility.WhenVisible
  fullName: TinyLife.Objects.Visibility.WhenVisible
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Visibility
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Visibility
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_Visibility
  name: Visibility
  nameWithType: FurnitureType.TypeSettings.Visibility
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Visibility
- uid: TinyLife.Objects.MapObject.Visibility
  commentId: P:TinyLife.Objects.MapObject.Visibility
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Visibility
  name: Visibility
  nameWithType: MapObject.Visibility
  fullName: TinyLife.Objects.MapObject.Visibility
- uid: TinyLife.Objects.Furniture.Visibility*
  commentId: Overload:TinyLife.Objects.Furniture.Visibility
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Visibility
  name: Visibility
  nameWithType: Furniture.Visibility
  fullName: TinyLife.Objects.Furniture.Visibility
- uid: TinyLife.Objects.Visibility
  commentId: T:TinyLife.Objects.Visibility
  parent: TinyLife.Objects
  href: TinyLife.Objects.Visibility.html
  name: Visibility
  nameWithType: Visibility
  fullName: TinyLife.Objects.Visibility
- uid: TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
  commentId: M:TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetAppliedUpgrade_TinyLife_Objects_Upgrade_
  name: GetAppliedUpgrade(Upgrade)
  nameWithType: Furniture.GetAppliedUpgrade(Upgrade)
  fullName: TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
    name: GetAppliedUpgrade
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetAppliedUpgrade_TinyLife_Objects_Upgrade_
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetAppliedUpgrade(TinyLife.Objects.Upgrade)
    name: GetAppliedUpgrade
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetAppliedUpgrade_TinyLife_Objects_Upgrade_
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
- uid: TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
  commentId: M:TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_HasFullUpgrade_TinyLife_Objects_Upgrade_
  name: HasFullUpgrade(Upgrade)
  nameWithType: Furniture.HasFullUpgrade(Upgrade)
  fullName: TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
    name: HasFullUpgrade
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_HasFullUpgrade_TinyLife_Objects_Upgrade_
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.HasFullUpgrade(TinyLife.Objects.Upgrade)
    name: HasFullUpgrade
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_HasFullUpgrade_TinyLife_Objects_Upgrade_
  - name: (
  - uid: TinyLife.Objects.Upgrade
    name: Upgrade
    href: TinyLife.Objects.Upgrade.html
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,TinyLife.Objects.AppliedUpgrade}
  commentId: T:System.Collections.Generic.Dictionary{System.String,TinyLife.Objects.AppliedUpgrade}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, AppliedUpgrade>
  nameWithType: Dictionary<string, AppliedUpgrade>
  fullName: System.Collections.Generic.Dictionary<string, TinyLife.Objects.AppliedUpgrade>
  nameWithType.vb: Dictionary(Of String, AppliedUpgrade)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, TinyLife.Objects.AppliedUpgrade)
  name.vb: Dictionary(Of String, AppliedUpgrade)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.AppliedUpgrade
    name: AppliedUpgrade
    href: TinyLife.Objects.AppliedUpgrade.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.AppliedUpgrade
    name: AppliedUpgrade
    href: TinyLife.Objects.AppliedUpgrade.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: MLEM.Maths.Direction2
  commentId: T:MLEM.Maths.Direction2
  parent: MLEM.Maths
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Maths.Direction2
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  isExternal: true
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
- uid: TinyLife.Objects.Furniture.ParentObjectSpot
  commentId: P:TinyLife.Objects.Furniture.ParentObjectSpot
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ParentObjectSpot
  name: ParentObjectSpot
  nameWithType: Furniture.ParentObjectSpot
  fullName: TinyLife.Objects.Furniture.ParentObjectSpot
- uid: TinyLife.Objects.Furniture.ParentFurniture*
  commentId: Overload:TinyLife.Objects.Furniture.ParentFurniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ParentFurniture
  name: ParentFurniture
  nameWithType: Furniture.ParentFurniture
  fullName: TinyLife.Objects.Furniture.ParentFurniture
- uid: TinyLife.Objects.ObjectSpot
  commentId: T:TinyLife.Objects.ObjectSpot
  parent: TinyLife.Objects
  href: TinyLife.Objects.ObjectSpot.html
  name: ObjectSpot
  nameWithType: ObjectSpot
  fullName: TinyLife.Objects.ObjectSpot
- uid: TinyLife.Objects.Furniture.ParentFurniture
  commentId: P:TinyLife.Objects.Furniture.ParentFurniture
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ParentFurniture
  name: ParentFurniture
  nameWithType: Furniture.ParentFurniture
  fullName: TinyLife.Objects.Furniture.ParentFurniture
- uid: TinyLife.Objects.Furniture.ParentObjectSpot*
  commentId: Overload:TinyLife.Objects.Furniture.ParentObjectSpot
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ParentObjectSpot
  name: ParentObjectSpot
  nameWithType: Furniture.ParentObjectSpot
  fullName: TinyLife.Objects.Furniture.ParentObjectSpot
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Colors
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Colors
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_Colors
  name: Colors
  nameWithType: FurnitureType.TypeSettings.Colors
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.Colors
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: MLEM.Maths.RectangleF
  commentId: T:MLEM.Maths.RectangleF
  parent: MLEM.Maths
  isExternal: true
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Maths.RectangleF
- uid: TinyLife.Objects.FurnitureType.GetSize(MLEM.Maths.Direction2)
  commentId: M:TinyLife.Objects.FurnitureType.GetSize(MLEM.Maths.Direction2)
  isExternal: true
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_GetSize_MLEM_Maths_Direction2_
  name: GetSize(Direction2)
  nameWithType: FurnitureType.GetSize(Direction2)
  fullName: TinyLife.Objects.FurnitureType.GetSize(MLEM.Maths.Direction2)
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType.GetSize(MLEM.Maths.Direction2)
    name: GetSize
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_GetSize_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType.GetSize(MLEM.Maths.Direction2)
    name: GetSize
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_GetSize_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
- uid: TinyLife.Objects.Furniture.Area*
  commentId: Overload:TinyLife.Objects.Furniture.Area
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Area
  name: Area
  nameWithType: Furniture.Area
  fullName: TinyLife.Objects.Furniture.Area
- uid: TinyLife.Objects.Furniture.Area
  commentId: P:TinyLife.Objects.Furniture.Area
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Area
  name: Area
  nameWithType: Furniture.Area
  fullName: TinyLife.Objects.Furniture.Area
- uid: TinyLife.Objects.Furniture.CoveredTiles*
  commentId: Overload:TinyLife.Objects.Furniture.CoveredTiles
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_CoveredTiles
  name: CoveredTiles
  nameWithType: Furniture.CoveredTiles
  fullName: TinyLife.Objects.Furniture.CoveredTiles
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ActionUpdate_TinyLife_Actions_Action_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_System_Boolean_
  name: ActionUpdate(Action, GameTime, TimeSpan, float, bool)
  nameWithType: MapObject.ActionUpdate(Action, GameTime, TimeSpan, float, bool)
  fullName: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action, Microsoft.Xna.Framework.GameTime, System.TimeSpan, float, bool)
  nameWithType.vb: MapObject.ActionUpdate(Action, GameTime, TimeSpan, Single, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action, Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single, Boolean)
  name.vb: ActionUpdate(Action, GameTime, TimeSpan, Single, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
    name: ActionUpdate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ActionUpdate_TinyLife_Actions_Action_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
    name: ActionUpdate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ActionUpdate_TinyLife_Actions_Action_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Furniture.GetPrice
  commentId: M:TinyLife.Objects.Furniture.GetPrice
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetPrice
  name: GetPrice()
  nameWithType: Furniture.GetPrice()
  fullName: TinyLife.Objects.Furniture.GetPrice()
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetPrice
    name: GetPrice
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetPrice
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetPrice
    name: GetPrice
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetPrice
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.World.Household.AreUtilitiesDisabled(System.Nullable{System.TimeSpan})
  commentId: M:TinyLife.World.Household.AreUtilitiesDisabled(System.Nullable{System.TimeSpan})
  isExternal: true
  href: TinyLife.World.Household.html#TinyLife_World_Household_AreUtilitiesDisabled_System_Nullable_System_TimeSpan__
  name: AreUtilitiesDisabled(TimeSpan?)
  nameWithType: Household.AreUtilitiesDisabled(TimeSpan?)
  fullName: TinyLife.World.Household.AreUtilitiesDisabled(System.TimeSpan?)
  spec.csharp:
  - uid: TinyLife.World.Household.AreUtilitiesDisabled(System.Nullable{System.TimeSpan})
    name: AreUtilitiesDisabled
    href: TinyLife.World.Household.html#TinyLife_World_Household_AreUtilitiesDisabled_System_Nullable_System_TimeSpan__
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.World.Household.AreUtilitiesDisabled(System.Nullable{System.TimeSpan})
    name: AreUtilitiesDisabled
    href: TinyLife.World.Household.html#TinyLife_World_Household_AreUtilitiesDisabled_System_Nullable_System_TimeSpan__
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  - name: )
- uid: TinyLife.Objects.Furniture.AreUtilitiesDisabled*
  commentId: Overload:TinyLife.Objects.Furniture.AreUtilitiesDisabled
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_AreUtilitiesDisabled
  name: AreUtilitiesDisabled
  nameWithType: Furniture.AreUtilitiesDisabled
  fullName: TinyLife.Objects.Furniture.AreUtilitiesDisabled
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid.Empty
  commentId: F:System.Guid.Empty
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid.empty
  name: Empty
  nameWithType: Guid.Empty
  fullName: System.Guid.Empty
- uid: TinyLife.Objects.Furniture.Creator
  commentId: P:TinyLife.Objects.Furniture.Creator
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Creator
  name: Creator
  nameWithType: Furniture.Creator
  fullName: TinyLife.Objects.Furniture.Creator
- uid: TinyLife.Objects.Furniture.CreatorId*
  commentId: Overload:TinyLife.Objects.Furniture.CreatorId
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_CreatorId
  name: CreatorId
  nameWithType: Furniture.CreatorId
  fullName: TinyLife.Objects.Furniture.CreatorId
- uid: TinyLife.Objects.Food
  commentId: T:TinyLife.Objects.Food
  parent: TinyLife.Objects
  href: TinyLife.Objects.Food.html
  name: Food
  nameWithType: Food
  fullName: TinyLife.Objects.Food
- uid: TinyLife.Objects.Painting
  commentId: T:TinyLife.Objects.Painting
  href: TinyLife.Objects.Painting.html
  name: Painting
  nameWithType: Painting
  fullName: TinyLife.Objects.Painting
- uid: TinyLife.Utilities.Extensions.GetPriceModifier(TinyLife.Skills.Quality)
  commentId: M:TinyLife.Utilities.Extensions.GetPriceModifier(TinyLife.Skills.Quality)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetPriceModifier_TinyLife_Skills_Quality_
  name: GetPriceModifier(Quality)
  nameWithType: Extensions.GetPriceModifier(Quality)
  fullName: TinyLife.Utilities.Extensions.GetPriceModifier(TinyLife.Skills.Quality)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetPriceModifier(TinyLife.Skills.Quality)
    name: GetPriceModifier
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetPriceModifier_TinyLife_Skills_Quality_
  - name: (
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetPriceModifier(TinyLife.Skills.Quality)
    name: GetPriceModifier
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_GetPriceModifier_TinyLife_Skills_Quality_
  - name: (
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: )
- uid: System.Nullable{TinyLife.Skills.Quality}
  commentId: T:System.Nullable{TinyLife.Skills.Quality}
  parent: System
  definition: System.Nullable`1
  href: TinyLife.Skills.Quality.html
  name: Quality?
  nameWithType: Quality?
  fullName: TinyLife.Skills.Quality?
  spec.csharp:
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: '?'
  spec.vb:
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.Furniture.CanBeDirty*
  commentId: Overload:TinyLife.Objects.Furniture.CanBeDirty
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_CanBeDirty
  name: CanBeDirty
  nameWithType: Furniture.CanBeDirty
  fullName: TinyLife.Objects.Furniture.CanBeDirty
- uid: TinyLife.Objects.Furniture.Dirty*
  commentId: Overload:TinyLife.Objects.Furniture.Dirty
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Dirty
  name: Dirty
  nameWithType: Furniture.Dirty
  fullName: TinyLife.Objects.Furniture.Dirty
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: TinyLife.Objects.Furniture.CreatorId
  commentId: P:TinyLife.Objects.Furniture.CreatorId
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_CreatorId
  name: CreatorId
  nameWithType: Furniture.CreatorId
  fullName: TinyLife.Objects.Furniture.CreatorId
- uid: TinyLife.Objects.Furniture.Creator*
  commentId: Overload:TinyLife.Objects.Furniture.Creator
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Creator
  name: Creator
  nameWithType: Furniture.Creator
  fullName: TinyLife.Objects.Furniture.Creator
- uid: TinyLife.World.Wall
  commentId: T:TinyLife.World.Wall
  parent: TinyLife.World
  href: TinyLife.World.Wall.html
  name: Wall
  nameWithType: Wall
  fullName: TinyLife.World.Wall
- uid: TinyLife.Objects.Furniture.AttachedWall*
  commentId: Overload:TinyLife.Objects.Furniture.AttachedWall
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_AttachedWall
  name: AttachedWall
  nameWithType: Furniture.AttachedWall
  fullName: TinyLife.Objects.Furniture.AttachedWall
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.Objects.Furniture.HideFromDraw*
  commentId: Overload:TinyLife.Objects.Furniture.HideFromDraw
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_HideFromDraw
  name: HideFromDraw
  nameWithType: Furniture.HideFromDraw
  fullName: TinyLife.Objects.Furniture.HideFromDraw
- uid: TinyLife.Objects.Furniture.Rotation
  commentId: F:TinyLife.Objects.Furniture.Rotation
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Rotation
  name: Rotation
  nameWithType: Furniture.Rotation
  fullName: TinyLife.Objects.Furniture.Rotation
- uid: TinyLife.Options.CameraRotation
  commentId: F:TinyLife.Options.CameraRotation
  href: TinyLife.Options.html#TinyLife_Options_CameraRotation
  name: CameraRotation
  nameWithType: Options.CameraRotation
  fullName: TinyLife.Options.CameraRotation
- uid: TinyLife.Objects.FurnitureType.GetBestRotationForDrawing(MLEM.Maths.Direction2)
  commentId: M:TinyLife.Objects.FurnitureType.GetBestRotationForDrawing(MLEM.Maths.Direction2)
  isExternal: true
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_GetBestRotationForDrawing_MLEM_Maths_Direction2_
  name: GetBestRotationForDrawing(Direction2)
  nameWithType: FurnitureType.GetBestRotationForDrawing(Direction2)
  fullName: TinyLife.Objects.FurnitureType.GetBestRotationForDrawing(MLEM.Maths.Direction2)
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType.GetBestRotationForDrawing(MLEM.Maths.Direction2)
    name: GetBestRotationForDrawing
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_GetBestRotationForDrawing_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType.GetBestRotationForDrawing(MLEM.Maths.Direction2)
    name: GetBestRotationForDrawing
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_GetBestRotationForDrawing_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
- uid: TinyLife.Objects.Furniture.VisualRotation*
  commentId: Overload:TinyLife.Objects.Furniture.VisualRotation
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_VisualRotation
  name: VisualRotation
  nameWithType: Furniture.VisualRotation
  fullName: TinyLife.Objects.Furniture.VisualRotation
- uid: TinyLife.Objects.Furniture.ParentObjectSpotId*
  commentId: Overload:TinyLife.Objects.Furniture.ParentObjectSpotId
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ParentObjectSpotId
  name: ParentObjectSpotId
  nameWithType: Furniture.ParentObjectSpotId
  fullName: TinyLife.Objects.Furniture.ParentObjectSpotId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Objects.Furniture.ParentFurnitureId*
  commentId: Overload:TinyLife.Objects.Furniture.ParentFurnitureId
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ParentFurnitureId
  name: ParentFurnitureId
  nameWithType: Furniture.ParentFurnitureId
  fullName: TinyLife.Objects.Furniture.ParentFurnitureId
- uid: TinyLife.Objects.FurnitureType.Construct``1(System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Nullable{System.Guid})
  commentId: M:TinyLife.Objects.FurnitureType.Construct``1(System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Nullable{System.Guid})
  isExternal: true
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Construct__1_System_Int32___TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Nullable_System_Guid__
  name: Construct<T>(int[], Map, Vector2, float, Guid?)
  nameWithType: FurnitureType.Construct<T>(int[], Map, Vector2, float, Guid?)
  fullName: TinyLife.Objects.FurnitureType.Construct<T>(int[], TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float, System.Guid?)
  nameWithType.vb: FurnitureType.Construct(Of T)(Integer(), Map, Vector2, Single, Guid?)
  fullName.vb: TinyLife.Objects.FurnitureType.Construct(Of T)(Integer(), TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single, System.Guid?)
  name.vb: Construct(Of T)(Integer(), Map, Vector2, Single, Guid?)
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType.Construct``1(System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Nullable{System.Guid})
    name: Construct
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Construct__1_System_Int32___TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Nullable_System_Guid__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType.Construct``1(System.Int32[],TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,System.Nullable{System.Guid})
    name: Construct
    href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_Construct__1_System_Int32___TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_System_Nullable_System_Guid__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  - name: )
- uid: TinyLife.Objects.Furniture.#ctor*
  commentId: Overload:TinyLife.Objects.Furniture.#ctor
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture__ctor_System_Guid_TinyLife_Objects_FurnitureType_System_Int32___TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_
  name: Furniture
  nameWithType: Furniture.Furniture
  fullName: TinyLife.Objects.Furniture.Furniture
  nameWithType.vb: Furniture.New
  fullName.vb: TinyLife.Objects.Furniture.New
  name.vb: New
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: MLEM.Graphics.StaticSpriteBatch
  commentId: T:MLEM.Graphics.StaticSpriteBatch
  isExternal: true
  name: StaticSpriteBatch
  nameWithType: StaticSpriteBatch
  fullName: MLEM.Graphics.StaticSpriteBatch
- uid: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Draw_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  name: Draw(GameTime, object, Vector2, Color?, List<Item>)
  nameWithType: MapObject.Draw(GameTime, object, Vector2, Color?, List<StaticSpriteBatch.Item>)
  fullName: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime, object, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>)
  nameWithType.vb: MapObject.Draw(GameTime, Object, Vector2, Color?, List(Of StaticSpriteBatch.Item))
  fullName.vb: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime, Object, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: Draw(GameTime, Object, Vector2, Color?, List(Of Item))
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
    name: Draw
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Draw_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
    name: Draw
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Draw_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
  - name: )
- uid: TinyLife.Objects.Furniture.Draw*
  commentId: Overload:TinyLife.Objects.Furniture.Draw
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Draw_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  name: Draw
  nameWithType: Furniture.Draw
  fullName: TinyLife.Objects.Furniture.Draw
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.Nullable{Microsoft.Xna.Framework.Color}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: Microsoft.Xna.Framework.Color?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item}
  commentId: T:System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<StaticSpriteBatch.Item>
  nameWithType: List<StaticSpriteBatch.Item>
  fullName: System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>
  nameWithType.vb: List(Of StaticSpriteBatch.Item)
  fullName.vb: System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item)
  name.vb: List(Of StaticSpriteBatch.Item)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Validate_TinyLife_Utilities_AppliedMigrations_
  name: Validate(AppliedMigrations)
  nameWithType: MapObject.Validate(AppliedMigrations)
  fullName: TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Validate_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.Validate(TinyLife.Utilities.AppliedMigrations)
    name: Validate
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Validate_TinyLife_Utilities_AppliedMigrations_
  - name: (
  - uid: TinyLife.Utilities.AppliedMigrations
    name: AppliedMigrations
    href: TinyLife.Utilities.AppliedMigrations.html
  - name: )
- uid: TinyLife.Objects.Furniture.Validate*
  commentId: Overload:TinyLife.Objects.Furniture.Validate
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Validate_TinyLife_Utilities_AppliedMigrations_
  name: Validate
  nameWithType: Furniture.Validate
  fullName: TinyLife.Objects.Furniture.Validate
- uid: TinyLife.Utilities.AppliedMigrations
  commentId: T:TinyLife.Utilities.AppliedMigrations
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.AppliedMigrations.html
  name: AppliedMigrations
  nameWithType: AppliedMigrations
  fullName: TinyLife.Utilities.AppliedMigrations
- uid: TinyLife.World.Map.GetObjects``1(MLEM.Maths.RectangleF)
  commentId: M:TinyLife.World.Map.GetObjects``1(MLEM.Maths.RectangleF)
  isExternal: true
  href: TinyLife.World.Map.html#TinyLife_World_Map_GetObjects__1_MLEM_Maths_RectangleF_
  name: GetObjects<T>(RectangleF)
  nameWithType: Map.GetObjects<T>(RectangleF)
  fullName: TinyLife.World.Map.GetObjects<T>(MLEM.Maths.RectangleF)
  nameWithType.vb: Map.GetObjects(Of T)(RectangleF)
  fullName.vb: TinyLife.World.Map.GetObjects(Of T)(MLEM.Maths.RectangleF)
  name.vb: GetObjects(Of T)(RectangleF)
  spec.csharp:
  - uid: TinyLife.World.Map.GetObjects``1(MLEM.Maths.RectangleF)
    name: GetObjects
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetObjects__1_MLEM_Maths_RectangleF_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.GetObjects``1(MLEM.Maths.RectangleF)
    name: GetObjects
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetObjects__1_MLEM_Maths_RectangleF_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
- uid: TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
  commentId: M:TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Intersects_MLEM_Maths_RectangleF_
  name: Intersects(RectangleF)
  nameWithType: MapObject.Intersects(RectangleF)
  fullName: TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
    name: Intersects
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Intersects_MLEM_Maths_RectangleF_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.Intersects(MLEM.Maths.RectangleF)
    name: Intersects
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Intersects_MLEM_Maths_RectangleF_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
- uid: TinyLife.Objects.Furniture.Intersects*
  commentId: Overload:TinyLife.Objects.Furniture.Intersects
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Intersects_MLEM_Maths_RectangleF_
  name: Intersects
  nameWithType: Furniture.Intersects
  fullName: TinyLife.Objects.Furniture.Intersects
- uid: TinyLife.Objects.ObjectCategory
  commentId: T:TinyLife.Objects.ObjectCategory
  parent: TinyLife.Objects
  href: TinyLife.Objects.ObjectCategory.html
  name: ObjectCategory
  nameWithType: ObjectCategory
  fullName: TinyLife.Objects.ObjectCategory
- uid: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetCategories_TinyLife_Objects_PersonLike_
  name: GetCategories(PersonLike)
  nameWithType: MapObject.GetCategories(PersonLike)
  fullName: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
    name: GetCategories
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetCategories_TinyLife_Objects_PersonLike_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.PersonLike)
    name: GetCategories
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetCategories_TinyLife_Objects_PersonLike_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
- uid: TinyLife.Objects.Furniture.GetCategories*
  commentId: Overload:TinyLife.Objects.Furniture.GetCategories
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetCategories_TinyLife_Objects_PersonLike_
  name: GetCategories
  nameWithType: Furniture.GetCategories
  fullName: TinyLife.Objects.Furniture.GetCategories
- uid: TinyLife.Objects.MapObject.OnAdded
  commentId: M:TinyLife.Objects.MapObject.OnAdded
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnAdded
  name: OnAdded()
  nameWithType: MapObject.OnAdded()
  fullName: TinyLife.Objects.MapObject.OnAdded()
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnAdded
    name: OnAdded
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnAdded
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnAdded
    name: OnAdded
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnAdded
  - name: (
  - name: )
- uid: TinyLife.Objects.Furniture.OnAdded*
  commentId: Overload:TinyLife.Objects.Furniture.OnAdded
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnAdded
  name: OnAdded
  nameWithType: Furniture.OnAdded
  fullName: TinyLife.Objects.Furniture.OnAdded
- uid: TinyLife.Objects.MapObject.OnRemoved
  commentId: M:TinyLife.Objects.MapObject.OnRemoved
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnRemoved
  name: OnRemoved()
  nameWithType: MapObject.OnRemoved()
  fullName: TinyLife.Objects.MapObject.OnRemoved()
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnRemoved
    name: OnRemoved
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnRemoved
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnRemoved
    name: OnRemoved
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnRemoved
  - name: (
  - name: )
- uid: TinyLife.Objects.Furniture.OnRemoved*
  commentId: Overload:TinyLife.Objects.Furniture.OnRemoved
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnRemoved
  name: OnRemoved
  nameWithType: Furniture.OnRemoved
  fullName: TinyLife.Objects.Furniture.OnRemoved
- uid: TinyLife.Objects.PersonAi
  commentId: T:TinyLife.Objects.PersonAi
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonAi.html
  name: PersonAi
  nameWithType: PersonAi
  fullName: TinyLife.Objects.PersonAi
- uid: TinyLife.Objects.ObjectCategory.SingleBed
  commentId: F:TinyLife.Objects.ObjectCategory.SingleBed
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_SingleBed
  name: SingleBed
  nameWithType: ObjectCategory.SingleBed
  fullName: TinyLife.Objects.ObjectCategory.SingleBed
- uid: TinyLife.Objects.ObjectCategory.DoubleBed
  commentId: F:TinyLife.Objects.ObjectCategory.DoubleBed
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_DoubleBed
  name: DoubleBed
  nameWithType: ObjectCategory.DoubleBed
  fullName: TinyLife.Objects.ObjectCategory.DoubleBed
- uid: TinyLife.Objects.Person.LastBedSleptIn
  commentId: F:TinyLife.Objects.Person.LastBedSleptIn
  href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_LastBedSleptIn
  name: LastBedSleptIn
  nameWithType: Person.LastBedSleptIn
  fullName: TinyLife.Objects.Person.LastBedSleptIn
- uid: TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetAiPriorityForObject_TinyLife_Objects_MapObject_TinyLife_Objects_ObjectCategory_
  name: GetAiPriorityForObject(MapObject, ObjectCategory)
  nameWithType: PersonLike.GetAiPriorityForObject(MapObject, ObjectCategory)
  fullName: TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject,TinyLife.Objects.ObjectCategory)
    name: GetAiPriorityForObject
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetAiPriorityForObject_TinyLife_Objects_MapObject_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.GetAiPriorityForObject(TinyLife.Objects.MapObject,TinyLife.Objects.ObjectCategory)
    name: GetAiPriorityForObject
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetAiPriorityForObject_TinyLife_Objects_MapObject_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetAiPriority_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetAiPriority(PersonLike, ObjectCategory)
  nameWithType: MapObject.GetAiPriority(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetAiPriority
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetAiPriority_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetAiPriority
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetAiPriority_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Objects.Furniture.GetAiPriority*
  commentId: Overload:TinyLife.Objects.Furniture.GetAiPriority
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetAiPriority_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetAiPriority
  nameWithType: Furniture.GetAiPriority
  fullName: TinyLife.Objects.Furniture.GetAiPriority
- uid: TinyLife.Actions.CanExecuteResult.Valid
  commentId: F:TinyLife.Actions.CanExecuteResult.Valid
  href: TinyLife.Actions.CanExecuteResult.html#TinyLife_Actions_CanExecuteResult_Valid
  name: Valid
  nameWithType: CanExecuteResult.Valid
  fullName: TinyLife.Actions.CanExecuteResult.Valid
- uid: TinyLife.Objects.IBreakableObject.Broken
  commentId: P:TinyLife.Objects.IBreakableObject.Broken
  parent: TinyLife.Objects.IBreakableObject
  href: TinyLife.Objects.IBreakableObject.html#TinyLife_Objects_IBreakableObject_Broken
  name: Broken
  nameWithType: IBreakableObject.Broken
  fullName: TinyLife.Objects.IBreakableObject.Broken
- uid: TinyLife.Objects.Furniture.AreUtilitiesDisabled
  commentId: P:TinyLife.Objects.Furniture.AreUtilitiesDisabled
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_AreUtilitiesDisabled
  name: AreUtilitiesDisabled
  nameWithType: Furniture.AreUtilitiesDisabled
  fullName: TinyLife.Objects.Furniture.AreUtilitiesDisabled
- uid: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_CanExecuteAction_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_System_Boolean_
  name: CanExecuteAction(ActionType, ActionInfo, bool, bool)
  nameWithType: MapObject.CanExecuteAction(ActionType, ActionInfo, bool, bool)
  fullName: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool, bool)
  nameWithType.vb: MapObject.CanExecuteAction(ActionType, ActionInfo, Boolean, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean, Boolean)
  name.vb: CanExecuteAction(ActionType, ActionInfo, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
    name: CanExecuteAction
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_CanExecuteAction_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
    name: CanExecuteAction
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_CanExecuteAction_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Furniture.CanExecuteAction*
  commentId: Overload:TinyLife.Objects.Furniture.CanExecuteAction
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_CanExecuteAction_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_System_Boolean_
  name: CanExecuteAction
  nameWithType: Furniture.CanExecuteAction
  fullName: TinyLife.Objects.Furniture.CanExecuteAction
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionInfo.html
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Actions.CanExecuteResult
  commentId: T:TinyLife.Actions.CanExecuteResult
  parent: TinyLife.Actions
  href: TinyLife.Actions.CanExecuteResult.html
  name: CanExecuteResult
  nameWithType: CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult
- uid: TinyLife.Objects.IBreakableObject
  commentId: T:TinyLife.Objects.IBreakableObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.IBreakableObject.html
  name: IBreakableObject
  nameWithType: IBreakableObject
  fullName: TinyLife.Objects.IBreakableObject
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: TinyLife.Actions.Action.Parent
  commentId: P:TinyLife.Actions.Action.Parent
  parent: TinyLife.Actions.Action
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_Parent
  name: Parent
  nameWithType: Action.Parent
  fullName: TinyLife.Actions.Action.Parent
- uid: TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
  isExternal: true
  href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetInvolvedObjects__1_TinyLife_Objects_ObjectCategory_System_Boolean_System_Boolean_
  name: GetInvolvedObjects<T>(ObjectCategory, bool, bool)
  nameWithType: ActionInfo.GetInvolvedObjects<T>(ObjectCategory, bool, bool)
  fullName: TinyLife.Actions.ActionInfo.GetInvolvedObjects<T>(TinyLife.Objects.ObjectCategory, bool, bool)
  nameWithType.vb: ActionInfo.GetInvolvedObjects(Of T)(ObjectCategory, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.ActionInfo.GetInvolvedObjects(Of T)(TinyLife.Objects.ObjectCategory, Boolean, Boolean)
  name.vb: GetInvolvedObjects(Of T)(ObjectCategory, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
    name: GetInvolvedObjects
    href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetInvolvedObjects__1_TinyLife_Objects_ObjectCategory_System_Boolean_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
    name: GetInvolvedObjects
    href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetInvolvedObjects__1_TinyLife_Objects_ObjectCategory_System_Boolean_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Furniture.DevaluedThroughUse
  commentId: F:TinyLife.Objects.Furniture.DevaluedThroughUse
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_DevaluedThroughUse
  name: DevaluedThroughUse
  nameWithType: Furniture.DevaluedThroughUse
  fullName: TinyLife.Objects.Furniture.DevaluedThroughUse
- uid: TinyLife.Actions.ActionInfo.GetActionObject``1(System.Boolean)
  commentId: M:TinyLife.Actions.ActionInfo.GetActionObject``1(System.Boolean)
  isExternal: true
  href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetActionObject__1_System_Boolean_
  name: GetActionObject<T>(bool)
  nameWithType: ActionInfo.GetActionObject<T>(bool)
  fullName: TinyLife.Actions.ActionInfo.GetActionObject<T>(bool)
  nameWithType.vb: ActionInfo.GetActionObject(Of T)(Boolean)
  fullName.vb: TinyLife.Actions.ActionInfo.GetActionObject(Of T)(Boolean)
  name.vb: GetActionObject(Of T)(Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.ActionInfo.GetActionObject``1(System.Boolean)
    name: GetActionObject
    href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetActionObject__1_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionInfo.GetActionObject``1(System.Boolean)
    name: GetActionObject
    href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_GetActionObject__1_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnActionCompleted_TinyLife_Actions_Action_TinyLife_Actions_CompletionType_System_Boolean_
  name: OnActionCompleted(Action, CompletionType, bool)
  nameWithType: MapObject.OnActionCompleted(Action, CompletionType, bool)
  fullName: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, bool)
  nameWithType.vb: MapObject.OnActionCompleted(Action, CompletionType, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, Boolean)
  name.vb: OnActionCompleted(Action, CompletionType, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
    name: OnActionCompleted
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnActionCompleted_TinyLife_Actions_Action_TinyLife_Actions_CompletionType_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    href: TinyLife.Actions.CompletionType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
    name: OnActionCompleted
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnActionCompleted_TinyLife_Actions_Action_TinyLife_Actions_CompletionType_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    href: TinyLife.Actions.CompletionType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Furniture.OnActionCompleted*
  commentId: Overload:TinyLife.Objects.Furniture.OnActionCompleted
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnActionCompleted_TinyLife_Actions_Action_TinyLife_Actions_CompletionType_System_Boolean_
  name: OnActionCompleted
  nameWithType: Furniture.OnActionCompleted
  fullName: TinyLife.Objects.Furniture.OnActionCompleted
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.CompletionType
  commentId: T:TinyLife.Actions.CompletionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.CompletionType.html
  name: CompletionType
  nameWithType: CompletionType
  fullName: TinyLife.Actions.CompletionType
- uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  isExternal: true
  name: Update(GameTime)
  nameWithType: Game.Update(GameTime)
  fullName: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: TinyLife.Actions.Action.FullyInProgress
  commentId: P:TinyLife.Actions.Action.FullyInProgress
  parent: TinyLife.Actions.Action
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_FullyInProgress
  name: FullyInProgress
  nameWithType: Action.FullyInProgress
  fullName: TinyLife.Actions.Action.FullyInProgress
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Speed
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
- uid: TinyLife.Objects.Furniture.ActionUpdate*
  commentId: Overload:TinyLife.Objects.Furniture.ActionUpdate
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ActionUpdate_TinyLife_Actions_Action_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_System_Boolean_
  name: ActionUpdate
  nameWithType: Furniture.ActionUpdate
  fullName: TinyLife.Objects.Furniture.ActionUpdate
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetFreeActionSpotInfos_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetFreeActionSpotInfos(PersonLike, ObjectCategory)
  nameWithType: MapObject.GetFreeActionSpotInfos(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpotInfos
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetFreeActionSpotInfos_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfos(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpotInfos
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetFreeActionSpotInfos_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Objects.Furniture.GetFreeActionSpotInfos*
  commentId: Overload:TinyLife.Objects.Furniture.GetFreeActionSpotInfos
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetFreeActionSpotInfos_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetFreeActionSpotInfos
  nameWithType: Furniture.GetFreeActionSpotInfos
  fullName: TinyLife.Objects.Furniture.GetFreeActionSpotInfos
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionInfo}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ActionInfo>
  nameWithType: IEnumerable<ActionInfo>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionInfo>
  nameWithType.vb: IEnumerable(Of ActionInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionInfo)
  name.vb: IEnumerable(Of ActionInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  commentId: M:TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetHoverInfo_MLEM_Ui_Elements_Tooltip_
  name: GetHoverInfo(Tooltip)
  nameWithType: MapObject.GetHoverInfo(Tooltip)
  fullName: TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
    name: GetHoverInfo
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetHoverInfo_MLEM_Ui_Elements_Tooltip_
  - name: (
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
    name: GetHoverInfo
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetHoverInfo_MLEM_Ui_Elements_Tooltip_
  - name: (
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: )
- uid: TinyLife.Objects.Furniture.GetHoverInfo*
  commentId: Overload:TinyLife.Objects.Furniture.GetHoverInfo
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetHoverInfo_MLEM_Ui_Elements_Tooltip_
  name: GetHoverInfo
  nameWithType: Furniture.GetHoverInfo
  fullName: TinyLife.Objects.Furniture.GetHoverInfo
- uid: MLEM.Ui.Elements.Tooltip
  commentId: T:MLEM.Ui.Elements.Tooltip
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Tooltip
  nameWithType: Tooltip
  fullName: MLEM.Ui.Elements.Tooltip
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: TinyLife.Debug
  commentId: T:TinyLife.Debug
  href: TinyLife.Debug.html
  name: Debug
  nameWithType: Debug
  fullName: TinyLife.Debug
- uid: TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
  commentId: M:TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetDebugLines_TinyLife_GameImpl_System_Collections_Generic_List_System_String__
  name: GetDebugLines(GameImpl, List<string>)
  nameWithType: MapObject.GetDebugLines(GameImpl, List<string>)
  fullName: TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl, System.Collections.Generic.List<string>)
  nameWithType.vb: MapObject.GetDebugLines(GameImpl, List(Of String))
  fullName.vb: TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl, System.Collections.Generic.List(Of String))
  name.vb: GetDebugLines(GameImpl, List(Of String))
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
    name: GetDebugLines
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetDebugLines_TinyLife_GameImpl_System_Collections_Generic_List_System_String__
  - name: (
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetDebugLines(TinyLife.GameImpl,System.Collections.Generic.List{System.String})
    name: GetDebugLines
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetDebugLines_TinyLife_GameImpl_System_Collections_Generic_List_System_String__
  - name: (
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: TinyLife.Objects.Furniture.GetDebugLines*
  commentId: Overload:TinyLife.Objects.Furniture.GetDebugLines
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDebugLines_TinyLife_GameImpl_System_Collections_Generic_List_System_String__
  name: GetDebugLines
  nameWithType: Furniture.GetDebugLines
  fullName: TinyLife.Objects.Furniture.GetDebugLines
- uid: TinyLife.GameImpl
  commentId: T:TinyLife.GameImpl
  parent: TinyLife
  href: TinyLife.GameImpl.html
  name: GameImpl
  nameWithType: GameImpl
  fullName: TinyLife.GameImpl
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetEfficiencyModifier_System_Single_TinyLife_Actions_ActionInfo_TinyLife_Skills_SkillType_System_Single_
  name: GetEfficiencyModifier(float, ActionInfo, SkillType, float)
  nameWithType: PersonLike.GetEfficiencyModifier(float, ActionInfo, SkillType, float)
  fullName: TinyLife.Objects.PersonLike.GetEfficiencyModifier(float, TinyLife.Actions.ActionInfo, TinyLife.Skills.SkillType, float)
  nameWithType.vb: PersonLike.GetEfficiencyModifier(Single, ActionInfo, SkillType, Single)
  fullName.vb: TinyLife.Objects.PersonLike.GetEfficiencyModifier(Single, TinyLife.Actions.ActionInfo, TinyLife.Skills.SkillType, Single)
  name.vb: GetEfficiencyModifier(Single, ActionInfo, SkillType, Single)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetEfficiencyModifier_System_Single_TinyLife_Actions_ActionInfo_TinyLife_Skills_SkillType_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetEfficiencyModifier_System_Single_TinyLife_Actions_ActionInfo_TinyLife_Skills_SkillType_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetEfficiencyModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Single_
  name: GetEfficiencyModifier(PersonLike, ActionInfo, bool, SkillType, float)
  nameWithType: MapObject.GetEfficiencyModifier(PersonLike, ActionInfo, bool, SkillType, float)
  fullName: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.Skills.SkillType, float)
  nameWithType.vb: MapObject.GetEfficiencyModifier(PersonLike, ActionInfo, Boolean, SkillType, Single)
  fullName.vb: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Skills.SkillType, Single)
  name.vb: GetEfficiencyModifier(PersonLike, ActionInfo, Boolean, SkillType, Single)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetEfficiencyModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Single_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetEfficiencyModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Single_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.Furniture.GetEfficiencyModifier*
  commentId: Overload:TinyLife.Objects.Furniture.GetEfficiencyModifier
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetEfficiencyModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Single_
  name: GetEfficiencyModifier
  nameWithType: Furniture.GetEfficiencyModifier
  fullName: TinyLife.Objects.Furniture.GetEfficiencyModifier
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  href: TinyLife.Skills.SkillType.html
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
  commentId: M:TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_RestoreNeed_TinyLife_NeedType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  name: RestoreNeed(NeedType, float, ActionInfo, float)
  nameWithType: PersonLike.RestoreNeed(NeedType, float, ActionInfo, float)
  fullName: TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType, float, TinyLife.Actions.ActionInfo, float)
  nameWithType.vb: PersonLike.RestoreNeed(NeedType, Single, ActionInfo, Single)
  fullName.vb: TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType, Single, TinyLife.Actions.ActionInfo, Single)
  name.vb: RestoreNeed(NeedType, Single, ActionInfo, Single)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
    name: RestoreNeed
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_RestoreNeed_TinyLife_NeedType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.RestoreNeed(TinyLife.NeedType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
    name: RestoreNeed
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_RestoreNeed_TinyLife_NeedType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  commentId: M:TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetRestoreNeedModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_NeedType_
  name: GetRestoreNeedModifier(PersonLike, ActionInfo, bool, NeedType)
  nameWithType: MapObject.GetRestoreNeedModifier(PersonLike, ActionInfo, bool, NeedType)
  fullName: TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.NeedType)
  nameWithType.vb: MapObject.GetRestoreNeedModifier(PersonLike, ActionInfo, Boolean, NeedType)
  fullName.vb: TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.NeedType)
  name.vb: GetRestoreNeedModifier(PersonLike, ActionInfo, Boolean, NeedType)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
    name: GetRestoreNeedModifier
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetRestoreNeedModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_NeedType_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetRestoreNeedModifier(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.NeedType)
    name: GetRestoreNeedModifier
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetRestoreNeedModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_NeedType_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: )
- uid: TinyLife.Objects.Furniture.GetRestoreNeedModifier*
  commentId: Overload:TinyLife.Objects.Furniture.GetRestoreNeedModifier
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetRestoreNeedModifier_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_NeedType_
  name: GetRestoreNeedModifier
  nameWithType: Furniture.GetRestoreNeedModifier
  fullName: TinyLife.Objects.Furniture.GetRestoreNeedModifier
- uid: TinyLife.NeedType
  commentId: T:TinyLife.NeedType
  parent: TinyLife
  href: TinyLife.NeedType.html
  name: NeedType
  nameWithType: NeedType
  fullName: TinyLife.NeedType
- uid: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
  commentId: M:TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
  isExternal: true
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQuality_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Emotions_IEmotionSource_System_Boolean_
  name: GetRandomQuality(PersonLike, Random, ActionInfo, bool, IEmotionSource, bool)
  nameWithType: SkillType.GetRandomQuality(PersonLike, Random, ActionInfo, bool, IEmotionSource, bool)
  fullName: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, bool, TinyLife.Emotions.IEmotionSource, bool)
  nameWithType.vb: SkillType.GetRandomQuality(PersonLike, Random, ActionInfo, Boolean, IEmotionSource, Boolean)
  fullName.vb: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike, System.Random, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Emotions.IEmotionSource, Boolean)
  name.vb: GetRandomQuality(PersonLike, Random, ActionInfo, Boolean, IEmotionSource, Boolean)
  spec.csharp:
  - uid: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: GetRandomQuality
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQuality_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.SkillType.GetRandomQuality(TinyLife.Objects.PersonLike,System.Random,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: GetRandomQuality
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetRandomQuality_TinyLife_Objects_PersonLike_System_Random_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Skills.Quality.Average
  commentId: F:TinyLife.Skills.Quality.Average
  href: TinyLife.Skills.Quality.html#TinyLife_Skills_Quality_Average
  name: Average
  nameWithType: Quality.Average
  fullName: TinyLife.Skills.Quality.Average
- uid: TinyLife.Skills.Quality
  commentId: T:TinyLife.Skills.Quality
  parent: TinyLife.Skills
  href: TinyLife.Skills.Quality.html
  name: Quality
  nameWithType: Quality
  fullName: TinyLife.Skills.Quality
- uid: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  commentId: M:TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnRandomQuality_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Random_System_Boolean_System_Collections_Generic_Dictionary_TinyLife_Skills_Quality_System_Single__
  name: OnRandomQuality(PersonLike, ActionInfo, bool, SkillType, Random, bool, Dictionary<Quality, float>)
  nameWithType: MapObject.OnRandomQuality(PersonLike, ActionInfo, bool, SkillType, Random, bool, Dictionary<Quality, float>)
  fullName: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, bool, TinyLife.Skills.SkillType, System.Random, bool, System.Collections.Generic.Dictionary<TinyLife.Skills.Quality, float>)
  nameWithType.vb: MapObject.OnRandomQuality(PersonLike, ActionInfo, Boolean, SkillType, Random, Boolean, Dictionary(Of Quality, Single))
  fullName.vb: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Skills.SkillType, System.Random, Boolean, System.Collections.Generic.Dictionary(Of TinyLife.Skills.Quality, Single))
  name.vb: OnRandomQuality(PersonLike, ActionInfo, Boolean, SkillType, Random, Boolean, Dictionary(Of Quality, Single))
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
    name: OnRandomQuality
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnRandomQuality_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Random_System_Boolean_System_Collections_Generic_Dictionary_TinyLife_Skills_Quality_System_Single__
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnRandomQuality(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Random,System.Boolean,System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single})
    name: OnRandomQuality
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnRandomQuality_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Random_System_Boolean_System_Collections_Generic_Dictionary_TinyLife_Skills_Quality_System_Single__
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: TinyLife.Objects.Furniture.OnRandomQuality*
  commentId: Overload:TinyLife.Objects.Furniture.OnRandomQuality
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnRandomQuality_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionInfo_System_Boolean_TinyLife_Skills_SkillType_System_Random_System_Boolean_System_Collections_Generic_Dictionary_TinyLife_Skills_Quality_System_Single__
  name: OnRandomQuality
  nameWithType: Furniture.OnRandomQuality
  fullName: TinyLife.Objects.Furniture.OnRandomQuality
- uid: System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}
  commentId: T:System.Collections.Generic.Dictionary{TinyLife.Skills.Quality,System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Quality, float>
  nameWithType: Dictionary<Quality, float>
  fullName: System.Collections.Generic.Dictionary<TinyLife.Skills.Quality, float>
  nameWithType.vb: Dictionary(Of Quality, Single)
  fullName.vb: System.Collections.Generic.Dictionary(Of TinyLife.Skills.Quality, Single)
  name.vb: Dictionary(Of Quality, Single)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.Quality
    name: Quality
    href: TinyLife.Skills.Quality.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.ObjectCategory.NonColliding
  commentId: F:TinyLife.Objects.ObjectCategory.NonColliding
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_NonColliding
  name: NonColliding
  nameWithType: ObjectCategory.NonColliding
  fullName: TinyLife.Objects.ObjectCategory.NonColliding
- uid: TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point,System.Int32)
  commentId: M:TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point,System.Int32)
  isExternal: true
  href: TinyLife.World.Map.html#TinyLife_World_Map_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Point_System_Int32_
  name: MarkDirtyForPathfinding(Point, int)
  nameWithType: Map.MarkDirtyForPathfinding(Point, int)
  fullName: TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point, int)
  nameWithType.vb: Map.MarkDirtyForPathfinding(Point, Integer)
  fullName.vb: TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point, Integer)
  name.vb: MarkDirtyForPathfinding(Point, Integer)
  spec.csharp:
  - uid: TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point,System.Int32)
    name: MarkDirtyForPathfinding
    href: TinyLife.World.Map.html#TinyLife_World_Map_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Point_System_Int32_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Point,System.Int32)
    name: MarkDirtyForPathfinding
    href: TinyLife.World.Map.html#TinyLife_World_Map_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Point_System_Int32_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.Objects.MapObject.IsFreeSpot(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Objects.MapObject.IsFreeSpot(Microsoft.Xna.Framework.Point)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_IsFreeSpot_Microsoft_Xna_Framework_Point_
  name: IsFreeSpot(Point)
  nameWithType: MapObject.IsFreeSpot(Point)
  fullName: TinyLife.Objects.MapObject.IsFreeSpot(Microsoft.Xna.Framework.Point)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.IsFreeSpot(Microsoft.Xna.Framework.Point)
    name: IsFreeSpot
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_IsFreeSpot_Microsoft_Xna_Framework_Point_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.IsFreeSpot(Microsoft.Xna.Framework.Point)
    name: IsFreeSpot
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_IsFreeSpot_Microsoft_Xna_Framework_Point_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: TinyLife.Objects.Furniture.IsFreeSpot*
  commentId: Overload:TinyLife.Objects.Furniture.IsFreeSpot
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_IsFreeSpot_Microsoft_Xna_Framework_Point_
  name: IsFreeSpot
  nameWithType: Furniture.IsFreeSpot
  fullName: TinyLife.Objects.Furniture.IsFreeSpot
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: TinyLife.World.Household
  commentId: T:TinyLife.World.Household
  parent: TinyLife.World
  href: TinyLife.World.Household.html
  name: Household
  nameWithType: Household
  fullName: TinyLife.World.Household
- uid: TinyLife.Objects.MapObject.ResetToStatic(System.Boolean,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.ResetToStatic(System.Boolean,System.Boolean)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ResetToStatic_System_Boolean_System_Boolean_
  name: ResetToStatic(bool, bool)
  nameWithType: MapObject.ResetToStatic(bool, bool)
  fullName: TinyLife.Objects.MapObject.ResetToStatic(bool, bool)
  nameWithType.vb: MapObject.ResetToStatic(Boolean, Boolean)
  fullName.vb: TinyLife.Objects.MapObject.ResetToStatic(Boolean, Boolean)
  name.vb: ResetToStatic(Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.ResetToStatic(System.Boolean,System.Boolean)
    name: ResetToStatic
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ResetToStatic_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.ResetToStatic(System.Boolean,System.Boolean)
    name: ResetToStatic
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ResetToStatic_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Furniture.ResetToStatic*
  commentId: Overload:TinyLife.Objects.Furniture.ResetToStatic
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ResetToStatic_System_Boolean_System_Boolean_
  name: ResetToStatic
  nameWithType: Furniture.ResetToStatic
  fullName: TinyLife.Objects.Furniture.ResetToStatic
- uid: TinyLife.Actions.ActionType.TypeSettings.Categories
  commentId: P:TinyLife.Actions.ActionType.TypeSettings.Categories
  href: TinyLife.Actions.ActionType.TypeSettings.html#TinyLife_Actions_ActionType_TypeSettings_Categories
  name: Categories
  nameWithType: ActionType.TypeSettings.Categories
  fullName: TinyLife.Actions.ActionType.TypeSettings.Categories
- uid: TinyLife.Objects.ObjectCategory.LandlinePhone
  commentId: F:TinyLife.Objects.ObjectCategory.LandlinePhone
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_LandlinePhone
  name: LandlinePhone
  nameWithType: ObjectCategory.LandlinePhone
  fullName: TinyLife.Objects.ObjectCategory.LandlinePhone
- uid: TinyLife.Objects.ObjectCategory.Self
  commentId: F:TinyLife.Objects.ObjectCategory.Self
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_Self
  name: Self
  nameWithType: ObjectCategory.Self
  fullName: TinyLife.Objects.ObjectCategory.Self
- uid: TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
  commentId: M:TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ModifyActionCategories_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_System_Collections_Generic_List_System_String__
  name: ModifyActionCategories(ActionType, ActionInfo, bool, List<string>)
  nameWithType: MapObject.ModifyActionCategories(ActionType, ActionInfo, bool, List<string>)
  fullName: TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool, System.Collections.Generic.List<string>)
  nameWithType.vb: MapObject.ModifyActionCategories(ActionType, ActionInfo, Boolean, List(Of String))
  fullName.vb: TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean, System.Collections.Generic.List(Of String))
  name.vb: ModifyActionCategories(ActionType, ActionInfo, Boolean, List(Of String))
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
    name: ModifyActionCategories
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ModifyActionCategories_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_System_Collections_Generic_List_System_String__
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.ModifyActionCategories(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Collections.Generic.List{System.String})
    name: ModifyActionCategories
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_ModifyActionCategories_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_System_Collections_Generic_List_System_String__
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: TinyLife.Objects.Furniture.ModifyActionCategories*
  commentId: Overload:TinyLife.Objects.Furniture.ModifyActionCategories
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ModifyActionCategories_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Boolean_System_Collections_Generic_List_System_String__
  name: ModifyActionCategories
  nameWithType: Furniture.ModifyActionCategories
  fullName: TinyLife.Objects.Furniture.ModifyActionCategories
- uid: TinyLife.Objects.PersonLike.Portrait
  commentId: P:TinyLife.Objects.PersonLike.Portrait
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Portrait
  name: Portrait
  nameWithType: PersonLike.Portrait
  fullName: TinyLife.Objects.PersonLike.Portrait
- uid: TinyLife.Objects.MapObject.DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:TinyLife.Objects.MapObject.DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawIcon_MLEM_Ui_Elements_Element_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  name: DrawIcon(Element, GameTime, SpriteBatch)
  nameWithType: MapObject.DrawIcon(Element, GameTime, SpriteBatch)
  fullName: TinyLife.Objects.MapObject.DrawIcon(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
    name: DrawIcon
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawIcon_MLEM_Ui_Elements_Element_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  - name: (
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.DrawIcon(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
    name: DrawIcon
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_DrawIcon_MLEM_Ui_Elements_Element_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  - name: (
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: )
- uid: TinyLife.Objects.Furniture.DrawIcon*
  commentId: Overload:TinyLife.Objects.Furniture.DrawIcon
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_DrawIcon_MLEM_Ui_Elements_Element_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  name: DrawIcon
  nameWithType: Furniture.DrawIcon
  fullName: TinyLife.Objects.Furniture.DrawIcon
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)
  commentId: M:TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)
  href: TinyLife.World.Map.html#TinyLife_World_Map_RemoveObject_TinyLife_Objects_MapObject_
  name: RemoveObject(MapObject)
  nameWithType: Map.RemoveObject(MapObject)
  fullName: TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)
  spec.csharp:
  - uid: TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)
    name: RemoveObject
    href: TinyLife.World.Map.html#TinyLife_World_Map_RemoveObject_TinyLife_Objects_MapObject_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.RemoveObject(TinyLife.Objects.MapObject)
    name: RemoveObject
    href: TinyLife.World.Map.html#TinyLife_World_Map_RemoveObject_TinyLife_Objects_MapObject_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
- uid: TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)
  commentId: M:TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)
  href: TinyLife.World.Map.html#TinyLife_World_Map_AddObject_TinyLife_Objects_MapObject_
  name: AddObject(MapObject)
  nameWithType: Map.AddObject(MapObject)
  fullName: TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)
  spec.csharp:
  - uid: TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)
    name: AddObject
    href: TinyLife.World.Map.html#TinyLife_World_Map_AddObject_TinyLife_Objects_MapObject_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.AddObject(TinyLife.Objects.MapObject)
    name: AddObject
    href: TinyLife.World.Map.html#TinyLife_World_Map_AddObject_TinyLife_Objects_MapObject_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: )
- uid: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  commentId: M:TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_MoveToMap_TinyLife_World_Map_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Nullable_System_Single__
  name: MoveToMap(Map, Vector2?, float?)
  nameWithType: MapObject.MoveToMap(Map, Vector2?, float?)
  fullName: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, float?)
  nameWithType.vb: MapObject.MoveToMap(Map, Vector2?, Single?)
  fullName.vb: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, Single?)
  name.vb: MoveToMap(Map, Vector2?, Single?)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
    name: MoveToMap
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_MoveToMap_TinyLife_World_Map_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Nullable_System_Single__
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.MoveToMap(TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single})
    name: MoveToMap
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_MoveToMap_TinyLife_World_Map_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Nullable_System_Single__
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: )
- uid: TinyLife.Objects.Furniture.MoveToMap*
  commentId: Overload:TinyLife.Objects.Furniture.MoveToMap
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_MoveToMap_TinyLife_World_Map_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Nullable_System_Single__
  name: MoveToMap
  nameWithType: Furniture.MoveToMap
  fullName: TinyLife.Objects.Furniture.MoveToMap
- uid: System.Nullable{Microsoft.Xna.Framework.Vector2}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: Microsoft.Xna.Framework.Vector2?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Vector2_System_Single_
  name: MarkDirtyForPathfinding(Vector2, float)
  nameWithType: Furniture.MarkDirtyForPathfinding(Vector2, float)
  fullName: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2, float)
  nameWithType.vb: Furniture.MarkDirtyForPathfinding(Vector2, Single)
  fullName.vb: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2, Single)
  name.vb: MarkDirtyForPathfinding(Vector2, Single)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
    name: MarkDirtyForPathfinding
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Vector2_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.MarkDirtyForPathfinding(Microsoft.Xna.Framework.Vector2,System.Single)
    name: MarkDirtyForPathfinding
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Vector2_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnPositionChanged_Microsoft_Xna_Framework_Vector2_System_Single_
  name: OnPositionChanged(Vector2, float)
  nameWithType: MapObject.OnPositionChanged(Vector2, float)
  fullName: TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2, float)
  nameWithType.vb: MapObject.OnPositionChanged(Vector2, Single)
  fullName.vb: TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2, Single)
  name.vb: OnPositionChanged(Vector2, Single)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
    name: OnPositionChanged
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnPositionChanged_Microsoft_Xna_Framework_Vector2_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnPositionChanged(Microsoft.Xna.Framework.Vector2,System.Single)
    name: OnPositionChanged
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_OnPositionChanged_Microsoft_Xna_Framework_Vector2_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.Furniture.OnPositionChanged*
  commentId: Overload:TinyLife.Objects.Furniture.OnPositionChanged
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnPositionChanged_Microsoft_Xna_Framework_Vector2_System_Single_
  name: OnPositionChanged
  nameWithType: Furniture.OnPositionChanged
  fullName: TinyLife.Objects.Furniture.OnPositionChanged
- uid: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Draw_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  name: Draw(GameTime, object, Vector2, Color?, List<Item>)
  nameWithType: Furniture.Draw(GameTime, object, Vector2, Color?, List<StaticSpriteBatch.Item>)
  fullName: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime, object, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, System.Collections.Generic.List<MLEM.Graphics.StaticSpriteBatch.Item>)
  nameWithType.vb: Furniture.Draw(GameTime, Object, Vector2, Color?, List(Of StaticSpriteBatch.Item))
  fullName.vb: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime, Object, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color?, System.Collections.Generic.List(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: Draw(GameTime, Object, Vector2, Color?, List(Of Item))
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
    name: Draw
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Draw_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,System.Object,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color},System.Collections.Generic.List{MLEM.Graphics.StaticSpriteBatch.Item})
    name: Draw
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Draw_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
  - name: )
- uid: TinyLife.Objects.Furniture.CustomPrice
  commentId: F:TinyLife.Objects.Furniture.CustomPrice
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_CustomPrice
  name: CustomPrice
  nameWithType: Furniture.CustomPrice
  fullName: TinyLife.Objects.Furniture.CustomPrice
- uid: TinyLife.Objects.Furniture.Type
  commentId: F:TinyLife.Objects.Furniture.Type
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Type
  name: Type
  nameWithType: Furniture.Type
  fullName: TinyLife.Objects.Furniture.Type
- uid: TinyLife.Objects.Furniture.Quality
  commentId: F:TinyLife.Objects.Furniture.Quality
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_Quality
  name: Quality
  nameWithType: Furniture.Quality
  fullName: TinyLife.Objects.Furniture.Quality
- uid: TinyLife.Objects.Furniture.GetPrice*
  commentId: Overload:TinyLife.Objects.Furniture.GetPrice
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetPrice
  name: GetPrice
  nameWithType: Furniture.GetPrice
  fullName: TinyLife.Objects.Furniture.GetPrice
- uid: TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_ElectricityRating
  name: ElectricityRating
  nameWithType: FurnitureType.TypeSettings.ElectricityRating
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.ElectricityRating
- uid: TinyLife.Objects.Furniture.OnGetDescription
  commentId: E:TinyLife.Objects.Furniture.OnGetDescription
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnGetDescription
  name: OnGetDescription
  nameWithType: Furniture.OnGetDescription
  fullName: TinyLife.Objects.Furniture.OnGetDescription
- uid: TinyLife.Objects.Furniture.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  commentId: M:TinyLife.Objects.Furniture.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetHoverInfo_MLEM_Ui_Elements_Tooltip_
  name: GetHoverInfo(Tooltip)
  nameWithType: Furniture.GetHoverInfo(Tooltip)
  fullName: TinyLife.Objects.Furniture.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
    name: GetHoverInfo
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetHoverInfo_MLEM_Ui_Elements_Tooltip_
  - name: (
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetHoverInfo(MLEM.Ui.Elements.Tooltip)
    name: GetHoverInfo
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetHoverInfo_MLEM_Ui_Elements_Tooltip_
  - name: (
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: )
- uid: TinyLife.Objects.Furniture.GetDescription*
  commentId: Overload:TinyLife.Objects.Furniture.GetDescription
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDescription_System_Collections_Generic_List_System_String__System_Boolean_
  name: GetDescription
  nameWithType: Furniture.GetDescription
  fullName: TinyLife.Objects.Furniture.GetDescription
- uid: TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_DecorativeRating
  name: DecorativeRating
  nameWithType: FurnitureType.TypeSettings.DecorativeRating
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.DecorativeRating
- uid: TinyLife.Objects.Furniture.GetDecorativeRating*
  commentId: Overload:TinyLife.Objects.Furniture.GetDecorativeRating
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDecorativeRating_TinyLife_World_Room_
  name: GetDecorativeRating
  nameWithType: Furniture.GetDecorativeRating
  fullName: TinyLife.Objects.Furniture.GetDecorativeRating
- uid: TinyLife.World.Room
  commentId: T:TinyLife.World.Room
  parent: TinyLife.World
  href: TinyLife.World.Room.html
  name: Room
  nameWithType: Room
  fullName: TinyLife.World.Room
- uid: TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ActionUpdate_TinyLife_Actions_Action_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_System_Boolean_
  name: ActionUpdate(Action, GameTime, TimeSpan, float, bool)
  nameWithType: Furniture.ActionUpdate(Action, GameTime, TimeSpan, float, bool)
  fullName: TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action, Microsoft.Xna.Framework.GameTime, System.TimeSpan, float, bool)
  nameWithType.vb: Furniture.ActionUpdate(Action, GameTime, TimeSpan, Single, Boolean)
  fullName.vb: TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action, Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single, Boolean)
  name.vb: ActionUpdate(Action, GameTime, TimeSpan, Single, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
    name: ActionUpdate
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ActionUpdate_TinyLife_Actions_Action_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
    name: ActionUpdate
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ActionUpdate_TinyLife_Actions_Action_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Furniture.GetDirty*
  commentId: Overload:TinyLife.Objects.Furniture.GetDirty
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetDirty_TinyLife_Objects_PersonLike_System_TimeSpan_
  name: GetDirty
  nameWithType: Furniture.GetDirty
  fullName: TinyLife.Objects.Furniture.GetDirty
- uid: TinyLife.Goals.GoalTrigger.FurnitureCreated
  commentId: F:TinyLife.Goals.GoalTrigger.FurnitureCreated
  parent: TinyLife.Goals.GoalTrigger
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_FurnitureCreated
  name: FurnitureCreated
  nameWithType: GoalTrigger.FurnitureCreated
  fullName: TinyLife.Goals.GoalTrigger.FurnitureCreated
- uid: TinyLife.Objects.Furniture.SetCreator*
  commentId: Overload:TinyLife.Objects.Furniture.SetCreator
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_PersonLike_System_Boolean_
  name: SetCreator
  nameWithType: Furniture.SetCreator
  fullName: TinyLife.Objects.Furniture.SetCreator
- uid: TinyLife.Goals.GoalTrigger
  commentId: T:TinyLife.Goals.GoalTrigger
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalTrigger.html
  name: GoalTrigger
  nameWithType: GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: TinyLife.Tools.FurniturePlacer
  commentId: T:TinyLife.Tools.FurniturePlacer
  parent: TinyLife.Tools
  href: TinyLife.Tools.FurniturePlacer.html
  name: FurniturePlacer
  nameWithType: FurniturePlacer
  fullName: TinyLife.Tools.FurniturePlacer
- uid: TinyLife.PersonalityType
  commentId: T:TinyLife.PersonalityType
  parent: TinyLife
  href: TinyLife.PersonalityType.html
  name: PersonalityType
  nameWithType: PersonalityType
  fullName: TinyLife.PersonalityType
- uid: TinyLife.Objects.Furniture.OnPlacedInBuildMode*
  commentId: Overload:TinyLife.Objects.Furniture.OnPlacedInBuildMode
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnPlacedInBuildMode_TinyLife_Tools_FurniturePlacer_System_Boolean_TinyLife_Tools_UndoableAction_
  name: OnPlacedInBuildMode
  nameWithType: Furniture.OnPlacedInBuildMode
  fullName: TinyLife.Objects.Furniture.OnPlacedInBuildMode
- uid: TinyLife.Tools.UndoableAction
  commentId: T:TinyLife.Tools.UndoableAction
  parent: TinyLife.Tools
  href: TinyLife.Tools.UndoableAction.html
  name: UndoableAction
  nameWithType: UndoableAction
  fullName: TinyLife.Tools.UndoableAction
- uid: TinyLife.Tools
  commentId: N:TinyLife.Tools
  href: TinyLife.html
  name: TinyLife.Tools
  nameWithType: TinyLife.Tools
  fullName: TinyLife.Tools
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Tools
    name: Tools
    href: TinyLife.Tools.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Tools
    name: Tools
    href: TinyLife.Tools.html
- uid: TinyLife.Objects.Furniture.GetWallsInTheWay*
  commentId: Overload:TinyLife.Objects.Furniture.GetWallsInTheWay
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetWallsInTheWay__1_Microsoft_Xna_Framework_Vector2_System_Single_MLEM_Maths_Direction2_System_Single_System_Collections_Generic_ICollection_TinyLife_Objects_WallLike__
  name: GetWallsInTheWay
  nameWithType: Furniture.GetWallsInTheWay
  fullName: TinyLife.Objects.Furniture.GetWallsInTheWay
- uid: System.Collections.Generic.ICollection{TinyLife.Objects.WallLike}
  commentId: T:System.Collections.Generic.ICollection{TinyLife.Objects.WallLike}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<WallLike>
  nameWithType: ICollection<WallLike>
  fullName: System.Collections.Generic.ICollection<TinyLife.Objects.WallLike>
  nameWithType.vb: ICollection(Of WallLike)
  fullName.vb: System.Collections.Generic.ICollection(Of TinyLife.Objects.WallLike)
  name.vb: ICollection(Of WallLike)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: TinyLife.Objects.WallLike
    name: WallLike
    href: TinyLife.Objects.WallLike.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.WallLike
    name: WallLike
    href: TinyLife.Objects.WallLike.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.ObjectCategory.ObstructedByRoofs
  commentId: F:TinyLife.Objects.ObjectCategory.ObstructedByRoofs
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_ObstructedByRoofs
  name: ObstructedByRoofs
  nameWithType: ObjectCategory.ObstructedByRoofs
  fullName: TinyLife.Objects.ObjectCategory.ObstructedByRoofs
- uid: TinyLife.Objects.Furniture.GetRoofingInTheWay*
  commentId: Overload:TinyLife.Objects.Furniture.GetRoofingInTheWay
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetRoofingInTheWay_Microsoft_Xna_Framework_Vector2_System_Int32_MLEM_Maths_Direction2_System_Single_System_Collections_Generic_ICollection_TinyLife_World_Roof__
  name: GetRoofingInTheWay
  nameWithType: Furniture.GetRoofingInTheWay
  fullName: TinyLife.Objects.Furniture.GetRoofingInTheWay
- uid: System.Collections.Generic.ICollection{TinyLife.World.Roof}
  commentId: T:System.Collections.Generic.ICollection{TinyLife.World.Roof}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<Roof>
  nameWithType: ICollection<Roof>
  fullName: System.Collections.Generic.ICollection<TinyLife.World.Roof>
  nameWithType.vb: ICollection(Of Roof)
  fullName.vb: System.Collections.Generic.ICollection(Of TinyLife.World.Roof)
  name.vb: ICollection(Of Roof)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: TinyLife.World.Roof
    name: Roof
    href: TinyLife.World.Roof.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Roof
    name: Roof
    href: TinyLife.World.Roof.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{TinyLife.World.Roof}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.World.Roof}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Roof>
  nameWithType: IEnumerable<Roof>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.World.Roof>
  nameWithType.vb: IEnumerable(Of Roof)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.World.Roof)
  name.vb: IEnumerable(Of Roof)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.World.Roof
    name: Roof
    href: TinyLife.World.Roof.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Roof
    name: Roof
    href: TinyLife.World.Roof.html
  - name: )
- uid: TinyLife.Objects.AppliedUpgrade
  commentId: T:TinyLife.Objects.AppliedUpgrade
  parent: TinyLife.Objects
  href: TinyLife.Objects.AppliedUpgrade.html
  name: AppliedUpgrade
  nameWithType: AppliedUpgrade
  fullName: TinyLife.Objects.AppliedUpgrade
- uid: TinyLife.Objects.Upgrade
  commentId: T:TinyLife.Objects.Upgrade
  parent: TinyLife.Objects
  href: TinyLife.Objects.Upgrade.html
  name: Upgrade
  nameWithType: Upgrade
  fullName: TinyLife.Objects.Upgrade
- uid: TinyLife.Objects.Furniture.GetAppliedUpgrade*
  commentId: Overload:TinyLife.Objects.Furniture.GetAppliedUpgrade
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetAppliedUpgrade_TinyLife_Objects_Upgrade_
  name: GetAppliedUpgrade
  nameWithType: Furniture.GetAppliedUpgrade
  fullName: TinyLife.Objects.Furniture.GetAppliedUpgrade
- uid: TinyLife.Objects.Furniture.AppliedUpgrades
  commentId: F:TinyLife.Objects.Furniture.AppliedUpgrades
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_AppliedUpgrades
  name: AppliedUpgrades
  nameWithType: Furniture.AppliedUpgrades
  fullName: TinyLife.Objects.Furniture.AppliedUpgrades
- uid: TinyLife.Objects.Furniture.OnAppliedUpgrade
  commentId: E:TinyLife.Objects.Furniture.OnAppliedUpgrade
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnAppliedUpgrade
  name: OnAppliedUpgrade
  nameWithType: Furniture.OnAppliedUpgrade
  fullName: TinyLife.Objects.Furniture.OnAppliedUpgrade
- uid: TinyLife.Objects.Furniture.ApplyUpgrade*
  commentId: Overload:TinyLife.Objects.Furniture.ApplyUpgrade
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_ApplyUpgrade_TinyLife_Objects_AppliedUpgrade_
  name: ApplyUpgrade
  nameWithType: Furniture.ApplyUpgrade
  fullName: TinyLife.Objects.Furniture.ApplyUpgrade
- uid: TinyLife.Objects.Furniture.HasFullUpgrade*
  commentId: Overload:TinyLife.Objects.Furniture.HasFullUpgrade
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_HasFullUpgrade_TinyLife_Objects_Upgrade_
  name: HasFullUpgrade
  nameWithType: Furniture.HasFullUpgrade
  fullName: TinyLife.Objects.Furniture.HasFullUpgrade
- uid: TinyLife.Objects.Furniture.NotifyNeighbors
  commentId: M:TinyLife.Objects.Furniture.NotifyNeighbors
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_NotifyNeighbors
  name: NotifyNeighbors()
  nameWithType: Furniture.NotifyNeighbors()
  fullName: TinyLife.Objects.Furniture.NotifyNeighbors()
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.NotifyNeighbors
    name: NotifyNeighbors
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_NotifyNeighbors
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.NotifyNeighbors
    name: NotifyNeighbors
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_NotifyNeighbors
  - name: (
  - name: )
- uid: TinyLife.Objects.Furniture.OnNeighborChanged*
  commentId: Overload:TinyLife.Objects.Furniture.OnNeighborChanged
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnNeighborChanged_TinyLife_Objects_Furniture_
  name: OnNeighborChanged
  nameWithType: Furniture.OnNeighborChanged
  fullName: TinyLife.Objects.Furniture.OnNeighborChanged
- uid: TinyLife.Objects.Furniture.MarkDirtyForPathfinding*
  commentId: Overload:TinyLife.Objects.Furniture.MarkDirtyForPathfinding
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_MarkDirtyForPathfinding_Microsoft_Xna_Framework_Vector2_System_Single_
  name: MarkDirtyForPathfinding
  nameWithType: Furniture.MarkDirtyForPathfinding
  fullName: TinyLife.Objects.Furniture.MarkDirtyForPathfinding
- uid: TinyLife.Objects.FurnitureType.DirtyTextures
  commentId: F:TinyLife.Objects.FurnitureType.DirtyTextures
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_DirtyTextures
  name: DirtyTextures
  nameWithType: FurnitureType.DirtyTextures
  fullName: TinyLife.Objects.FurnitureType.DirtyTextures
- uid: System.NullReferenceException
  commentId: T:System.NullReferenceException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullreferenceexception
  name: NullReferenceException
  nameWithType: NullReferenceException
  fullName: System.NullReferenceException
- uid: TinyLife.Objects.Furniture.DrawDirtyOverlay*
  commentId: Overload:TinyLife.Objects.Furniture.DrawDirtyOverlay
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_DrawDirtyOverlay_Microsoft_Xna_Framework_GameTime_System_Object_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Vector2_System_Nullable_Microsoft_Xna_Framework_Color__MLEM_Maths_Direction2_System_Int32___System_Single_System_Boolean_TinyLife_Objects_ParentInfo_System_Single_System_Collections_Generic_List_MLEM_Graphics_StaticSpriteBatch_Item__
  name: DrawDirtyOverlay
  nameWithType: Furniture.DrawDirtyOverlay
  fullName: TinyLife.Objects.Furniture.DrawDirtyOverlay
- uid: TinyLife.Objects.Furniture.DrawUi*
  commentId: Overload:TinyLife.Objects.Furniture.DrawUi
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_DrawUi_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_MLEM_Ui_Elements_Element_System_Single_System_Int32___
  name: DrawUi
  nameWithType: Furniture.DrawUi
  fullName: TinyLife.Objects.Furniture.DrawUi
- uid: TinyLife.Objects.ActionSpot
  commentId: T:TinyLife.Objects.ActionSpot
  parent: TinyLife.Objects
  href: TinyLife.Objects.ActionSpot.html
  name: ActionSpot
  nameWithType: ActionSpot
  fullName: TinyLife.Objects.ActionSpot
- uid: TinyLife.Objects.ActionSpot.CategoryRestriction
  commentId: F:TinyLife.Objects.ActionSpot.CategoryRestriction
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_CategoryRestriction
  name: CategoryRestriction
  nameWithType: ActionSpot.CategoryRestriction
  fullName: TinyLife.Objects.ActionSpot.CategoryRestriction
- uid: TinyLife.Objects.PersonLike.VisuallyOccupiedSpot
  commentId: P:TinyLife.Objects.PersonLike.VisuallyOccupiedSpot
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_VisuallyOccupiedSpot
  name: VisuallyOccupiedSpot
  nameWithType: PersonLike.VisuallyOccupiedSpot
  fullName: TinyLife.Objects.PersonLike.VisuallyOccupiedSpot
- uid: TinyLife.Objects.Furniture.GetOccupants*
  commentId: Overload:TinyLife.Objects.Furniture.GetOccupants
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetOccupants_TinyLife_Objects_ObjectCategory_System_Boolean_
  name: GetOccupants
  nameWithType: Furniture.GetOccupants
  fullName: TinyLife.Objects.Furniture.GetOccupants
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<PersonLike>
  nameWithType: IEnumerable<PersonLike>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.PersonLike>
  nameWithType.vb: IEnumerable(Of PersonLike)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.PersonLike)
  name.vb: IEnumerable(Of PersonLike)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
- uid: TinyLife.Objects.Furniture.GetFreeActionSpots*
  commentId: Overload:TinyLife.Objects.Furniture.GetFreeActionSpots
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetFreeActionSpots_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetFreeActionSpots
  nameWithType: Furniture.GetFreeActionSpots
  fullName: TinyLife.Objects.Furniture.GetFreeActionSpots
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(ActionSpot Spot, Direction2 Dir)>
  nameWithType: IEnumerable<(ActionSpot Spot, Direction2 Dir)>
  fullName: System.Collections.Generic.IEnumerable<(TinyLife.Objects.ActionSpot Spot, MLEM.Maths.Direction2 Dir)>
  nameWithType.vb: IEnumerable(Of (Spot As ActionSpot, Dir As Direction2))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (Spot As TinyLife.Objects.ActionSpot, Dir As MLEM.Maths.Direction2))
  name.vb: IEnumerable(Of (Spot As ActionSpot, Dir As Direction2))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}.Spot
    name: Spot
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.actionspot,mlem.maths.direction2-.spot
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}.Dir
    name: Dir
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.actionspot,mlem.maths.direction2-.dir
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}.Spot
    name: Spot
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.actionspot,mlem.maths.direction2-.spot
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}.Dir
    name: Dir
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.actionspot,mlem.maths.direction2-.dir
  - name: " "
  - name: As
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
  - name: )
- uid: TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetFreeActionSpots_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetFreeActionSpots(PersonLike, ObjectCategory)
  nameWithType: Furniture.GetFreeActionSpots(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpots
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetFreeActionSpots_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpots
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetFreeActionSpots_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Objects.Furniture.GetFreeActionSpot*
  commentId: Overload:TinyLife.Objects.Furniture.GetFreeActionSpot
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetFreeActionSpot_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetFreeActionSpot
  nameWithType: Furniture.GetFreeActionSpot
  fullName: TinyLife.Objects.Furniture.GetFreeActionSpot
- uid: System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}
  commentId: T:System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}
  parent: System
  definition: System.ValueTuple`2
  href: TinyLife.Objects.ActionSpot.html
  name: (ActionSpot Spot, Direction2 Dir)
  nameWithType: (ActionSpot Spot, Direction2 Dir)
  fullName: (TinyLife.Objects.ActionSpot Spot, MLEM.Maths.Direction2 Dir)
  nameWithType.vb: (Spot As ActionSpot, Dir As Direction2)
  fullName.vb: (Spot As TinyLife.Objects.ActionSpot, Dir As MLEM.Maths.Direction2)
  name.vb: (Spot As ActionSpot, Dir As Direction2)
  spec.csharp:
  - name: (
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}.Spot
    name: Spot
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.actionspot,mlem.maths.direction2-.spot
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}.Dir
    name: Dir
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.actionspot,mlem.maths.direction2-.dir
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}.Spot
    name: Spot
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.actionspot,mlem.maths.direction2-.spot
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.ActionSpot,MLEM.Maths.Direction2}.Dir
    name: Dir
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.actionspot,mlem.maths.direction2-.dir
  - name: " "
  - name: As
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Actions.ActionInfo.ActionLocation
  commentId: F:TinyLife.Actions.ActionInfo.ActionLocation
  href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_ActionLocation
  name: ActionLocation
  nameWithType: ActionInfo.ActionLocation
  fullName: TinyLife.Actions.ActionInfo.ActionLocation
- uid: MLEM.Maths.Direction2.None
  commentId: F:MLEM.Maths.Direction2.None
  isExternal: true
  name: None
  nameWithType: Direction2.None
  fullName: MLEM.Maths.Direction2.None
- uid: TinyLife.Objects.Furniture.GetActionSpotInfo*
  commentId: Overload:TinyLife.Objects.Furniture.GetActionSpotInfo
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetActionSpotInfo_TinyLife_Objects_PersonLike_TinyLife_Objects_ActionSpot_MLEM_Maths_Direction2_
  name: GetActionSpotInfo
  nameWithType: Furniture.GetActionSpotInfo
  fullName: TinyLife.Objects.Furniture.GetActionSpotInfo
- uid: TinyLife.Objects.Furniture.GetFreeObjectSpot*
  commentId: Overload:TinyLife.Objects.Furniture.GetFreeObjectSpot
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetFreeObjectSpot_TinyLife_Objects_FurnitureType_System_Nullable_Microsoft_Xna_Framework_Vector2__
  name: GetFreeObjectSpot
  nameWithType: Furniture.GetFreeObjectSpot
  fullName: TinyLife.Objects.Furniture.GetFreeObjectSpot
- uid: TinyLife.Objects.Furniture.GetFreeObjectSpots*
  commentId: Overload:TinyLife.Objects.Furniture.GetFreeObjectSpots
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetFreeObjectSpots_TinyLife_Objects_FurnitureType_System_Nullable_Microsoft_Xna_Framework_Vector2__
  name: GetFreeObjectSpots
  nameWithType: Furniture.GetFreeObjectSpots
  fullName: TinyLife.Objects.Furniture.GetFreeObjectSpots
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.ObjectSpot}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.ObjectSpot}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ObjectSpot>
  nameWithType: IEnumerable<ObjectSpot>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.ObjectSpot>
  nameWithType.vb: IEnumerable(Of ObjectSpot)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.ObjectSpot)
  name.vb: IEnumerable(Of ObjectSpot)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: )
- uid: TinyLife.Objects.Furniture.SetChild(TinyLife.Objects.ObjectSpot,TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2})
  commentId: M:TinyLife.Objects.Furniture.SetChild(TinyLife.Objects.ObjectSpot,TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2})
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetChild_TinyLife_Objects_ObjectSpot_TinyLife_Objects_Furniture_System_Nullable_MLEM_Maths_Direction2__
  name: SetChild(ObjectSpot, Furniture, Direction2?)
  nameWithType: Furniture.SetChild(ObjectSpot, Furniture, Direction2?)
  fullName: TinyLife.Objects.Furniture.SetChild(TinyLife.Objects.ObjectSpot, TinyLife.Objects.Furniture, MLEM.Maths.Direction2?)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.SetChild(TinyLife.Objects.ObjectSpot,TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2})
    name: SetChild
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetChild_TinyLife_Objects_ObjectSpot_TinyLife_Objects_Furniture_System_Nullable_MLEM_Maths_Direction2__
  - name: (
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.SetChild(TinyLife.Objects.ObjectSpot,TinyLife.Objects.Furniture,System.Nullable{MLEM.Maths.Direction2})
    name: SetChild
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetChild_TinyLife_Objects_ObjectSpot_TinyLife_Objects_Furniture_System_Nullable_MLEM_Maths_Direction2__
  - name: (
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: '?'
  - name: )
- uid: TinyLife.Objects.Furniture.SetParent*
  commentId: Overload:TinyLife.Objects.Furniture.SetParent
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetParent_TinyLife_Objects_Furniture_TinyLife_Objects_ObjectSpot_
  name: SetParent
  nameWithType: Furniture.SetParent
  fullName: TinyLife.Objects.Furniture.SetParent
- uid: TinyLife.Objects.Furniture.GetChildren``1
  commentId: M:TinyLife.Objects.Furniture.GetChildren``1
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetChildren__1
  name: GetChildren<T>()
  nameWithType: Furniture.GetChildren<T>()
  fullName: TinyLife.Objects.Furniture.GetChildren<T>()
  nameWithType.vb: Furniture.GetChildren(Of T)()
  fullName.vb: TinyLife.Objects.Furniture.GetChildren(Of T)()
  name.vb: GetChildren(Of T)()
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetChildren``1
    name: GetChildren
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetChildren__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetChildren``1
    name: GetChildren
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetChildren__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: TinyLife.Objects.Furniture.UnlinkParentsAndChildren*
  commentId: Overload:TinyLife.Objects.Furniture.UnlinkParentsAndChildren
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_UnlinkParentsAndChildren
  name: UnlinkParentsAndChildren
  nameWithType: Furniture.UnlinkParentsAndChildren
  fullName: TinyLife.Objects.Furniture.UnlinkParentsAndChildren
- uid: TinyLife.Objects.Furniture.UnlinkParentsAndChildren
  commentId: M:TinyLife.Objects.Furniture.UnlinkParentsAndChildren
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_UnlinkParentsAndChildren
  name: UnlinkParentsAndChildren()
  nameWithType: Furniture.UnlinkParentsAndChildren()
  fullName: TinyLife.Objects.Furniture.UnlinkParentsAndChildren()
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.UnlinkParentsAndChildren
    name: UnlinkParentsAndChildren
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_UnlinkParentsAndChildren
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.UnlinkParentsAndChildren
    name: UnlinkParentsAndChildren
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_UnlinkParentsAndChildren
  - name: (
  - name: )
- uid: TinyLife.Objects.Furniture.RemoveAndUnlink*
  commentId: Overload:TinyLife.Objects.Furniture.RemoveAndUnlink
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_RemoveAndUnlink
  name: RemoveAndUnlink
  nameWithType: Furniture.RemoveAndUnlink
  fullName: TinyLife.Objects.Furniture.RemoveAndUnlink
- uid: TinyLife.Objects.Furniture.GetChildren*
  commentId: Overload:TinyLife.Objects.Furniture.GetChildren
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetChildren__1
  name: GetChildren
  nameWithType: Furniture.GetChildren
  fullName: TinyLife.Objects.Furniture.GetChildren
- uid: TinyLife.Objects.Furniture.SetParent(TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot)
  commentId: M:TinyLife.Objects.Furniture.SetParent(TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot)
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetParent_TinyLife_Objects_Furniture_TinyLife_Objects_ObjectSpot_
  name: SetParent(Furniture, ObjectSpot)
  nameWithType: Furniture.SetParent(Furniture, ObjectSpot)
  fullName: TinyLife.Objects.Furniture.SetParent(TinyLife.Objects.Furniture, TinyLife.Objects.ObjectSpot)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.SetParent(TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot)
    name: SetParent
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetParent_TinyLife_Objects_Furniture_TinyLife_Objects_ObjectSpot_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.SetParent(TinyLife.Objects.Furniture,TinyLife.Objects.ObjectSpot)
    name: SetParent
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetParent_TinyLife_Objects_Furniture_TinyLife_Objects_ObjectSpot_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectSpot
    name: ObjectSpot
    href: TinyLife.Objects.ObjectSpot.html
  - name: )
- uid: TinyLife.Objects.Furniture.AddChild*
  commentId: Overload:TinyLife.Objects.Furniture.AddChild
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_AddChild__1_TinyLife_Objects_FurnitureType_MLEM_Maths_Direction2_System_Int32___System_Nullable_System_Guid__System_Nullable_Microsoft_Xna_Framework_Vector2__
  name: AddChild
  nameWithType: Furniture.AddChild
  fullName: TinyLife.Objects.Furniture.AddChild
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid?
  nameWithType: Guid?
  fullName: System.Guid?
  spec.csharp:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  spec.vb:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Nullable{MLEM.Maths.Direction2}
  commentId: T:System.Nullable{MLEM.Maths.Direction2}
  parent: System
  definition: System.Nullable`1
  name: Direction2?
  nameWithType: Direction2?
  fullName: MLEM.Maths.Direction2?
  spec.csharp:
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: '?'
- uid: TinyLife.Objects.Furniture.SetChild*
  commentId: Overload:TinyLife.Objects.Furniture.SetChild
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetChild__1_TinyLife_Objects_ObjectSpot_TinyLife_Objects_FurnitureType_System_Nullable_MLEM_Maths_Direction2__System_Int32___System_Nullable_System_Guid__
  name: SetChild
  nameWithType: Furniture.SetChild
  fullName: TinyLife.Objects.Furniture.SetChild
- uid: TinyLife.Objects.Furniture.RemoveChild*
  commentId: Overload:TinyLife.Objects.Furniture.RemoveChild
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_RemoveChild_TinyLife_Objects_Furniture_
  name: RemoveChild
  nameWithType: Furniture.RemoveChild
  fullName: TinyLife.Objects.Furniture.RemoveChild
- uid: TinyLife.Objects.Furniture.OnNeighborChanged(TinyLife.Objects.Furniture)
  commentId: M:TinyLife.Objects.Furniture.OnNeighborChanged(TinyLife.Objects.Furniture)
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnNeighborChanged_TinyLife_Objects_Furniture_
  name: OnNeighborChanged(Furniture)
  nameWithType: Furniture.OnNeighborChanged(Furniture)
  fullName: TinyLife.Objects.Furniture.OnNeighborChanged(TinyLife.Objects.Furniture)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.OnNeighborChanged(TinyLife.Objects.Furniture)
    name: OnNeighborChanged
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnNeighborChanged_TinyLife_Objects_Furniture_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.OnNeighborChanged(TinyLife.Objects.Furniture)
    name: OnNeighborChanged
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_OnNeighborChanged_TinyLife_Objects_Furniture_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
- uid: TinyLife.Objects.Furniture.NotifyNeighbors*
  commentId: Overload:TinyLife.Objects.Furniture.NotifyNeighbors
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_NotifyNeighbors
  name: NotifyNeighbors
  nameWithType: Furniture.NotifyNeighbors
  fullName: TinyLife.Objects.Furniture.NotifyNeighbors
- uid: TinyLife.Objects.Furniture.SetNewId*
  commentId: Overload:TinyLife.Objects.Furniture.SetNewId
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetNewId_System_Collections_Generic_IEnumerable_TinyLife_Objects_Furniture__
  name: SetNewId
  nameWithType: Furniture.SetNewId
  fullName: TinyLife.Objects.Furniture.SetNewId
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Furniture>
  nameWithType: IEnumerable<Furniture>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.Furniture>
  nameWithType.vb: IEnumerable(Of Furniture)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.Furniture)
  name.vb: IEnumerable(Of Furniture)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
