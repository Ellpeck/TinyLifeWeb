### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.ChoicePromptInfo.Option
  commentId: T:TinyLife.Actions.ChoicePromptInfo.Option
  id: ChoicePromptInfo.Option
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.ChoicePromptInfo.Option.#ctor(System.String,System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike},System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike},System.Func{TinyLife.Objects.PersonLike,System.Single})
  - TinyLife.Actions.ChoicePromptInfo.Option.#ctor(System.String,System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,System.Single})
  - TinyLife.Actions.ChoicePromptInfo.Option.#ctor(System.String,TinyLife.Emotions.EmotionType,TinyLife.Skills.SkillType,System.Single,System.Single,System.Single)
  - TinyLife.Actions.ChoicePromptInfo.Option.Execute(TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike,System.Boolean)
  - TinyLife.Actions.ChoicePromptInfo.Option.FailAction
  - TinyLife.Actions.ChoicePromptInfo.Option.Name
  - TinyLife.Actions.ChoicePromptInfo.Option.SuccessAction
  - TinyLife.Actions.ChoicePromptInfo.Option.SuccessChance
  langs:
  - csharp
  - vb
  name: ChoicePromptInfo.Option
  nameWithType: ChoicePromptInfo.Option
  fullName: TinyLife.Actions.ChoicePromptInfo.Option
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: An option is a possible action and outcome for a <xref href="TinyLife.Actions.ChoicePromptInfo" data-throw-if-not-resolved="false"></xref>. It is randomly chosen to be correct or incorrect, based on a multitude of factors that can be specified in the constructors.
  example: []
  syntax:
    content: public class ChoicePromptInfo.Option
    content.vb: Public Class ChoicePromptInfo.Option
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.ChoicePromptInfo.Option.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.ChoicePromptInfo.Option.Name
  commentId: F:TinyLife.Actions.ChoicePromptInfo.Option.Name
  id: Name
  parent: TinyLife.Actions.ChoicePromptInfo.Option
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ChoicePromptInfo.Option.Name
  fullName: TinyLife.Actions.ChoicePromptInfo.Option.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: This option's name, which will be localized.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Actions.ChoicePromptInfo.Option.SuccessAction
  commentId: F:TinyLife.Actions.ChoicePromptInfo.Option.SuccessAction
  id: SuccessAction
  parent: TinyLife.Actions.ChoicePromptInfo.Option
  langs:
  - csharp
  - vb
  name: SuccessAction
  nameWithType: ChoicePromptInfo.Option.SuccessAction
  fullName: TinyLife.Actions.ChoicePromptInfo.Option.SuccessAction
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: The action that should be invoked when this option is chosen as the correct option when the player selects it.
  example: []
  syntax:
    content: public readonly Action<ChoicePromptInfo, PersonLike> SuccessAction
    return:
      type: System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike}
    content.vb: Public ReadOnly SuccessAction As Action(Of ChoicePromptInfo, PersonLike)
- uid: TinyLife.Actions.ChoicePromptInfo.Option.FailAction
  commentId: F:TinyLife.Actions.ChoicePromptInfo.Option.FailAction
  id: FailAction
  parent: TinyLife.Actions.ChoicePromptInfo.Option
  langs:
  - csharp
  - vb
  name: FailAction
  nameWithType: ChoicePromptInfo.Option.FailAction
  fullName: TinyLife.Actions.ChoicePromptInfo.Option.FailAction
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: The action that should be invoked when this option is chosen as the incorrect option when the player selects it.
  example: []
  syntax:
    content: public readonly Action<ChoicePromptInfo, PersonLike> FailAction
    return:
      type: System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike}
    content.vb: Public ReadOnly FailAction As Action(Of ChoicePromptInfo, PersonLike)
- uid: TinyLife.Actions.ChoicePromptInfo.Option.SuccessChance
  commentId: F:TinyLife.Actions.ChoicePromptInfo.Option.SuccessChance
  id: SuccessChance
  parent: TinyLife.Actions.ChoicePromptInfo.Option
  langs:
  - csharp
  - vb
  name: SuccessChance
  nameWithType: ChoicePromptInfo.Option.SuccessChance
  fullName: TinyLife.Actions.ChoicePromptInfo.Option.SuccessChance
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: A function that determines the success change of this choice prompt option once it's chosen, which is expected to be a value between 0 and 1.
  example: []
  syntax:
    content: public readonly Func<PersonLike, float> SuccessChance
    return:
      type: System.Func{TinyLife.Objects.PersonLike,System.Single}
    content.vb: Public ReadOnly SuccessChance As Func(Of PersonLike, Single)
- uid: TinyLife.Actions.ChoicePromptInfo.Option.#ctor(System.String,System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike},System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike},System.Func{TinyLife.Objects.PersonLike,System.Single})
  commentId: M:TinyLife.Actions.ChoicePromptInfo.Option.#ctor(System.String,System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike},System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike},System.Func{TinyLife.Objects.PersonLike,System.Single})
  id: '#ctor(System.String,System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike},System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike},System.Func{TinyLife.Objects.PersonLike,System.Single})'
  parent: TinyLife.Actions.ChoicePromptInfo.Option
  langs:
  - csharp
  - vb
  name: Option(string, Action<ChoicePromptInfo, PersonLike>, Action<ChoicePromptInfo, PersonLike>, Func<PersonLike, float>)
  nameWithType: ChoicePromptInfo.Option.Option(string, Action<ChoicePromptInfo, PersonLike>, Action<ChoicePromptInfo, PersonLike>, Func<PersonLike, float>)
  fullName: TinyLife.Actions.ChoicePromptInfo.Option.Option(string, System.Action<TinyLife.Actions.ChoicePromptInfo, TinyLife.Objects.PersonLike>, System.Action<TinyLife.Actions.ChoicePromptInfo, TinyLife.Objects.PersonLike>, System.Func<TinyLife.Objects.PersonLike, float>)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Creates a new option with the given generic settings.
  example: []
  syntax:
    content: public Option(string name, Action<ChoicePromptInfo, PersonLike> successAction, Action<ChoicePromptInfo, PersonLike> failAction, Func<PersonLike, float> successChance)
    parameters:
    - id: name
      type: System.String
      description: This option's name, which will be localized.
    - id: successAction
      type: System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike}
      description: The action that should be invoked when this option is chosen as the correct option when the player selects it.
    - id: failAction
      type: System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike}
      description: The action that should be invoked when this option is chosen as the incorrect option when the player selects it.
    - id: successChance
      type: System.Func{TinyLife.Objects.PersonLike,System.Single}
      description: A function that determines the success change of this choice prompt option once it's chosen, which is expected to be a value between 0 and 1.
    content.vb: Public Sub New(name As String, successAction As Action(Of ChoicePromptInfo, PersonLike), failAction As Action(Of ChoicePromptInfo, PersonLike), successChance As Func(Of PersonLike, Single))
  overload: TinyLife.Actions.ChoicePromptInfo.Option.#ctor*
  nameWithType.vb: ChoicePromptInfo.Option.New(String, Action(Of ChoicePromptInfo, PersonLike), Action(Of ChoicePromptInfo, PersonLike), Func(Of PersonLike, Single))
  fullName.vb: TinyLife.Actions.ChoicePromptInfo.Option.New(String, System.Action(Of TinyLife.Actions.ChoicePromptInfo, TinyLife.Objects.PersonLike), System.Action(Of TinyLife.Actions.ChoicePromptInfo, TinyLife.Objects.PersonLike), System.Func(Of TinyLife.Objects.PersonLike, Single))
  name.vb: New(String, Action(Of ChoicePromptInfo, PersonLike), Action(Of ChoicePromptInfo, PersonLike), Func(Of PersonLike, Single))
- uid: TinyLife.Actions.ChoicePromptInfo.Option.#ctor(System.String,System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,System.Single})
  commentId: M:TinyLife.Actions.ChoicePromptInfo.Option.#ctor(System.String,System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,System.Single})
  id: '#ctor(System.String,System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,System.Single})'
  parent: TinyLife.Actions.ChoicePromptInfo.Option
  langs:
  - csharp
  - vb
  name: Option(string, Func<Person, float>, Func<Person, float>, Func<Person, float>)
  nameWithType: ChoicePromptInfo.Option.Option(string, Func<Person, float>, Func<Person, float>, Func<Person, float>)
  fullName: TinyLife.Actions.ChoicePromptInfo.Option.Option(string, System.Func<TinyLife.Objects.Person, float>, System.Func<TinyLife.Objects.Person, float>, System.Func<TinyLife.Objects.Person, float>)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Creates a new option with the given job-related outcomes.
  example: []
  syntax:
    content: public Option(string name, Func<Person, float> jobPerformanceGained, Func<Person, float> jobPerformanceLost, Func<Person, float> successChance)
    parameters:
    - id: name
      type: System.String
      description: This option's name, which will be localized.
    - id: jobPerformanceGained
      type: System.Func{TinyLife.Objects.Person,System.Single}
      description: A function that returns the amount of job performance that should be gained when the correct option is selected by the player.
    - id: jobPerformanceLost
      type: System.Func{TinyLife.Objects.Person,System.Single}
      description: A function that returns the amount of job performance that should be lost when the incorrect option is selected by the player.
    - id: successChance
      type: System.Func{TinyLife.Objects.Person,System.Single}
      description: A function that determines the success change of this choice prompt option once it's chosen, which is expected to be a value between 0 and 1.
    content.vb: Public Sub New(name As String, jobPerformanceGained As Func(Of Person, Single), jobPerformanceLost As Func(Of Person, Single), successChance As Func(Of Person, Single))
  overload: TinyLife.Actions.ChoicePromptInfo.Option.#ctor*
  nameWithType.vb: ChoicePromptInfo.Option.New(String, Func(Of Person, Single), Func(Of Person, Single), Func(Of Person, Single))
  fullName.vb: TinyLife.Actions.ChoicePromptInfo.Option.New(String, System.Func(Of TinyLife.Objects.Person, Single), System.Func(Of TinyLife.Objects.Person, Single), System.Func(Of TinyLife.Objects.Person, Single))
  name.vb: New(String, Func(Of Person, Single), Func(Of Person, Single), Func(Of Person, Single))
- uid: TinyLife.Actions.ChoicePromptInfo.Option.#ctor(System.String,TinyLife.Emotions.EmotionType,TinyLife.Skills.SkillType,System.Single,System.Single,System.Single)
  commentId: M:TinyLife.Actions.ChoicePromptInfo.Option.#ctor(System.String,TinyLife.Emotions.EmotionType,TinyLife.Skills.SkillType,System.Single,System.Single,System.Single)
  id: '#ctor(System.String,TinyLife.Emotions.EmotionType,TinyLife.Skills.SkillType,System.Single,System.Single,System.Single)'
  parent: TinyLife.Actions.ChoicePromptInfo.Option
  langs:
  - csharp
  - vb
  name: Option(string, EmotionType, SkillType, float, float, float)
  nameWithType: ChoicePromptInfo.Option.Option(string, EmotionType, SkillType, float, float, float)
  fullName: TinyLife.Actions.ChoicePromptInfo.Option.Option(string, TinyLife.Emotions.EmotionType, TinyLife.Skills.SkillType, float, float, float)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Creates a new option with the given job-related outcomes.
  example: []
  syntax:
    content: public Option(string name, EmotionType successIncreaseEmotion = null, SkillType successIncreaseSkill = null, float jobPerformanceGained = 0.1, float jobPerformanceLost = 0.1, float successChance = 0.5)
    parameters:
    - id: name
      type: System.String
      description: This option's name, which will be localized.
    - id: successIncreaseEmotion
      type: TinyLife.Emotions.EmotionType
      description: An emotion that optionally increases the success chance of this option.
    - id: successIncreaseSkill
      type: TinyLife.Skills.SkillType
      description: A skill that optionally increases the success chance of this option.
    - id: jobPerformanceGained
      type: System.Single
      description: The amount of job performance that should be gained when the correct option is selected by the player.
    - id: jobPerformanceLost
      type: System.Single
      description: The amount of job performance that should be lost when the incorrect option is selected by the player.
    - id: successChance
      type: System.Single
      description: The success chance of this option, which is expected to be a value between 0 and 1.
    content.vb: Public Sub New(name As String, successIncreaseEmotion As EmotionType = Nothing, successIncreaseSkill As SkillType = Nothing, jobPerformanceGained As Single = 0.1, jobPerformanceLost As Single = 0.1, successChance As Single = 0.5)
  overload: TinyLife.Actions.ChoicePromptInfo.Option.#ctor*
  nameWithType.vb: ChoicePromptInfo.Option.New(String, EmotionType, SkillType, Single, Single, Single)
  fullName.vb: TinyLife.Actions.ChoicePromptInfo.Option.New(String, TinyLife.Emotions.EmotionType, TinyLife.Skills.SkillType, Single, Single, Single)
  name.vb: New(String, EmotionType, SkillType, Single, Single, Single)
- uid: TinyLife.Actions.ChoicePromptInfo.Option.Execute(TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike,System.Boolean)
  commentId: M:TinyLife.Actions.ChoicePromptInfo.Option.Execute(TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike,System.Boolean)
  id: Execute(TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike,System.Boolean)
  parent: TinyLife.Actions.ChoicePromptInfo.Option
  langs:
  - csharp
  - vb
  name: Execute(ChoicePromptInfo, PersonLike, bool)
  nameWithType: ChoicePromptInfo.Option.Execute(ChoicePromptInfo, PersonLike, bool)
  fullName: TinyLife.Actions.ChoicePromptInfo.Option.Execute(TinyLife.Actions.ChoicePromptInfo, TinyLife.Objects.PersonLike, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Executes this option's result actions using the given <xref href="TinyLife.Actions.ChoicePromptInfo" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Execute(ChoicePromptInfo info, PersonLike person, bool successful)
    parameters:
    - id: info
      type: TinyLife.Actions.ChoicePromptInfo
      description: The choice prompt that this option was a part of.
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person that should be affected by this option's outcome.
    - id: successful
      type: System.Boolean
      description: Whether this option was chosen as the successful one.
    content.vb: Public Sub Execute(info As ChoicePromptInfo, person As PersonLike, successful As Boolean)
  overload: TinyLife.Actions.ChoicePromptInfo.Option.Execute*
  nameWithType.vb: ChoicePromptInfo.Option.Execute(ChoicePromptInfo, PersonLike, Boolean)
  fullName.vb: TinyLife.Actions.ChoicePromptInfo.Option.Execute(TinyLife.Actions.ChoicePromptInfo, TinyLife.Objects.PersonLike, Boolean)
  name.vb: Execute(ChoicePromptInfo, PersonLike, Boolean)
references:
- uid: TinyLife.Actions.ChoicePromptInfo
  commentId: T:TinyLife.Actions.ChoicePromptInfo
  parent: TinyLife.Actions
  href: TinyLife.Actions.ChoicePromptInfo.html
  name: ChoicePromptInfo
  nameWithType: ChoicePromptInfo
  fullName: TinyLife.Actions.ChoicePromptInfo
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Actions.ChoicePromptInfo.Option.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Option>(Option)
  nameWithType: Extensions.JsonCopy<ChoicePromptInfo.Option>(ChoicePromptInfo.Option)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.ChoicePromptInfo.Option>(TinyLife.Actions.ChoicePromptInfo.Option)
  nameWithType.vb: Extensions.JsonCopy(Of ChoicePromptInfo.Option)(ChoicePromptInfo.Option)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.ChoicePromptInfo.Option)(TinyLife.Actions.ChoicePromptInfo.Option)
  name.vb: JsonCopy(Of Option)(Option)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.ChoicePromptInfo.Option)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Actions.ChoicePromptInfo.Option
    name: Option
    href: TinyLife.Actions.ChoicePromptInfo.Option.html
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.ChoicePromptInfo.Option
    name: Option
    href: TinyLife.Actions.ChoicePromptInfo.Option.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.ChoicePromptInfo.Option)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ChoicePromptInfo.Option
    name: Option
    href: TinyLife.Actions.ChoicePromptInfo.Option.html
  - name: )
  - name: (
  - uid: TinyLife.Actions.ChoicePromptInfo.Option
    name: Option
    href: TinyLife.Actions.ChoicePromptInfo.Option.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike}
  commentId: T:System.Action{TinyLife.Actions.ChoicePromptInfo,TinyLife.Objects.PersonLike}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<ChoicePromptInfo, PersonLike>
  nameWithType: Action<ChoicePromptInfo, PersonLike>
  fullName: System.Action<TinyLife.Actions.ChoicePromptInfo, TinyLife.Objects.PersonLike>
  nameWithType.vb: Action(Of ChoicePromptInfo, PersonLike)
  fullName.vb: System.Action(Of TinyLife.Actions.ChoicePromptInfo, TinyLife.Objects.PersonLike)
  name.vb: Action(Of ChoicePromptInfo, PersonLike)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Actions.ChoicePromptInfo
    name: ChoicePromptInfo
    href: TinyLife.Actions.ChoicePromptInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ChoicePromptInfo
    name: ChoicePromptInfo
    href: TinyLife.Actions.ChoicePromptInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Func{TinyLife.Objects.PersonLike,System.Single}
  commentId: T:System.Func{TinyLife.Objects.PersonLike,System.Single}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<PersonLike, float>
  nameWithType: Func<PersonLike, float>
  fullName: System.Func<TinyLife.Objects.PersonLike, float>
  nameWithType.vb: Func(Of PersonLike, Single)
  fullName.vb: System.Func(Of TinyLife.Objects.PersonLike, Single)
  name.vb: Func(Of PersonLike, Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Actions.ChoicePromptInfo.Option.#ctor*
  commentId: Overload:TinyLife.Actions.ChoicePromptInfo.Option.#ctor
  href: TinyLife.Actions.ChoicePromptInfo.Option.html#TinyLife_Actions_ChoicePromptInfo_Option__ctor_System_String_System_Action_TinyLife_Actions_ChoicePromptInfo_TinyLife_Objects_PersonLike__System_Action_TinyLife_Actions_ChoicePromptInfo_TinyLife_Objects_PersonLike__System_Func_TinyLife_Objects_PersonLike_System_Single__
  name: Option
  nameWithType: ChoicePromptInfo.Option.Option
  fullName: TinyLife.Actions.ChoicePromptInfo.Option.Option
  nameWithType.vb: ChoicePromptInfo.Option.New
  fullName.vb: TinyLife.Actions.ChoicePromptInfo.Option.New
  name.vb: New
- uid: System.Func{TinyLife.Objects.Person,System.Single}
  commentId: T:System.Func{TinyLife.Objects.Person,System.Single}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Person, float>
  nameWithType: Func<Person, float>
  fullName: System.Func<TinyLife.Objects.Person, float>
  nameWithType.vb: Func(Of Person, Single)
  fullName.vb: System.Func(Of TinyLife.Objects.Person, Single)
  name.vb: Func(Of Person, Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Emotions.EmotionType
  commentId: T:TinyLife.Emotions.EmotionType
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionType.html
  name: EmotionType
  nameWithType: EmotionType
  fullName: TinyLife.Emotions.EmotionType
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  href: TinyLife.Skills.SkillType.html
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  href: TinyLife.html
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: TinyLife.Actions.ChoicePromptInfo.Option.Execute*
  commentId: Overload:TinyLife.Actions.ChoicePromptInfo.Option.Execute
  href: TinyLife.Actions.ChoicePromptInfo.Option.html#TinyLife_Actions_ChoicePromptInfo_Option_Execute_TinyLife_Actions_ChoicePromptInfo_TinyLife_Objects_PersonLike_System_Boolean_
  name: Execute
  nameWithType: ChoicePromptInfo.Option.Execute
  fullName: TinyLife.Actions.ChoicePromptInfo.Option.Execute
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
