### YamlMime:ManagedReference
items:
- uid: TinyLife.Skills.FoodType.ContainerType
  commentId: T:TinyLife.Skills.FoodType.ContainerType
  id: FoodType.ContainerType
  parent: TinyLife.Skills
  children:
  - TinyLife.Skills.FoodType.ContainerType.#ctor(System.String,System.Boolean,System.Func{System.Boolean,TinyLife.Objects.FurnitureType},System.Func{System.Boolean,TinyLife.Objects.FurnitureType},System.Func{TinyLife.Skills.FoodType,MLEM.Textures.TextureRegion})
  - TinyLife.Skills.FoodType.ContainerType.Bowl
  - TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture(TinyLife.Skills.FoodType)
  - TinyLife.Skills.FoodType.ContainerType.GetEmpty(System.Boolean)
  - TinyLife.Skills.FoodType.ContainerType.GetFilled(System.Boolean)
  - TinyLife.Skills.FoodType.ContainerType.Glass
  - TinyLife.Skills.FoodType.ContainerType.IsDrink
  - TinyLife.Skills.FoodType.ContainerType.Mug
  - TinyLife.Skills.FoodType.ContainerType.Name
  - TinyLife.Skills.FoodType.ContainerType.Plate
  langs:
  - csharp
  - vb
  name: FoodType.ContainerType
  nameWithType: FoodType.ContainerType
  fullName: TinyLife.Skills.FoodType.ContainerType
  type: Class
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: A container type is a set of information for a <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref> that determines what <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> is constructed to hold the food type.
  example: []
  syntax:
    content: public class FoodType.ContainerType
    content.vb: Public Class FoodType.ContainerType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Skills.FoodType.ContainerType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Skills.FoodType.ContainerType.Plate
  commentId: F:TinyLife.Skills.FoodType.ContainerType.Plate
  id: Plate
  parent: TinyLife.Skills.FoodType.ContainerType
  langs:
  - csharp
  - vb
  name: Plate
  nameWithType: FoodType.ContainerType.Plate
  fullName: TinyLife.Skills.FoodType.ContainerType.Plate
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: A plate, which additionally functions as a platter if the serving size is more than 1.
  example: []
  syntax:
    content: public static readonly FoodType.ContainerType Plate
    return:
      type: TinyLife.Skills.FoodType.ContainerType
    content.vb: Public Shared ReadOnly Plate As FoodType.ContainerType
- uid: TinyLife.Skills.FoodType.ContainerType.Bowl
  commentId: F:TinyLife.Skills.FoodType.ContainerType.Bowl
  id: Bowl
  parent: TinyLife.Skills.FoodType.ContainerType
  langs:
  - csharp
  - vb
  name: Bowl
  nameWithType: FoodType.ContainerType.Bowl
  fullName: TinyLife.Skills.FoodType.ContainerType.Bowl
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: A bowl, which additionally functions as a large serving bowl if the serving size is more than 1.
  example: []
  syntax:
    content: public static readonly FoodType.ContainerType Bowl
    return:
      type: TinyLife.Skills.FoodType.ContainerType
    content.vb: Public Shared ReadOnly Bowl As FoodType.ContainerType
- uid: TinyLife.Skills.FoodType.ContainerType.Glass
  commentId: F:TinyLife.Skills.FoodType.ContainerType.Glass
  id: Glass
  parent: TinyLife.Skills.FoodType.ContainerType
  langs:
  - csharp
  - vb
  name: Glass
  nameWithType: FoodType.ContainerType.Glass
  fullName: TinyLife.Skills.FoodType.ContainerType.Glass
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: A glass, for protein shakes and water.
  example: []
  syntax:
    content: public static readonly FoodType.ContainerType Glass
    return:
      type: TinyLife.Skills.FoodType.ContainerType
    content.vb: Public Shared ReadOnly Glass As FoodType.ContainerType
- uid: TinyLife.Skills.FoodType.ContainerType.Mug
  commentId: F:TinyLife.Skills.FoodType.ContainerType.Mug
  id: Mug
  parent: TinyLife.Skills.FoodType.ContainerType
  langs:
  - csharp
  - vb
  name: Mug
  nameWithType: FoodType.ContainerType.Mug
  fullName: TinyLife.Skills.FoodType.ContainerType.Mug
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: A mug, for drinks like coffee.
  example: []
  syntax:
    content: public static readonly FoodType.ContainerType Mug
    return:
      type: TinyLife.Skills.FoodType.ContainerType
    content.vb: Public Shared ReadOnly Mug As FoodType.ContainerType
- uid: TinyLife.Skills.FoodType.ContainerType.Name
  commentId: F:TinyLife.Skills.FoodType.ContainerType.Name
  id: Name
  parent: TinyLife.Skills.FoodType.ContainerType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FoodType.ContainerType.Name
  fullName: TinyLife.Skills.FoodType.ContainerType.Name
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: The name of this container type.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Skills.FoodType.ContainerType.IsDrink
  commentId: F:TinyLife.Skills.FoodType.ContainerType.IsDrink
  id: IsDrink
  parent: TinyLife.Skills.FoodType.ContainerType
  langs:
  - csharp
  - vb
  name: IsDrink
  nameWithType: FoodType.ContainerType.IsDrink
  fullName: TinyLife.Skills.FoodType.ContainerType.IsDrink
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: Whether the container type contains a drink (and should play a drinking sound rather than an eating sound).
  example: []
  syntax:
    content: public readonly bool IsDrink
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsDrink As Boolean
- uid: TinyLife.Skills.FoodType.ContainerType.#ctor(System.String,System.Boolean,System.Func{System.Boolean,TinyLife.Objects.FurnitureType},System.Func{System.Boolean,TinyLife.Objects.FurnitureType},System.Func{TinyLife.Skills.FoodType,MLEM.Textures.TextureRegion})
  commentId: M:TinyLife.Skills.FoodType.ContainerType.#ctor(System.String,System.Boolean,System.Func{System.Boolean,TinyLife.Objects.FurnitureType},System.Func{System.Boolean,TinyLife.Objects.FurnitureType},System.Func{TinyLife.Skills.FoodType,MLEM.Textures.TextureRegion})
  id: '#ctor(System.String,System.Boolean,System.Func{System.Boolean,TinyLife.Objects.FurnitureType},System.Func{System.Boolean,TinyLife.Objects.FurnitureType},System.Func{TinyLife.Skills.FoodType,MLEM.Textures.TextureRegion})'
  parent: TinyLife.Skills.FoodType.ContainerType
  langs:
  - csharp
  - vb
  name: ContainerType(string, bool, Func<bool, FurnitureType>, Func<bool, FurnitureType>, Func<FoodType, TextureRegion>)
  nameWithType: FoodType.ContainerType.ContainerType(string, bool, Func<bool, FurnitureType>, Func<bool, FurnitureType>, Func<FoodType, TextureRegion>)
  fullName: TinyLife.Skills.FoodType.ContainerType.ContainerType(string, bool, System.Func<bool, TinyLife.Objects.FurnitureType>, System.Func<bool, TinyLife.Objects.FurnitureType>, System.Func<TinyLife.Skills.FoodType, MLEM.Textures.TextureRegion>)
  type: Constructor
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: Creates a new container type with the given settings.
  example: []
  syntax:
    content: public ContainerType(string name, bool isDrink, Func<bool, FurnitureType> filled, Func<bool, FurnitureType> empty, Func<FoodType, TextureRegion> texture)
    parameters:
    - id: name
      type: System.String
      description: The name of this container type.
    - id: isDrink
      type: System.Boolean
      description: Whether the container type contains a drink (and should play a drinking sound rather than an eating sound).
    - id: filled
      type: System.Func{System.Boolean,TinyLife.Objects.FurnitureType}
      description: A function that returns the <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> for this container type, based on whether it should contain multiple servings. Can return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the given type of serving size is not supported.
    - id: empty
      type: System.Func{System.Boolean,TinyLife.Objects.FurnitureType}
      description: A function that returns the <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> that should be used when this container is empty, based on whether the original container held multiple servings or not. Can return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: texture
      type: System.Func{TinyLife.Skills.FoodType,MLEM.Textures.TextureRegion}
      description: A function that returns the texture to use for a <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref> that is stored in this container.
    content.vb: Public Sub New(name As String, isDrink As Boolean, filled As Func(Of Boolean, FurnitureType), empty As Func(Of Boolean, FurnitureType), texture As Func(Of FoodType, TextureRegion))
  overload: TinyLife.Skills.FoodType.ContainerType.#ctor*
  nameWithType.vb: FoodType.ContainerType.New(String, Boolean, Func(Of Boolean, FurnitureType), Func(Of Boolean, FurnitureType), Func(Of FoodType, TextureRegion))
  fullName.vb: TinyLife.Skills.FoodType.ContainerType.New(String, Boolean, System.Func(Of Boolean, TinyLife.Objects.FurnitureType), System.Func(Of Boolean, TinyLife.Objects.FurnitureType), System.Func(Of TinyLife.Skills.FoodType, MLEM.Textures.TextureRegion))
  name.vb: New(String, Boolean, Func(Of Boolean, FurnitureType), Func(Of Boolean, FurnitureType), Func(Of FoodType, TextureRegion))
- uid: TinyLife.Skills.FoodType.ContainerType.GetFilled(System.Boolean)
  commentId: M:TinyLife.Skills.FoodType.ContainerType.GetFilled(System.Boolean)
  id: GetFilled(System.Boolean)
  parent: TinyLife.Skills.FoodType.ContainerType
  langs:
  - csharp
  - vb
  name: GetFilled(bool)
  nameWithType: FoodType.ContainerType.GetFilled(bool)
  fullName: TinyLife.Skills.FoodType.ContainerType.GetFilled(bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: Returns the <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> for this container type, based on the serving size.
  example: []
  syntax:
    content: public FurnitureType GetFilled(bool multiple)
    parameters:
    - id: multiple
      type: System.Boolean
      description: Whether the container should hold multiple servings.
    return:
      type: TinyLife.Objects.FurnitureType
      description: The furniture for this container type, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the given type of serving size is not supported.
    content.vb: Public Function GetFilled(multiple As Boolean) As FurnitureType
  overload: TinyLife.Skills.FoodType.ContainerType.GetFilled*
  nameWithType.vb: FoodType.ContainerType.GetFilled(Boolean)
  fullName.vb: TinyLife.Skills.FoodType.ContainerType.GetFilled(Boolean)
  name.vb: GetFilled(Boolean)
- uid: TinyLife.Skills.FoodType.ContainerType.GetEmpty(System.Boolean)
  commentId: M:TinyLife.Skills.FoodType.ContainerType.GetEmpty(System.Boolean)
  id: GetEmpty(System.Boolean)
  parent: TinyLife.Skills.FoodType.ContainerType
  langs:
  - csharp
  - vb
  name: GetEmpty(bool)
  nameWithType: FoodType.ContainerType.GetEmpty(bool)
  fullName: TinyLife.Skills.FoodType.ContainerType.GetEmpty(bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: Returns the <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> that should be used when this container is empty.
  example: []
  syntax:
    content: public FurnitureType GetEmpty(bool heldMultiple)
    parameters:
    - id: heldMultiple
      type: System.Boolean
      description: Whether the original container held multiple servings, or just one.
    return:
      type: TinyLife.Objects.FurnitureType
      description: The furniture to use when this container is empty, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use none.
    content.vb: Public Function GetEmpty(heldMultiple As Boolean) As FurnitureType
  overload: TinyLife.Skills.FoodType.ContainerType.GetEmpty*
  nameWithType.vb: FoodType.ContainerType.GetEmpty(Boolean)
  fullName.vb: TinyLife.Skills.FoodType.ContainerType.GetEmpty(Boolean)
  name.vb: GetEmpty(Boolean)
- uid: TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture(TinyLife.Skills.FoodType)
  commentId: M:TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture(TinyLife.Skills.FoodType)
  id: GetDefaultTexture(TinyLife.Skills.FoodType)
  parent: TinyLife.Skills.FoodType.ContainerType
  langs:
  - csharp
  - vb
  name: GetDefaultTexture(FoodType)
  nameWithType: FoodType.ContainerType.GetDefaultTexture(FoodType)
  fullName: TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture(TinyLife.Skills.FoodType)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: Returns the texture to use for the given <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TextureRegion GetDefaultTexture(FoodType type)
    parameters:
    - id: type
      type: TinyLife.Skills.FoodType
      description: The food type whose texture to return.
    return:
      type: MLEM.Textures.TextureRegion
      description: The texture that the given food type should be drawn with.
    content.vb: Public Function GetDefaultTexture(type As FoodType) As TextureRegion
  overload: TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture*
references:
- uid: TinyLife.Skills.FoodType
  commentId: T:TinyLife.Skills.FoodType
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType
  nameWithType: FoodType
  fullName: TinyLife.Skills.FoodType
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Skills.FoodType.ContainerType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<ContainerType>(ContainerType)
  nameWithType: Extensions.JsonCopy<FoodType.ContainerType>(FoodType.ContainerType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.FoodType.ContainerType>(TinyLife.Skills.FoodType.ContainerType)
  nameWithType.vb: Extensions.JsonCopy(Of FoodType.ContainerType)(FoodType.ContainerType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.FoodType.ContainerType)(TinyLife.Skills.FoodType.ContainerType)
  name.vb: JsonCopy(Of ContainerType)(ContainerType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.FoodType.ContainerType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
    href: TinyLife.Skills.FoodType.ContainerType.html
  - name: '>'
  - name: (
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
    href: TinyLife.Skills.FoodType.ContainerType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.FoodType.ContainerType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
    href: TinyLife.Skills.FoodType.ContainerType.html
  - name: )
  - name: (
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
    href: TinyLife.Skills.FoodType.ContainerType.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Skills.FoodType.ContainerType
  commentId: T:TinyLife.Skills.FoodType.ContainerType
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType.ContainerType
  nameWithType: FoodType.ContainerType
  fullName: TinyLife.Skills.FoodType.ContainerType
  spec.csharp:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
    href: TinyLife.Skills.FoodType.ContainerType.html
  spec.vb:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
    href: TinyLife.Skills.FoodType.ContainerType.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.FurnitureType
  commentId: T:TinyLife.Objects.FurnitureType
  parent: TinyLife.Objects
  href: TinyLife.Objects.FurnitureType.html
  name: FurnitureType
  nameWithType: FurnitureType
  fullName: TinyLife.Objects.FurnitureType
- uid: TinyLife.Skills.FoodType.ContainerType.#ctor*
  commentId: Overload:TinyLife.Skills.FoodType.ContainerType.#ctor
  href: TinyLife.Skills.FoodType.ContainerType.html#TinyLife_Skills_FoodType_ContainerType__ctor_System_String_System_Boolean_System_Func_System_Boolean_TinyLife_Objects_FurnitureType__System_Func_System_Boolean_TinyLife_Objects_FurnitureType__System_Func_TinyLife_Skills_FoodType_MLEM_Textures_TextureRegion__
  name: ContainerType
  nameWithType: FoodType.ContainerType.ContainerType
  fullName: TinyLife.Skills.FoodType.ContainerType.ContainerType
  nameWithType.vb: FoodType.ContainerType.New
  fullName.vb: TinyLife.Skills.FoodType.ContainerType.New
  name.vb: New
- uid: System.Func{System.Boolean,TinyLife.Objects.FurnitureType}
  commentId: T:System.Func{System.Boolean,TinyLife.Objects.FurnitureType}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<bool, FurnitureType>
  nameWithType: Func<bool, FurnitureType>
  fullName: System.Func<bool, TinyLife.Objects.FurnitureType>
  nameWithType.vb: Func(Of Boolean, FurnitureType)
  fullName.vb: System.Func(Of Boolean, TinyLife.Objects.FurnitureType)
  name.vb: Func(Of Boolean, FurnitureType)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: )
- uid: System.Func{TinyLife.Skills.FoodType,MLEM.Textures.TextureRegion}
  commentId: T:System.Func{TinyLife.Skills.FoodType,MLEM.Textures.TextureRegion}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<FoodType, TextureRegion>
  nameWithType: Func<FoodType, TextureRegion>
  fullName: System.Func<TinyLife.Skills.FoodType, MLEM.Textures.TextureRegion>
  nameWithType.vb: Func(Of FoodType, TextureRegion)
  fullName.vb: System.Func(Of TinyLife.Skills.FoodType, MLEM.Textures.TextureRegion)
  name.vb: Func(Of FoodType, TextureRegion)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Skills.FoodType.ContainerType.GetFilled*
  commentId: Overload:TinyLife.Skills.FoodType.ContainerType.GetFilled
  href: TinyLife.Skills.FoodType.ContainerType.html#TinyLife_Skills_FoodType_ContainerType_GetFilled_System_Boolean_
  name: GetFilled
  nameWithType: FoodType.ContainerType.GetFilled
  fullName: TinyLife.Skills.FoodType.ContainerType.GetFilled
- uid: TinyLife.Skills.FoodType.ContainerType.GetEmpty*
  commentId: Overload:TinyLife.Skills.FoodType.ContainerType.GetEmpty
  href: TinyLife.Skills.FoodType.ContainerType.html#TinyLife_Skills_FoodType_ContainerType_GetEmpty_System_Boolean_
  name: GetEmpty
  nameWithType: FoodType.ContainerType.GetEmpty
  fullName: TinyLife.Skills.FoodType.ContainerType.GetEmpty
- uid: TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture*
  commentId: Overload:TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture
  href: TinyLife.Skills.FoodType.ContainerType.html#TinyLife_Skills_FoodType_ContainerType_GetDefaultTexture_TinyLife_Skills_FoodType_
  name: GetDefaultTexture
  nameWithType: FoodType.ContainerType.GetDefaultTexture
  fullName: TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
