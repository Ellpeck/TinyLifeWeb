### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.Light
  commentId: T:TinyLife.Objects.Light
  id: Light
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.Light.#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  - TinyLife.Objects.Light.CircleTexture
  - TinyLife.Objects.Light.Color
  - TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  - TinyLife.Objects.Light.Floor
  - TinyLife.Objects.Light.IsDisabled
  - TinyLife.Objects.Light.Map
  - TinyLife.Objects.Light.Position
  - TinyLife.Objects.Light.PositionOffset
  - TinyLife.Objects.Light.Rotation
  - TinyLife.Objects.Light.Scale
  - TinyLife.Objects.Light.ScreenPosOffset
  - TinyLife.Objects.Light.Size
  - TinyLife.Objects.Light.Texture
  - TinyLife.Objects.Light.VisualWorldOffset
  langs:
  - csharp
  - vb
  name: Light
  nameWithType: Light
  fullName: TinyLife.Objects.Light
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A light is a semi-object that can be added to a <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref> using <xref href="TinyLife.World.Map.AddLight(TinyLife.Objects.Light)" data-throw-if-not-resolved="false"></xref>.

    A light draws a light texture onto a lightmap and, as such, adds lighting to the rendered world.
  example: []
  syntax:
    content: public class Light
    content.vb: Public Class Light
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.Light.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.Light.CircleTexture
  commentId: F:TinyLife.Objects.Light.CircleTexture
  id: CircleTexture
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: CircleTexture
  nameWithType: Light.CircleTexture
  fullName: TinyLife.Objects.Light.CircleTexture
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A texture that can be used as the <xref href="TinyLife.Objects.Light.Texture" data-throw-if-not-resolved="false"></xref> of a light that is circular
  example: []
  syntax:
    content: public static readonly TextureRegion CircleTexture
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public Shared ReadOnly CircleTexture As TextureRegion
- uid: TinyLife.Objects.Light.Map
  commentId: F:TinyLife.Objects.Light.Map
  id: Map
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: Light.Map
  fullName: TinyLife.Objects.Light.Map
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The map that this light is on
  example: []
  syntax:
    content: public readonly Map Map
    return:
      type: TinyLife.World.Map
    content.vb: Public ReadOnly Map As Map
- uid: TinyLife.Objects.Light.Texture
  commentId: F:TinyLife.Objects.Light.Texture
  id: Texture
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: Light.Texture
  fullName: TinyLife.Objects.Light.Texture
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The texture that this light currently has.

    A custom texture can be used, or any of the static texture regions in this class, including <xref href="TinyLife.Objects.Light.CircleTexture" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly TextureRegion Texture
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Texture As TextureRegion
- uid: TinyLife.Objects.Light.Position
  commentId: P:TinyLife.Objects.Light.Position
  id: Position
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Light.Position
  fullName: TinyLife.Objects.Light.Position
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The position of this light, in world space.

    Note that, if this position is changed, this light's current <xref href="TinyLife.World.MapSection" data-throw-if-not-resolved="false"></xref> is changed automatically if needed.
  example: []
  syntax:
    content: public Vector2 Position { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Property Position As Vector2
  overload: TinyLife.Objects.Light.Position*
- uid: TinyLife.Objects.Light.Floor
  commentId: F:TinyLife.Objects.Light.Floor
  id: Floor
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Floor
  nameWithType: Light.Floor
  fullName: TinyLife.Objects.Light.Floor
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The floor this light is on.
  example: []
  syntax:
    content: public float Floor
    return:
      type: System.Single
    content.vb: Public Floor As Single
- uid: TinyLife.Objects.Light.PositionOffset
  commentId: F:TinyLife.Objects.Light.PositionOffset
  id: PositionOffset
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: PositionOffset
  nameWithType: Light.PositionOffset
  fullName: TinyLife.Objects.Light.PositionOffset
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An offset from this light's <xref href="TinyLife.Objects.Light.Position" data-throw-if-not-resolved="false"></xref>, in world space, that is applied before the <xref href="TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> call.

    This can be used if the light should be drawn in a different location than its <xref href="TinyLife.Objects.Light.Position" data-throw-if-not-resolved="false"></xref>, which also determines the room and section that it is in.
  example: []
  syntax:
    content: public Vector2 PositionOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public PositionOffset As Vector2
- uid: TinyLife.Objects.Light.ScreenPosOffset
  commentId: F:TinyLife.Objects.Light.ScreenPosOffset
  id: ScreenPosOffset
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: ScreenPosOffset
  nameWithType: Light.ScreenPosOffset
  fullName: TinyLife.Objects.Light.ScreenPosOffset
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An offset from this light's screen-space draw position, also in screen space.

    This is added to the final draw position in <xref href="TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime%2cMicrosoft.Xna.Framework.Graphics.SpriteBatch)" data-throw-if-not-resolved="false"></xref>, after <xref href="TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> has already been called.
  example: []
  syntax:
    content: public Vector2 ScreenPosOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ScreenPosOffset As Vector2
- uid: TinyLife.Objects.Light.VisualWorldOffset
  commentId: F:TinyLife.Objects.Light.VisualWorldOffset
  id: VisualWorldOffset
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: VisualWorldOffset
  nameWithType: Light.VisualWorldOffset
  fullName: TinyLife.Objects.Light.VisualWorldOffset
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    An offset from this light's world-space draw position, also in world space.

    This is translated to screen space using <xref href="TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> and added to the final draw position in <xref href="TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime%2cMicrosoft.Xna.Framework.Graphics.SpriteBatch)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Vector2 VisualWorldOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public VisualWorldOffset As Vector2
- uid: TinyLife.Objects.Light.Size
  commentId: F:TinyLife.Objects.Light.Size
  id: Size
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Light.Size
  fullName: TinyLife.Objects.Light.Size
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The size, in world space, of this light, centered on its <xref href="TinyLife.Objects.Light.Position" data-throw-if-not-resolved="false"></xref>.

    This value is multiplied with <xref href="TinyLife.Utilities.TextureHandler.TileSize" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Vector2 Size
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Size As Vector2
- uid: TinyLife.Objects.Light.Rotation
  commentId: F:TinyLife.Objects.Light.Rotation
  id: Rotation
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Light.Rotation
  fullName: TinyLife.Objects.Light.Rotation
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The rotation that this light displays with, in radians.

    Rotation is applied around the center of the light's <xref href="TinyLife.Objects.Light.Texture" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float Rotation
    return:
      type: System.Single
    content.vb: Public Rotation As Single
- uid: TinyLife.Objects.Light.Color
  commentId: F:TinyLife.Objects.Light.Color
  id: Color
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Light.Color
  fullName: TinyLife.Objects.Light.Color
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The color that this light renders with.

    Note that, when drawing, this color is passed through <xref href="MLEM.Graphics.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)" data-throw-if-not-resolved="false"></xref> due to the way the lightmap is drawn.
  example: []
  syntax:
    content: public Color Color
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public Color As Color
- uid: TinyLife.Objects.Light.IsDisabled
  commentId: F:TinyLife.Objects.Light.IsDisabled
  id: IsDisabled
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: IsDisabled
  nameWithType: Light.IsDisabled
  fullName: TinyLife.Objects.Light.IsDisabled
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Whether this light is currently disabled.

    If a light is disabled, it will not be rendered.
  example: []
  syntax:
    content: public bool IsDisabled
    return:
      type: System.Boolean
    content.vb: Public IsDisabled As Boolean
- uid: TinyLife.Objects.Light.Scale
  commentId: F:TinyLife.Objects.Light.Scale
  id: Scale
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: Light.Scale
  fullName: TinyLife.Objects.Light.Scale
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The scale that this light is drawn with.
  example: []
  syntax:
    content: public float Scale
    return:
      type: System.Single
    content.vb: Public Scale As Single
- uid: TinyLife.Objects.Light.#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  commentId: M:TinyLife.Objects.Light.#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  id: '#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)'
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Light(Map, Vector2, float, TextureRegion, Vector2, Color)
  nameWithType: Light.Light(Map, Vector2, float, TextureRegion, Vector2, Color)
  fullName: TinyLife.Objects.Light.Light(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, float, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new light with the given settings
  example: []
  syntax:
    content: public Light(Map map, Vector2 position, float floor, TextureRegion texture, Vector2 size, Color color)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to add the light to
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The light's position, in world space
    - id: floor
      type: System.Single
      description: The floor this light is on.
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The light's texture
    - id: size
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the light, centered on its <code class="paramref">position</code>
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The color to render the light with
    content.vb: Public Sub New(map As Map, position As Vector2, floor As Single, texture As TextureRegion, size As Vector2, color As Color)
  overload: TinyLife.Objects.Light.#ctor*
  nameWithType.vb: Light.New(Map, Vector2, Single, TextureRegion, Vector2, Color)
  fullName.vb: TinyLife.Objects.Light.New(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Single, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color)
  name.vb: New(Map, Vector2, Single, TextureRegion, Vector2, Color)
- uid: TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch)
  nameWithType: Light.Draw(GameTime, SpriteBatch)
  fullName: TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Draws the light in the world with the given sprite batch, at its current <xref href="TinyLife.Objects.Light.Position" data-throw-if-not-resolved="false"></xref> and with its current <xref href="TinyLife.Objects.Light.Color" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public virtual void Draw(GameTime time, SpriteBatch batch)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game's current time, which can be used for animations
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to draw the light with
    content.vb: Public Overridable Sub Draw(time As GameTime, batch As SpriteBatch)
  overload: TinyLife.Objects.Light.Draw*
references:
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World.Map.AddLight(TinyLife.Objects.Light)
  commentId: M:TinyLife.World.Map.AddLight(TinyLife.Objects.Light)
  href: TinyLife.World.Map.html#TinyLife_World_Map_AddLight_TinyLife_Objects_Light_
  name: AddLight(Light)
  nameWithType: Map.AddLight(Light)
  fullName: TinyLife.World.Map.AddLight(TinyLife.Objects.Light)
  spec.csharp:
  - uid: TinyLife.World.Map.AddLight(TinyLife.Objects.Light)
    name: AddLight
    href: TinyLife.World.Map.html#TinyLife_World_Map_AddLight_TinyLife_Objects_Light_
  - name: (
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.AddLight(TinyLife.Objects.Light)
    name: AddLight
    href: TinyLife.World.Map.html#TinyLife_World_Map_AddLight_TinyLife_Objects_Light_
  - name: (
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Objects.Light.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Light>(Light)
  nameWithType: Extensions.JsonCopy<Light>(Light)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Light>(TinyLife.Objects.Light)
  nameWithType.vb: Extensions.JsonCopy(Of Light)(Light)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Light)(TinyLife.Objects.Light)
  name.vb: JsonCopy(Of Light)(Light)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Light)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Light)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.Light.Texture
  commentId: F:TinyLife.Objects.Light.Texture
  href: TinyLife.Objects.Light.html#TinyLife_Objects_Light_Texture
  name: Texture
  nameWithType: Light.Texture
  fullName: TinyLife.Objects.Light.Texture
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.Objects.Light.CircleTexture
  commentId: F:TinyLife.Objects.Light.CircleTexture
  href: TinyLife.Objects.Light.html#TinyLife_Objects_Light_CircleTexture
  name: CircleTexture
  nameWithType: Light.CircleTexture
  fullName: TinyLife.Objects.Light.CircleTexture
- uid: TinyLife.World.MapSection
  commentId: T:TinyLife.World.MapSection
  parent: TinyLife.World
  href: TinyLife.World.MapSection.html
  name: MapSection
  nameWithType: MapSection
  fullName: TinyLife.World.MapSection
- uid: TinyLife.Objects.Light.Position*
  commentId: Overload:TinyLife.Objects.Light.Position
  href: TinyLife.Objects.Light.html#TinyLife_Objects_Light_Position
  name: Position
  nameWithType: Light.Position
  fullName: TinyLife.Objects.Light.Position
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Objects.Light.Position
  commentId: P:TinyLife.Objects.Light.Position
  href: TinyLife.Objects.Light.html#TinyLife_Objects_Light_Position
  name: Position
  nameWithType: Light.Position
  fullName: TinyLife.Objects.Light.Position
- uid: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_ToScreenPos_Microsoft_Xna_Framework_Vector2_System_Single_System_Boolean_System_Boolean_System_Boolean_
  name: ToScreenPos(Vector2, float, bool, bool, bool)
  nameWithType: Extensions.ToScreenPos(Vector2, float, bool, bool, bool)
  fullName: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2, float, bool, bool, bool)
  nameWithType.vb: Extensions.ToScreenPos(Vector2, Single, Boolean, Boolean, Boolean)
  fullName.vb: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2, Single, Boolean, Boolean, Boolean)
  name.vb: ToScreenPos(Vector2, Single, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean,System.Boolean,System.Boolean)
    name: ToScreenPos
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_ToScreenPos_Microsoft_Xna_Framework_Vector2_System_Single_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean,System.Boolean,System.Boolean)
    name: ToScreenPos
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_ToScreenPos_Microsoft_Xna_Framework_Vector2_System_Single_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  isExternal: true
  href: TinyLife.Objects.Light.html#TinyLife_Objects_Light_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  name: Draw(GameTime, SpriteBatch)
  nameWithType: Light.Draw(GameTime, SpriteBatch)
  fullName: TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch)
  spec.csharp:
  - uid: TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
    name: Draw
    href: TinyLife.Objects.Light.html#TinyLife_Objects_Light_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
    name: Draw
    href: TinyLife.Objects.Light.html#TinyLife_Objects_Light_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: )
- uid: TinyLife.Utilities.TextureHandler.TileSize
  commentId: P:TinyLife.Utilities.TextureHandler.TileSize
  href: TinyLife.Utilities.TextureHandler.html#TinyLife_Utilities_TextureHandler_TileSize
  name: TileSize
  nameWithType: TextureHandler.TileSize
  fullName: TinyLife.Utilities.TextureHandler.TileSize
- uid: MLEM.Graphics.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
  commentId: M:MLEM.Graphics.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
  isExternal: true
  name: Invert(Color)
  nameWithType: ColorExtensions.Invert(Color)
  fullName: MLEM.Graphics.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
  spec.csharp:
  - uid: MLEM.Graphics.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
    name: Invert
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Graphics.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
    name: Invert
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.Light.#ctor*
  commentId: Overload:TinyLife.Objects.Light.#ctor
  href: TinyLife.Objects.Light.html#TinyLife_Objects_Light__ctor_TinyLife_World_Map_Microsoft_Xna_Framework_Vector2_System_Single_MLEM_Textures_TextureRegion_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Color_
  name: Light
  nameWithType: Light.Light
  fullName: TinyLife.Objects.Light.Light
  nameWithType.vb: Light.New
  fullName.vb: TinyLife.Objects.Light.New
  name.vb: New
- uid: TinyLife.Objects.Light.Color
  commentId: F:TinyLife.Objects.Light.Color
  href: TinyLife.Objects.Light.html#TinyLife_Objects_Light_Color
  name: Color
  nameWithType: Light.Color
  fullName: TinyLife.Objects.Light.Color
- uid: TinyLife.Objects.Light.Draw*
  commentId: Overload:TinyLife.Objects.Light.Draw
  href: TinyLife.Objects.Light.html#TinyLife_Objects_Light_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  name: Draw
  nameWithType: Light.Draw
  fullName: TinyLife.Objects.Light.Draw
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
