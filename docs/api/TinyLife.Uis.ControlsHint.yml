### YamlMime:ManagedReference
items:
- uid: TinyLife.Uis.ControlsHint
  commentId: T:TinyLife.Uis.ControlsHint
  id: ControlsHint
  parent: TinyLife.Uis
  children:
  - TinyLife.Uis.ControlsHint.#ctor(System.String,System.Func{TinyLife.Options,System.Boolean,System.Object},System.Func{TinyLife.GameImpl,System.Boolean})
  - TinyLife.Uis.ControlsHint.Hints
  - TinyLife.Uis.ControlsHint.Keybind
  - TinyLife.Uis.ControlsHint.Name
  - TinyLife.Uis.ControlsHint.Register(TinyLife.Uis.ControlsHint)
  - TinyLife.Uis.ControlsHint.ShouldDisplay
  langs:
  - csharp
  - vb
  name: ControlsHint
  nameWithType: ControlsHint
  fullName: TinyLife.Uis.ControlsHint
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: >-
    A controls hint is a set of information that is displayed in the bottom-right corner of the game that is supposed to help the player with the game's controls.

    Each controls hint has a condition as well as a set of bindings and a string that it should display.
  example: []
  syntax:
    content: public class ControlsHint
    content.vb: Public Class ControlsHint
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Uis.ControlsHint.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Uis.ControlsHint.Hints
  commentId: F:TinyLife.Uis.ControlsHint.Hints
  id: Hints
  parent: TinyLife.Uis.ControlsHint
  langs:
  - csharp
  - vb
  name: Hints
  nameWithType: ControlsHint.Hints
  fullName: TinyLife.Uis.ControlsHint.Hints
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: A set of registered hints, both by mods and by the game itself.
  example: []
  syntax:
    content: public static readonly ReadOnlyCollection<ControlsHint> Hints
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{TinyLife.Uis.ControlsHint}
    content.vb: Public Shared ReadOnly Hints As ReadOnlyCollection(Of ControlsHint)
- uid: TinyLife.Uis.ControlsHint.Name
  commentId: F:TinyLife.Uis.ControlsHint.Name
  id: Name
  parent: TinyLife.Uis.ControlsHint
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ControlsHint.Name
  fullName: TinyLife.Uis.ControlsHint.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: The name of this controls hint.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Uis.ControlsHint.Keybind
  commentId: F:TinyLife.Uis.ControlsHint.Keybind
  id: Keybind
  parent: TinyLife.Uis.ControlsHint
  langs:
  - csharp
  - vb
  name: Keybind
  nameWithType: ControlsHint.Keybind
  fullName: TinyLife.Uis.ControlsHint.Keybind
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: >-
    A function that returns the keybind that should be displayed, based on the current <xref href="TinyLife.Options" data-throw-if-not-resolved="false"></xref> instance, and whether <xref href="MLEM.Ui.UiControls.IsAutoNavMode" data-throw-if-not-resolved="false"></xref> is true.

    Returned bindings can be of type <xref href="Microsoft.Xna.Framework.Input.Keys" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Input.MouseButton" data-throw-if-not-resolved="false"></xref>, <xref href="Microsoft.Xna.Framework.Input.Buttons" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Input.GenericInput" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Input.ModifierKey" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Uis.ControlsHint.Keybind" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly Func<Options, bool, object> Keybind
    return:
      type: System.Func{TinyLife.Options,System.Boolean,System.Object}
    content.vb: Public ReadOnly Keybind As Func(Of Options, Boolean, Object)
- uid: TinyLife.Uis.ControlsHint.ShouldDisplay
  commentId: F:TinyLife.Uis.ControlsHint.ShouldDisplay
  id: ShouldDisplay
  parent: TinyLife.Uis.ControlsHint
  langs:
  - csharp
  - vb
  name: ShouldDisplay
  nameWithType: ControlsHint.ShouldDisplay
  fullName: TinyLife.Uis.ControlsHint.ShouldDisplay
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: Whether this controls hint should currently be displayed, based on the current <xref href="TinyLife.Options" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public readonly Func<GameImpl, bool> ShouldDisplay
    return:
      type: System.Func{TinyLife.GameImpl,System.Boolean}
    content.vb: Public ReadOnly ShouldDisplay As Func(Of GameImpl, Boolean)
- uid: TinyLife.Uis.ControlsHint.#ctor(System.String,System.Func{TinyLife.Options,System.Boolean,System.Object},System.Func{TinyLife.GameImpl,System.Boolean})
  commentId: M:TinyLife.Uis.ControlsHint.#ctor(System.String,System.Func{TinyLife.Options,System.Boolean,System.Object},System.Func{TinyLife.GameImpl,System.Boolean})
  id: '#ctor(System.String,System.Func{TinyLife.Options,System.Boolean,System.Object},System.Func{TinyLife.GameImpl,System.Boolean})'
  parent: TinyLife.Uis.ControlsHint
  langs:
  - csharp
  - vb
  name: ControlsHint(string, Func<Options, bool, object>, Func<GameImpl, bool>)
  nameWithType: ControlsHint.ControlsHint(string, Func<Options, bool, object>, Func<GameImpl, bool>)
  fullName: TinyLife.Uis.ControlsHint.ControlsHint(string, System.Func<TinyLife.Options, bool, object>, System.Func<TinyLife.GameImpl, bool>)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: Creates a new controls hint with the given settings.
  example: []
  syntax:
    content: public ControlsHint(string name, Func<Options, bool, object> keybind, Func<GameImpl, bool> shouldDisplay)
    parameters:
    - id: name
      type: System.String
      description: The name of this controls hint.
    - id: keybind
      type: System.Func{TinyLife.Options,System.Boolean,System.Object}
      description: A function that returns the keybind that should be displayed, based on the current <xref href="TinyLife.Options" data-throw-if-not-resolved="false"></xref> instance, and whether <xref href="MLEM.Ui.UiControls.IsAutoNavMode" data-throw-if-not-resolved="false"></xref> is true. Returned bindings can be of type <xref href="Microsoft.Xna.Framework.Input.Keys" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Input.MouseButton" data-throw-if-not-resolved="false"></xref>, <xref href="Microsoft.Xna.Framework.Input.Buttons" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Input.GenericInput" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Input.ModifierKey" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Uis.ControlsHint.Keybind" data-throw-if-not-resolved="false"></xref>.
    - id: shouldDisplay
      type: System.Func{TinyLife.GameImpl,System.Boolean}
      description: Whether this controls hint should currently be displayed, based on the current <xref href="TinyLife.Options" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Sub New(name As String, keybind As Func(Of Options, Boolean, Object), shouldDisplay As Func(Of GameImpl, Boolean))
  overload: TinyLife.Uis.ControlsHint.#ctor*
  nameWithType.vb: ControlsHint.New(String, Func(Of Options, Boolean, Object), Func(Of GameImpl, Boolean))
  fullName.vb: TinyLife.Uis.ControlsHint.New(String, System.Func(Of TinyLife.Options, Boolean, Object), System.Func(Of TinyLife.GameImpl, Boolean))
  name.vb: New(String, Func(Of Options, Boolean, Object), Func(Of GameImpl, Boolean))
- uid: TinyLife.Uis.ControlsHint.Register(TinyLife.Uis.ControlsHint)
  commentId: M:TinyLife.Uis.ControlsHint.Register(TinyLife.Uis.ControlsHint)
  id: Register(TinyLife.Uis.ControlsHint)
  parent: TinyLife.Uis.ControlsHint
  langs:
  - csharp
  - vb
  name: Register(ControlsHint)
  nameWithType: ControlsHint.Register(ControlsHint)
  fullName: TinyLife.Uis.ControlsHint.Register(TinyLife.Uis.ControlsHint)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: Registers the given controls hint to the <xref href="TinyLife.Uis.ControlsHint.Hints" data-throw-if-not-resolved="false"></xref> registry.
  example: []
  syntax:
    content: public static ControlsHint Register(ControlsHint hint)
    parameters:
    - id: hint
      type: TinyLife.Uis.ControlsHint
      description: The hint to register.
    return:
      type: TinyLife.Uis.ControlsHint
      description: The passed <code class="paramref">hint</code>, for chaining.
    content.vb: Public Shared Function Register(hint As ControlsHint) As ControlsHint
  overload: TinyLife.Uis.ControlsHint.Register*
references:
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  href: TinyLife.html
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Uis.ControlsHint.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<ControlsHint>(ControlsHint)
  nameWithType: Extensions.JsonCopy<ControlsHint>(ControlsHint)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Uis.ControlsHint>(TinyLife.Uis.ControlsHint)
  nameWithType.vb: Extensions.JsonCopy(Of ControlsHint)(ControlsHint)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Uis.ControlsHint)(TinyLife.Uis.ControlsHint)
  name.vb: JsonCopy(Of ControlsHint)(ControlsHint)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Uis.ControlsHint)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Uis.ControlsHint
    name: ControlsHint
    href: TinyLife.Uis.ControlsHint.html
  - name: '>'
  - name: (
  - uid: TinyLife.Uis.ControlsHint
    name: ControlsHint
    href: TinyLife.Uis.ControlsHint.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Uis.ControlsHint)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Uis.ControlsHint
    name: ControlsHint
    href: TinyLife.Uis.ControlsHint.html
  - name: )
  - name: (
  - uid: TinyLife.Uis.ControlsHint
    name: ControlsHint
    href: TinyLife.Uis.ControlsHint.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.Collections.ObjectModel.ReadOnlyCollection{TinyLife.Uis.ControlsHint}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{TinyLife.Uis.ControlsHint}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<ControlsHint>
  nameWithType: ReadOnlyCollection<ControlsHint>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<TinyLife.Uis.ControlsHint>
  nameWithType.vb: ReadOnlyCollection(Of ControlsHint)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of TinyLife.Uis.ControlsHint)
  name.vb: ReadOnlyCollection(Of ControlsHint)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: TinyLife.Uis.ControlsHint
    name: ControlsHint
    href: TinyLife.Uis.ControlsHint.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Uis.ControlsHint
    name: ControlsHint
    href: TinyLife.Uis.ControlsHint.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Options
  commentId: T:TinyLife.Options
  parent: TinyLife
  href: TinyLife.Options.html
  name: Options
  nameWithType: Options
  fullName: TinyLife.Options
- uid: MLEM.Ui.UiControls.IsAutoNavMode
  commentId: P:MLEM.Ui.UiControls.IsAutoNavMode
  isExternal: true
  name: IsAutoNavMode
  nameWithType: UiControls.IsAutoNavMode
  fullName: MLEM.Ui.UiControls.IsAutoNavMode
- uid: Microsoft.Xna.Framework.Input.Keys
  commentId: T:Microsoft.Xna.Framework.Input.Keys
  isExternal: true
  name: Keys
  nameWithType: Keys
  fullName: Microsoft.Xna.Framework.Input.Keys
- uid: MLEM.Input.MouseButton
  commentId: T:MLEM.Input.MouseButton
  parent: MLEM.Input
  isExternal: true
  name: MouseButton
  nameWithType: MouseButton
  fullName: MLEM.Input.MouseButton
- uid: Microsoft.Xna.Framework.Input.Buttons
  commentId: T:Microsoft.Xna.Framework.Input.Buttons
  parent: Microsoft.Xna.Framework.Input
  isExternal: true
  name: Buttons
  nameWithType: Buttons
  fullName: Microsoft.Xna.Framework.Input.Buttons
- uid: MLEM.Input.GenericInput
  commentId: T:MLEM.Input.GenericInput
  isExternal: true
  name: GenericInput
  nameWithType: GenericInput
  fullName: MLEM.Input.GenericInput
- uid: MLEM.Input.ModifierKey
  commentId: T:MLEM.Input.ModifierKey
  isExternal: true
  name: ModifierKey
  nameWithType: ModifierKey
  fullName: MLEM.Input.ModifierKey
- uid: TinyLife.Uis.ControlsHint.Keybind
  commentId: F:TinyLife.Uis.ControlsHint.Keybind
  href: TinyLife.Uis.ControlsHint.html#TinyLife_Uis_ControlsHint_Keybind
  name: Keybind
  nameWithType: ControlsHint.Keybind
  fullName: TinyLife.Uis.ControlsHint.Keybind
- uid: System.Func{TinyLife.Options,System.Boolean,System.Object}
  commentId: T:System.Func{TinyLife.Options,System.Boolean,System.Object}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<Options, bool, object>
  nameWithType: Func<Options, bool, object>
  fullName: System.Func<TinyLife.Options, bool, object>
  nameWithType.vb: Func(Of Options, Boolean, Object)
  fullName.vb: System.Func(Of TinyLife.Options, Boolean, Object)
  name.vb: Func(Of Options, Boolean, Object)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: TinyLife.Options
    name: Options
    href: TinyLife.Options.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Options
    name: Options
    href: TinyLife.Options.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: MLEM.Input
  commentId: N:MLEM.Input
  isExternal: true
  name: MLEM.Input
  nameWithType: MLEM.Input
  fullName: MLEM.Input
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Input
    name: Input
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Input
    name: Input
    isExternal: true
- uid: Microsoft.Xna.Framework.Input
  commentId: N:Microsoft.Xna.Framework.Input
  isExternal: true
  name: Microsoft.Xna.Framework.Input
  nameWithType: Microsoft.Xna.Framework.Input
  fullName: Microsoft.Xna.Framework.Input
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Input
    name: Input
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Input
    name: Input
    isExternal: true
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{TinyLife.GameImpl,System.Boolean}
  commentId: T:System.Func{TinyLife.GameImpl,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<GameImpl, bool>
  nameWithType: Func<GameImpl, bool>
  fullName: System.Func<TinyLife.GameImpl, bool>
  nameWithType.vb: Func(Of GameImpl, Boolean)
  fullName.vb: System.Func(Of TinyLife.GameImpl, Boolean)
  name.vb: Func(Of GameImpl, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Uis.ControlsHint.#ctor*
  commentId: Overload:TinyLife.Uis.ControlsHint.#ctor
  href: TinyLife.Uis.ControlsHint.html#TinyLife_Uis_ControlsHint__ctor_System_String_System_Func_TinyLife_Options_System_Boolean_System_Object__System_Func_TinyLife_GameImpl_System_Boolean__
  name: ControlsHint
  nameWithType: ControlsHint.ControlsHint
  fullName: TinyLife.Uis.ControlsHint.ControlsHint
  nameWithType.vb: ControlsHint.New
  fullName.vb: TinyLife.Uis.ControlsHint.New
  name.vb: New
- uid: TinyLife.Uis.ControlsHint.Hints
  commentId: F:TinyLife.Uis.ControlsHint.Hints
  href: TinyLife.Uis.ControlsHint.html#TinyLife_Uis_ControlsHint_Hints
  name: Hints
  nameWithType: ControlsHint.Hints
  fullName: TinyLife.Uis.ControlsHint.Hints
- uid: TinyLife.Uis.ControlsHint.Register*
  commentId: Overload:TinyLife.Uis.ControlsHint.Register
  href: TinyLife.Uis.ControlsHint.html#TinyLife_Uis_ControlsHint_Register_TinyLife_Uis_ControlsHint_
  name: Register
  nameWithType: ControlsHint.Register
  fullName: TinyLife.Uis.ControlsHint.Register
- uid: TinyLife.Uis.ControlsHint
  commentId: T:TinyLife.Uis.ControlsHint
  parent: TinyLife.Uis
  href: TinyLife.Uis.ControlsHint.html
  name: ControlsHint
  nameWithType: ControlsHint
  fullName: TinyLife.Uis.ControlsHint
