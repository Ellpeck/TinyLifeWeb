### YamlMime:ManagedReference
items:
- uid: TinyLife.Uis.MapSelectUi
  commentId: T:TinyLife.Uis.MapSelectUi
  id: MapSelectUi
  parent: TinyLife.Uis
  children:
  - TinyLife.Uis.MapSelectUi.GetHoveredLot
  - TinyLife.Uis.MapSelectUi.OpenSplitMenu(TinyLife.World.Household,TinyLife.World.Lot,System.Action{TinyLife.Uis.CoveringGroup})
  langs:
  - csharp
  - vb
  name: MapSelectUi
  nameWithType: MapSelectUi
  fullName: TinyLife.Uis.MapSelectUi
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: A class that stores information about the map selection ui, which is called "household selection area" in-game.
  example: []
  syntax:
    content: public static class MapSelectUi
    content.vb: Public Module MapSelectUi
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TinyLife.Uis.MapSelectUi.GetHoveredLot
  commentId: M:TinyLife.Uis.MapSelectUi.GetHoveredLot
  id: GetHoveredLot
  parent: TinyLife.Uis.MapSelectUi
  langs:
  - csharp
  - vb
  name: GetHoveredLot()
  nameWithType: MapSelectUi.GetHoveredLot()
  fullName: TinyLife.Uis.MapSelectUi.GetHoveredLot()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: Returns the lot  that is currently being hovered by the mouse.
  example: []
  syntax:
    content: public static Lot GetHoveredLot()
    return:
      type: TinyLife.World.Lot
      description: The hovered lot.
    content.vb: Public Shared Function GetHoveredLot() As Lot
  overload: TinyLife.Uis.MapSelectUi.GetHoveredLot*
- uid: TinyLife.Uis.MapSelectUi.OpenSplitMenu(TinyLife.World.Household,TinyLife.World.Lot,System.Action{TinyLife.Uis.CoveringGroup})
  commentId: M:TinyLife.Uis.MapSelectUi.OpenSplitMenu(TinyLife.World.Household,TinyLife.World.Lot,System.Action{TinyLife.Uis.CoveringGroup})
  id: OpenSplitMenu(TinyLife.World.Household,TinyLife.World.Lot,System.Action{TinyLife.Uis.CoveringGroup})
  parent: TinyLife.Uis.MapSelectUi
  langs:
  - csharp
  - vb
  name: OpenSplitMenu(Household, Lot, Action<CoveringGroup>)
  nameWithType: MapSelectUi.OpenSplitMenu(Household, Lot, Action<CoveringGroup>)
  fullName: TinyLife.Uis.MapSelectUi.OpenSplitMenu(TinyLife.World.Household, TinyLife.World.Lot, System.Action<TinyLife.Uis.CoveringGroup>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: Opens a menu that can be used to split a household into two, optionally adding the split household to a new lot with or without a household.
  example: []
  syntax:
    content: public static void OpenSplitMenu(Household household, Lot newLot = null, Action<CoveringGroup> onDone = null)
    parameters:
    - id: household
      type: TinyLife.World.Household
      description: The household to split.
    - id: newLot
      type: TinyLife.World.Lot
      description: A new lot for the split household to occupy. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, the split household will be exported instead.
    - id: onDone
      type: System.Action{TinyLife.Uis.CoveringGroup}
      description: An action that is invoked when the Done button is pressed successfully.
    content.vb: Public Shared Sub OpenSplitMenu(household As Household, newLot As Lot = Nothing, onDone As Action(Of CoveringGroup) = Nothing)
  overload: TinyLife.Uis.MapSelectUi.OpenSplitMenu*
  nameWithType.vb: MapSelectUi.OpenSplitMenu(Household, Lot, Action(Of CoveringGroup))
  fullName.vb: TinyLife.Uis.MapSelectUi.OpenSplitMenu(TinyLife.World.Household, TinyLife.World.Lot, System.Action(Of TinyLife.Uis.CoveringGroup))
  name.vb: OpenSplitMenu(Household, Lot, Action(Of CoveringGroup))
references:
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  href: TinyLife.html
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Uis.MapSelectUi.GetHoveredLot*
  commentId: Overload:TinyLife.Uis.MapSelectUi.GetHoveredLot
  href: TinyLife.Uis.MapSelectUi.html#TinyLife_Uis_MapSelectUi_GetHoveredLot
  name: GetHoveredLot
  nameWithType: MapSelectUi.GetHoveredLot
  fullName: TinyLife.Uis.MapSelectUi.GetHoveredLot
- uid: TinyLife.World.Lot
  commentId: T:TinyLife.World.Lot
  parent: TinyLife.World
  href: TinyLife.World.Lot.html
  name: Lot
  nameWithType: Lot
  fullName: TinyLife.World.Lot
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.Uis.MapSelectUi.OpenSplitMenu*
  commentId: Overload:TinyLife.Uis.MapSelectUi.OpenSplitMenu
  href: TinyLife.Uis.MapSelectUi.html#TinyLife_Uis_MapSelectUi_OpenSplitMenu_TinyLife_World_Household_TinyLife_World_Lot_System_Action_TinyLife_Uis_CoveringGroup__
  name: OpenSplitMenu
  nameWithType: MapSelectUi.OpenSplitMenu
  fullName: TinyLife.Uis.MapSelectUi.OpenSplitMenu
- uid: TinyLife.World.Household
  commentId: T:TinyLife.World.Household
  parent: TinyLife.World
  href: TinyLife.World.Household.html
  name: Household
  nameWithType: Household
  fullName: TinyLife.World.Household
- uid: System.Action{TinyLife.Uis.CoveringGroup}
  commentId: T:System.Action{TinyLife.Uis.CoveringGroup}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<CoveringGroup>
  nameWithType: Action<CoveringGroup>
  fullName: System.Action<TinyLife.Uis.CoveringGroup>
  nameWithType.vb: Action(Of CoveringGroup)
  fullName.vb: System.Action(Of TinyLife.Uis.CoveringGroup)
  name.vb: Action(Of CoveringGroup)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
    href: TinyLife.Uis.CoveringGroup.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
    href: TinyLife.Uis.CoveringGroup.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
