### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.ILightObject
  commentId: T:TinyLife.Objects.ILightObject
  id: ILightObject
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.ILightObject.CreateLights``1(``0)
  - TinyLife.Objects.ILightObject.IsDisabled
  - TinyLife.Objects.ILightObject.LightSettings
  - TinyLife.Objects.ILightObject.Lights
  - TinyLife.Objects.ILightObject.Update``1(``0,Microsoft.Xna.Framework.GameTime,System.Single,System.Random,System.Single@,System.Single)
  langs:
  - csharp
  - vb
  name: ILightObject
  nameWithType: ILightObject
  fullName: TinyLife.Objects.ILightObject
  type: Interface
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: An interface that can be applied to <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref> instances to give them easy-to-set-up light properties based on a set of <xref href="TinyLife.Objects.ILightObject.Settings" data-throw-if-not-resolved="false"></xref>. A default implementation of a <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> object with this interface is <xref href="TinyLife.Objects.LightFurniture" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public interface ILightObject
    content.vb: Public Interface ILightObject
  extensionMethods:
  - TinyLife.Objects.ILightObject.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.ILightObject.Lights
  commentId: P:TinyLife.Objects.ILightObject.Lights
  id: Lights
  parent: TinyLife.Objects.ILightObject
  langs:
  - csharp
  - vb
  name: Lights
  nameWithType: ILightObject.Lights
  fullName: TinyLife.Objects.ILightObject.Lights
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The lights that are currently in the world, based on this light object
  example: []
  syntax:
    content: Light[] Lights { get; }
    parameters: []
    return:
      type: TinyLife.Objects.Light[]
    content.vb: ReadOnly Property Lights As Light()
  overload: TinyLife.Objects.ILightObject.Lights*
- uid: TinyLife.Objects.ILightObject.IsDisabled
  commentId: P:TinyLife.Objects.ILightObject.IsDisabled
  id: IsDisabled
  parent: TinyLife.Objects.ILightObject
  langs:
  - csharp
  - vb
  name: IsDisabled
  nameWithType: ILightObject.IsDisabled
  fullName: TinyLife.Objects.ILightObject.IsDisabled
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Whether this light is currently disabled.

    Note that a light also gets disabled if this object <xref href="TinyLife.Objects.ILightObject.Settings.IsElectrical" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.Furniture.AreUtilitiesDisabled" data-throw-if-not-resolved="false"></xref> is true, but this field will not be set to true in that case.
  example: []
  syntax:
    content: bool IsDisabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsDisabled As Boolean
  overload: TinyLife.Objects.ILightObject.IsDisabled*
- uid: TinyLife.Objects.ILightObject.LightSettings
  commentId: P:TinyLife.Objects.ILightObject.LightSettings
  id: LightSettings
  parent: TinyLife.Objects.ILightObject
  langs:
  - csharp
  - vb
  name: LightSettings
  nameWithType: ILightObject.LightSettings
  fullName: TinyLife.Objects.ILightObject.LightSettings
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: The <xref href="TinyLife.Objects.ILightObject.Settings" data-throw-if-not-resolved="false"></xref> that this light object operates under.
  example: []
  syntax:
    content: ILightObject.Settings LightSettings { get; }
    parameters: []
    return:
      type: TinyLife.Objects.ILightObject.Settings
    content.vb: ReadOnly Property LightSettings As ILightObject.Settings
  overload: TinyLife.Objects.ILightObject.LightSettings*
- uid: TinyLife.Objects.ILightObject.Update``1(``0,Microsoft.Xna.Framework.GameTime,System.Single,System.Random,System.Single@,System.Single)
  commentId: M:TinyLife.Objects.ILightObject.Update``1(``0,Microsoft.Xna.Framework.GameTime,System.Single,System.Random,System.Single@,System.Single)
  id: Update``1(``0,Microsoft.Xna.Framework.GameTime,System.Single,System.Random,System.Single@,System.Single)
  parent: TinyLife.Objects.ILightObject
  langs:
  - csharp
  - vb
  name: Update<T>(T, GameTime, float, Random, ref float, float)
  nameWithType: ILightObject.Update<T>(T, GameTime, float, Random, ref float, float)
  fullName: TinyLife.Objects.ILightObject.Update<T>(T, Microsoft.Xna.Framework.GameTime, float, System.Random, ref float, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Causes a <xref href="TinyLife.Objects.ILightObject" data-throw-if-not-resolved="false"></xref> instance to be updated, namely displaying its visuals and enabling or disabling it based on automatic lighting settings and electrical properties.
  example: []
  syntax:
    content: 'protected static void Update<T>(T obj, GameTime time, float speedMultiplier, Random random, ref float flickerTimer, float randomToggleDelaySeconds = 0) where T : MapObject, ILightObject'
    parameters:
    - id: obj
      type: '{T}'
      description: The light object to update.
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current game time.
    - id: speedMultiplier
      type: System.Single
      description: The game's current speed multiplier.
    - id: random
      type: System.Random
      description: A random instance to be used for visuals.
    - id: flickerTimer
      type: System.Single
      description: A timer that is used to store the amount of time that has passed for the purpose of causing the light to flicker or pulsate visually. The flickerTimer timer is added onto in this method. Generally, the flicker timer is short-lived and does not need to be stored to disk by implementers.
    - id: randomToggleDelaySeconds
      type: System.Single
      description: An amount of real-life seconds that should pass before the light object is turned on or of iff <xref href="TinyLife.Objects.ILightObject.Settings.IsAutomatic" data-throw-if-not-resolved="false"></xref> is set. If this is 0 for all light objects, they will automatically enable and disable at exactly 6 and 21 o'clock, respectively.
    typeParameters:
    - id: T
    content.vb: Protected Shared Sub Update(Of T As {MapObject, ILightObject})(obj As T, time As GameTime, speedMultiplier As Single, random As Random, flickerTimer As Single, randomToggleDelaySeconds As Single = 0)
  overload: TinyLife.Objects.ILightObject.Update*
  nameWithType.vb: ILightObject.Update(Of T)(T, GameTime, Single, Random, Single, Single)
  fullName.vb: TinyLife.Objects.ILightObject.Update(Of T)(T, Microsoft.Xna.Framework.GameTime, Single, System.Random, Single, Single)
  name.vb: Update(Of T)(T, GameTime, Single, Random, Single, Single)
- uid: TinyLife.Objects.ILightObject.CreateLights``1(``0)
  commentId: M:TinyLife.Objects.ILightObject.CreateLights``1(``0)
  id: CreateLights``1(``0)
  parent: TinyLife.Objects.ILightObject
  langs:
  - csharp
  - vb
  name: CreateLights<T>(T)
  nameWithType: ILightObject.CreateLights<T>(T)
  fullName: TinyLife.Objects.ILightObject.CreateLights<T>(T)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This method is called when this furniture's lights should get initialized.

    By default, this method calls <xref href="TinyLife.Objects.ILightObject.Settings.CreateLights" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'protected static IEnumerable<Light> CreateLights<T>(T obj) where T : MapObject, ILightObject'
    parameters:
    - id: obj
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.Light}
      description: The lights that this object should have
    content.vb: Protected Shared Function CreateLights(Of T As {MapObject, ILightObject})(obj As T) As IEnumerable(Of Light)
  overload: TinyLife.Objects.ILightObject.CreateLights*
  nameWithType.vb: ILightObject.CreateLights(Of T)(T)
  fullName.vb: TinyLife.Objects.ILightObject.CreateLights(Of T)(T)
  name.vb: CreateLights(Of T)(T)
references:
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Objects.ILightObject.Settings
  commentId: T:TinyLife.Objects.ILightObject.Settings
  parent: TinyLife.Objects
  href: TinyLife.Objects.ILightObject.html
  name: ILightObject.Settings
  nameWithType: ILightObject.Settings
  fullName: TinyLife.Objects.ILightObject.Settings
  spec.csharp:
  - uid: TinyLife.Objects.ILightObject
    name: ILightObject
    href: TinyLife.Objects.ILightObject.html
  - name: .
  - uid: TinyLife.Objects.ILightObject.Settings
    name: Settings
    href: TinyLife.Objects.ILightObject.Settings.html
  spec.vb:
  - uid: TinyLife.Objects.ILightObject
    name: ILightObject
    href: TinyLife.Objects.ILightObject.html
  - name: .
  - uid: TinyLife.Objects.ILightObject.Settings
    name: Settings
    href: TinyLife.Objects.ILightObject.Settings.html
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects.LightFurniture
  commentId: T:TinyLife.Objects.LightFurniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.LightFurniture.html
  name: LightFurniture
  nameWithType: LightFurniture
  fullName: TinyLife.Objects.LightFurniture
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Objects.ILightObject.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<ILightObject>(ILightObject)
  nameWithType: Extensions.JsonCopy<ILightObject>(ILightObject)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.ILightObject>(TinyLife.Objects.ILightObject)
  nameWithType.vb: Extensions.JsonCopy(Of ILightObject)(ILightObject)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.ILightObject)(TinyLife.Objects.ILightObject)
  name.vb: JsonCopy(Of ILightObject)(ILightObject)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.ILightObject)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.ILightObject
    name: ILightObject
    href: TinyLife.Objects.ILightObject.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.ILightObject
    name: ILightObject
    href: TinyLife.Objects.ILightObject.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.ILightObject)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.ILightObject
    name: ILightObject
    href: TinyLife.Objects.ILightObject.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.ILightObject
    name: ILightObject
    href: TinyLife.Objects.ILightObject.html
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.ILightObject.Lights*
  commentId: Overload:TinyLife.Objects.ILightObject.Lights
  href: TinyLife.Objects.ILightObject.html#TinyLife_Objects_ILightObject_Lights
  name: Lights
  nameWithType: ILightObject.Lights
  fullName: TinyLife.Objects.ILightObject.Lights
- uid: TinyLife.Objects.Light[]
  isExternal: true
  href: TinyLife.Objects.Light.html
  name: Light[]
  nameWithType: Light[]
  fullName: TinyLife.Objects.Light[]
  nameWithType.vb: Light()
  fullName.vb: TinyLife.Objects.Light()
  name.vb: Light()
  spec.csharp:
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: (
  - name: )
- uid: TinyLife.Objects.ILightObject.Settings.IsElectrical
  commentId: F:TinyLife.Objects.ILightObject.Settings.IsElectrical
  href: TinyLife.Objects.ILightObject.Settings.html#TinyLife_Objects_ILightObject_Settings_IsElectrical
  name: IsElectrical
  nameWithType: ILightObject.Settings.IsElectrical
  fullName: TinyLife.Objects.ILightObject.Settings.IsElectrical
- uid: TinyLife.Objects.Furniture.AreUtilitiesDisabled
  commentId: P:TinyLife.Objects.Furniture.AreUtilitiesDisabled
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_AreUtilitiesDisabled
  name: AreUtilitiesDisabled
  nameWithType: Furniture.AreUtilitiesDisabled
  fullName: TinyLife.Objects.Furniture.AreUtilitiesDisabled
- uid: TinyLife.Objects.ILightObject.IsDisabled*
  commentId: Overload:TinyLife.Objects.ILightObject.IsDisabled
  href: TinyLife.Objects.ILightObject.html#TinyLife_Objects_ILightObject_IsDisabled
  name: IsDisabled
  nameWithType: ILightObject.IsDisabled
  fullName: TinyLife.Objects.ILightObject.IsDisabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Objects.ILightObject.LightSettings*
  commentId: Overload:TinyLife.Objects.ILightObject.LightSettings
  href: TinyLife.Objects.ILightObject.html#TinyLife_Objects_ILightObject_LightSettings
  name: LightSettings
  nameWithType: ILightObject.LightSettings
  fullName: TinyLife.Objects.ILightObject.LightSettings
- uid: TinyLife.Objects.ILightObject
  commentId: T:TinyLife.Objects.ILightObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.ILightObject.html
  name: ILightObject
  nameWithType: ILightObject
  fullName: TinyLife.Objects.ILightObject
- uid: TinyLife.Objects.ILightObject.Settings.IsAutomatic
  commentId: F:TinyLife.Objects.ILightObject.Settings.IsAutomatic
  href: TinyLife.Objects.ILightObject.Settings.html#TinyLife_Objects_ILightObject_Settings_IsAutomatic
  name: IsAutomatic
  nameWithType: ILightObject.Settings.IsAutomatic
  fullName: TinyLife.Objects.ILightObject.Settings.IsAutomatic
- uid: TinyLife.Objects.ILightObject.Update*
  commentId: Overload:TinyLife.Objects.ILightObject.Update
  href: TinyLife.Objects.ILightObject.html#TinyLife_Objects_ILightObject_Update__1___0_Microsoft_Xna_Framework_GameTime_System_Single_System_Random_System_Single__System_Single_
  name: Update
  nameWithType: ILightObject.Update
  fullName: TinyLife.Objects.ILightObject.Update
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Objects.ILightObject.Settings.CreateLights
  commentId: F:TinyLife.Objects.ILightObject.Settings.CreateLights
  href: TinyLife.Objects.ILightObject.Settings.html#TinyLife_Objects_ILightObject_Settings_CreateLights
  name: CreateLights
  nameWithType: ILightObject.Settings.CreateLights
  fullName: TinyLife.Objects.ILightObject.Settings.CreateLights
- uid: TinyLife.Objects.ILightObject.CreateLights*
  commentId: Overload:TinyLife.Objects.ILightObject.CreateLights
  href: TinyLife.Objects.ILightObject.html#TinyLife_Objects_ILightObject_CreateLights__1___0_
  name: CreateLights
  nameWithType: ILightObject.CreateLights
  fullName: TinyLife.Objects.ILightObject.CreateLights
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.Light}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.Light}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Light>
  nameWithType: IEnumerable<Light>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.Light>
  nameWithType.vb: IEnumerable(Of Light)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.Light)
  name.vb: IEnumerable(Of Light)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Light
    name: Light
    href: TinyLife.Objects.Light.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
