### YamlMime:ManagedReference
items:
- uid: TinyLife.GameImpl
  commentId: T:TinyLife.GameImpl
  id: GameImpl
  parent: TinyLife
  children:
  - TinyLife.GameImpl.Achievements
  - TinyLife.GameImpl.AddMapToSave(TinyLife.MapInfo,System.Action)
  - TinyLife.GameImpl.BuildModeTimeOverride
  - TinyLife.GameImpl.Camera
  - TinyLife.GameImpl.CanBeExtremelyFast
  - TinyLife.GameImpl.CanSwitchGameModes
  - TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
  - TinyLife.GameImpl.CurrentCursor
  - TinyLife.GameImpl.CurrentHousehold
  - TinyLife.GameImpl.CurrentLot
  - TinyLife.GameImpl.CurrentMap
  - TinyLife.GameImpl.CurrentMaps
  - TinyLife.GameImpl.CurrentMaxFloor
  - TinyLife.GameImpl.CurrentMinFloor
  - TinyLife.GameImpl.CurrentTool
  - TinyLife.GameImpl.CursorPosition
  - TinyLife.GameImpl.Dispose(System.Boolean)
  - TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  - TinyLife.GameImpl.DoUpdate(Microsoft.Xna.Framework.GameTime)
  - TinyLife.GameImpl.FollowPerson(TinyLife.Objects.PersonLike,System.Boolean,System.Action)
  - TinyLife.GameImpl.FollowingPerson
  - TinyLife.GameImpl.GetOwningSet(System.String)
  - TinyLife.GameImpl.GraphicsMetrics
  - TinyLife.GameImpl.Instance
  - TinyLife.GameImpl.IsCursorOnUi
  - TinyLife.GameImpl.IsLotVisible(TinyLife.World.Lot)
  - TinyLife.GameImpl.Listener
  - TinyLife.GameImpl.LoadContent
  - TinyLife.GameImpl.MarkLotNonVisible(TinyLife.World.Lot)
  - TinyLife.GameImpl.MarkLotVisible(TinyLife.World.Lot)
  - TinyLife.GameImpl.Mode
  - TinyLife.GameImpl.Money
  - TinyLife.GameImpl.OnFinalizingGameContent
  - TinyLife.GameImpl.OnFinishedLoading
  - TinyLife.GameImpl.OnSwitchGameMode
  - TinyLife.GameImpl.RemoveMapFromSave(TinyLife.World.Map)
  - TinyLife.GameImpl.RotateCamera(System.Boolean)
  - TinyLife.GameImpl.SaveName
  - TinyLife.GameImpl.Speed
  - TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  - TinyLife.GameImpl.SwitchMap(TinyLife.World.Map,System.Action,System.Action)
  - TinyLife.GameImpl.TakeScreenshot(Microsoft.Xna.Framework.Point,System.Nullable{MLEM.Maths.RectangleF},System.Nullable{Microsoft.Xna.Framework.Matrix},Microsoft.Xna.Framework.Graphics.RenderTarget2D)
  - TinyLife.GameImpl.Version
  - TinyLife.GameImpl.ZoomCamera(System.Int32)
  langs:
  - csharp
  - vb
  name: GameImpl
  nameWithType: GameImpl
  fullName: TinyLife.GameImpl
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The main class for Tiny Life, which houses a set of important game-wide properties.
  example: []
  syntax:
    content: 'public class GameImpl : MlemGame, IDisposable'
    content.vb: Public Class GameImpl Inherits MlemGame Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Game
  - MLEM.Startup.MlemGame
  implements:
  - System.IDisposable
  inheritedMembers:
  - MLEM.Startup.MlemGame.GraphicsDeviceManager
  - MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  - MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  - MLEM.Startup.MlemGame.InitializeDefaultUiStyle(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  - MLEM.Startup.MlemGame.InitializeUiSystem(MLEM.Ui.Style.UiStyle)
  - MLEM.Startup.MlemGame.InitializeInputHandler
  - MLEM.Startup.MlemGame.LoadContent``1(System.String)
  - MLEM.Startup.MlemGame.Input
  - MLEM.Startup.MlemGame.SpriteBatch
  - MLEM.Startup.MlemGame.InputHandler
  - MLEM.Startup.MlemGame.UiSystem
  - MLEM.Startup.MlemGame.OnLoadContent
  - MLEM.Startup.MlemGame.PreUpdate
  - MLEM.Startup.MlemGame.OnUpdate
  - MLEM.Startup.MlemGame.PreDraw
  - MLEM.Startup.MlemGame.OnDraw
  - Microsoft.Xna.Framework.Game.Dispose
  - Microsoft.Xna.Framework.Game.Exit
  - Microsoft.Xna.Framework.Game.ResetElapsedTime
  - Microsoft.Xna.Framework.Game.SuppressDraw
  - Microsoft.Xna.Framework.Game.RunOneFrame
  - Microsoft.Xna.Framework.Game.Run
  - Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  - Microsoft.Xna.Framework.Game.Tick
  - Microsoft.Xna.Framework.Game.BeginDraw
  - Microsoft.Xna.Framework.Game.EndDraw
  - Microsoft.Xna.Framework.Game.BeginRun
  - Microsoft.Xna.Framework.Game.EndRun
  - Microsoft.Xna.Framework.Game.UnloadContent
  - Microsoft.Xna.Framework.Game.Initialize
  - Microsoft.Xna.Framework.Game.OnExiting(System.Object,Microsoft.Xna.Framework.ExitingEventArgs)
  - Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
  - Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
  - Microsoft.Xna.Framework.Game.LaunchParameters
  - Microsoft.Xna.Framework.Game.Components
  - Microsoft.Xna.Framework.Game.InactiveSleepTime
  - Microsoft.Xna.Framework.Game.MaxElapsedTime
  - Microsoft.Xna.Framework.Game.IsActive
  - Microsoft.Xna.Framework.Game.IsMouseVisible
  - Microsoft.Xna.Framework.Game.TargetElapsedTime
  - Microsoft.Xna.Framework.Game.IsFixedTimeStep
  - Microsoft.Xna.Framework.Game.Services
  - Microsoft.Xna.Framework.Game.Content
  - Microsoft.Xna.Framework.Game.GraphicsDevice
  - Microsoft.Xna.Framework.Game.Window
  - Microsoft.Xna.Framework.Game.Activated
  - Microsoft.Xna.Framework.Game.Deactivated
  - Microsoft.Xna.Framework.Game.Disposed
  - Microsoft.Xna.Framework.Game.Exiting
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.GameImpl.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.GameImpl.Version
  commentId: F:TinyLife.GameImpl.Version
  id: Version
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: GameImpl.Version
  fullName: TinyLife.GameImpl.Version
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The game's version, gathered from the assembly
  example: []
  syntax:
    content: public static readonly NuGetVersion Version
    return:
      type: NuGet.Versioning.NuGetVersion
    content.vb: Public Shared ReadOnly Version As NuGetVersion
- uid: TinyLife.GameImpl.Instance
  commentId: P:TinyLife.GameImpl.Instance
  id: Instance
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: GameImpl.Instance
  fullName: TinyLife.GameImpl.Instance
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The game's singleton instance
  example: []
  syntax:
    content: public static GameImpl Instance { get; }
    parameters: []
    return:
      type: TinyLife.GameImpl
    content.vb: Public Shared Property Instance As GameImpl
  overload: TinyLife.GameImpl.Instance*
- uid: TinyLife.GameImpl.Achievements
  commentId: F:TinyLife.GameImpl.Achievements
  id: Achievements
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Achievements
  nameWithType: GameImpl.Achievements
  fullName: TinyLife.GameImpl.Achievements
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    A set of <xref href="TinyLife.Goals.Achievement" data-throw-if-not-resolved="false"></xref> instances being tracked on this map.

    Achievements are automatically added to this collection if they are registered as <xref href="TinyLife.Goals.AchievementType" data-throw-if-not-resolved="false"></xref> instances.

    To complete an achievement that doesn't have any goals manually, use <xref href="TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly HashSet<Achievement> Achievements
    return:
      type: System.Collections.Generic.HashSet{TinyLife.Goals.Achievement}
    content.vb: Public ReadOnly Achievements As HashSet(Of Achievement)
- uid: TinyLife.GameImpl.GraphicsMetrics
  commentId: P:TinyLife.GameImpl.GraphicsMetrics
  id: GraphicsMetrics
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: GraphicsMetrics
  nameWithType: GameImpl.GraphicsMetrics
  fullName: TinyLife.GameImpl.GraphicsMetrics
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The game's graphics metrics, gathered at the end of every <xref href="TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref> call
  example: []
  syntax:
    content: public GraphicsMetrics GraphicsMetrics { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.GraphicsMetrics
    content.vb: Public Property GraphicsMetrics As GraphicsMetrics
  overload: TinyLife.GameImpl.GraphicsMetrics*
- uid: TinyLife.GameImpl.Camera
  commentId: P:TinyLife.GameImpl.Camera
  id: Camera
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Camera
  nameWithType: GameImpl.Camera
  fullName: TinyLife.GameImpl.Camera
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The game's in-world camera, created in <xref href="TinyLife.GameImpl.LoadContent" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Camera Camera { get; }
    parameters: []
    return:
      type: MLEM.Cameras.Camera
    content.vb: Public Property Camera As Camera
  overload: TinyLife.GameImpl.Camera*
- uid: TinyLife.GameImpl.Listener
  commentId: P:TinyLife.GameImpl.Listener
  id: Listener
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Listener
  nameWithType: GameImpl.Listener
  fullName: TinyLife.GameImpl.Listener
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The game's <xref href="Microsoft.Xna.Framework.Audio.AudioListener" data-throw-if-not-resolved="false"></xref> that is automatically moved to the <xref href="TinyLife.GameImpl.Camera" data-throw-if-not-resolved="false"></xref>'s position
  example: []
  syntax:
    content: public AudioListener Listener { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Audio.AudioListener
    content.vb: Public Property Listener As AudioListener
  overload: TinyLife.GameImpl.Listener*
- uid: TinyLife.GameImpl.CurrentTool
  commentId: P:TinyLife.GameImpl.CurrentTool
  id: CurrentTool
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentTool
  nameWithType: GameImpl.CurrentTool
  fullName: TinyLife.GameImpl.CurrentTool
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The <xref href="TinyLife.Tools.Tool" data-throw-if-not-resolved="false"></xref> that is currently selected. Should always be set to either <xref href="TinyLife.Tools.Tool.PlayModeTool" data-throw-if-not-resolved="false"></xref> or any of <xref href="TinyLife.Tools.Tool.BuildTools" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Tool CurrentTool { get; set; }
    parameters: []
    return:
      type: TinyLife.Tools.Tool
    content.vb: Public Property CurrentTool As Tool
  overload: TinyLife.GameImpl.CurrentTool*
- uid: TinyLife.GameImpl.CurrentHousehold
  commentId: P:TinyLife.GameImpl.CurrentHousehold
  id: CurrentHousehold
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentHousehold
  nameWithType: GameImpl.CurrentHousehold
  fullName: TinyLife.GameImpl.CurrentHousehold
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The household that is currently being played, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if in the main menu, editing a lot or on the map select screen
  example: []
  syntax:
    content: public Household CurrentHousehold { get; }
    parameters: []
    return:
      type: TinyLife.World.Household
    content.vb: Public Property CurrentHousehold As Household
  overload: TinyLife.GameImpl.CurrentHousehold*
- uid: TinyLife.GameImpl.Money
  commentId: P:TinyLife.GameImpl.Money
  id: Money
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Money
  nameWithType: GameImpl.Money
  fullName: TinyLife.GameImpl.Money
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The money that the <xref href="TinyLife.GameImpl.CurrentHousehold" data-throw-if-not-resolved="false"></xref> has, or <xref href="System.Single.MaxValue" data-throw-if-not-resolved="false"></xref> if there is no active household
  example: []
  syntax:
    content: public float Money { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Money As Single
  overload: TinyLife.GameImpl.Money*
- uid: TinyLife.GameImpl.CurrentLot
  commentId: P:TinyLife.GameImpl.CurrentLot
  id: CurrentLot
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentLot
  nameWithType: GameImpl.CurrentLot
  fullName: TinyLife.GameImpl.CurrentLot
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The lot that is currently being played on or edited, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if in the main menu or on the map select screen
  example: []
  syntax:
    content: public Lot CurrentLot { get; }
    parameters: []
    return:
      type: TinyLife.World.Lot
    content.vb: Public Property CurrentLot As Lot
  overload: TinyLife.GameImpl.CurrentLot*
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  id: Speed
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    The current <xref href="TinyLife.GameSpeed" data-throw-if-not-resolved="false"></xref>.

    Note that, if the current speed is <xref href="TinyLife.GameSpeed.VeryFast" data-throw-if-not-resolved="false"></xref> and the game <xref href="TinyLife.GameImpl.CanBeExtremelyFast" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.GameSpeed.ExtremelyFast" data-throw-if-not-resolved="false"></xref> is returned.

    You can cause any ui <xref href="MLEM.Ui.RootElement" data-throw-if-not-resolved="false"></xref> instances to pause the game by using <xref href="TinyLife.Utilities.Extensions.SetPauseGame(MLEM.Ui.RootElement%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public GameSpeed Speed { get; set; }
    parameters: []
    return:
      type: TinyLife.GameSpeed
    content.vb: Public Property Speed As GameSpeed
  overload: TinyLife.GameImpl.Speed*
- uid: TinyLife.GameImpl.FollowingPerson
  commentId: P:TinyLife.GameImpl.FollowingPerson
  id: FollowingPerson
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: FollowingPerson
  nameWithType: GameImpl.FollowingPerson
  fullName: TinyLife.GameImpl.FollowingPerson
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> that the camera is currently locked onto
  example: []
  syntax:
    content: public PersonLike FollowingPerson { get; }
    parameters: []
    return:
      type: TinyLife.Objects.PersonLike
    content.vb: Public Property FollowingPerson As PersonLike
  overload: TinyLife.GameImpl.FollowingPerson*
- uid: TinyLife.GameImpl.SaveName
  commentId: P:TinyLife.GameImpl.SaveName
  id: SaveName
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: SaveName
  nameWithType: GameImpl.SaveName
  fullName: TinyLife.GameImpl.SaveName
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The name of the save file that is currently being played, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if in the main menu
  example: []
  syntax:
    content: public string SaveName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SaveName As String
  overload: TinyLife.GameImpl.SaveName*
- uid: TinyLife.GameImpl.Mode
  commentId: P:TinyLife.GameImpl.Mode
  id: Mode
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: GameImpl.Mode
  fullName: TinyLife.GameImpl.Mode
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The <xref href="TinyLife.GameImpl.GameMode" data-throw-if-not-resolved="false"></xref> that is currently active
  example: []
  syntax:
    content: public GameImpl.GameMode Mode { get; }
    parameters: []
    return:
      type: TinyLife.GameImpl.GameMode
    content.vb: Public Property Mode As GameImpl.GameMode
  overload: TinyLife.GameImpl.Mode*
- uid: TinyLife.GameImpl.CursorPosition
  commentId: P:TinyLife.GameImpl.CursorPosition
  id: CursorPosition
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CursorPosition
  nameWithType: GameImpl.CursorPosition
  fullName: TinyLife.GameImpl.CursorPosition
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    The position that the game's cursor is currently at.

    If gamepad controls are being used, an internal cursor position is returned. Otherwise, <xref href="MLEM.Input.InputHandler.MousePosition" data-throw-if-not-resolved="false"></xref> is returned.
  example: []
  syntax:
    content: public Vector2 CursorPosition { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ReadOnly Property CursorPosition As Vector2
  overload: TinyLife.GameImpl.CursorPosition*
- uid: TinyLife.GameImpl.CurrentCursor
  commentId: F:TinyLife.GameImpl.CurrentCursor
  id: CurrentCursor
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentCursor
  nameWithType: GameImpl.CurrentCursor
  fullName: TinyLife.GameImpl.CurrentCursor
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    The <xref href="TinyLife.Uis.CursorType" data-throw-if-not-resolved="false"></xref> that is currently used.

    This is reset to <xref href="TinyLife.Uis.CursorType.Default" data-throw-if-not-resolved="false"></xref> at the start of every update.
  example: []
  syntax:
    content: public CursorType CurrentCursor
    return:
      type: TinyLife.Uis.CursorType
    content.vb: Public CurrentCursor As CursorType
- uid: TinyLife.GameImpl.CurrentMaps
  commentId: P:TinyLife.GameImpl.CurrentMaps
  id: CurrentMaps
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentMaps
  nameWithType: GameImpl.CurrentMaps
  fullName: TinyLife.GameImpl.CurrentMaps
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    The maps that are currently loaded, along with their names.

    If no maps are loaded (ie we're not in game), this collection is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: public Dictionary<string, Map> CurrentMaps { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,TinyLife.World.Map}
    content.vb: Public Property CurrentMaps As Dictionary(Of String, Map)
  overload: TinyLife.GameImpl.CurrentMaps*
- uid: TinyLife.GameImpl.CurrentMap
  commentId: P:TinyLife.GameImpl.CurrentMap
  id: CurrentMap
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentMap
  nameWithType: GameImpl.CurrentMap
  fullName: TinyLife.GameImpl.CurrentMap
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    The map that the game's <xref href="TinyLife.GameImpl.Camera" data-throw-if-not-resolved="false"></xref> is currently on.

    If no maps are loaded (ie we're not in game), this property returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: public Map CurrentMap { get; }
    parameters: []
    return:
      type: TinyLife.World.Map
    content.vb: Public Property CurrentMap As Map
  overload: TinyLife.GameImpl.CurrentMap*
- uid: TinyLife.GameImpl.CurrentMinFloor
  commentId: P:TinyLife.GameImpl.CurrentMinFloor
  id: CurrentMinFloor
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentMinFloor
  nameWithType: GameImpl.CurrentMinFloor
  fullName: TinyLife.GameImpl.CurrentMinFloor
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The current minimum floor that can be viewed by the player. The minimum viewable floor is determined by the minimum <xref href="TinyLife.World.Lot.MinFloor" data-throw-if-not-resolved="false"></xref> of the currently visible <xref href="TinyLife.World.Lot" data-throw-if-not-resolved="false"></xref> instances.
  example: []
  syntax:
    content: public int CurrentMinFloor { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentMinFloor As Integer
  overload: TinyLife.GameImpl.CurrentMinFloor*
- uid: TinyLife.GameImpl.CurrentMaxFloor
  commentId: P:TinyLife.GameImpl.CurrentMaxFloor
  id: CurrentMaxFloor
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentMaxFloor
  nameWithType: GameImpl.CurrentMaxFloor
  fullName: TinyLife.GameImpl.CurrentMaxFloor
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: The current maximum floor that can be viewed by the player. The maximum viewable floor is determined by the maximum <xref href="TinyLife.World.Lot.MaxFloor" data-throw-if-not-resolved="false"></xref> of the currently visible <xref href="TinyLife.World.Lot" data-throw-if-not-resolved="false"></xref> instances.
  example: []
  syntax:
    content: public int CurrentMaxFloor { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentMaxFloor As Integer
  overload: TinyLife.GameImpl.CurrentMaxFloor*
- uid: TinyLife.GameImpl.BuildModeTimeOverride
  commentId: F:TinyLife.GameImpl.BuildModeTimeOverride
  id: BuildModeTimeOverride
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: BuildModeTimeOverride
  nameWithType: GameImpl.BuildModeTimeOverride
  fullName: TinyLife.GameImpl.BuildModeTimeOverride
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    A 24-hour-based time that is currently being displayed in the game over the actual <xref href="TinyLife.GameImpl.CurrentGlobalTime" data-throw-if-not-resolved="false"></xref>.

    This can be set to change the lighting currently used in build mode.
  example: []
  syntax:
    content: public float? BuildModeTimeOverride
    return:
      type: System.Nullable{System.Single}
    content.vb: Public BuildModeTimeOverride As Single?
- uid: TinyLife.GameImpl.OnFinalizingGameContent
  commentId: E:TinyLife.GameImpl.OnFinalizingGameContent
  id: OnFinalizingGameContent
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: OnFinalizingGameContent
  nameWithType: GameImpl.OnFinalizingGameContent
  fullName: TinyLife.GameImpl.OnFinalizingGameContent
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    An event that is raised when this game's content is about to finish loading.

    Note that "finalize" in this context refers not to object destruction, but to the completion of the loading process.
  example: []
  syntax:
    content: public event Action OnFinalizingGameContent
    return:
      type: System.Action
    content.vb: Public Event OnFinalizingGameContent As Action
- uid: TinyLife.GameImpl.OnFinishedLoading
  commentId: E:TinyLife.GameImpl.OnFinishedLoading
  id: OnFinishedLoading
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: OnFinishedLoading
  nameWithType: GameImpl.OnFinishedLoading
  fullName: TinyLife.GameImpl.OnFinishedLoading
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: An event that is raised when the game's loading screen fades out.
  example: []
  syntax:
    content: public event Action OnFinishedLoading
    return:
      type: System.Action
    content.vb: Public Event OnFinishedLoading As Action
- uid: TinyLife.GameImpl.OnSwitchGameMode
  commentId: E:TinyLife.GameImpl.OnSwitchGameMode
  id: OnSwitchGameMode
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: OnSwitchGameMode
  nameWithType: GameImpl.OnSwitchGameMode
  fullName: TinyLife.GameImpl.OnSwitchGameMode
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: An event that is raised in <xref href="TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public event Action<GameImpl.GameMode, EventPhase> OnSwitchGameMode
    return:
      type: System.Action{TinyLife.GameImpl.GameMode,TinyLife.Mods.EventPhase}
    content.vb: Public Event OnSwitchGameMode As Action(Of GameImpl.GameMode, EventPhase)
- uid: TinyLife.GameImpl.LoadContent
  commentId: M:TinyLife.GameImpl.LoadContent
  id: LoadContent
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: LoadContent()
  nameWithType: GameImpl.LoadContent()
  fullName: TinyLife.GameImpl.LoadContent()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Override this to load graphical resources required by the game.
  example: []
  syntax:
    content: protected override void LoadContent()
    content.vb: Protected Overrides Sub LoadContent()
  overridden: MLEM.Startup.MlemGame.LoadContent
  overload: TinyLife.GameImpl.LoadContent*
- uid: TinyLife.GameImpl.DoUpdate(Microsoft.Xna.Framework.GameTime)
  commentId: M:TinyLife.GameImpl.DoUpdate(Microsoft.Xna.Framework.GameTime)
  id: DoUpdate(Microsoft.Xna.Framework.GameTime)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: DoUpdate(GameTime)
  nameWithType: GameImpl.DoUpdate(GameTime)
  fullName: TinyLife.GameImpl.DoUpdate(Microsoft.Xna.Framework.GameTime)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    This method is called in <xref href="MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref>.

    It is the version that should be overridden by implementors to update game content.
  example: []
  syntax:
    content: protected override void DoUpdate(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time
    content.vb: Protected Overrides Sub DoUpdate(gameTime As GameTime)
  overridden: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  overload: TinyLife.GameImpl.DoUpdate*
- uid: TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  commentId: M:TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  id: DoDraw(Microsoft.Xna.Framework.GameTime)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: DoDraw(GameTime)
  nameWithType: GameImpl.DoDraw(GameTime)
  fullName: TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    This method is called in <xref href="MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref>.

    It is the version that should be overridden by implementors to draw game content.
  example: []
  syntax:
    content: protected override void DoDraw(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time
    content.vb: Protected Overrides Sub DoDraw(gameTime As GameTime)
  overridden: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  overload: TinyLife.GameImpl.DoDraw*
- uid: TinyLife.GameImpl.Dispose(System.Boolean)
  commentId: M:TinyLife.GameImpl.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: GameImpl.Dispose(bool)
  fullName: TinyLife.GameImpl.Dispose(bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: ''
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
  overload: TinyLife.GameImpl.Dispose*
  nameWithType.vb: GameImpl.Dispose(Boolean)
  fullName.vb: TinyLife.GameImpl.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: TinyLife.GameImpl.RotateCamera(System.Boolean)
  commentId: M:TinyLife.GameImpl.RotateCamera(System.Boolean)
  id: RotateCamera(System.Boolean)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: RotateCamera(bool)
  nameWithType: GameImpl.RotateCamera(bool)
  fullName: TinyLife.GameImpl.RotateCamera(bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Rotates the camera by 90 degrees in a clockwise or counter-clockwise direction.
  example: []
  syntax:
    content: public void RotateCamera(bool ccw)
    parameters:
    - id: ccw
      type: System.Boolean
      description: Whether the rotation should be counter-clockwise.
    content.vb: Public Sub RotateCamera(ccw As Boolean)
  overload: TinyLife.GameImpl.RotateCamera*
  nameWithType.vb: GameImpl.RotateCamera(Boolean)
  fullName.vb: TinyLife.GameImpl.RotateCamera(Boolean)
  name.vb: RotateCamera(Boolean)
- uid: TinyLife.GameImpl.ZoomCamera(System.Int32)
  commentId: M:TinyLife.GameImpl.ZoomCamera(System.Int32)
  id: ZoomCamera(System.Int32)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: ZoomCamera(int)
  nameWithType: GameImpl.ZoomCamera(int)
  fullName: TinyLife.GameImpl.ZoomCamera(int)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Zooms the camera by the given <code class="paramref">delta</code>, either towards the center of the camera's viewport, or toward the <xref href="TinyLife.GameImpl.CursorPosition" data-throw-if-not-resolved="false"></xref> if it is not on the UI.
  example: []
  syntax:
    content: public void ZoomCamera(int delta)
    parameters:
    - id: delta
      type: System.Int32
      description: The delta to zoom by.
    content.vb: Public Sub ZoomCamera(delta As Integer)
  overload: TinyLife.GameImpl.ZoomCamera*
  nameWithType.vb: GameImpl.ZoomCamera(Integer)
  fullName.vb: TinyLife.GameImpl.ZoomCamera(Integer)
  name.vb: ZoomCamera(Integer)
- uid: TinyLife.GameImpl.IsCursorOnUi
  commentId: M:TinyLife.GameImpl.IsCursorOnUi
  id: IsCursorOnUi
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: IsCursorOnUi()
  nameWithType: GameImpl.IsCursorOnUi()
  fullName: TinyLife.GameImpl.IsCursorOnUi()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Returns true if the mouse is currently on top of any ui element in the <xref href="MLEM.Ui.UiSystem" data-throw-if-not-resolved="false"></xref> or the system's auto-navigation cursor is currently being used.
  example: []
  syntax:
    content: public bool IsCursorOnUi()
    return:
      type: System.Boolean
      description: true if the cursor is currently on the ui.
    content.vb: Public Function IsCursorOnUi() As Boolean
  overload: TinyLife.GameImpl.IsCursorOnUi*
- uid: TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  commentId: M:TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  id: SwitchGameMode(TinyLife.GameImpl.GameMode)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: SwitchGameMode(GameMode)
  nameWithType: GameImpl.SwitchGameMode(GameImpl.GameMode)
  fullName: TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    Switches the game mode to the given mode, and sets up all of the required data.

    Note that some game modes require certain data to be set prior to calling this method.
  example: []
  syntax:
    content: public void SwitchGameMode(GameImpl.GameMode mode)
    parameters:
    - id: mode
      type: TinyLife.GameImpl.GameMode
      description: The game mode to switch to
    content.vb: Public Sub SwitchGameMode(mode As GameImpl.GameMode)
  overload: TinyLife.GameImpl.SwitchGameMode*
- uid: TinyLife.GameImpl.CanBeExtremelyFast
  commentId: M:TinyLife.GameImpl.CanBeExtremelyFast
  id: CanBeExtremelyFast
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CanBeExtremelyFast()
  nameWithType: GameImpl.CanBeExtremelyFast()
  fullName: TinyLife.GameImpl.CanBeExtremelyFast()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    Returns whether the game allows changing the speed to <xref href="TinyLife.GameSpeed.ExtremelyFast" data-throw-if-not-resolved="false"></xref> at the current time.

    If this returns true, and <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref> is set to <xref href="TinyLife.GameSpeed.VeryFast" data-throw-if-not-resolved="false"></xref>, the <xref href="TinyLife.GameSpeed.ExtremelyFast" data-throw-if-not-resolved="false"></xref> speed is automatically engaged.
  example: []
  syntax:
    content: public bool CanBeExtremelyFast()
    return:
      type: System.Boolean
      description: Whether the game can become extremely fast
    content.vb: Public Function CanBeExtremelyFast() As Boolean
  overload: TinyLife.GameImpl.CanBeExtremelyFast*
- uid: TinyLife.GameImpl.CanSwitchGameModes
  commentId: M:TinyLife.GameImpl.CanSwitchGameModes
  id: CanSwitchGameModes
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CanSwitchGameModes()
  nameWithType: GameImpl.CanSwitchGameModes()
  fullName: TinyLife.GameImpl.CanSwitchGameModes()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    Returns whether the game mode of the game can currently be switched.

    This method checks the <xref href="TinyLife.Uis.CharacterCreator" data-throw-if-not-resolved="false"></xref> if it is active, as well as the <xref href="TinyLife.GameImpl.CurrentTool" data-throw-if-not-resolved="false"></xref> and the <xref href="TinyLife.GameImpl.CurrentLot" data-throw-if-not-resolved="false"></xref>'s requirements.
  example: []
  syntax:
    content: public bool CanSwitchGameModes()
    return:
      type: System.Boolean
      description: Whether the game can currently switch game modes.
    content.vb: Public Function CanSwitchGameModes() As Boolean
  overload: TinyLife.GameImpl.CanSwitchGameModes*
- uid: TinyLife.GameImpl.TakeScreenshot(Microsoft.Xna.Framework.Point,System.Nullable{MLEM.Maths.RectangleF},System.Nullable{Microsoft.Xna.Framework.Matrix},Microsoft.Xna.Framework.Graphics.RenderTarget2D)
  commentId: M:TinyLife.GameImpl.TakeScreenshot(Microsoft.Xna.Framework.Point,System.Nullable{MLEM.Maths.RectangleF},System.Nullable{Microsoft.Xna.Framework.Matrix},Microsoft.Xna.Framework.Graphics.RenderTarget2D)
  id: TakeScreenshot(Microsoft.Xna.Framework.Point,System.Nullable{MLEM.Maths.RectangleF},System.Nullable{Microsoft.Xna.Framework.Matrix},Microsoft.Xna.Framework.Graphics.RenderTarget2D)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: TakeScreenshot(Point, RectangleF?, Matrix?, RenderTarget2D)
  nameWithType: GameImpl.TakeScreenshot(Point, RectangleF?, Matrix?, RenderTarget2D)
  fullName: TinyLife.GameImpl.TakeScreenshot(Microsoft.Xna.Framework.Point, MLEM.Maths.RectangleF?, Microsoft.Xna.Framework.Matrix?, Microsoft.Xna.Framework.Graphics.RenderTarget2D)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Takes a screenshot and stores it in the default location, using a file name that contains the current date and time
  example: []
  syntax:
    content: public void TakeScreenshot(Point size, RectangleF? visibleArea = null, Matrix? visibleMatrix = null, RenderTarget2D lightmap = null)
    parameters:
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size, in pixels, of the resulting screenshots
    - id: visibleArea
      type: System.Nullable{MLEM.Maths.RectangleF}
      description: The area that should be marked as visible, in world space. This determines culling values.
    - id: visibleMatrix
      type: System.Nullable{Microsoft.Xna.Framework.Matrix}
      description: A matrix that has a translation and scale that determines the visible area of the screenshot
    - id: lightmap
      type: Microsoft.Xna.Framework.Graphics.RenderTarget2D
      description: The light map to draw light onto, or null to use the default light map
    content.vb: Public Sub TakeScreenshot(size As Point, visibleArea As RectangleF? = Nothing, visibleMatrix As Matrix? = Nothing, lightmap As RenderTarget2D = Nothing)
  overload: TinyLife.GameImpl.TakeScreenshot*
- uid: TinyLife.GameImpl.MarkLotVisible(TinyLife.World.Lot)
  commentId: M:TinyLife.GameImpl.MarkLotVisible(TinyLife.World.Lot)
  id: MarkLotVisible(TinyLife.World.Lot)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: MarkLotVisible(Lot)
  nameWithType: GameImpl.MarkLotVisible(Lot)
  fullName: TinyLife.GameImpl.MarkLotVisible(TinyLife.World.Lot)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    Marks the given lot as visible for the player.

    The method <xref href="TinyLife.Objects.PersonLike.VisitLot(TinyLife.World.Lot)" data-throw-if-not-resolved="false"></xref> should be used in favor of this method in most cases.

    By default, visibility lasts for 30 seconds of real time.
  example: []
  syntax:
    content: public void MarkLotVisible(Lot lot)
    parameters:
    - id: lot
      type: TinyLife.World.Lot
      description: The lot to mark as visible
    content.vb: Public Sub MarkLotVisible(lot As Lot)
  overload: TinyLife.GameImpl.MarkLotVisible*
- uid: TinyLife.GameImpl.MarkLotNonVisible(TinyLife.World.Lot)
  commentId: M:TinyLife.GameImpl.MarkLotNonVisible(TinyLife.World.Lot)
  id: MarkLotNonVisible(TinyLife.World.Lot)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: MarkLotNonVisible(Lot)
  nameWithType: GameImpl.MarkLotNonVisible(Lot)
  fullName: TinyLife.GameImpl.MarkLotNonVisible(TinyLife.World.Lot)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Marks a lot non-visible if it's currently visible to the player.
  example: []
  syntax:
    content: public void MarkLotNonVisible(Lot lot)
    parameters:
    - id: lot
      type: TinyLife.World.Lot
      description: The lot to remove visibility for
    content.vb: Public Sub MarkLotNonVisible(lot As Lot)
  overload: TinyLife.GameImpl.MarkLotNonVisible*
- uid: TinyLife.GameImpl.IsLotVisible(TinyLife.World.Lot)
  commentId: M:TinyLife.GameImpl.IsLotVisible(TinyLife.World.Lot)
  id: IsLotVisible(TinyLife.World.Lot)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: IsLotVisible(Lot)
  nameWithType: GameImpl.IsLotVisible(Lot)
  fullName: TinyLife.GameImpl.IsLotVisible(TinyLife.World.Lot)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    Returns whether the given lot is considered visible to the player.

    Note that passing the <xref href="TinyLife.GameImpl.CurrentHousehold" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.World.Lot" data-throw-if-not-resolved="false"></xref> will always cause this method to return true.
  example: []
  syntax:
    content: public bool IsLotVisible(Lot lot)
    parameters:
    - id: lot
      type: TinyLife.World.Lot
      description: The lot to query
    return:
      type: System.Boolean
      description: Whether the lot is visible
    content.vb: Public Function IsLotVisible(lot As Lot) As Boolean
  overload: TinyLife.GameImpl.IsLotVisible*
- uid: TinyLife.GameImpl.FollowPerson(TinyLife.Objects.PersonLike,System.Boolean,System.Action)
  commentId: M:TinyLife.GameImpl.FollowPerson(TinyLife.Objects.PersonLike,System.Boolean,System.Action)
  id: FollowPerson(TinyLife.Objects.PersonLike,System.Boolean,System.Action)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: FollowPerson(PersonLike, bool, Action)
  nameWithType: GameImpl.FollowPerson(PersonLike, bool, Action)
  fullName: TinyLife.GameImpl.FollowPerson(TinyLife.Objects.PersonLike, bool, System.Action)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Causes the camera to follow the given <code class="paramref">person</code>, optionally switching to the map the person is on.
  example: []
  syntax:
    content: public bool FollowPerson(PersonLike person, bool switchToMap = true, Action additionalAction = null)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person to follow.
    - id: switchToMap
      type: System.Boolean
      description: Whether to switch to the map the person is on.
    - id: additionalAction
      type: System.Action
      description: An optional additional action that should be invoked when the camera is moved, which is passed to <xref href="TinyLife.Uis.Menus.Transition(System.Action%2cSystem.Action%2cTinyLife.Uis.Menus.TransitionType%2cTinyLife.Uis.Menus.TransitionType%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Color%7d)" data-throw-if-not-resolved="false"></xref> when switching maps, or invoked immediately when not switching maps.
    return:
      type: System.Boolean
      description: Whether following the person was successful, which is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if <code class="paramref">switchToMap</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> and the person's <xref href="TinyLife.Objects.MapObject.Map" data-throw-if-not-resolved="false"></xref> doesn't match the <xref href="TinyLife.GameImpl.CurrentMap" data-throw-if-not-resolved="false"></xref>, or if the ui system <xref href="TinyLife.Uis.Menus.IsTransitioning" data-throw-if-not-resolved="false"></xref> while trying to switch the active map.
    content.vb: Public Function FollowPerson(person As PersonLike, switchToMap As Boolean = True, additionalAction As Action = Nothing) As Boolean
  overload: TinyLife.GameImpl.FollowPerson*
  nameWithType.vb: GameImpl.FollowPerson(PersonLike, Boolean, Action)
  fullName.vb: TinyLife.GameImpl.FollowPerson(TinyLife.Objects.PersonLike, Boolean, System.Action)
  name.vb: FollowPerson(PersonLike, Boolean, Action)
- uid: TinyLife.GameImpl.SwitchMap(TinyLife.World.Map,System.Action,System.Action)
  commentId: M:TinyLife.GameImpl.SwitchMap(TinyLife.World.Map,System.Action,System.Action)
  id: SwitchMap(TinyLife.World.Map,System.Action,System.Action)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: SwitchMap(Map, Action, Action)
  nameWithType: GameImpl.SwitchMap(Map, Action, Action)
  fullName: TinyLife.GameImpl.SwitchMap(TinyLife.World.Map, System.Action, System.Action)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Switches the game's <xref href="TinyLife.GameImpl.CurrentMap" data-throw-if-not-resolved="false"></xref> to the given map, additionally displaying a transition and resetting various UI states. <xref href="TinyLife.World.Map.OnCurrentGameMapChanged(TinyLife.World.Map%2cTinyLife.World.Map)" data-throw-if-not-resolved="false"></xref> is also invoked.
  example: []
  syntax:
    content: public void SwitchMap(Map map, Action inbetween = null, Action after = null)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to change to.
    - id: inbetween
      type: System.Action
      description: An optional inbetween action, which is passed to <xref href="TinyLife.Uis.Menus.Transition(System.Action%2cSystem.Action%2cTinyLife.Uis.Menus.TransitionType%2cTinyLife.Uis.Menus.TransitionType%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Color%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: after
      type: System.Action
      description: An optional after action, which is passed to <xref href="TinyLife.Uis.Menus.Transition(System.Action%2cSystem.Action%2cTinyLife.Uis.Menus.TransitionType%2cTinyLife.Uis.Menus.TransitionType%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Color%7d)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub SwitchMap(map As Map, inbetween As Action = Nothing, after As Action = Nothing)
  overload: TinyLife.GameImpl.SwitchMap*
- uid: TinyLife.GameImpl.AddMapToSave(TinyLife.MapInfo,System.Action)
  commentId: M:TinyLife.GameImpl.AddMapToSave(TinyLife.MapInfo,System.Action)
  id: AddMapToSave(TinyLife.MapInfo,System.Action)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: AddMapToSave(MapInfo, Action)
  nameWithType: GameImpl.AddMapToSave(MapInfo, Action)
  fullName: TinyLife.GameImpl.AddMapToSave(TinyLife.MapInfo, System.Action)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    Adds a map with the given <xref href="TinyLife.MapInfo" data-throw-if-not-resolved="false"></xref> to the currently active save game, additionally invoking all required events.

    This method causes a loading screen to appear, so its actions are not invoked immediately.
  example: []
  syntax:
    content: public void AddMapToSave(MapInfo info, Action after = null)
    parameters:
    - id: info
      type: TinyLife.MapInfo
      description: The info of the map to load and add.
    - id: after
      type: System.Action
      description: An action that is invoked after the map has been added successfully, and after the loading screen has been removed.
    content.vb: Public Sub AddMapToSave(info As MapInfo, after As Action = Nothing)
  overload: TinyLife.GameImpl.AddMapToSave*
- uid: TinyLife.GameImpl.RemoveMapFromSave(TinyLife.World.Map)
  commentId: M:TinyLife.GameImpl.RemoveMapFromSave(TinyLife.World.Map)
  id: RemoveMapFromSave(TinyLife.World.Map)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: RemoveMapFromSave(Map)
  nameWithType: GameImpl.RemoveMapFromSave(Map)
  fullName: TinyLife.GameImpl.RemoveMapFromSave(TinyLife.World.Map)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Removes the given <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref> from the currently active save game, additionally causing its <xref href="TinyLife.World.Map.PrepareForPermanentRemoval" data-throw-if-not-resolved="false"></xref> method to be invoked.
  example: []
  syntax:
    content: public void RemoveMapFromSave(Map map)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to remove.
    content.vb: Public Sub RemoveMapFromSave(map As Map)
  overload: TinyLife.GameImpl.RemoveMapFromSave*
- uid: TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
  commentId: M:TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
  id: CompleteAchievement(TinyLife.Goals.AchievementType)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CompleteAchievement(AchievementType)
  nameWithType: GameImpl.CompleteAchievement(AchievementType)
  fullName: TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Completes the achievement in this map's <xref href="TinyLife.GameImpl.Achievements" data-throw-if-not-resolved="false"></xref> collection with the given <xref href="TinyLife.Goals.AchievementType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool CompleteAchievement(AchievementType type)
    parameters:
    - id: type
      type: TinyLife.Goals.AchievementType
      description: The type of achievement to complete.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the achievement could be completed successfully, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it was already completed.
    content.vb: Public Function CompleteAchievement(type As AchievementType) As Boolean
  overload: TinyLife.GameImpl.CompleteAchievement*
- uid: TinyLife.GameImpl.GetOwningSet(System.String)
  commentId: M:TinyLife.GameImpl.GetOwningSet(System.String)
  id: GetOwningSet(System.String)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: GetOwningSet(string)
  nameWithType: GameImpl.GetOwningSet(string)
  fullName: TinyLife.GameImpl.GetOwningSet(string)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Returns the <xref href="TinyLife.Set" data-throw-if-not-resolved="false"></xref> that the object with the given name originated from, based on the detection of a prefix that matches a set name.
  example: []
  syntax:
    content: public static Set? GetOwningSet(string objectName)
    parameters:
    - id: objectName
      type: System.String
      description: The name of the object whose set to return.
    return:
      type: System.Nullable{TinyLife.Set}
      description: The owning set, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the object does not belong to a set.
    content.vb: Public Shared Function GetOwningSet(objectName As String) As [Set]?
  overload: TinyLife.GameImpl.GetOwningSet*
  nameWithType.vb: GameImpl.GetOwningSet(String)
  fullName.vb: TinyLife.GameImpl.GetOwningSet(String)
  name.vb: GetOwningSet(String)
references:
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.Xna.Framework.Game
  commentId: T:Microsoft.Xna.Framework.Game
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Game
  nameWithType: Game
  fullName: Microsoft.Xna.Framework.Game
- uid: MLEM.Startup.MlemGame
  commentId: T:MLEM.Startup.MlemGame
  parent: MLEM.Startup
  isExternal: true
  name: MlemGame
  nameWithType: MlemGame
  fullName: MLEM.Startup.MlemGame
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: MLEM.Startup.MlemGame.GraphicsDeviceManager
  commentId: F:MLEM.Startup.MlemGame.GraphicsDeviceManager
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: GraphicsDeviceManager
  nameWithType: MlemGame.GraphicsDeviceManager
  fullName: MLEM.Startup.MlemGame.GraphicsDeviceManager
- uid: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: Update(GameTime)
  nameWithType: MlemGame.Update(GameTime)
  fullName: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: Draw(GameTime)
  nameWithType: MlemGame.Draw(GameTime)
  fullName: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
    name: Draw
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
    name: Draw
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: MLEM.Startup.MlemGame.InitializeDefaultUiStyle(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:MLEM.Startup.MlemGame.InitializeDefaultUiStyle(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: InitializeDefaultUiStyle(SpriteBatch)
  nameWithType: MlemGame.InitializeDefaultUiStyle(SpriteBatch)
  fullName: MLEM.Startup.MlemGame.InitializeDefaultUiStyle(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.InitializeDefaultUiStyle(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    name: InitializeDefaultUiStyle
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.InitializeDefaultUiStyle(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    name: InitializeDefaultUiStyle
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: )
- uid: MLEM.Startup.MlemGame.InitializeUiSystem(MLEM.Ui.Style.UiStyle)
  commentId: M:MLEM.Startup.MlemGame.InitializeUiSystem(MLEM.Ui.Style.UiStyle)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: InitializeUiSystem(UiStyle)
  nameWithType: MlemGame.InitializeUiSystem(UiStyle)
  fullName: MLEM.Startup.MlemGame.InitializeUiSystem(MLEM.Ui.Style.UiStyle)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.InitializeUiSystem(MLEM.Ui.Style.UiStyle)
    name: InitializeUiSystem
    isExternal: true
  - name: (
  - uid: MLEM.Ui.Style.UiStyle
    name: UiStyle
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.InitializeUiSystem(MLEM.Ui.Style.UiStyle)
    name: InitializeUiSystem
    isExternal: true
  - name: (
  - uid: MLEM.Ui.Style.UiStyle
    name: UiStyle
    isExternal: true
  - name: )
- uid: MLEM.Startup.MlemGame.InitializeInputHandler
  commentId: M:MLEM.Startup.MlemGame.InitializeInputHandler
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: InitializeInputHandler()
  nameWithType: MlemGame.InitializeInputHandler()
  fullName: MLEM.Startup.MlemGame.InitializeInputHandler()
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.InitializeInputHandler
    name: InitializeInputHandler
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.InitializeInputHandler
    name: InitializeInputHandler
    isExternal: true
  - name: (
  - name: )
- uid: MLEM.Startup.MlemGame.LoadContent``1(System.String)
  commentId: M:MLEM.Startup.MlemGame.LoadContent``1(System.String)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: LoadContent<T>(string)
  nameWithType: MlemGame.LoadContent<T>(string)
  fullName: MLEM.Startup.MlemGame.LoadContent<T>(string)
  nameWithType.vb: MlemGame.LoadContent(Of T)(String)
  fullName.vb: MLEM.Startup.MlemGame.LoadContent(Of T)(String)
  name.vb: LoadContent(Of T)(String)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.LoadContent``1(System.String)
    name: LoadContent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.LoadContent``1(System.String)
    name: LoadContent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Startup.MlemGame.Input
  commentId: P:MLEM.Startup.MlemGame.Input
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: Input
  nameWithType: MlemGame.Input
  fullName: MLEM.Startup.MlemGame.Input
- uid: MLEM.Startup.MlemGame.SpriteBatch
  commentId: P:MLEM.Startup.MlemGame.SpriteBatch
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: SpriteBatch
  nameWithType: MlemGame.SpriteBatch
  fullName: MLEM.Startup.MlemGame.SpriteBatch
- uid: MLEM.Startup.MlemGame.InputHandler
  commentId: P:MLEM.Startup.MlemGame.InputHandler
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: InputHandler
  nameWithType: MlemGame.InputHandler
  fullName: MLEM.Startup.MlemGame.InputHandler
- uid: MLEM.Startup.MlemGame.UiSystem
  commentId: P:MLEM.Startup.MlemGame.UiSystem
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: UiSystem
  nameWithType: MlemGame.UiSystem
  fullName: MLEM.Startup.MlemGame.UiSystem
- uid: MLEM.Startup.MlemGame.OnLoadContent
  commentId: E:MLEM.Startup.MlemGame.OnLoadContent
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: OnLoadContent
  nameWithType: MlemGame.OnLoadContent
  fullName: MLEM.Startup.MlemGame.OnLoadContent
- uid: MLEM.Startup.MlemGame.PreUpdate
  commentId: E:MLEM.Startup.MlemGame.PreUpdate
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: PreUpdate
  nameWithType: MlemGame.PreUpdate
  fullName: MLEM.Startup.MlemGame.PreUpdate
- uid: MLEM.Startup.MlemGame.OnUpdate
  commentId: E:MLEM.Startup.MlemGame.OnUpdate
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: OnUpdate
  nameWithType: MlemGame.OnUpdate
  fullName: MLEM.Startup.MlemGame.OnUpdate
- uid: MLEM.Startup.MlemGame.PreDraw
  commentId: E:MLEM.Startup.MlemGame.PreDraw
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: PreDraw
  nameWithType: MlemGame.PreDraw
  fullName: MLEM.Startup.MlemGame.PreDraw
- uid: MLEM.Startup.MlemGame.OnDraw
  commentId: E:MLEM.Startup.MlemGame.OnDraw
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: OnDraw
  nameWithType: MlemGame.OnDraw
  fullName: MLEM.Startup.MlemGame.OnDraw
- uid: Microsoft.Xna.Framework.Game.Dispose
  commentId: M:Microsoft.Xna.Framework.Game.Dispose
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Dispose()
  nameWithType: Game.Dispose()
  fullName: Microsoft.Xna.Framework.Game.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.Exit
  commentId: M:Microsoft.Xna.Framework.Game.Exit
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Exit()
  nameWithType: Game.Exit()
  fullName: Microsoft.Xna.Framework.Game.Exit()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Exit
    name: Exit
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Exit
    name: Exit
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.ResetElapsedTime
  commentId: M:Microsoft.Xna.Framework.Game.ResetElapsedTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: ResetElapsedTime()
  nameWithType: Game.ResetElapsedTime()
  fullName: Microsoft.Xna.Framework.Game.ResetElapsedTime()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.ResetElapsedTime
    name: ResetElapsedTime
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.ResetElapsedTime
    name: ResetElapsedTime
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.SuppressDraw
  commentId: M:Microsoft.Xna.Framework.Game.SuppressDraw
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: SuppressDraw()
  nameWithType: Game.SuppressDraw()
  fullName: Microsoft.Xna.Framework.Game.SuppressDraw()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.SuppressDraw
    name: SuppressDraw
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.SuppressDraw
    name: SuppressDraw
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.RunOneFrame
  commentId: M:Microsoft.Xna.Framework.Game.RunOneFrame
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: RunOneFrame()
  nameWithType: Game.RunOneFrame()
  fullName: Microsoft.Xna.Framework.Game.RunOneFrame()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.RunOneFrame
    name: RunOneFrame
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.RunOneFrame
    name: RunOneFrame
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.Run
  commentId: M:Microsoft.Xna.Framework.Game.Run
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Run()
  nameWithType: Game.Run()
  fullName: Microsoft.Xna.Framework.Game.Run()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Run
    name: Run
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Run
    name: Run
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  commentId: M:Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Run(GameRunBehavior)
  nameWithType: Game.Run(GameRunBehavior)
  fullName: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
    name: Run
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameRunBehavior
    name: GameRunBehavior
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
    name: Run
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameRunBehavior
    name: GameRunBehavior
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.Game.Tick
  commentId: M:Microsoft.Xna.Framework.Game.Tick
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Tick()
  nameWithType: Game.Tick()
  fullName: Microsoft.Xna.Framework.Game.Tick()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Tick
    name: Tick
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Tick
    name: Tick
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.BeginDraw
  commentId: M:Microsoft.Xna.Framework.Game.BeginDraw
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: BeginDraw()
  nameWithType: Game.BeginDraw()
  fullName: Microsoft.Xna.Framework.Game.BeginDraw()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.BeginDraw
    name: BeginDraw
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.BeginDraw
    name: BeginDraw
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.EndDraw
  commentId: M:Microsoft.Xna.Framework.Game.EndDraw
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: EndDraw()
  nameWithType: Game.EndDraw()
  fullName: Microsoft.Xna.Framework.Game.EndDraw()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.EndDraw
    name: EndDraw
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.EndDraw
    name: EndDraw
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.BeginRun
  commentId: M:Microsoft.Xna.Framework.Game.BeginRun
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: BeginRun()
  nameWithType: Game.BeginRun()
  fullName: Microsoft.Xna.Framework.Game.BeginRun()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.BeginRun
    name: BeginRun
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.BeginRun
    name: BeginRun
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.EndRun
  commentId: M:Microsoft.Xna.Framework.Game.EndRun
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: EndRun()
  nameWithType: Game.EndRun()
  fullName: Microsoft.Xna.Framework.Game.EndRun()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.EndRun
    name: EndRun
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.EndRun
    name: EndRun
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.UnloadContent
  commentId: M:Microsoft.Xna.Framework.Game.UnloadContent
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: UnloadContent()
  nameWithType: Game.UnloadContent()
  fullName: Microsoft.Xna.Framework.Game.UnloadContent()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.UnloadContent
    name: UnloadContent
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.UnloadContent
    name: UnloadContent
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.Initialize
  commentId: M:Microsoft.Xna.Framework.Game.Initialize
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Initialize()
  nameWithType: Game.Initialize()
  fullName: Microsoft.Xna.Framework.Game.Initialize()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Initialize
    name: Initialize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Initialize
    name: Initialize
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.OnExiting(System.Object,Microsoft.Xna.Framework.ExitingEventArgs)
  commentId: M:Microsoft.Xna.Framework.Game.OnExiting(System.Object,Microsoft.Xna.Framework.ExitingEventArgs)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: OnExiting(object, ExitingEventArgs)
  nameWithType: Game.OnExiting(object, ExitingEventArgs)
  fullName: Microsoft.Xna.Framework.Game.OnExiting(object, Microsoft.Xna.Framework.ExitingEventArgs)
  nameWithType.vb: Game.OnExiting(Object, ExitingEventArgs)
  fullName.vb: Microsoft.Xna.Framework.Game.OnExiting(Object, Microsoft.Xna.Framework.ExitingEventArgs)
  name.vb: OnExiting(Object, ExitingEventArgs)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.OnExiting(System.Object,Microsoft.Xna.Framework.ExitingEventArgs)
    name: OnExiting
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.ExitingEventArgs
    name: ExitingEventArgs
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.OnExiting(System.Object,Microsoft.Xna.Framework.ExitingEventArgs)
    name: OnExiting
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.ExitingEventArgs
    name: ExitingEventArgs
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
  commentId: M:Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: OnActivated(object, EventArgs)
  nameWithType: Game.OnActivated(object, EventArgs)
  fullName: Microsoft.Xna.Framework.Game.OnActivated(object, System.EventArgs)
  nameWithType.vb: Game.OnActivated(Object, EventArgs)
  fullName.vb: Microsoft.Xna.Framework.Game.OnActivated(Object, System.EventArgs)
  name.vb: OnActivated(Object, EventArgs)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
    name: OnActivated
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
    name: OnActivated
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
- uid: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
  commentId: M:Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: OnDeactivated(object, EventArgs)
  nameWithType: Game.OnDeactivated(object, EventArgs)
  fullName: Microsoft.Xna.Framework.Game.OnDeactivated(object, System.EventArgs)
  nameWithType.vb: Game.OnDeactivated(Object, EventArgs)
  fullName.vb: Microsoft.Xna.Framework.Game.OnDeactivated(Object, System.EventArgs)
  name.vb: OnDeactivated(Object, EventArgs)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
    name: OnDeactivated
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
    name: OnDeactivated
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
- uid: Microsoft.Xna.Framework.Game.LaunchParameters
  commentId: P:Microsoft.Xna.Framework.Game.LaunchParameters
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: LaunchParameters
  nameWithType: Game.LaunchParameters
  fullName: Microsoft.Xna.Framework.Game.LaunchParameters
- uid: Microsoft.Xna.Framework.Game.Components
  commentId: P:Microsoft.Xna.Framework.Game.Components
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Components
  nameWithType: Game.Components
  fullName: Microsoft.Xna.Framework.Game.Components
- uid: Microsoft.Xna.Framework.Game.InactiveSleepTime
  commentId: P:Microsoft.Xna.Framework.Game.InactiveSleepTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: InactiveSleepTime
  nameWithType: Game.InactiveSleepTime
  fullName: Microsoft.Xna.Framework.Game.InactiveSleepTime
- uid: Microsoft.Xna.Framework.Game.MaxElapsedTime
  commentId: P:Microsoft.Xna.Framework.Game.MaxElapsedTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: MaxElapsedTime
  nameWithType: Game.MaxElapsedTime
  fullName: Microsoft.Xna.Framework.Game.MaxElapsedTime
- uid: Microsoft.Xna.Framework.Game.IsActive
  commentId: P:Microsoft.Xna.Framework.Game.IsActive
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: IsActive
  nameWithType: Game.IsActive
  fullName: Microsoft.Xna.Framework.Game.IsActive
- uid: Microsoft.Xna.Framework.Game.IsMouseVisible
  commentId: P:Microsoft.Xna.Framework.Game.IsMouseVisible
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: IsMouseVisible
  nameWithType: Game.IsMouseVisible
  fullName: Microsoft.Xna.Framework.Game.IsMouseVisible
- uid: Microsoft.Xna.Framework.Game.TargetElapsedTime
  commentId: P:Microsoft.Xna.Framework.Game.TargetElapsedTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: TargetElapsedTime
  nameWithType: Game.TargetElapsedTime
  fullName: Microsoft.Xna.Framework.Game.TargetElapsedTime
- uid: Microsoft.Xna.Framework.Game.IsFixedTimeStep
  commentId: P:Microsoft.Xna.Framework.Game.IsFixedTimeStep
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: IsFixedTimeStep
  nameWithType: Game.IsFixedTimeStep
  fullName: Microsoft.Xna.Framework.Game.IsFixedTimeStep
- uid: Microsoft.Xna.Framework.Game.Services
  commentId: P:Microsoft.Xna.Framework.Game.Services
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Services
  nameWithType: Game.Services
  fullName: Microsoft.Xna.Framework.Game.Services
- uid: Microsoft.Xna.Framework.Game.Content
  commentId: P:Microsoft.Xna.Framework.Game.Content
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Content
  nameWithType: Game.Content
  fullName: Microsoft.Xna.Framework.Game.Content
- uid: Microsoft.Xna.Framework.Game.GraphicsDevice
  commentId: P:Microsoft.Xna.Framework.Game.GraphicsDevice
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: GraphicsDevice
  nameWithType: Game.GraphicsDevice
  fullName: Microsoft.Xna.Framework.Game.GraphicsDevice
- uid: Microsoft.Xna.Framework.Game.Window
  commentId: P:Microsoft.Xna.Framework.Game.Window
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Window
  nameWithType: Game.Window
  fullName: Microsoft.Xna.Framework.Game.Window
- uid: Microsoft.Xna.Framework.Game.Activated
  commentId: E:Microsoft.Xna.Framework.Game.Activated
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Activated
  nameWithType: Game.Activated
  fullName: Microsoft.Xna.Framework.Game.Activated
- uid: Microsoft.Xna.Framework.Game.Deactivated
  commentId: E:Microsoft.Xna.Framework.Game.Deactivated
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Deactivated
  nameWithType: Game.Deactivated
  fullName: Microsoft.Xna.Framework.Game.Deactivated
- uid: Microsoft.Xna.Framework.Game.Disposed
  commentId: E:Microsoft.Xna.Framework.Game.Disposed
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Disposed
  nameWithType: Game.Disposed
  fullName: Microsoft.Xna.Framework.Game.Disposed
- uid: Microsoft.Xna.Framework.Game.Exiting
  commentId: E:Microsoft.Xna.Framework.Game.Exiting
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Exiting
  nameWithType: Game.Exiting
  fullName: Microsoft.Xna.Framework.Game.Exiting
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.GameImpl.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<GameImpl>(GameImpl)
  nameWithType: Extensions.JsonCopy<GameImpl>(GameImpl)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.GameImpl>(TinyLife.GameImpl)
  nameWithType.vb: Extensions.JsonCopy(Of GameImpl)(GameImpl)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.GameImpl)(TinyLife.GameImpl)
  name.vb: JsonCopy(Of GameImpl)(GameImpl)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.GameImpl)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: '>'
  - name: (
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.GameImpl)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: )
  - name: (
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: MLEM.Startup
  commentId: N:MLEM.Startup
  isExternal: true
  name: MLEM.Startup
  nameWithType: MLEM.Startup
  fullName: MLEM.Startup
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Startup
    name: Startup
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Startup
    name: Startup
    isExternal: true
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: NuGet.Versioning.NuGetVersion
  commentId: T:NuGet.Versioning.NuGetVersion
  parent: NuGet.Versioning
  isExternal: true
  name: NuGetVersion
  nameWithType: NuGetVersion
  fullName: NuGet.Versioning.NuGetVersion
- uid: NuGet.Versioning
  commentId: N:NuGet.Versioning
  isExternal: true
  name: NuGet.Versioning
  nameWithType: NuGet.Versioning
  fullName: NuGet.Versioning
  spec.csharp:
  - uid: NuGet
    name: NuGet
    isExternal: true
  - name: .
  - uid: NuGet.Versioning
    name: Versioning
    isExternal: true
  spec.vb:
  - uid: NuGet
    name: NuGet
    isExternal: true
  - name: .
  - uid: NuGet.Versioning
    name: Versioning
    isExternal: true
- uid: TinyLife.GameImpl.Instance*
  commentId: Overload:TinyLife.GameImpl.Instance
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Instance
  name: Instance
  nameWithType: GameImpl.Instance
  fullName: TinyLife.GameImpl.Instance
- uid: TinyLife.GameImpl
  commentId: T:TinyLife.GameImpl
  parent: TinyLife
  href: TinyLife.GameImpl.html
  name: GameImpl
  nameWithType: GameImpl
  fullName: TinyLife.GameImpl
- uid: TinyLife.Goals.Achievement
  commentId: T:TinyLife.Goals.Achievement
  parent: TinyLife.Goals
  href: TinyLife.Goals.Achievement.html
  name: Achievement
  nameWithType: Achievement
  fullName: TinyLife.Goals.Achievement
- uid: TinyLife.Goals.AchievementType
  commentId: T:TinyLife.Goals.AchievementType
  parent: TinyLife.Goals
  href: TinyLife.Goals.AchievementType.html
  name: AchievementType
  nameWithType: AchievementType
  fullName: TinyLife.Goals.AchievementType
- uid: TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
  commentId: M:TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CompleteAchievement_TinyLife_Goals_AchievementType_
  name: CompleteAchievement(AchievementType)
  nameWithType: GameImpl.CompleteAchievement(AchievementType)
  fullName: TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
  spec.csharp:
  - uid: TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
    name: CompleteAchievement
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_CompleteAchievement_TinyLife_Goals_AchievementType_
  - name: (
  - uid: TinyLife.Goals.AchievementType
    name: AchievementType
    href: TinyLife.Goals.AchievementType.html
  - name: )
  spec.vb:
  - uid: TinyLife.GameImpl.CompleteAchievement(TinyLife.Goals.AchievementType)
    name: CompleteAchievement
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_CompleteAchievement_TinyLife_Goals_AchievementType_
  - name: (
  - uid: TinyLife.Goals.AchievementType
    name: AchievementType
    href: TinyLife.Goals.AchievementType.html
  - name: )
- uid: System.Collections.Generic.HashSet{TinyLife.Goals.Achievement}
  commentId: T:System.Collections.Generic.HashSet{TinyLife.Goals.Achievement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<Achievement>
  nameWithType: HashSet<Achievement>
  fullName: System.Collections.Generic.HashSet<TinyLife.Goals.Achievement>
  nameWithType.vb: HashSet(Of Achievement)
  fullName.vb: System.Collections.Generic.HashSet(Of TinyLife.Goals.Achievement)
  name.vb: HashSet(Of Achievement)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: TinyLife.Goals.Achievement
    name: Achievement
    href: TinyLife.Goals.Achievement.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Achievement
    name: Achievement
    href: TinyLife.Goals.Achievement.html
  - name: )
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  commentId: M:TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  isExternal: true
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_DoDraw_Microsoft_Xna_Framework_GameTime_
  name: DoDraw(GameTime)
  nameWithType: GameImpl.DoDraw(GameTime)
  fullName: TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
    name: DoDraw
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_DoDraw_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
    name: DoDraw
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_DoDraw_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: TinyLife.GameImpl.GraphicsMetrics*
  commentId: Overload:TinyLife.GameImpl.GraphicsMetrics
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_GraphicsMetrics
  name: GraphicsMetrics
  nameWithType: GameImpl.GraphicsMetrics
  fullName: TinyLife.GameImpl.GraphicsMetrics
- uid: Microsoft.Xna.Framework.Graphics.GraphicsMetrics
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsMetrics
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: GraphicsMetrics
  nameWithType: GraphicsMetrics
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsMetrics
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: TinyLife.GameImpl.LoadContent
  commentId: M:TinyLife.GameImpl.LoadContent
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_LoadContent
  name: LoadContent()
  nameWithType: GameImpl.LoadContent()
  fullName: TinyLife.GameImpl.LoadContent()
  spec.csharp:
  - uid: TinyLife.GameImpl.LoadContent
    name: LoadContent
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_LoadContent
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.GameImpl.LoadContent
    name: LoadContent
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_LoadContent
  - name: (
  - name: )
- uid: TinyLife.GameImpl.Camera*
  commentId: Overload:TinyLife.GameImpl.Camera
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Camera
  name: Camera
  nameWithType: GameImpl.Camera
  fullName: TinyLife.GameImpl.Camera
- uid: MLEM.Cameras.Camera
  commentId: T:MLEM.Cameras.Camera
  parent: MLEM.Cameras
  isExternal: true
  name: Camera
  nameWithType: Camera
  fullName: MLEM.Cameras.Camera
- uid: MLEM.Cameras
  commentId: N:MLEM.Cameras
  isExternal: true
  name: MLEM.Cameras
  nameWithType: MLEM.Cameras
  fullName: MLEM.Cameras
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Cameras
    name: Cameras
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Cameras
    name: Cameras
    isExternal: true
- uid: Microsoft.Xna.Framework.Audio.AudioListener
  commentId: T:Microsoft.Xna.Framework.Audio.AudioListener
  parent: Microsoft.Xna.Framework.Audio
  isExternal: true
  name: AudioListener
  nameWithType: AudioListener
  fullName: Microsoft.Xna.Framework.Audio.AudioListener
- uid: TinyLife.GameImpl.Camera
  commentId: P:TinyLife.GameImpl.Camera
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Camera
  name: Camera
  nameWithType: GameImpl.Camera
  fullName: TinyLife.GameImpl.Camera
- uid: TinyLife.GameImpl.Listener*
  commentId: Overload:TinyLife.GameImpl.Listener
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Listener
  name: Listener
  nameWithType: GameImpl.Listener
  fullName: TinyLife.GameImpl.Listener
- uid: Microsoft.Xna.Framework.Audio
  commentId: N:Microsoft.Xna.Framework.Audio
  isExternal: true
  name: Microsoft.Xna.Framework.Audio
  nameWithType: Microsoft.Xna.Framework.Audio
  fullName: Microsoft.Xna.Framework.Audio
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Audio
    name: Audio
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Audio
    name: Audio
    isExternal: true
- uid: TinyLife.Tools.Tool
  commentId: T:TinyLife.Tools.Tool
  parent: TinyLife.Tools
  href: TinyLife.Tools.Tool.html
  name: Tool
  nameWithType: Tool
  fullName: TinyLife.Tools.Tool
- uid: TinyLife.Tools.Tool.PlayModeTool
  commentId: F:TinyLife.Tools.Tool.PlayModeTool
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_PlayModeTool
  name: PlayModeTool
  nameWithType: Tool.PlayModeTool
  fullName: TinyLife.Tools.Tool.PlayModeTool
- uid: TinyLife.Tools.Tool.BuildTools
  commentId: F:TinyLife.Tools.Tool.BuildTools
  parent: TinyLife.Tools.Tool
  href: TinyLife.Tools.Tool.html#TinyLife_Tools_Tool_BuildTools
  name: BuildTools
  nameWithType: Tool.BuildTools
  fullName: TinyLife.Tools.Tool.BuildTools
- uid: TinyLife.GameImpl.CurrentTool*
  commentId: Overload:TinyLife.GameImpl.CurrentTool
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentTool
  name: CurrentTool
  nameWithType: GameImpl.CurrentTool
  fullName: TinyLife.GameImpl.CurrentTool
- uid: TinyLife.Tools
  commentId: N:TinyLife.Tools
  href: TinyLife.html
  name: TinyLife.Tools
  nameWithType: TinyLife.Tools
  fullName: TinyLife.Tools
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Tools
    name: Tools
    href: TinyLife.Tools.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Tools
    name: Tools
    href: TinyLife.Tools.html
- uid: TinyLife.GameImpl.CurrentHousehold*
  commentId: Overload:TinyLife.GameImpl.CurrentHousehold
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentHousehold
  name: CurrentHousehold
  nameWithType: GameImpl.CurrentHousehold
  fullName: TinyLife.GameImpl.CurrentHousehold
- uid: TinyLife.World.Household
  commentId: T:TinyLife.World.Household
  parent: TinyLife.World
  href: TinyLife.World.Household.html
  name: Household
  nameWithType: Household
  fullName: TinyLife.World.Household
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.GameImpl.CurrentHousehold
  commentId: P:TinyLife.GameImpl.CurrentHousehold
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentHousehold
  name: CurrentHousehold
  nameWithType: GameImpl.CurrentHousehold
  fullName: TinyLife.GameImpl.CurrentHousehold
- uid: System.Single.MaxValue
  commentId: F:System.Single.MaxValue
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single.maxvalue
  name: MaxValue
  nameWithType: float.MaxValue
  fullName: float.MaxValue
  nameWithType.vb: Single.MaxValue
  fullName.vb: Single.MaxValue
- uid: TinyLife.GameImpl.Money*
  commentId: Overload:TinyLife.GameImpl.Money
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Money
  name: Money
  nameWithType: GameImpl.Money
  fullName: TinyLife.GameImpl.Money
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.GameImpl.CurrentLot*
  commentId: Overload:TinyLife.GameImpl.CurrentLot
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentLot
  name: CurrentLot
  nameWithType: GameImpl.CurrentLot
  fullName: TinyLife.GameImpl.CurrentLot
- uid: TinyLife.World.Lot
  commentId: T:TinyLife.World.Lot
  parent: TinyLife.World
  href: TinyLife.World.Lot.html
  name: Lot
  nameWithType: Lot
  fullName: TinyLife.World.Lot
- uid: TinyLife.GameSpeed
  commentId: T:TinyLife.GameSpeed
  parent: TinyLife
  href: TinyLife.GameSpeed.html
  name: GameSpeed
  nameWithType: GameSpeed
  fullName: TinyLife.GameSpeed
- uid: TinyLife.GameSpeed.VeryFast
  commentId: F:TinyLife.GameSpeed.VeryFast
  href: TinyLife.GameSpeed.html#TinyLife_GameSpeed_VeryFast
  name: VeryFast
  nameWithType: GameSpeed.VeryFast
  fullName: TinyLife.GameSpeed.VeryFast
- uid: TinyLife.GameImpl.CanBeExtremelyFast
  commentId: M:TinyLife.GameImpl.CanBeExtremelyFast
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CanBeExtremelyFast
  name: CanBeExtremelyFast()
  nameWithType: GameImpl.CanBeExtremelyFast()
  fullName: TinyLife.GameImpl.CanBeExtremelyFast()
  spec.csharp:
  - uid: TinyLife.GameImpl.CanBeExtremelyFast
    name: CanBeExtremelyFast
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_CanBeExtremelyFast
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.GameImpl.CanBeExtremelyFast
    name: CanBeExtremelyFast
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_CanBeExtremelyFast
  - name: (
  - name: )
- uid: TinyLife.GameSpeed.ExtremelyFast
  commentId: F:TinyLife.GameSpeed.ExtremelyFast
  href: TinyLife.GameSpeed.html#TinyLife_GameSpeed_ExtremelyFast
  name: ExtremelyFast
  nameWithType: GameSpeed.ExtremelyFast
  fullName: TinyLife.GameSpeed.ExtremelyFast
- uid: MLEM.Ui.RootElement
  commentId: T:MLEM.Ui.RootElement
  parent: MLEM.Ui
  isExternal: true
  name: RootElement
  nameWithType: RootElement
  fullName: MLEM.Ui.RootElement
- uid: TinyLife.Utilities.Extensions.SetPauseGame(MLEM.Ui.RootElement,System.Boolean)
  commentId: M:TinyLife.Utilities.Extensions.SetPauseGame(MLEM.Ui.RootElement,System.Boolean)
  isExternal: true
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_SetPauseGame_MLEM_Ui_RootElement_System_Boolean_
  name: SetPauseGame(RootElement, bool)
  nameWithType: Extensions.SetPauseGame(RootElement, bool)
  fullName: TinyLife.Utilities.Extensions.SetPauseGame(MLEM.Ui.RootElement, bool)
  nameWithType.vb: Extensions.SetPauseGame(RootElement, Boolean)
  fullName.vb: TinyLife.Utilities.Extensions.SetPauseGame(MLEM.Ui.RootElement, Boolean)
  name.vb: SetPauseGame(RootElement, Boolean)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetPauseGame(MLEM.Ui.RootElement,System.Boolean)
    name: SetPauseGame
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_SetPauseGame_MLEM_Ui_RootElement_System_Boolean_
  - name: (
  - uid: MLEM.Ui.RootElement
    name: RootElement
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetPauseGame(MLEM.Ui.RootElement,System.Boolean)
    name: SetPauseGame
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_SetPauseGame_MLEM_Ui_RootElement_System_Boolean_
  - name: (
  - uid: MLEM.Ui.RootElement
    name: RootElement
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.GameImpl.Speed*
  commentId: Overload:TinyLife.GameImpl.Speed
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Speed
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  isExternal: true
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.GameImpl.FollowingPerson*
  commentId: Overload:TinyLife.GameImpl.FollowingPerson
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_FollowingPerson
  name: FollowingPerson
  nameWithType: GameImpl.FollowingPerson
  fullName: TinyLife.GameImpl.FollowingPerson
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.GameImpl.SaveName*
  commentId: Overload:TinyLife.GameImpl.SaveName
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_SaveName
  name: SaveName
  nameWithType: GameImpl.SaveName
  fullName: TinyLife.GameImpl.SaveName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.GameImpl.GameMode
  commentId: T:TinyLife.GameImpl.GameMode
  parent: TinyLife
  href: TinyLife.GameImpl.html
  name: GameImpl.GameMode
  nameWithType: GameImpl.GameMode
  fullName: TinyLife.GameImpl.GameMode
  spec.csharp:
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: .
  - uid: TinyLife.GameImpl.GameMode
    name: GameMode
    href: TinyLife.GameImpl.GameMode.html
  spec.vb:
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: .
  - uid: TinyLife.GameImpl.GameMode
    name: GameMode
    href: TinyLife.GameImpl.GameMode.html
- uid: TinyLife.GameImpl.Mode*
  commentId: Overload:TinyLife.GameImpl.Mode
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Mode
  name: Mode
  nameWithType: GameImpl.Mode
  fullName: TinyLife.GameImpl.Mode
- uid: MLEM.Input.InputHandler.MousePosition
  commentId: P:MLEM.Input.InputHandler.MousePosition
  isExternal: true
  name: MousePosition
  nameWithType: InputHandler.MousePosition
  fullName: MLEM.Input.InputHandler.MousePosition
- uid: TinyLife.GameImpl.CursorPosition*
  commentId: Overload:TinyLife.GameImpl.CursorPosition
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CursorPosition
  name: CursorPosition
  nameWithType: GameImpl.CursorPosition
  fullName: TinyLife.GameImpl.CursorPosition
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: TinyLife.Uis.CursorType
  commentId: T:TinyLife.Uis.CursorType
  parent: TinyLife.Uis
  href: TinyLife.Uis.CursorType.html
  name: CursorType
  nameWithType: CursorType
  fullName: TinyLife.Uis.CursorType
- uid: TinyLife.Uis.CursorType.Default
  commentId: F:TinyLife.Uis.CursorType.Default
  href: TinyLife.Uis.CursorType.html#TinyLife_Uis_CursorType_Default
  name: Default
  nameWithType: CursorType.Default
  fullName: TinyLife.Uis.CursorType.Default
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  href: TinyLife.html
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
- uid: TinyLife.GameImpl.CurrentMaps*
  commentId: Overload:TinyLife.GameImpl.CurrentMaps
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentMaps
  name: CurrentMaps
  nameWithType: GameImpl.CurrentMaps
  fullName: TinyLife.GameImpl.CurrentMaps
- uid: System.Collections.Generic.Dictionary{System.String,TinyLife.World.Map}
  commentId: T:System.Collections.Generic.Dictionary{System.String,TinyLife.World.Map}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, Map>
  nameWithType: Dictionary<string, Map>
  fullName: System.Collections.Generic.Dictionary<string, TinyLife.World.Map>
  nameWithType.vb: Dictionary(Of String, Map)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, TinyLife.World.Map)
  name.vb: Dictionary(Of String, Map)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TinyLife.GameImpl.CurrentMap*
  commentId: Overload:TinyLife.GameImpl.CurrentMap
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentMap
  name: CurrentMap
  nameWithType: GameImpl.CurrentMap
  fullName: TinyLife.GameImpl.CurrentMap
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World.Lot.MinFloor
  commentId: P:TinyLife.World.Lot.MinFloor
  href: TinyLife.World.Lot.html#TinyLife_World_Lot_MinFloor
  name: MinFloor
  nameWithType: Lot.MinFloor
  fullName: TinyLife.World.Lot.MinFloor
- uid: TinyLife.GameImpl.CurrentMinFloor*
  commentId: Overload:TinyLife.GameImpl.CurrentMinFloor
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentMinFloor
  name: CurrentMinFloor
  nameWithType: GameImpl.CurrentMinFloor
  fullName: TinyLife.GameImpl.CurrentMinFloor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.World.Lot.MaxFloor
  commentId: P:TinyLife.World.Lot.MaxFloor
  href: TinyLife.World.Lot.html#TinyLife_World_Lot_MaxFloor
  name: MaxFloor
  nameWithType: Lot.MaxFloor
  fullName: TinyLife.World.Lot.MaxFloor
- uid: TinyLife.GameImpl.CurrentMaxFloor*
  commentId: Overload:TinyLife.GameImpl.CurrentMaxFloor
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentMaxFloor
  name: CurrentMaxFloor
  nameWithType: GameImpl.CurrentMaxFloor
  fullName: TinyLife.GameImpl.CurrentMaxFloor
- uid: TinyLife.GameImpl.CurrentGlobalTime
  commentId: F:TinyLife.GameImpl.CurrentGlobalTime
  name: CurrentGlobalTime
  nameWithType: GameImpl.CurrentGlobalTime
  fullName: TinyLife.GameImpl.CurrentGlobalTime
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  commentId: M:TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_SwitchGameMode_TinyLife_GameImpl_GameMode_
  name: SwitchGameMode(GameMode)
  nameWithType: GameImpl.SwitchGameMode(GameImpl.GameMode)
  fullName: TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  spec.csharp:
  - uid: TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
    name: SwitchGameMode
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_SwitchGameMode_TinyLife_GameImpl_GameMode_
  - name: (
  - uid: TinyLife.GameImpl.GameMode
    name: GameMode
    href: TinyLife.GameImpl.GameMode.html
  - name: )
  spec.vb:
  - uid: TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
    name: SwitchGameMode
    href: TinyLife.GameImpl.html#TinyLife_GameImpl_SwitchGameMode_TinyLife_GameImpl_GameMode_
  - name: (
  - uid: TinyLife.GameImpl.GameMode
    name: GameMode
    href: TinyLife.GameImpl.GameMode.html
  - name: )
- uid: System.Action{TinyLife.GameImpl.GameMode,TinyLife.Mods.EventPhase}
  commentId: T:System.Action{TinyLife.GameImpl.GameMode,TinyLife.Mods.EventPhase}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<GameImpl.GameMode, EventPhase>
  nameWithType: Action<GameImpl.GameMode, EventPhase>
  fullName: System.Action<TinyLife.GameImpl.GameMode, TinyLife.Mods.EventPhase>
  nameWithType.vb: Action(Of GameImpl.GameMode, EventPhase)
  fullName.vb: System.Action(Of TinyLife.GameImpl.GameMode, TinyLife.Mods.EventPhase)
  name.vb: Action(Of GameImpl.GameMode, EventPhase)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: .
  - uid: TinyLife.GameImpl.GameMode
    name: GameMode
    href: TinyLife.GameImpl.GameMode.html
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
    href: TinyLife.Mods.EventPhase.html
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: .
  - uid: TinyLife.GameImpl.GameMode
    name: GameMode
    href: TinyLife.GameImpl.GameMode.html
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
    href: TinyLife.Mods.EventPhase.html
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: MLEM.Startup.MlemGame.LoadContent
  commentId: M:MLEM.Startup.MlemGame.LoadContent
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: LoadContent()
  nameWithType: MlemGame.LoadContent()
  fullName: MLEM.Startup.MlemGame.LoadContent()
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.LoadContent
    name: LoadContent
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.LoadContent
    name: LoadContent
    isExternal: true
  - name: (
  - name: )
- uid: TinyLife.GameImpl.LoadContent*
  commentId: Overload:TinyLife.GameImpl.LoadContent
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_LoadContent
  name: LoadContent
  nameWithType: GameImpl.LoadContent
  fullName: TinyLife.GameImpl.LoadContent
- uid: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: DoUpdate(GameTime)
  nameWithType: MlemGame.DoUpdate(GameTime)
  fullName: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
    name: DoUpdate
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
    name: DoUpdate
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: TinyLife.GameImpl.DoUpdate*
  commentId: Overload:TinyLife.GameImpl.DoUpdate
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_DoUpdate_Microsoft_Xna_Framework_GameTime_
  name: DoUpdate
  nameWithType: GameImpl.DoUpdate
  fullName: TinyLife.GameImpl.DoUpdate
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: DoDraw(GameTime)
  nameWithType: MlemGame.DoDraw(GameTime)
  fullName: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
    name: DoDraw
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
    name: DoDraw
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: TinyLife.GameImpl.DoDraw*
  commentId: Overload:TinyLife.GameImpl.DoDraw
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_DoDraw_Microsoft_Xna_Framework_GameTime_
  name: DoDraw
  nameWithType: GameImpl.DoDraw
  fullName: TinyLife.GameImpl.DoDraw
- uid: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Dispose(bool)
  nameWithType: Game.Dispose(bool)
  fullName: Microsoft.Xna.Framework.Game.Dispose(bool)
  nameWithType.vb: Game.Dispose(Boolean)
  fullName.vb: Microsoft.Xna.Framework.Game.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.GameImpl.Dispose*
  commentId: Overload:TinyLife.GameImpl.Dispose
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Dispose_System_Boolean_
  name: Dispose
  nameWithType: GameImpl.Dispose
  fullName: TinyLife.GameImpl.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.GameImpl.RotateCamera*
  commentId: Overload:TinyLife.GameImpl.RotateCamera
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_RotateCamera_System_Boolean_
  name: RotateCamera
  nameWithType: GameImpl.RotateCamera
  fullName: TinyLife.GameImpl.RotateCamera
- uid: TinyLife.GameImpl.CursorPosition
  commentId: P:TinyLife.GameImpl.CursorPosition
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CursorPosition
  name: CursorPosition
  nameWithType: GameImpl.CursorPosition
  fullName: TinyLife.GameImpl.CursorPosition
- uid: TinyLife.GameImpl.ZoomCamera*
  commentId: Overload:TinyLife.GameImpl.ZoomCamera
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_ZoomCamera_System_Int32_
  name: ZoomCamera
  nameWithType: GameImpl.ZoomCamera
  fullName: TinyLife.GameImpl.ZoomCamera
- uid: MLEM.Ui.UiSystem
  commentId: T:MLEM.Ui.UiSystem
  parent: MLEM.Ui
  isExternal: true
  name: UiSystem
  nameWithType: UiSystem
  fullName: MLEM.Ui.UiSystem
- uid: TinyLife.GameImpl.IsCursorOnUi*
  commentId: Overload:TinyLife.GameImpl.IsCursorOnUi
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_IsCursorOnUi
  name: IsCursorOnUi
  nameWithType: GameImpl.IsCursorOnUi
  fullName: TinyLife.GameImpl.IsCursorOnUi
- uid: TinyLife.GameImpl.SwitchGameMode*
  commentId: Overload:TinyLife.GameImpl.SwitchGameMode
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_SwitchGameMode_TinyLife_GameImpl_GameMode_
  name: SwitchGameMode
  nameWithType: GameImpl.SwitchGameMode
  fullName: TinyLife.GameImpl.SwitchGameMode
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Speed
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
- uid: TinyLife.GameImpl.CanBeExtremelyFast*
  commentId: Overload:TinyLife.GameImpl.CanBeExtremelyFast
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CanBeExtremelyFast
  name: CanBeExtremelyFast
  nameWithType: GameImpl.CanBeExtremelyFast
  fullName: TinyLife.GameImpl.CanBeExtremelyFast
- uid: TinyLife.Uis.CharacterCreator
  commentId: T:TinyLife.Uis.CharacterCreator
  parent: TinyLife.Uis
  href: TinyLife.Uis.CharacterCreator.html
  name: CharacterCreator
  nameWithType: CharacterCreator
  fullName: TinyLife.Uis.CharacterCreator
- uid: TinyLife.GameImpl.CurrentTool
  commentId: P:TinyLife.GameImpl.CurrentTool
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentTool
  name: CurrentTool
  nameWithType: GameImpl.CurrentTool
  fullName: TinyLife.GameImpl.CurrentTool
- uid: TinyLife.GameImpl.CurrentLot
  commentId: P:TinyLife.GameImpl.CurrentLot
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentLot
  name: CurrentLot
  nameWithType: GameImpl.CurrentLot
  fullName: TinyLife.GameImpl.CurrentLot
- uid: TinyLife.GameImpl.CanSwitchGameModes*
  commentId: Overload:TinyLife.GameImpl.CanSwitchGameModes
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CanSwitchGameModes
  name: CanSwitchGameModes
  nameWithType: GameImpl.CanSwitchGameModes
  fullName: TinyLife.GameImpl.CanSwitchGameModes
- uid: TinyLife.GameImpl.TakeScreenshot*
  commentId: Overload:TinyLife.GameImpl.TakeScreenshot
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_TakeScreenshot_Microsoft_Xna_Framework_Point_System_Nullable_MLEM_Maths_RectangleF__System_Nullable_Microsoft_Xna_Framework_Matrix__Microsoft_Xna_Framework_Graphics_RenderTarget2D_
  name: TakeScreenshot
  nameWithType: GameImpl.TakeScreenshot
  fullName: TinyLife.GameImpl.TakeScreenshot
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: System.Nullable{MLEM.Maths.RectangleF}
  commentId: T:System.Nullable{MLEM.Maths.RectangleF}
  parent: System
  definition: System.Nullable`1
  name: RectangleF?
  nameWithType: RectangleF?
  fullName: MLEM.Maths.RectangleF?
  spec.csharp:
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    isExternal: true
  - name: '?'
- uid: System.Nullable{Microsoft.Xna.Framework.Matrix}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Matrix}
  parent: System
  definition: System.Nullable`1
  name: Matrix?
  nameWithType: Matrix?
  fullName: Microsoft.Xna.Framework.Matrix?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    isExternal: true
  - name: '?'
- uid: Microsoft.Xna.Framework.Graphics.RenderTarget2D
  commentId: T:Microsoft.Xna.Framework.Graphics.RenderTarget2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: RenderTarget2D
  nameWithType: RenderTarget2D
  fullName: Microsoft.Xna.Framework.Graphics.RenderTarget2D
- uid: TinyLife.Objects.PersonLike.VisitLot(TinyLife.World.Lot)
  commentId: M:TinyLife.Objects.PersonLike.VisitLot(TinyLife.World.Lot)
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_VisitLot_TinyLife_World_Lot_
  name: VisitLot(Lot)
  nameWithType: PersonLike.VisitLot(Lot)
  fullName: TinyLife.Objects.PersonLike.VisitLot(TinyLife.World.Lot)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.VisitLot(TinyLife.World.Lot)
    name: VisitLot
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_VisitLot_TinyLife_World_Lot_
  - name: (
  - uid: TinyLife.World.Lot
    name: Lot
    href: TinyLife.World.Lot.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.VisitLot(TinyLife.World.Lot)
    name: VisitLot
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_VisitLot_TinyLife_World_Lot_
  - name: (
  - uid: TinyLife.World.Lot
    name: Lot
    href: TinyLife.World.Lot.html
  - name: )
- uid: TinyLife.GameImpl.MarkLotVisible*
  commentId: Overload:TinyLife.GameImpl.MarkLotVisible
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_MarkLotVisible_TinyLife_World_Lot_
  name: MarkLotVisible
  nameWithType: GameImpl.MarkLotVisible
  fullName: TinyLife.GameImpl.MarkLotVisible
- uid: TinyLife.GameImpl.MarkLotNonVisible*
  commentId: Overload:TinyLife.GameImpl.MarkLotNonVisible
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_MarkLotNonVisible_TinyLife_World_Lot_
  name: MarkLotNonVisible
  nameWithType: GameImpl.MarkLotNonVisible
  fullName: TinyLife.GameImpl.MarkLotNonVisible
- uid: TinyLife.GameImpl.IsLotVisible*
  commentId: Overload:TinyLife.GameImpl.IsLotVisible
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_IsLotVisible_TinyLife_World_Lot_
  name: IsLotVisible
  nameWithType: GameImpl.IsLotVisible
  fullName: TinyLife.GameImpl.IsLotVisible
- uid: TinyLife.Uis.Menus.Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.Uis.Menus.Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  isExternal: true
  href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_Transition_System_Action_System_Action_TinyLife_Uis_Menus_TransitionType_TinyLife_Uis_Menus_TransitionType_System_Single_System_Single_System_Single_System_Nullable_Microsoft_Xna_Framework_Color__
  name: Transition(Action, Action, TransitionType, TransitionType, float, float, float, Color?)
  nameWithType: Menus.Transition(Action, Action, Menus.TransitionType, Menus.TransitionType, float, float, float, Color?)
  fullName: TinyLife.Uis.Menus.Transition(System.Action, System.Action, TinyLife.Uis.Menus.TransitionType, TinyLife.Uis.Menus.TransitionType, float, float, float, Microsoft.Xna.Framework.Color?)
  nameWithType.vb: Menus.Transition(Action, Action, Menus.TransitionType, Menus.TransitionType, Single, Single, Single, Color?)
  fullName.vb: TinyLife.Uis.Menus.Transition(System.Action, System.Action, TinyLife.Uis.Menus.TransitionType, TinyLife.Uis.Menus.TransitionType, Single, Single, Single, Microsoft.Xna.Framework.Color?)
  name.vb: Transition(Action, Action, TransitionType, TransitionType, Single, Single, Single, Color?)
  spec.csharp:
  - uid: TinyLife.Uis.Menus.Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Transition
    href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_Transition_System_Action_System_Action_TinyLife_Uis_Menus_TransitionType_TinyLife_Uis_Menus_TransitionType_System_Single_System_Single_System_Single_System_Nullable_Microsoft_Xna_Framework_Color__
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Menus.TransitionType
    name: TransitionType
    href: TinyLife.Uis.Menus.TransitionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Menus.TransitionType
    name: TransitionType
    href: TinyLife.Uis.Menus.TransitionType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.Menus.Transition(System.Action,System.Action,TinyLife.Uis.Menus.TransitionType,TinyLife.Uis.Menus.TransitionType,System.Single,System.Single,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Transition
    href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_Transition_System_Action_System_Action_TinyLife_Uis_Menus_TransitionType_TinyLife_Uis_Menus_TransitionType_System_Single_System_Single_System_Single_System_Nullable_Microsoft_Xna_Framework_Color__
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Menus.TransitionType
    name: TransitionType
    href: TinyLife.Uis.Menus.TransitionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.Menus.TransitionType
    name: TransitionType
    href: TinyLife.Uis.Menus.TransitionType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
- uid: TinyLife.Objects.MapObject.Map
  commentId: P:TinyLife.Objects.MapObject.Map
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_Map
  name: Map
  nameWithType: MapObject.Map
  fullName: TinyLife.Objects.MapObject.Map
- uid: TinyLife.GameImpl.CurrentMap
  commentId: P:TinyLife.GameImpl.CurrentMap
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CurrentMap
  name: CurrentMap
  nameWithType: GameImpl.CurrentMap
  fullName: TinyLife.GameImpl.CurrentMap
- uid: TinyLife.Uis.Menus.IsTransitioning
  commentId: M:TinyLife.Uis.Menus.IsTransitioning
  href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_IsTransitioning
  name: IsTransitioning()
  nameWithType: Menus.IsTransitioning()
  fullName: TinyLife.Uis.Menus.IsTransitioning()
  spec.csharp:
  - uid: TinyLife.Uis.Menus.IsTransitioning
    name: IsTransitioning
    href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_IsTransitioning
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.Menus.IsTransitioning
    name: IsTransitioning
    href: TinyLife.Uis.Menus.html#TinyLife_Uis_Menus_IsTransitioning
  - name: (
  - name: )
- uid: TinyLife.GameImpl.FollowPerson*
  commentId: Overload:TinyLife.GameImpl.FollowPerson
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_FollowPerson_TinyLife_Objects_PersonLike_System_Boolean_System_Action_
  name: FollowPerson
  nameWithType: GameImpl.FollowPerson
  fullName: TinyLife.GameImpl.FollowPerson
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.World.Map.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
  commentId: M:TinyLife.World.Map.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
  href: TinyLife.World.Map.html#TinyLife_World_Map_OnCurrentGameMapChanged_TinyLife_World_Map_TinyLife_World_Map_
  name: OnCurrentGameMapChanged(Map, Map)
  nameWithType: Map.OnCurrentGameMapChanged(Map, Map)
  fullName: TinyLife.World.Map.OnCurrentGameMapChanged(TinyLife.World.Map, TinyLife.World.Map)
  spec.csharp:
  - uid: TinyLife.World.Map.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
    name: OnCurrentGameMapChanged
    href: TinyLife.World.Map.html#TinyLife_World_Map_OnCurrentGameMapChanged_TinyLife_World_Map_TinyLife_World_Map_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.OnCurrentGameMapChanged(TinyLife.World.Map,TinyLife.World.Map)
    name: OnCurrentGameMapChanged
    href: TinyLife.World.Map.html#TinyLife_World_Map_OnCurrentGameMapChanged_TinyLife_World_Map_TinyLife_World_Map_
  - name: (
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: )
- uid: TinyLife.GameImpl.SwitchMap*
  commentId: Overload:TinyLife.GameImpl.SwitchMap
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_SwitchMap_TinyLife_World_Map_System_Action_System_Action_
  name: SwitchMap
  nameWithType: GameImpl.SwitchMap
  fullName: TinyLife.GameImpl.SwitchMap
- uid: TinyLife.MapInfo
  commentId: T:TinyLife.MapInfo
  parent: TinyLife
  href: TinyLife.MapInfo.html
  name: MapInfo
  nameWithType: MapInfo
  fullName: TinyLife.MapInfo
- uid: TinyLife.GameImpl.AddMapToSave*
  commentId: Overload:TinyLife.GameImpl.AddMapToSave
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_AddMapToSave_TinyLife_MapInfo_System_Action_
  name: AddMapToSave
  nameWithType: GameImpl.AddMapToSave
  fullName: TinyLife.GameImpl.AddMapToSave
- uid: TinyLife.World.Map.PrepareForPermanentRemoval
  commentId: M:TinyLife.World.Map.PrepareForPermanentRemoval
  href: TinyLife.World.Map.html#TinyLife_World_Map_PrepareForPermanentRemoval
  name: PrepareForPermanentRemoval()
  nameWithType: Map.PrepareForPermanentRemoval()
  fullName: TinyLife.World.Map.PrepareForPermanentRemoval()
  spec.csharp:
  - uid: TinyLife.World.Map.PrepareForPermanentRemoval
    name: PrepareForPermanentRemoval
    href: TinyLife.World.Map.html#TinyLife_World_Map_PrepareForPermanentRemoval
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.PrepareForPermanentRemoval
    name: PrepareForPermanentRemoval
    href: TinyLife.World.Map.html#TinyLife_World_Map_PrepareForPermanentRemoval
  - name: (
  - name: )
- uid: TinyLife.GameImpl.RemoveMapFromSave*
  commentId: Overload:TinyLife.GameImpl.RemoveMapFromSave
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_RemoveMapFromSave_TinyLife_World_Map_
  name: RemoveMapFromSave
  nameWithType: GameImpl.RemoveMapFromSave
  fullName: TinyLife.GameImpl.RemoveMapFromSave
- uid: TinyLife.GameImpl.Achievements
  commentId: F:TinyLife.GameImpl.Achievements
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Achievements
  name: Achievements
  nameWithType: GameImpl.Achievements
  fullName: TinyLife.GameImpl.Achievements
- uid: TinyLife.GameImpl.CompleteAchievement*
  commentId: Overload:TinyLife.GameImpl.CompleteAchievement
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_CompleteAchievement_TinyLife_Goals_AchievementType_
  name: CompleteAchievement
  nameWithType: GameImpl.CompleteAchievement
  fullName: TinyLife.GameImpl.CompleteAchievement
- uid: TinyLife.Set
  commentId: T:TinyLife.Set
  parent: TinyLife
  href: TinyLife.Set.html
  name: Set
  nameWithType: Set
  fullName: TinyLife.Set
- uid: TinyLife.GameImpl.GetOwningSet*
  commentId: Overload:TinyLife.GameImpl.GetOwningSet
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_GetOwningSet_System_String_
  name: GetOwningSet
  nameWithType: GameImpl.GetOwningSet
  fullName: TinyLife.GameImpl.GetOwningSet
- uid: System.Nullable{TinyLife.Set}
  commentId: T:System.Nullable{TinyLife.Set}
  parent: System
  definition: System.Nullable`1
  href: TinyLife.Set.html
  name: Set?
  nameWithType: Set?
  fullName: TinyLife.Set?
  spec.csharp:
  - uid: TinyLife.Set
    name: Set
    href: TinyLife.Set.html
  - name: '?'
  spec.vb:
  - uid: TinyLife.Set
    name: Set
    href: TinyLife.Set.html
  - name: '?'
