### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.IContainerObject`1
  commentId: T:TinyLife.Objects.IContainerObject`1
  id: IContainerObject`1
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.IContainerObject`1.AddContent(`0)
  - TinyLife.Objects.IContainerObject`1.Content
  - TinyLife.Objects.IContainerObject`1.RemoveContent(`0)
  langs:
  - csharp
  - vb
  name: IContainerObject<T>
  nameWithType: IContainerObject<T>
  fullName: TinyLife.Objects.IContainerObject<T>
  type: Interface
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: 'public interface IContainerObject<T> where T : MapObject'
    typeParameters:
    - id: T
    content.vb: Public Interface IContainerObject(Of T As MapObject)
  extensionMethods:
  - TinyLife.Objects.IContainerObject`1.TinyLife.Utilities.Extensions.JsonCopy``1
  nameWithType.vb: IContainerObject(Of T)
  fullName.vb: TinyLife.Objects.IContainerObject(Of T)
  name.vb: IContainerObject(Of T)
- uid: TinyLife.Objects.IContainerObject`1.Content
  commentId: P:TinyLife.Objects.IContainerObject`1.Content
  id: Content
  parent: TinyLife.Objects.IContainerObject`1
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: IContainerObject<T>.Content
  fullName: TinyLife.Objects.IContainerObject<T>.Content
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: IEnumerable<T> Content { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: ReadOnly Property Content As IEnumerable(Of T)
  overload: TinyLife.Objects.IContainerObject`1.Content*
  nameWithType.vb: IContainerObject(Of T).Content
  fullName.vb: TinyLife.Objects.IContainerObject(Of T).Content
- uid: TinyLife.Objects.IContainerObject`1.AddContent(`0)
  commentId: M:TinyLife.Objects.IContainerObject`1.AddContent(`0)
  id: AddContent(`0)
  parent: TinyLife.Objects.IContainerObject`1
  langs:
  - csharp
  - vb
  name: AddContent(T)
  nameWithType: IContainerObject<T>.AddContent(T)
  fullName: TinyLife.Objects.IContainerObject<T>.AddContent(T)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: bool AddContent(T content)
    parameters:
    - id: content
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Function AddContent(content As T) As Boolean
  overload: TinyLife.Objects.IContainerObject`1.AddContent*
  nameWithType.vb: IContainerObject(Of T).AddContent(T)
  fullName.vb: TinyLife.Objects.IContainerObject(Of T).AddContent(T)
- uid: TinyLife.Objects.IContainerObject`1.RemoveContent(`0)
  commentId: M:TinyLife.Objects.IContainerObject`1.RemoveContent(`0)
  id: RemoveContent(`0)
  parent: TinyLife.Objects.IContainerObject`1
  langs:
  - csharp
  - vb
  name: RemoveContent(T)
  nameWithType: IContainerObject<T>.RemoveContent(T)
  fullName: TinyLife.Objects.IContainerObject<T>.RemoveContent(T)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  syntax:
    content: bool RemoveContent(T content)
    parameters:
    - id: content
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Function RemoveContent(content As T) As Boolean
  overload: TinyLife.Objects.IContainerObject`1.RemoveContent*
  nameWithType.vb: IContainerObject(Of T).RemoveContent(T)
  fullName.vb: TinyLife.Objects.IContainerObject(Of T).RemoveContent(T)
references:
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Objects.IContainerObject`1.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<IContainerObject<T>>(IContainerObject<T>)
  nameWithType: Extensions.JsonCopy<IContainerObject<T>>(IContainerObject<T>)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.IContainerObject<T>>(TinyLife.Objects.IContainerObject<T>)
  nameWithType.vb: Extensions.JsonCopy(Of IContainerObject(Of T))(IContainerObject(Of T))
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.IContainerObject(Of T))(TinyLife.Objects.IContainerObject(Of T))
  name.vb: JsonCopy(Of IContainerObject(Of T))(IContainerObject(Of T))
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.IContainerObject{`0})
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.IContainerObject`1
    name: IContainerObject
    href: TinyLife.Objects.IContainerObject-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.IContainerObject`1
    name: IContainerObject
    href: TinyLife.Objects.IContainerObject-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.IContainerObject{`0})
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.IContainerObject`1
    name: IContainerObject
    href: TinyLife.Objects.IContainerObject-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: TinyLife.Objects.IContainerObject`1
    name: IContainerObject
    href: TinyLife.Objects.IContainerObject-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.IContainerObject`1.Content*
  commentId: Overload:TinyLife.Objects.IContainerObject`1.Content
  href: TinyLife.Objects.IContainerObject-1.html#TinyLife_Objects_IContainerObject_1_Content
  name: Content
  nameWithType: IContainerObject<T>.Content
  fullName: TinyLife.Objects.IContainerObject<T>.Content
  nameWithType.vb: IContainerObject(Of T).Content
  fullName.vb: TinyLife.Objects.IContainerObject(Of T).Content
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Objects.IContainerObject`1.AddContent*
  commentId: Overload:TinyLife.Objects.IContainerObject`1.AddContent
  href: TinyLife.Objects.IContainerObject-1.html#TinyLife_Objects_IContainerObject_1_AddContent__0_
  name: AddContent
  nameWithType: IContainerObject<T>.AddContent
  fullName: TinyLife.Objects.IContainerObject<T>.AddContent
  nameWithType.vb: IContainerObject(Of T).AddContent
  fullName.vb: TinyLife.Objects.IContainerObject(Of T).AddContent
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Objects.IContainerObject`1.RemoveContent*
  commentId: Overload:TinyLife.Objects.IContainerObject`1.RemoveContent
  href: TinyLife.Objects.IContainerObject-1.html#TinyLife_Objects_IContainerObject_1_RemoveContent__0_
  name: RemoveContent
  nameWithType: IContainerObject<T>.RemoveContent
  fullName: TinyLife.Objects.IContainerObject<T>.RemoveContent
  nameWithType.vb: IContainerObject(Of T).RemoveContent
  fullName.vb: TinyLife.Objects.IContainerObject(Of T).RemoveContent
