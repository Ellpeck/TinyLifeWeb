### YamlMime:ManagedReference
items:
- uid: TinyLife.Skills.FoodType.IngredientSource
  commentId: T:TinyLife.Skills.FoodType.IngredientSource
  id: FoodType.IngredientSource
  parent: TinyLife.Skills
  children:
  - TinyLife.Skills.FoodType.IngredientSource.#ctor(System.String,TinyLife.Skills.FoodType.ContainerType)
  - TinyLife.Skills.FoodType.IngredientSource.Barbecue
  - TinyLife.Skills.FoodType.IngredientSource.CafeDisplayCase
  - TinyLife.Skills.FoodType.IngredientSource.CanEat
  - TinyLife.Skills.FoodType.IngredientSource.ChildStove
  - TinyLife.Skills.FoodType.IngredientSource.CoffeeMachine
  - TinyLife.Skills.FoodType.IngredientSource.Container
  - TinyLife.Skills.FoodType.IngredientSource.Fridge
  - TinyLife.Skills.FoodType.IngredientSource.MixologyKit
  - TinyLife.Skills.FoodType.IngredientSource.Name
  - TinyLife.Skills.FoodType.IngredientSource.OnEaten
  - TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  - TinyLife.Skills.FoodType.IngredientSource.RequiredSkill
  - TinyLife.Skills.FoodType.IngredientSource.Sink
  - TinyLife.Skills.FoodType.IngredientSource.TeaKit
  langs:
  - csharp
  - vb
  name: FoodType.IngredientSource
  nameWithType: FoodType.IngredientSource
  fullName: TinyLife.Skills.FoodType.IngredientSource
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: An ingredient source represents a place that the ingredients for a <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref> can be aquired from.
  example: []
  syntax:
    content: public class FoodType.IngredientSource
    content.vb: Public Class FoodType.IngredientSource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Skills.FoodType.IngredientSource.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Skills.FoodType.IngredientSource.Fridge
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Fridge
  id: Fridge
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Fridge
  nameWithType: FoodType.IngredientSource.Fridge
  fullName: TinyLife.Skills.FoodType.IngredientSource.Fridge
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: An ingredient source for objects that are created using the <xref href="TinyLife.Actions.ActionType.GetIngredientsSingle" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Actions.ActionType.GetIngredientsFamily" data-throw-if-not-resolved="false"></xref> actions
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource Fridge
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly Fridge As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.Barbecue
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Barbecue
  id: Barbecue
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Barbecue
  nameWithType: FoodType.IngredientSource.Barbecue
  fullName: TinyLife.Skills.FoodType.IngredientSource.Barbecue
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: An ingredient source for objects that are created using the <xref href="TinyLife.Actions.ActionType.GrillFood" data-throw-if-not-resolved="false"></xref> action
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource Barbecue
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly Barbecue As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.ChildStove
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.ChildStove
  id: ChildStove
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: ChildStove
  nameWithType: FoodType.IngredientSource.ChildStove
  fullName: TinyLife.Skills.FoodType.IngredientSource.ChildStove
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A stove that children can cook at.
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource ChildStove
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly ChildStove As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.CoffeeMachine
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.CoffeeMachine
  id: CoffeeMachine
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: CoffeeMachine
  nameWithType: FoodType.IngredientSource.CoffeeMachine
  fullName: TinyLife.Skills.FoodType.IngredientSource.CoffeeMachine
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A coffee machine.
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource CoffeeMachine
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly CoffeeMachine As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.Sink
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Sink
  id: Sink
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Sink
  nameWithType: FoodType.IngredientSource.Sink
  fullName: TinyLife.Skills.FoodType.IngredientSource.Sink
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A sink, used for getting water.
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource Sink
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly Sink As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.CafeDisplayCase
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.CafeDisplayCase
  id: CafeDisplayCase
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: CafeDisplayCase
  nameWithType: FoodType.IngredientSource.CafeDisplayCase
  fullName: TinyLife.Skills.FoodType.IngredientSource.CafeDisplayCase
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A cafe display case that a barista employee can get food out of for customers.
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource CafeDisplayCase
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly CafeDisplayCase As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.TeaKit
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.TeaKit
  id: TeaKit
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: TeaKit
  nameWithType: FoodType.IngredientSource.TeaKit
  fullName: TinyLife.Skills.FoodType.IngredientSource.TeaKit
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A tea kit that can be used to make tea drinks.
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource TeaKit
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly TeaKit As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  id: ProteinShakeMaker
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: ProteinShakeMaker
  nameWithType: FoodType.IngredientSource.ProteinShakeMaker
  fullName: TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: An ingredient source for objects that are created using the <xref href="TinyLife.Actions.ActionType.MixProteinShake" data-throw-if-not-resolved="false"></xref> action.
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource ProteinShakeMaker
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly ProteinShakeMaker As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.MixologyKit
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.MixologyKit
  id: MixologyKit
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: MixologyKit
  nameWithType: FoodType.IngredientSource.MixologyKit
  fullName: TinyLife.Skills.FoodType.IngredientSource.MixologyKit
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: An ingredient source for objects that are created using the <xref href="TinyLife.Actions.ActionType.MakeDrinks" data-throw-if-not-resolved="false"></xref> action.
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource MixologyKit
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly MixologyKit As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.Name
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Name
  id: Name
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FoodType.IngredientSource.Name
  fullName: TinyLife.Skills.FoodType.IngredientSource.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: The name of this ingredient source.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Skills.FoodType.IngredientSource.Container
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Container
  id: Container
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Container
  nameWithType: FoodType.IngredientSource.Container
  fullName: TinyLife.Skills.FoodType.IngredientSource.Container
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: The <xref href="TinyLife.Skills.FoodType.ContainerType" data-throw-if-not-resolved="false"></xref> that this ingredient source creates by default.
  example: []
  syntax:
    content: public readonly FoodType.ContainerType Container
    return:
      type: TinyLife.Skills.FoodType.ContainerType
    content.vb: Public ReadOnly Container As FoodType.ContainerType
- uid: TinyLife.Skills.FoodType.IngredientSource.OnEaten
  commentId: P:TinyLife.Skills.FoodType.IngredientSource.OnEaten
  id: OnEaten
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: OnEaten
  nameWithType: FoodType.IngredientSource.OnEaten
  fullName: TinyLife.Skills.FoodType.IngredientSource.OnEaten
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    An optional action that is invoked when this food object has been eaten.

    This method is called if the underlying <xref href="System.Action" data-throw-if-not-resolved="false"></xref> is completed after a sufficient amount of time, so the food item has not necessarily been fully finished when this action is invoked.

    This action is invoked in <xref href="TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo%2cTinyLife.Objects.FoodTypedItem)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Action<ActionInfo, FoodTypedItem> OnEaten { get; init; }
    parameters: []
    return:
      type: System.Action{TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem}
    content.vb: Public Property OnEaten As Action(Of ActionInfo, FoodTypedItem)
  overload: TinyLife.Skills.FoodType.IngredientSource.OnEaten*
- uid: TinyLife.Skills.FoodType.IngredientSource.CanEat
  commentId: P:TinyLife.Skills.FoodType.IngredientSource.CanEat
  id: CanEat
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: CanEat
  nameWithType: FoodType.IngredientSource.CanEat
  fullName: TinyLife.Skills.FoodType.IngredientSource.CanEat
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    An optional <xref href="TinyLife.Actions.ActionType.CanExecuteDelegate" data-throw-if-not-resolved="false"></xref>-style function that allows passing additional conditions to <xref href="TinyLife.Skills.FoodType.IngredientSource.CanEat" data-throw-if-not-resolved="false"></xref>.

    If this is null, which is also the default value, no additional checks are done in <xref href="TinyLife.Skills.FoodType.IngredientSource.CanEat" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Func<(PersonLike Person, FoodTypedItem Food, bool Automatic), CanExecuteResult> CanEat { get; init; }
    parameters: []
    return:
      type: System.Func{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean},TinyLife.Actions.CanExecuteResult}
    content.vb: Public Property CanEat As Func(Of (Person As PersonLike, Food As FoodTypedItem, Automatic As Boolean), CanExecuteResult)
  overload: TinyLife.Skills.FoodType.IngredientSource.CanEat*
- uid: TinyLife.Skills.FoodType.IngredientSource.RequiredSkill
  commentId: P:TinyLife.Skills.FoodType.IngredientSource.RequiredSkill
  id: RequiredSkill
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: RequiredSkill
  nameWithType: FoodType.IngredientSource.RequiredSkill
  fullName: TinyLife.Skills.FoodType.IngredientSource.RequiredSkill
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    The <xref href="TinyLife.Skills.SkillType" data-throw-if-not-resolved="false"></xref> required for this food type, which is linked to the <xref href="TinyLife.Skills.FoodType.RequiredSkillLevel" data-throw-if-not-resolved="false"></xref>.

    This value defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  example: []
  syntax:
    content: public SkillType RequiredSkill { get; init; }
    parameters: []
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Property RequiredSkill As SkillType
  overload: TinyLife.Skills.FoodType.IngredientSource.RequiredSkill*
- uid: TinyLife.Skills.FoodType.IngredientSource.#ctor(System.String,TinyLife.Skills.FoodType.ContainerType)
  commentId: M:TinyLife.Skills.FoodType.IngredientSource.#ctor(System.String,TinyLife.Skills.FoodType.ContainerType)
  id: '#ctor(System.String,TinyLife.Skills.FoodType.ContainerType)'
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: IngredientSource(string, ContainerType)
  nameWithType: FoodType.IngredientSource.IngredientSource(string, FoodType.ContainerType)
  fullName: TinyLife.Skills.FoodType.IngredientSource.IngredientSource(string, TinyLife.Skills.FoodType.ContainerType)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: Creates a new ingredient source with the given settings.
  example: []
  syntax:
    content: public IngredientSource(string name, FoodType.ContainerType container = null)
    parameters:
    - id: name
      type: System.String
      description: The name of this ingredient source.
    - id: container
      type: TinyLife.Skills.FoodType.ContainerType
      description: he <xref href="TinyLife.Skills.FoodType.ContainerType" data-throw-if-not-resolved="false"></xref> that this ingredient source creates by default.
    content.vb: Public Sub New(name As String, container As FoodType.ContainerType = Nothing)
  overload: TinyLife.Skills.FoodType.IngredientSource.#ctor*
  nameWithType.vb: FoodType.IngredientSource.New(String, FoodType.ContainerType)
  fullName.vb: TinyLife.Skills.FoodType.IngredientSource.New(String, TinyLife.Skills.FoodType.ContainerType)
  name.vb: New(String, ContainerType)
references:
- uid: TinyLife.Skills.FoodType
  commentId: T:TinyLife.Skills.FoodType
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType
  nameWithType: FoodType
  fullName: TinyLife.Skills.FoodType
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Skills.FoodType.IngredientSource.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<IngredientSource>(IngredientSource)
  nameWithType: Extensions.JsonCopy<FoodType.IngredientSource>(FoodType.IngredientSource)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.FoodType.IngredientSource>(TinyLife.Skills.FoodType.IngredientSource)
  nameWithType.vb: Extensions.JsonCopy(Of FoodType.IngredientSource)(FoodType.IngredientSource)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.FoodType.IngredientSource)(TinyLife.Skills.FoodType.IngredientSource)
  name.vb: JsonCopy(Of IngredientSource)(IngredientSource)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.FoodType.IngredientSource)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
  - name: '>'
  - name: (
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.FoodType.IngredientSource)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
  - name: )
  - name: (
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Actions.ActionType.GetIngredientsSingle
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsSingle
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_GetIngredientsSingle
  name: GetIngredientsSingle
  nameWithType: ActionType.GetIngredientsSingle
  fullName: TinyLife.Actions.ActionType.GetIngredientsSingle
- uid: TinyLife.Actions.ActionType.GetIngredientsFamily
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsFamily
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_GetIngredientsFamily
  name: GetIngredientsFamily
  nameWithType: ActionType.GetIngredientsFamily
  fullName: TinyLife.Actions.ActionType.GetIngredientsFamily
- uid: TinyLife.Skills.FoodType.IngredientSource
  commentId: T:TinyLife.Skills.FoodType.IngredientSource
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType.IngredientSource
  nameWithType: FoodType.IngredientSource
  fullName: TinyLife.Skills.FoodType.IngredientSource
  spec.csharp:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
  spec.vb:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
- uid: TinyLife.Actions.ActionType.GrillFood
  commentId: F:TinyLife.Actions.ActionType.GrillFood
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_GrillFood
  name: GrillFood
  nameWithType: ActionType.GrillFood
  fullName: TinyLife.Actions.ActionType.GrillFood
- uid: TinyLife.Actions.ActionType.MixProteinShake
  commentId: F:TinyLife.Actions.ActionType.MixProteinShake
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_MixProteinShake
  name: MixProteinShake
  nameWithType: ActionType.MixProteinShake
  fullName: TinyLife.Actions.ActionType.MixProteinShake
- uid: TinyLife.Actions.ActionType.MakeDrinks
  commentId: F:TinyLife.Actions.ActionType.MakeDrinks
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_MakeDrinks
  name: MakeDrinks
  nameWithType: ActionType.MakeDrinks
  fullName: TinyLife.Actions.ActionType.MakeDrinks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Skills.FoodType.ContainerType
  commentId: T:TinyLife.Skills.FoodType.ContainerType
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType.ContainerType
  nameWithType: FoodType.ContainerType
  fullName: TinyLife.Skills.FoodType.ContainerType
  spec.csharp:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
    href: TinyLife.Skills.FoodType.ContainerType.html
  spec.vb:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
    href: TinyLife.Skills.FoodType.ContainerType.html
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
  commentId: M:TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_ActionInfo_TinyLife_Objects_FoodTypedItem_
  name: InvokeOnEaten(ActionInfo, FoodTypedItem)
  nameWithType: FoodType.InvokeOnEaten(ActionInfo, FoodTypedItem)
  fullName: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo, TinyLife.Objects.FoodTypedItem)
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
    name: InvokeOnEaten
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_ActionInfo_TinyLife_Objects_FoodTypedItem_
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
    name: InvokeOnEaten
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_ActionInfo_TinyLife_Objects_FoodTypedItem_
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: )
- uid: TinyLife.Skills.FoodType.IngredientSource.OnEaten*
  commentId: Overload:TinyLife.Skills.FoodType.IngredientSource.OnEaten
  href: TinyLife.Skills.FoodType.IngredientSource.html#TinyLife_Skills_FoodType_IngredientSource_OnEaten
  name: OnEaten
  nameWithType: FoodType.IngredientSource.OnEaten
  fullName: TinyLife.Skills.FoodType.IngredientSource.OnEaten
- uid: System.Action{TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem}
  commentId: T:System.Action{TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<ActionInfo, FoodTypedItem>
  nameWithType: Action<ActionInfo, FoodTypedItem>
  fullName: System.Action<TinyLife.Actions.ActionInfo, TinyLife.Objects.FoodTypedItem>
  nameWithType.vb: Action(Of ActionInfo, FoodTypedItem)
  fullName.vb: System.Action(Of TinyLife.Actions.ActionInfo, TinyLife.Objects.FoodTypedItem)
  name.vb: Action(Of ActionInfo, FoodTypedItem)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate
  commentId: T:TinyLife.Actions.ActionType.CanExecuteDelegate
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType.CanExecuteDelegate
  nameWithType: ActionType.CanExecuteDelegate
  fullName: TinyLife.Actions.ActionType.CanExecuteDelegate
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
    href: TinyLife.Actions.ActionType.CanExecuteDelegate.html
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
    href: TinyLife.Actions.ActionType.CanExecuteDelegate.html
- uid: TinyLife.Skills.FoodType.IngredientSource.CanEat
  commentId: P:TinyLife.Skills.FoodType.IngredientSource.CanEat
  href: TinyLife.Skills.FoodType.IngredientSource.html#TinyLife_Skills_FoodType_IngredientSource_CanEat
  name: CanEat
  nameWithType: FoodType.IngredientSource.CanEat
  fullName: TinyLife.Skills.FoodType.IngredientSource.CanEat
- uid: TinyLife.Skills.FoodType.IngredientSource.CanEat*
  commentId: Overload:TinyLife.Skills.FoodType.IngredientSource.CanEat
  href: TinyLife.Skills.FoodType.IngredientSource.html#TinyLife_Skills_FoodType_IngredientSource_CanEat
  name: CanEat
  nameWithType: FoodType.IngredientSource.CanEat
  fullName: TinyLife.Skills.FoodType.IngredientSource.CanEat
- uid: System.Func{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean},TinyLife.Actions.CanExecuteResult}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean},TinyLife.Actions.CanExecuteResult}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(PersonLike Person, FoodTypedItem Food, bool Automatic), CanExecuteResult>
  nameWithType: Func<(PersonLike Person, FoodTypedItem Food, bool Automatic), CanExecuteResult>
  fullName: System.Func<(TinyLife.Objects.PersonLike Person, TinyLife.Objects.FoodTypedItem Food, bool Automatic), TinyLife.Actions.CanExecuteResult>
  nameWithType.vb: Func(Of (Person As PersonLike, Food As FoodTypedItem, Automatic As Boolean), CanExecuteResult)
  fullName.vb: System.Func(Of (Person As TinyLife.Objects.PersonLike, Food As TinyLife.Objects.FoodTypedItem, Automatic As Boolean), TinyLife.Actions.CanExecuteResult)
  name.vb: Func(Of (Person As PersonLike, Food As FoodTypedItem, Automatic As Boolean), CanExecuteResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Food
    name: Food
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.food
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.automatic
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.person
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Food
    name: Food
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.food
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.automatic
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  href: TinyLife.Skills.SkillType.html
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: TinyLife.Skills.FoodType.RequiredSkillLevel
  commentId: F:TinyLife.Skills.FoodType.RequiredSkillLevel
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_RequiredSkillLevel
  name: RequiredSkillLevel
  nameWithType: FoodType.RequiredSkillLevel
  fullName: TinyLife.Skills.FoodType.RequiredSkillLevel
- uid: TinyLife.Skills.FoodType.IngredientSource.RequiredSkill*
  commentId: Overload:TinyLife.Skills.FoodType.IngredientSource.RequiredSkill
  href: TinyLife.Skills.FoodType.IngredientSource.html#TinyLife_Skills_FoodType_IngredientSource_RequiredSkill
  name: RequiredSkill
  nameWithType: FoodType.IngredientSource.RequiredSkill
  fullName: TinyLife.Skills.FoodType.IngredientSource.RequiredSkill
- uid: TinyLife.Skills.FoodType.IngredientSource.#ctor*
  commentId: Overload:TinyLife.Skills.FoodType.IngredientSource.#ctor
  href: TinyLife.Skills.FoodType.IngredientSource.html#TinyLife_Skills_FoodType_IngredientSource__ctor_System_String_TinyLife_Skills_FoodType_ContainerType_
  name: IngredientSource
  nameWithType: FoodType.IngredientSource.IngredientSource
  fullName: TinyLife.Skills.FoodType.IngredientSource.IngredientSource
  nameWithType.vb: FoodType.IngredientSource.New
  fullName.vb: TinyLife.Skills.FoodType.IngredientSource.New
  name.vb: New
