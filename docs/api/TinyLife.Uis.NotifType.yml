### YamlMime:ManagedReference
items:
- uid: TinyLife.Uis.NotifType
  commentId: T:TinyLife.Uis.NotifType
  id: NotifType
  parent: TinyLife.Uis
  children:
  - TinyLife.Uis.NotifType.Info
  - TinyLife.Uis.NotifType.Warning
  - TinyLife.Uis.NotifType.VeryImportant
  - TinyLife.Uis.NotifType.VeryPositive
  - TinyLife.Uis.NotifType.Debug
  langs:
  - csharp
  - vb
  name: NotifType
  nameWithType: NotifType
  fullName: TinyLife.Uis.NotifType
  type: Enum
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: >-
    An enumeration that represents a type that a <xref href="TinyLife.Uis.Notifications" data-throw-if-not-resolved="false"></xref> panel can have.

    The notification type mainly changes the color that its panel is displayed with.
  example: []
  syntax:
    content: public enum NotifType
    content.vb: Public Enum NotifType
  extensionMethods:
  - TinyLife.Uis.NotifType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Uis.NotifType.Info
  commentId: F:TinyLife.Uis.NotifType.Info
  id: Info
  parent: TinyLife.Uis.NotifType
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: NotifType.Info
  fullName: TinyLife.Uis.NotifType.Info
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: The default notification type, which displays with a panel's regular color
  example: []
  syntax:
    content: Info = 0
    return:
      type: TinyLife.Uis.NotifType
- uid: TinyLife.Uis.NotifType.Warning
  commentId: F:TinyLife.Uis.NotifType.Warning
  id: Warning
  parent: TinyLife.Uis.NotifType
  langs:
  - csharp
  - vb
  name: Warning
  nameWithType: NotifType.Warning
  fullName: TinyLife.Uis.NotifType.Warning
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: A notification type for warnings, which displays in orange
  example: []
  syntax:
    content: Warning = 1
    return:
      type: TinyLife.Uis.NotifType
- uid: TinyLife.Uis.NotifType.VeryImportant
  commentId: F:TinyLife.Uis.NotifType.VeryImportant
  id: VeryImportant
  parent: TinyLife.Uis.NotifType
  langs:
  - csharp
  - vb
  name: VeryImportant
  nameWithType: NotifType.VeryImportant
  fullName: TinyLife.Uis.NotifType.VeryImportant
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: >-
    A notification type for very important messages, especially debug and error messages.

    This type displays in bright red.
  example: []
  syntax:
    content: VeryImportant = 2
    return:
      type: TinyLife.Uis.NotifType
- uid: TinyLife.Uis.NotifType.VeryPositive
  commentId: F:TinyLife.Uis.NotifType.VeryPositive
  id: VeryPositive
  parent: TinyLife.Uis.NotifType
  langs:
  - csharp
  - vb
  name: VeryPositive
  nameWithType: NotifType.VeryPositive
  fullName: TinyLife.Uis.NotifType.VeryPositive
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: A notification type for very positive messages, which displays in green
  example: []
  syntax:
    content: VeryPositive = 3
    return:
      type: TinyLife.Uis.NotifType
- uid: TinyLife.Uis.NotifType.Debug
  commentId: F:TinyLife.Uis.NotifType.Debug
  id: Debug
  parent: TinyLife.Uis.NotifType
  langs:
  - csharp
  - vb
  name: Debug
  nameWithType: NotifType.Debug
  fullName: TinyLife.Uis.NotifType.Debug
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Uis
  summary: A notification type for debug notifications, like ones created by <xref href="TinyLife.Debug.Cheats" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: Debug = 4
    return:
      type: TinyLife.Uis.NotifType
references:
- uid: TinyLife.Uis.Notifications
  commentId: T:TinyLife.Uis.Notifications
  href: TinyLife.Uis.Notifications.html
  name: Notifications
  nameWithType: Notifications
  fullName: TinyLife.Uis.Notifications
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  href: TinyLife.html
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
- uid: TinyLife.Uis.NotifType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<NotifType>(NotifType)
  nameWithType: Extensions.JsonCopy<NotifType>(NotifType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Uis.NotifType>(TinyLife.Uis.NotifType)
  nameWithType.vb: Extensions.JsonCopy(Of NotifType)(NotifType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Uis.NotifType)(TinyLife.Uis.NotifType)
  name.vb: JsonCopy(Of NotifType)(NotifType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Uis.NotifType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: '>'
  - name: (
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Uis.NotifType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: )
  - name: (
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Uis.NotifType
  commentId: T:TinyLife.Uis.NotifType
  parent: TinyLife.Uis
  href: TinyLife.Uis.NotifType.html
  name: NotifType
  nameWithType: NotifType
  fullName: TinyLife.Uis.NotifType
- uid: TinyLife.Debug.Cheats
  commentId: F:TinyLife.Debug.Cheats
  href: TinyLife.Debug.html#TinyLife_Debug_Cheats
  name: Cheats
  nameWithType: Debug.Cheats
  fullName: TinyLife.Debug.Cheats
