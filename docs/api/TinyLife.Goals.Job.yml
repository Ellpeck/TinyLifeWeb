### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.Job
  commentId: T:TinyLife.Goals.Job
  id: Job
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.Job.#ctor(TinyLife.Goals.JobType,TinyLife.Objects.Person,System.Int32)
  - TinyLife.Goals.Job.AddLevel(System.Int32)
  - TinyLife.Goals.Job.AddPerformance(System.Single)
  - TinyLife.Goals.Job.AmountOfRaises
  - TinyLife.Goals.Job.CurrentHourlyPay
  - TinyLife.Goals.Job.DailyTasks
  - TinyLife.Goals.Job.DaysOnVacation
  - TinyLife.Goals.Job.GetCoworkers
  - TinyLife.Goals.Job.GetCoworkersAtWork
  - TinyLife.Goals.Job.GetRaise
  - TinyLife.Goals.Job.HasRequiredPromotionSkills
  - TinyLife.Goals.Job.Level
  - TinyLife.Goals.Job.Migrations
  - TinyLife.Goals.Job.OnGetWorkingPerformance
  - TinyLife.Goals.Job.Performance
  - TinyLife.Goals.Job.Person
  - TinyLife.Goals.Job.RequiredPromotionPerformance
  - TinyLife.Goals.Job.StartVacation(System.Int32,System.Single)
  - TinyLife.Goals.Job.Type
  - TinyLife.Goals.Job.Update(System.TimeSpan)
  - TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
  - TinyLife.Goals.Job.VacationDaysAvailable
  - TinyLife.Goals.Job.Validate(TinyLife.Objects.Person,TinyLife.Utilities.AppliedMigrations)
  langs:
  - csharp
  - vb
  name: Job
  nameWithType: Job
  fullName: TinyLife.Goals.Job
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A job is a kind of work that a <xref href="TinyLife.Goals.Job.Person" data-throw-if-not-resolved="false"></xref> can have.

    The person's current jobs are accessible using <xref href="TinyLife.Objects.Person.Jobs" data-throw-if-not-resolved="false"></xref>.

    A job instance is constructed from its underlying <xref href="TinyLife.Goals.JobType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Job : JsonTypeSafeGenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class Job Inherits JsonTypeSafeGenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.Job.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Job.Migrations
  commentId: F:TinyLife.Goals.Job.Migrations
  id: Migrations
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: Migrations
  nameWithType: Job.Migrations
  fullName: TinyLife.Goals.Job.Migrations
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The set of migrations that will be applied to all loaded <xref href="TinyLife.Goals.Job" data-throw-if-not-resolved="false"></xref> instances when loading from disk.

    To register a migration that should only be applied to specific job types, use <xref href="TinyLife.Goals.JobType.Migrations" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static readonly List<Migration<Job>> Migrations
    return:
      type: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Goals.Job}}
    content.vb: Public Shared ReadOnly Migrations As List(Of Migration(Of Job))
- uid: TinyLife.Goals.Job.OnGetWorkingPerformance
  commentId: E:TinyLife.Goals.Job.OnGetWorkingPerformance
  id: OnGetWorkingPerformance
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: OnGetWorkingPerformance
  nameWithType: Job.OnGetWorkingPerformance
  fullName: TinyLife.Goals.Job.OnGetWorkingPerformance
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    An event that is raised when this job's <xref href="TinyLife.Goals.Job.Performance" data-throw-if-not-resolved="false"></xref> is increased in <xref href="TinyLife.Goals.Job.Update(System.TimeSpan)" data-throw-if-not-resolved="false"></xref>.

    This event can be used to change the gained or lost performance due to various custom conditions.
  example: []
  syntax:
    content: public static event Job.JobPerformanceDelegate OnGetWorkingPerformance
    return:
      type: TinyLife.Goals.Job.JobPerformanceDelegate
    content.vb: Public Shared Event OnGetWorkingPerformance As Job.JobPerformanceDelegate
- uid: TinyLife.Goals.Job.Type
  commentId: F:TinyLife.Goals.Job.Type
  id: Type
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Job.Type
  fullName: TinyLife.Goals.Job.Type
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The underlying <xref href="TinyLife.Goals.JobType" data-throw-if-not-resolved="false"></xref> that this job results from
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly JobType Type
    return:
      type: TinyLife.Goals.JobType
    content.vb: >-
      <DataMember>

      Public ReadOnly Type As JobType
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Job.Person
  commentId: P:TinyLife.Goals.Job.Person
  id: Person
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: Person
  nameWithType: Job.Person
  fullName: TinyLife.Goals.Job.Person
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The <xref href="TinyLife.Goals.Job.Person" data-throw-if-not-resolved="false"></xref> that currently has this job
  example: []
  syntax:
    content: public Person Person { get; }
    parameters: []
    return:
      type: TinyLife.Objects.Person
    content.vb: Public Property Person As Person
  overload: TinyLife.Goals.Job.Person*
- uid: TinyLife.Goals.Job.Performance
  commentId: P:TinyLife.Goals.Job.Performance
  id: Performance
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: Performance
  nameWithType: Job.Performance
  fullName: TinyLife.Goals.Job.Performance
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    This job's current performance, ranging from 0 to <xref href="TinyLife.Goals.Job.RequiredPromotionPerformance" data-throw-if-not-resolved="false"></xref>, representing the percentage of work performance.

    The default value is 0.5.
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Performance { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Property Performance As Single
  overload: TinyLife.Goals.Job.Performance*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Job.RequiredPromotionPerformance
  commentId: P:TinyLife.Goals.Job.RequiredPromotionPerformance
  id: RequiredPromotionPerformance
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: RequiredPromotionPerformance
  nameWithType: Job.RequiredPromotionPerformance
  fullName: TinyLife.Goals.Job.RequiredPromotionPerformance
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The amount of <xref href="TinyLife.Goals.Job.Performance" data-throw-if-not-resolved="false"></xref> required to be promoted at the current level.

    This is based on the <xref href="TinyLife.Goals.Job.Level" data-throw-if-not-resolved="false"></xref>, as well as the <xref href="TinyLife.Goals.Job.AmountOfRaises" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float RequiredPromotionPerformance { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property RequiredPromotionPerformance As Single
  overload: TinyLife.Goals.Job.RequiredPromotionPerformance*
- uid: TinyLife.Goals.Job.Level
  commentId: P:TinyLife.Goals.Job.Level
  id: Level
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: Job.Level
  fullName: TinyLife.Goals.Job.Level
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The current level that this job is at.

    Note that the default level is 0, and the level goes up to a maximum of <xref href="TinyLife.Goals.JobType.MaxLevel" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int Level { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property Level As Integer
  overload: TinyLife.Goals.Job.Level*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Job.DailyTasks
  commentId: P:TinyLife.Goals.Job.DailyTasks
  id: DailyTasks
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: DailyTasks
  nameWithType: Job.DailyTasks
  fullName: TinyLife.Goals.Job.DailyTasks
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: A goal set that represents the daily tasks for this job
  example: []
  syntax:
    content: >-
      [DataMember]

      public GoalSet DailyTasks { get; }
    parameters: []
    return:
      type: TinyLife.Goals.GoalSet
    content.vb: >-
      <DataMember>

      Public Property DailyTasks As GoalSet
  overload: TinyLife.Goals.Job.DailyTasks*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Job.AmountOfRaises
  commentId: P:TinyLife.Goals.Job.AmountOfRaises
  id: AmountOfRaises
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: AmountOfRaises
  nameWithType: Job.AmountOfRaises
  fullName: TinyLife.Goals.Job.AmountOfRaises
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The amount of raises that this job instance has been given.

    A raise is given after the <xref href="TinyLife.Goals.JobType.MaxLevel" data-throw-if-not-resolved="false"></xref> is reached and the <xref href="TinyLife.Goals.Job.Performance" data-throw-if-not-resolved="false"></xref> reaches <xref href="TinyLife.Goals.Job.RequiredPromotionPerformance" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int AmountOfRaises { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property AmountOfRaises As Integer
  overload: TinyLife.Goals.Job.AmountOfRaises*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Job.CurrentHourlyPay
  commentId: P:TinyLife.Goals.Job.CurrentHourlyPay
  id: CurrentHourlyPay
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: CurrentHourlyPay
  nameWithType: Job.CurrentHourlyPay
  fullName: TinyLife.Goals.Job.CurrentHourlyPay
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The amount of tiny bucks that this job pays per hour. This is based on <xref href="TinyLife.Goals.JobType.HourlyPay" data-throw-if-not-resolved="false"></xref> and the current <xref href="TinyLife.Goals.Job.Level" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.Job.AmountOfRaises" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float CurrentHourlyPay { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property CurrentHourlyPay As Single
  overload: TinyLife.Goals.Job.CurrentHourlyPay*
- uid: TinyLife.Goals.Job.VacationDaysAvailable
  commentId: F:TinyLife.Goals.Job.VacationDaysAvailable
  id: VacationDaysAvailable
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: VacationDaysAvailable
  nameWithType: Job.VacationDaysAvailable
  fullName: TinyLife.Goals.Job.VacationDaysAvailable
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The amount of vacation days currently available.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int VacationDaysAvailable
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public VacationDaysAvailable As Integer
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Job.DaysOnVacation
  commentId: P:TinyLife.Goals.Job.DaysOnVacation
  id: DaysOnVacation
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: DaysOnVacation
  nameWithType: Job.DaysOnVacation
  fullName: TinyLife.Goals.Job.DaysOnVacation
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    The amount of days remaining on the current vacation. If this value is 0, this job is not currently on vacation.

    Use <xref href="TinyLife.Goals.Job.StartVacation(System.Int32%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> to edit this value.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int DaysOnVacation { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property DaysOnVacation As Integer
  overload: TinyLife.Goals.Job.DaysOnVacation*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Job.#ctor(TinyLife.Goals.JobType,TinyLife.Objects.Person,System.Int32)
  commentId: M:TinyLife.Goals.Job.#ctor(TinyLife.Goals.JobType,TinyLife.Objects.Person,System.Int32)
  id: '#ctor(TinyLife.Goals.JobType,TinyLife.Objects.Person,System.Int32)'
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: Job(JobType, Person, int)
  nameWithType: Job.Job(JobType, Person, int)
  fullName: TinyLife.Goals.Job.Job(TinyLife.Goals.JobType, TinyLife.Objects.Person, int)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Creates a new job from the given settings
  example: []
  syntax:
    content: public Job(JobType type, Person person, int level)
    parameters:
    - id: type
      type: TinyLife.Goals.JobType
      description: The underlying job type
    - id: person
      type: TinyLife.Objects.Person
      description: The person that should have this job
    - id: level
      type: System.Int32
      description: The level to start out with this job at
    content.vb: Public Sub New(type As JobType, person As Person, level As Integer)
  overload: TinyLife.Goals.Job.#ctor*
  nameWithType.vb: Job.New(JobType, Person, Integer)
  fullName.vb: TinyLife.Goals.Job.New(TinyLife.Goals.JobType, TinyLife.Objects.Person, Integer)
  name.vb: New(JobType, Person, Integer)
- uid: TinyLife.Goals.Job.Update(System.TimeSpan)
  commentId: M:TinyLife.Goals.Job.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: Job.Update(TimeSpan)
  fullName: TinyLife.Goals.Job.Update(System.TimeSpan)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Updates this job, changing the <xref href="TinyLife.Goals.Job.Performance" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.Job.Level" data-throw-if-not-resolved="false"></xref> according to this job's person's current actions.

    This is called in <xref href="TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Update(TimeSpan passedInGame)
    parameters:
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed in game since the last update
    content.vb: Public Sub Update(passedInGame As TimeSpan)
  overload: TinyLife.Goals.Job.Update*
- uid: TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
  id: UpdateWorking(TinyLife.Actions.WorkAction,System.TimeSpan,System.Single)
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: UpdateWorking(WorkAction, TimeSpan, float)
  nameWithType: Job.UpdateWorking(WorkAction, TimeSpan, float)
  fullName: TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction, System.TimeSpan, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Updates this job, changing the <xref href="TinyLife.Goals.Job.Performance" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.Job.Level" data-throw-if-not-resolved="false"></xref> according to this job's person's current actions.

    This is called in <xref href="TinyLife.Actions.WorkAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void UpdateWorking(WorkAction action, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: action
      type: TinyLife.Actions.WorkAction
      description: The action that is currently being executed.
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed in game since the last update.
    - id: speedMultiplier
      type: System.Single
      description: The game's current speed multiplier.
    content.vb: Public Sub UpdateWorking(action As WorkAction, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.Goals.Job.UpdateWorking*
  nameWithType.vb: Job.UpdateWorking(WorkAction, TimeSpan, Single)
  fullName.vb: TinyLife.Goals.Job.UpdateWorking(TinyLife.Actions.WorkAction, System.TimeSpan, Single)
  name.vb: UpdateWorking(WorkAction, TimeSpan, Single)
- uid: TinyLife.Goals.Job.AddPerformance(System.Single)
  commentId: M:TinyLife.Goals.Job.AddPerformance(System.Single)
  id: AddPerformance(System.Single)
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: AddPerformance(float)
  nameWithType: Job.AddPerformance(float)
  fullName: TinyLife.Goals.Job.AddPerformance(float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Adds (or removes) the given amount of performance to this job's <xref href="TinyLife.Goals.Job.Performance" data-throw-if-not-resolved="false"></xref>.

    If the total <xref href="TinyLife.Goals.Job.Performance" data-throw-if-not-resolved="false"></xref> rolls over (below 0 or above 1), <xref href="TinyLife.Goals.Job.AddLevel(System.Int32)" data-throw-if-not-resolved="false"></xref> is called and the performace is reset accordingly.
  example: []
  syntax:
    content: public void AddPerformance(float performance)
    parameters:
    - id: performance
      type: System.Single
      description: The amount to add or remove to the current performance
    content.vb: Public Sub AddPerformance(performance As Single)
  overload: TinyLife.Goals.Job.AddPerformance*
  nameWithType.vb: Job.AddPerformance(Single)
  fullName.vb: TinyLife.Goals.Job.AddPerformance(Single)
  name.vb: AddPerformance(Single)
- uid: TinyLife.Goals.Job.AddLevel(System.Int32)
  commentId: M:TinyLife.Goals.Job.AddLevel(System.Int32)
  id: AddLevel(System.Int32)
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: AddLevel(int)
  nameWithType: Job.AddLevel(int)
  fullName: TinyLife.Goals.Job.AddLevel(int)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Adds (or removes) the given amount of levels to this job's <xref href="TinyLife.Goals.Job.Level" data-throw-if-not-resolved="false"></xref>.

    Note that the resulting total level is clamped to <xref href="TinyLife.Goals.JobType.MaxLevel" data-throw-if-not-resolved="false"></xref>, and that this does not change the <xref href="TinyLife.Goals.Job.Performance" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: public bool AddLevel(int level)
    parameters:
    - id: level
      type: System.Int32
      description: The level to add to this job's current level
    return:
      type: System.Boolean
      description: Whether the level could be added (which is not the case if <xref href="TinyLife.Goals.Job.Level" data-throw-if-not-resolved="false"></xref> is already at <xref href="TinyLife.Goals.JobType.MaxLevel" data-throw-if-not-resolved="false"></xref>).
    content.vb: Public Function AddLevel(level As Integer) As Boolean
  overload: TinyLife.Goals.Job.AddLevel*
  nameWithType.vb: Job.AddLevel(Integer)
  fullName.vb: TinyLife.Goals.Job.AddLevel(Integer)
  name.vb: AddLevel(Integer)
- uid: TinyLife.Goals.Job.GetRaise
  commentId: M:TinyLife.Goals.Job.GetRaise
  id: GetRaise
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: GetRaise()
  nameWithType: Job.GetRaise()
  fullName: TinyLife.Goals.Job.GetRaise()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Gives the <xref href="TinyLife.Goals.Job.Person" data-throw-if-not-resolved="false"></xref> that has this job a raise.

    This causes the <xref href="TinyLife.Goals.Job.AmountOfRaises" data-throw-if-not-resolved="false"></xref> to be increased, which increases the <xref href="TinyLife.Goals.Job.CurrentHourlyPay" data-throw-if-not-resolved="false"></xref>.

    Note that this method will return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the <xref href="TinyLife.Goals.Job.Level" data-throw-if-not-resolved="false"></xref> has not reached the <xref href="TinyLife.Goals.JobType.MaxLevel" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool GetRaise()
    return:
      type: System.Boolean
      description: Whether a raise could successfully be given.
    content.vb: Public Function GetRaise() As Boolean
  overload: TinyLife.Goals.Job.GetRaise*
- uid: TinyLife.Goals.Job.HasRequiredPromotionSkills
  commentId: M:TinyLife.Goals.Job.HasRequiredPromotionSkills
  id: HasRequiredPromotionSkills
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: HasRequiredPromotionSkills()
  nameWithType: Job.HasRequiredPromotionSkills()
  fullName: TinyLife.Goals.Job.HasRequiredPromotionSkills()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Checks whether this job's <xref href="TinyLife.Goals.Job.Person" data-throw-if-not-resolved="false"></xref> has all of the <xref href="TinyLife.Goals.JobType.RequiredPromotionSkills" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public bool HasRequiredPromotionSkills()
    return:
      type: System.Boolean
      description: Whether the skills required for promotion are present
    content.vb: Public Function HasRequiredPromotionSkills() As Boolean
  overload: TinyLife.Goals.Job.HasRequiredPromotionSkills*
- uid: TinyLife.Goals.Job.GetCoworkers
  commentId: M:TinyLife.Goals.Job.GetCoworkers
  id: GetCoworkers
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: GetCoworkers()
  nameWithType: Job.GetCoworkers()
  fullName: TinyLife.Goals.Job.GetCoworkers()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Returns all of the people on the <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref> that also have this job.
  example: []
  syntax:
    content: public IEnumerable<Person> GetCoworkers()
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.Person}
      description: This person's coworkers.
    content.vb: Public Function GetCoworkers() As IEnumerable(Of Person)
  overload: TinyLife.Goals.Job.GetCoworkers*
- uid: TinyLife.Goals.Job.GetCoworkersAtWork
  commentId: M:TinyLife.Goals.Job.GetCoworkersAtWork
  id: GetCoworkersAtWork
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: GetCoworkersAtWork()
  nameWithType: Job.GetCoworkersAtWork()
  fullName: TinyLife.Goals.Job.GetCoworkersAtWork()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Returns all of the people on the <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref> that also have this job, and are currently at work.
  example: []
  syntax:
    content: public IEnumerable<Person> GetCoworkersAtWork()
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.Person}
      description: This person's currently working coworkers.
    content.vb: Public Function GetCoworkersAtWork() As IEnumerable(Of Person)
  overload: TinyLife.Goals.Job.GetCoworkersAtWork*
- uid: TinyLife.Goals.Job.Validate(TinyLife.Objects.Person,TinyLife.Utilities.AppliedMigrations)
  commentId: M:TinyLife.Goals.Job.Validate(TinyLife.Objects.Person,TinyLife.Utilities.AppliedMigrations)
  id: Validate(TinyLife.Objects.Person,TinyLife.Utilities.AppliedMigrations)
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: Validate(Person, AppliedMigrations)
  nameWithType: Job.Validate(Person, AppliedMigrations)
  fullName: TinyLife.Goals.Job.Validate(TinyLife.Objects.Person, TinyLife.Utilities.AppliedMigrations)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: This method is called when this object is loaded from disk.
  example: []
  syntax:
    content: public bool Validate(Person person, AppliedMigrations appliedMigrations)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
    - id: appliedMigrations
      type: TinyLife.Utilities.AppliedMigrations
    return:
      type: System.Boolean
      description: false if the object is not valid, true otherwise
    content.vb: Public Function Validate(person As Person, appliedMigrations As AppliedMigrations) As Boolean
  overload: TinyLife.Goals.Job.Validate*
- uid: TinyLife.Goals.Job.StartVacation(System.Int32,System.Single)
  commentId: M:TinyLife.Goals.Job.StartVacation(System.Int32,System.Single)
  id: StartVacation(System.Int32,System.Single)
  parent: TinyLife.Goals.Job
  langs:
  - csharp
  - vb
  name: StartVacation(int, float)
  nameWithType: Job.StartVacation(int, float)
  fullName: TinyLife.Goals.Job.StartVacation(int, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Starts a vacation for the given amount of <code class="paramref">days</code> with the given <code class="paramref">payModifier</code>.
  example: []
  syntax:
    content: public void StartVacation(int days, float payModifier = 1)
    parameters:
    - id: days
      type: System.Int32
      description: The amount of days.
    - id: payModifier
      type: System.Single
      description: The amount that the daily pay on vacation should be multiplied with, defaults to 1.
    content.vb: Public Sub StartVacation(days As Integer, payModifier As Single = 1)
  overload: TinyLife.Goals.Job.StartVacation*
  nameWithType.vb: Job.StartVacation(Integer, Single)
  fullName.vb: TinyLife.Goals.Job.StartVacation(Integer, Single)
  name.vb: StartVacation(Integer, Single)
references:
- uid: TinyLife.Goals.Job.Person
  commentId: P:TinyLife.Goals.Job.Person
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Person
  name: Person
  nameWithType: Job.Person
  fullName: TinyLife.Goals.Job.Person
- uid: TinyLife.Objects.Person.Jobs
  commentId: F:TinyLife.Objects.Person.Jobs
  href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_Jobs
  name: Jobs
  nameWithType: Person.Jobs
  fullName: TinyLife.Objects.Person.Jobs
- uid: TinyLife.Goals.JobType
  commentId: T:TinyLife.Goals.JobType
  parent: TinyLife.Goals
  href: TinyLife.Goals.JobType.html
  name: JobType
  nameWithType: JobType
  fullName: TinyLife.Goals.JobType
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Goals.Job.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Job>(Job)
  nameWithType: Extensions.JsonCopy<Job>(Job)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.Job>(TinyLife.Goals.Job)
  nameWithType.vb: Extensions.JsonCopy(Of Job)(Job)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.Job)(TinyLife.Goals.Job)
  name.vb: JsonCopy(Of Job)(Job)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.Job)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Goals.Job
    name: Job
    href: TinyLife.Goals.Job.html
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.Job
    name: Job
    href: TinyLife.Goals.Job.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.Job)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Job
    name: Job
    href: TinyLife.Goals.Job.html
  - name: )
  - name: (
  - uid: TinyLife.Goals.Job
    name: Job
    href: TinyLife.Goals.Job.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Goals.Job
  commentId: T:TinyLife.Goals.Job
  parent: TinyLife.Goals
  href: TinyLife.Goals.Job.html
  name: Job
  nameWithType: Job
  fullName: TinyLife.Goals.Job
- uid: TinyLife.Goals.JobType.Migrations
  commentId: P:TinyLife.Goals.JobType.Migrations
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_Migrations
  name: Migrations
  nameWithType: JobType.Migrations
  fullName: TinyLife.Goals.JobType.Migrations
- uid: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Goals.Job}}
  commentId: T:System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.Goals.Job}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Migration<Job>>
  nameWithType: List<Migration<Job>>
  fullName: System.Collections.Generic.List<TinyLife.Utilities.Migration<TinyLife.Goals.Job>>
  nameWithType.vb: List(Of Migration(Of Job))
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Utilities.Migration(Of TinyLife.Goals.Job))
  name.vb: List(Of Migration(Of Job))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: <
  - uid: TinyLife.Goals.Job
    name: Job
    href: TinyLife.Goals.Job.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Job
    name: Job
    href: TinyLife.Goals.Job.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Goals.Job.Performance
  commentId: P:TinyLife.Goals.Job.Performance
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Performance
  name: Performance
  nameWithType: Job.Performance
  fullName: TinyLife.Goals.Job.Performance
- uid: TinyLife.Goals.Job.Update(System.TimeSpan)
  commentId: M:TinyLife.Goals.Job.Update(System.TimeSpan)
  isExternal: true
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Update_System_TimeSpan_
  name: Update(TimeSpan)
  nameWithType: Job.Update(TimeSpan)
  fullName: TinyLife.Goals.Job.Update(System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Goals.Job.Update(System.TimeSpan)
    name: Update
    href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Update_System_TimeSpan_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.Job.Update(System.TimeSpan)
    name: Update
    href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Update_System_TimeSpan_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: TinyLife.Goals.Job.JobPerformanceDelegate
  commentId: T:TinyLife.Goals.Job.JobPerformanceDelegate
  parent: TinyLife.Goals
  href: TinyLife.Goals.Job.html
  name: Job.JobPerformanceDelegate
  nameWithType: Job.JobPerformanceDelegate
  fullName: TinyLife.Goals.Job.JobPerformanceDelegate
  spec.csharp:
  - uid: TinyLife.Goals.Job
    name: Job
    href: TinyLife.Goals.Job.html
  - name: .
  - uid: TinyLife.Goals.Job.JobPerformanceDelegate
    name: JobPerformanceDelegate
    href: TinyLife.Goals.Job.JobPerformanceDelegate.html
  spec.vb:
  - uid: TinyLife.Goals.Job
    name: Job
    href: TinyLife.Goals.Job.html
  - name: .
  - uid: TinyLife.Goals.Job.JobPerformanceDelegate
    name: JobPerformanceDelegate
    href: TinyLife.Goals.Job.JobPerformanceDelegate.html
- uid: TinyLife.Goals.Job.Person*
  commentId: Overload:TinyLife.Goals.Job.Person
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Person
  name: Person
  nameWithType: Job.Person
  fullName: TinyLife.Goals.Job.Person
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Goals.Job.RequiredPromotionPerformance
  commentId: P:TinyLife.Goals.Job.RequiredPromotionPerformance
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_RequiredPromotionPerformance
  name: RequiredPromotionPerformance
  nameWithType: Job.RequiredPromotionPerformance
  fullName: TinyLife.Goals.Job.RequiredPromotionPerformance
- uid: TinyLife.Goals.Job.Performance*
  commentId: Overload:TinyLife.Goals.Job.Performance
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Performance
  name: Performance
  nameWithType: Job.Performance
  fullName: TinyLife.Goals.Job.Performance
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Goals.Job.Level
  commentId: P:TinyLife.Goals.Job.Level
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Level
  name: Level
  nameWithType: Job.Level
  fullName: TinyLife.Goals.Job.Level
- uid: TinyLife.Goals.Job.AmountOfRaises
  commentId: P:TinyLife.Goals.Job.AmountOfRaises
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_AmountOfRaises
  name: AmountOfRaises
  nameWithType: Job.AmountOfRaises
  fullName: TinyLife.Goals.Job.AmountOfRaises
- uid: TinyLife.Goals.Job.RequiredPromotionPerformance*
  commentId: Overload:TinyLife.Goals.Job.RequiredPromotionPerformance
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_RequiredPromotionPerformance
  name: RequiredPromotionPerformance
  nameWithType: Job.RequiredPromotionPerformance
  fullName: TinyLife.Goals.Job.RequiredPromotionPerformance
- uid: TinyLife.Goals.JobType.MaxLevel
  commentId: P:TinyLife.Goals.JobType.MaxLevel
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_MaxLevel
  name: MaxLevel
  nameWithType: JobType.MaxLevel
  fullName: TinyLife.Goals.JobType.MaxLevel
- uid: TinyLife.Goals.Job.Level*
  commentId: Overload:TinyLife.Goals.Job.Level
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Level
  name: Level
  nameWithType: Job.Level
  fullName: TinyLife.Goals.Job.Level
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Goals.Job.DailyTasks*
  commentId: Overload:TinyLife.Goals.Job.DailyTasks
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_DailyTasks
  name: DailyTasks
  nameWithType: Job.DailyTasks
  fullName: TinyLife.Goals.Job.DailyTasks
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalSet.html
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
- uid: TinyLife.Goals.Job.AmountOfRaises*
  commentId: Overload:TinyLife.Goals.Job.AmountOfRaises
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_AmountOfRaises
  name: AmountOfRaises
  nameWithType: Job.AmountOfRaises
  fullName: TinyLife.Goals.Job.AmountOfRaises
- uid: TinyLife.Goals.JobType.HourlyPay
  commentId: F:TinyLife.Goals.JobType.HourlyPay
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_HourlyPay
  name: HourlyPay
  nameWithType: JobType.HourlyPay
  fullName: TinyLife.Goals.JobType.HourlyPay
- uid: TinyLife.Goals.Job.CurrentHourlyPay*
  commentId: Overload:TinyLife.Goals.Job.CurrentHourlyPay
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_CurrentHourlyPay
  name: CurrentHourlyPay
  nameWithType: Job.CurrentHourlyPay
  fullName: TinyLife.Goals.Job.CurrentHourlyPay
- uid: TinyLife.Goals.Job.StartVacation(System.Int32,System.Single)
  commentId: M:TinyLife.Goals.Job.StartVacation(System.Int32,System.Single)
  isExternal: true
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_StartVacation_System_Int32_System_Single_
  name: StartVacation(int, float)
  nameWithType: Job.StartVacation(int, float)
  fullName: TinyLife.Goals.Job.StartVacation(int, float)
  nameWithType.vb: Job.StartVacation(Integer, Single)
  fullName.vb: TinyLife.Goals.Job.StartVacation(Integer, Single)
  name.vb: StartVacation(Integer, Single)
  spec.csharp:
  - uid: TinyLife.Goals.Job.StartVacation(System.Int32,System.Single)
    name: StartVacation
    href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_StartVacation_System_Int32_System_Single_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.Job.StartVacation(System.Int32,System.Single)
    name: StartVacation
    href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_StartVacation_System_Int32_System_Single_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Goals.Job.DaysOnVacation*
  commentId: Overload:TinyLife.Goals.Job.DaysOnVacation
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_DaysOnVacation
  name: DaysOnVacation
  nameWithType: Job.DaysOnVacation
  fullName: TinyLife.Goals.Job.DaysOnVacation
- uid: TinyLife.Goals.Job.#ctor*
  commentId: Overload:TinyLife.Goals.Job.#ctor
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job__ctor_TinyLife_Goals_JobType_TinyLife_Objects_Person_System_Int32_
  name: Job
  nameWithType: Job.Job
  fullName: TinyLife.Goals.Job.Job
  nameWithType.vb: Job.New
  fullName.vb: TinyLife.Goals.Job.New
  name.vb: New
- uid: TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: Update(GameTime, TimeSpan, float)
  nameWithType: PersonLike.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: PersonLike.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Goals.Job.Update*
  commentId: Overload:TinyLife.Goals.Job.Update
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Update_System_TimeSpan_
  name: Update
  nameWithType: Job.Update
  fullName: TinyLife.Goals.Job.Update
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Actions.WorkAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.WorkAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  isExternal: true
  href: TinyLife.Actions.WorkAction.html#TinyLife_Actions_WorkAction_AndThenUpdate_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: AndThenUpdate(GameTime, TimeSpan, float)
  nameWithType: WorkAction.AndThenUpdate(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.WorkAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: WorkAction.AndThenUpdate(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.WorkAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: AndThenUpdate(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Actions.WorkAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: AndThenUpdate
    href: TinyLife.Actions.WorkAction.html#TinyLife_Actions_WorkAction_AndThenUpdate_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.WorkAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: AndThenUpdate
    href: TinyLife.Actions.WorkAction.html#TinyLife_Actions_WorkAction_AndThenUpdate_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Goals.Job.UpdateWorking*
  commentId: Overload:TinyLife.Goals.Job.UpdateWorking
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_UpdateWorking_TinyLife_Actions_WorkAction_System_TimeSpan_System_Single_
  name: UpdateWorking
  nameWithType: Job.UpdateWorking
  fullName: TinyLife.Goals.Job.UpdateWorking
- uid: TinyLife.Actions.WorkAction
  commentId: T:TinyLife.Actions.WorkAction
  parent: TinyLife.Actions
  href: TinyLife.Actions.WorkAction.html
  name: WorkAction
  nameWithType: WorkAction
  fullName: TinyLife.Actions.WorkAction
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: TinyLife.Goals.Job.AddLevel(System.Int32)
  commentId: M:TinyLife.Goals.Job.AddLevel(System.Int32)
  isExternal: true
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_AddLevel_System_Int32_
  name: AddLevel(int)
  nameWithType: Job.AddLevel(int)
  fullName: TinyLife.Goals.Job.AddLevel(int)
  nameWithType.vb: Job.AddLevel(Integer)
  fullName.vb: TinyLife.Goals.Job.AddLevel(Integer)
  name.vb: AddLevel(Integer)
  spec.csharp:
  - uid: TinyLife.Goals.Job.AddLevel(System.Int32)
    name: AddLevel
    href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_AddLevel_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.Job.AddLevel(System.Int32)
    name: AddLevel
    href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_AddLevel_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.Goals.Job.AddPerformance*
  commentId: Overload:TinyLife.Goals.Job.AddPerformance
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_AddPerformance_System_Single_
  name: AddPerformance
  nameWithType: Job.AddPerformance
  fullName: TinyLife.Goals.Job.AddPerformance
- uid: TinyLife.Goals.Job.AddLevel*
  commentId: Overload:TinyLife.Goals.Job.AddLevel
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_AddLevel_System_Int32_
  name: AddLevel
  nameWithType: Job.AddLevel
  fullName: TinyLife.Goals.Job.AddLevel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Goals.Job.CurrentHourlyPay
  commentId: P:TinyLife.Goals.Job.CurrentHourlyPay
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_CurrentHourlyPay
  name: CurrentHourlyPay
  nameWithType: Job.CurrentHourlyPay
  fullName: TinyLife.Goals.Job.CurrentHourlyPay
- uid: TinyLife.Goals.Job.GetRaise*
  commentId: Overload:TinyLife.Goals.Job.GetRaise
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_GetRaise
  name: GetRaise
  nameWithType: Job.GetRaise
  fullName: TinyLife.Goals.Job.GetRaise
- uid: TinyLife.Goals.JobType.RequiredPromotionSkills
  commentId: P:TinyLife.Goals.JobType.RequiredPromotionSkills
  parent: TinyLife.Goals.JobType
  href: TinyLife.Goals.JobType.html#TinyLife_Goals_JobType_RequiredPromotionSkills
  name: RequiredPromotionSkills
  nameWithType: JobType.RequiredPromotionSkills
  fullName: TinyLife.Goals.JobType.RequiredPromotionSkills
- uid: TinyLife.Goals.Job.HasRequiredPromotionSkills*
  commentId: Overload:TinyLife.Goals.Job.HasRequiredPromotionSkills
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_HasRequiredPromotionSkills
  name: HasRequiredPromotionSkills
  nameWithType: Job.HasRequiredPromotionSkills
  fullName: TinyLife.Goals.Job.HasRequiredPromotionSkills
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.Goals.Job.GetCoworkers*
  commentId: Overload:TinyLife.Goals.Job.GetCoworkers
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_GetCoworkers
  name: GetCoworkers
  nameWithType: Job.GetCoworkers
  fullName: TinyLife.Goals.Job.GetCoworkers
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.Person}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.Person}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Person>
  nameWithType: IEnumerable<Person>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.Person>
  nameWithType.vb: IEnumerable(Of Person)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.Person)
  name.vb: IEnumerable(Of Person)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Goals.Job.GetCoworkersAtWork*
  commentId: Overload:TinyLife.Goals.Job.GetCoworkersAtWork
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_GetCoworkersAtWork
  name: GetCoworkersAtWork
  nameWithType: Job.GetCoworkersAtWork
  fullName: TinyLife.Goals.Job.GetCoworkersAtWork
- uid: TinyLife.Goals.Job.Validate*
  commentId: Overload:TinyLife.Goals.Job.Validate
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_Validate_TinyLife_Objects_Person_TinyLife_Utilities_AppliedMigrations_
  name: Validate
  nameWithType: Job.Validate
  fullName: TinyLife.Goals.Job.Validate
- uid: TinyLife.Utilities.AppliedMigrations
  commentId: T:TinyLife.Utilities.AppliedMigrations
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.AppliedMigrations.html
  name: AppliedMigrations
  nameWithType: AppliedMigrations
  fullName: TinyLife.Utilities.AppliedMigrations
- uid: TinyLife.Goals.Job.StartVacation*
  commentId: Overload:TinyLife.Goals.Job.StartVacation
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_StartVacation_System_Int32_System_Single_
  name: StartVacation
  nameWithType: Job.StartVacation
  fullName: TinyLife.Goals.Job.StartVacation
