### YamlMime:ManagedReference
items:
- uid: TinyLife.Skills.FoodType
  commentId: T:TinyLife.Skills.FoodType
  id: FoodType
  parent: TinyLife.Skills
  children:
  - TinyLife.Skills.FoodType.#ctor(System.String,System.Int32,System.Int32,System.Single,TinyLife.Skills.FoodType.FoodRestriction,TinyLife.Skills.FoodType.IngredientSource,System.Nullable{Microsoft.Xna.Framework.Color})
  - TinyLife.Skills.FoodType.AdditionalObject
  - TinyLife.Skills.FoodType.AllRestrictions
  - TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single,System.Boolean)
  - TinyLife.Skills.FoodType.CanCreateFunc
  - TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean)
  - TinyLife.Skills.FoodType.CanEatFunc
  - TinyLife.Skills.FoodType.CanHaveCandle
  - TinyLife.Skills.FoodType.Color
  - TinyLife.Skills.FoodType.Construct(TinyLife.World.Map,TinyLife.Skills.Quality,System.TimeSpan,System.Int32,TinyLife.Objects.PersonLike,System.Nullable{System.Guid},System.Boolean)
  - TinyLife.Skills.FoodType.ConstructUnfinished(TinyLife.Objects.FurnitureType,TinyLife.World.Map,System.TimeSpan,System.Int32,TinyLife.Objects.PersonLike,System.Nullable{System.Guid},System.Boolean)
  - TinyLife.Skills.FoodType.Container
  - TinyLife.Skills.FoodType.CreateBaked(System.String,System.Int32,System.Int32,System.Single,TinyLife.Skills.FoodType.FoodRestriction,System.Boolean,TinyLife.Skills.FoodType.IngredientSource[])
  - TinyLife.Skills.FoodType.CustomTextureFunc
  - TinyLife.Skills.FoodType.DisplayName
  - TinyLife.Skills.FoodType.GetAllContainers(System.Boolean,System.Boolean)
  - TinyLife.Skills.FoodType.GetBuyableVariations(System.Int32,TinyLife.Skills.FoodType.ContainerType)
  - TinyLife.Skills.FoodType.GetPossibleArguments(TinyLife.Objects.PersonLike,System.Int32,TinyLife.Skills.FoodType.IngredientSource,System.Single,TinyLife.Skills.SkillType,System.Boolean)
  - TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike,System.Int32,System.Single,System.Single@,System.Nullable{System.Single}@)
  - TinyLife.Skills.FoodType.GetRestrictionsDescription(System.Boolean)
  - TinyLife.Skills.FoodType.GetTexture(System.Int32)
  - TinyLife.Skills.FoodType.Icon
  - TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
  - TinyLife.Skills.FoodType.Name
  - TinyLife.Skills.FoodType.OnEaten
  - TinyLife.Skills.FoodType.OnFoodEaten
  - TinyLife.Skills.FoodType.OnGetPrice
  - TinyLife.Skills.FoodType.PlatterTexture(System.String,System.Int32)
  - TinyLife.Skills.FoodType.Price
  - TinyLife.Skills.FoodType.Register(TinyLife.Skills.FoodType)
  - TinyLife.Skills.FoodType.RequiredSkill
  - TinyLife.Skills.FoodType.RequiredSkillLevel
  - TinyLife.Skills.FoodType.Restrictions
  - TinyLife.Skills.FoodType.SaturationModifier
  - TinyLife.Skills.FoodType.SlicedTexture(System.String,System.Int32)
  - TinyLife.Skills.FoodType.SourceString
  - TinyLife.Skills.FoodType.Sources
  - TinyLife.Skills.FoodType.Types
  langs:
  - csharp
  - vb
  name: FoodType
  nameWithType: FoodType
  fullName: TinyLife.Skills.FoodType
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    A food type is a type of dish that can be cooked using <xref href="TinyLife.Actions.ActionType.GetIngredientsSingle" data-throw-if-not-resolved="false"></xref>.

    Food types store information such as their name and texture, but also the cooking level that is required to make them.

    Whether a food type has a custom <xref href="Microsoft.Xna.Framework.Graphics.Texture" data-throw-if-not-resolved="false"></xref> is based on its <xref href="TinyLife.Skills.FoodType.ContainerType" data-throw-if-not-resolved="false"></xref>, but most foods use the <xref href="TinyLife.Mods.Mod.GetCustomFurnitureTextures(TinyLife.Mods.ModInfo)" data-throw-if-not-resolved="false"></xref> and are loaded as as "Food<xref href="TinyLife.Skills.FoodType.Name" data-throw-if-not-resolved="false"></xref>".

    Food types are registered using <xref href="TinyLife.Skills.FoodType.Register(TinyLife.Skills.FoodType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(MigratingStaticJsonConverter<FoodType>), new object[] { typeof(FoodType), "PrivateTypes", true })]

      public class FoodType : GenericDataHolder, IGenericDataHolder, IEmotionSource
    content.vb: >-
      <JsonConverter(GetType(MigratingStaticJsonConverter(Of FoodType)), New Object() { GetType(FoodType), "PrivateTypes", True })>

      Public Class FoodType Inherits GenericDataHolder Implements IGenericDataHolder, IEmotionSource
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  - TinyLife.Emotions.IEmotionSource
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Skills.FoodType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Skills.FoodType.Types
  commentId: F:TinyLife.Skills.FoodType.Types
  id: Types
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: FoodType.Types
  fullName: TinyLife.Skills.FoodType.Types
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: All of the <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref> instances that are registered by the game and mods
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, FoodType> Types
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Skills.FoodType}
    content.vb: Public Shared ReadOnly Types As ReadOnlyDictionary(Of String, FoodType)
- uid: TinyLife.Skills.FoodType.AllRestrictions
  commentId: F:TinyLife.Skills.FoodType.AllRestrictions
  id: AllRestrictions
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: AllRestrictions
  nameWithType: FoodType.AllRestrictions
  fullName: TinyLife.Skills.FoodType.AllRestrictions
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: All of the defined <xref href="TinyLife.Skills.FoodType.FoodRestriction" data-throw-if-not-resolved="false"></xref> flag values.
  example: []
  syntax:
    content: public static readonly FoodType.FoodRestriction[] AllRestrictions
    return:
      type: TinyLife.Skills.FoodType.FoodRestriction[]
    content.vb: Public Shared ReadOnly AllRestrictions As FoodType.FoodRestriction()
- uid: TinyLife.Skills.FoodType.OnFoodEaten
  commentId: E:TinyLife.Skills.FoodType.OnFoodEaten
  id: OnFoodEaten
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: OnFoodEaten
  nameWithType: FoodType.OnFoodEaten
  fullName: TinyLife.Skills.FoodType.OnFoodEaten
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    An event that is invoked after a given <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref>'s food type is eaten as part of the given <xref href="System.Action" data-throw-if-not-resolved="false"></xref>.

    This event is invoked at the same time as <xref href="TinyLife.Skills.FoodType.OnEaten" data-throw-if-not-resolved="false"></xref>, but for any <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref>.

    This action is invoked in <xref href="TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo%2cTinyLife.Objects.FoodTypedItem)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static event Action<ActionInfo, FoodTypedItem, FoodType> OnFoodEaten
    return:
      type: System.Action{TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem,TinyLife.Skills.FoodType}
    content.vb: Public Shared Event OnFoodEaten As Action(Of ActionInfo, FoodTypedItem, FoodType)
- uid: TinyLife.Skills.FoodType.OnGetPrice
  commentId: E:TinyLife.Skills.FoodType.OnGetPrice
  id: OnGetPrice
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: OnGetPrice
  nameWithType: FoodType.OnGetPrice
  fullName: TinyLife.Skills.FoodType.OnGetPrice
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: An event that is invoked in <xref href="TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike%2cSystem.Int32%2cSystem.Single%2cSystem.Single%40%2cSystem.Nullable%7bSystem.Single%7d%40)" data-throw-if-not-resolved="false"></xref>, which can be used to modify the original and final price of a food type.
  example: []
  syntax:
    content: public static event FoodType.GetPriceDelegate OnGetPrice
    return:
      type: TinyLife.Skills.FoodType.GetPriceDelegate
    content.vb: Public Shared Event OnGetPrice As FoodType.GetPriceDelegate
- uid: TinyLife.Skills.FoodType.Name
  commentId: F:TinyLife.Skills.FoodType.Name
  id: Name
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FoodType.Name
  fullName: TinyLife.Skills.FoodType.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: This food type's name
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Skills.FoodType.RequiredSkillLevel
  commentId: F:TinyLife.Skills.FoodType.RequiredSkillLevel
  id: RequiredSkillLevel
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: RequiredSkillLevel
  nameWithType: FoodType.RequiredSkillLevel
  fullName: TinyLife.Skills.FoodType.RequiredSkillLevel
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: The level of the <xref href="TinyLife.Skills.FoodType.RequiredSkill" data-throw-if-not-resolved="false"></xref> that is required to prepare this dish
  example: []
  syntax:
    content: public readonly int RequiredSkillLevel
    return:
      type: System.Int32
    content.vb: Public ReadOnly RequiredSkillLevel As Integer
- uid: TinyLife.Skills.FoodType.Price
  commentId: F:TinyLife.Skills.FoodType.Price
  id: Price
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: FoodType.Price
  fullName: TinyLife.Skills.FoodType.Price
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    The default price that creating this food type has.

    Use <xref href="TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike%2cSystem.Int32%2cSystem.Single%2cSystem.Single%40%2cSystem.Nullable%7bSystem.Single%7d%40)" data-throw-if-not-resolved="false"></xref> to get the price for a given serving size as well as the modified, final price.
  example: []
  syntax:
    content: public readonly int Price
    return:
      type: System.Int32
    content.vb: Public ReadOnly Price As Integer
- uid: TinyLife.Skills.FoodType.SaturationModifier
  commentId: F:TinyLife.Skills.FoodType.SaturationModifier
  id: SaturationModifier
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: SaturationModifier
  nameWithType: FoodType.SaturationModifier
  fullName: TinyLife.Skills.FoodType.SaturationModifier
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A factor that determines how saturating this food type should be based on the default saturation value. As a reference, Mac and Cheese has a factor of 1, whereas Fish and Chips has a factor of 1.5.
  example: []
  syntax:
    content: public readonly float SaturationModifier
    return:
      type: System.Single
    content.vb: Public ReadOnly SaturationModifier As Single
- uid: TinyLife.Skills.FoodType.Color
  commentId: F:TinyLife.Skills.FoodType.Color
  id: Color
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: FoodType.Color
  fullName: TinyLife.Skills.FoodType.Color
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: The color that this food type should display with.
  example: []
  syntax:
    content: public readonly Color Color
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public ReadOnly Color As Color
- uid: TinyLife.Skills.FoodType.Sources
  commentId: F:TinyLife.Skills.FoodType.Sources
  id: Sources
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: Sources
  nameWithType: FoodType.Sources
  fullName: TinyLife.Skills.FoodType.Sources
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A set of <xref href="TinyLife.Skills.FoodType.IngredientSource" data-throw-if-not-resolved="false"></xref> objects that determine where this food type can be created.
  example: []
  syntax:
    content: public readonly ISet<FoodType.IngredientSource> Sources
    return:
      type: System.Collections.Generic.ISet{TinyLife.Skills.FoodType.IngredientSource}
    content.vb: Public ReadOnly Sources As ISet(Of FoodType.IngredientSource)
- uid: TinyLife.Skills.FoodType.Restrictions
  commentId: F:TinyLife.Skills.FoodType.Restrictions
  id: Restrictions
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: Restrictions
  nameWithType: FoodType.Restrictions
  fullName: TinyLife.Skills.FoodType.Restrictions
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A set of <xref href="TinyLife.Skills.FoodType.FoodRestriction" data-throw-if-not-resolved="false"></xref> flags that determine what things this food item contains that people might be intolerant to.
  example: []
  syntax:
    content: public readonly FoodType.FoodRestriction Restrictions
    return:
      type: TinyLife.Skills.FoodType.FoodRestriction
    content.vb: Public ReadOnly Restrictions As FoodType.FoodRestriction
- uid: TinyLife.Skills.FoodType.RequiredSkill
  commentId: P:TinyLife.Skills.FoodType.RequiredSkill
  id: RequiredSkill
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: RequiredSkill
  nameWithType: FoodType.RequiredSkill
  fullName: TinyLife.Skills.FoodType.RequiredSkill
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    The <xref href="TinyLife.Skills.SkillType" data-throw-if-not-resolved="false"></xref> required for this food type, which is linked to the <xref href="TinyLife.Skills.FoodType.RequiredSkillLevel" data-throw-if-not-resolved="false"></xref>.

    This value defaults to the <xref href="TinyLife.Skills.SkillType.Cooking" data-throw-if-not-resolved="false"></xref> skill.
  example: []
  syntax:
    content: public SkillType RequiredSkill { get; init; }
    parameters: []
    return:
      type: TinyLife.Skills.SkillType
    content.vb: Public Property RequiredSkill As SkillType
  overload: TinyLife.Skills.FoodType.RequiredSkill*
- uid: TinyLife.Skills.FoodType.AdditionalObject
  commentId: P:TinyLife.Skills.FoodType.AdditionalObject
  id: AdditionalObject
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: AdditionalObject
  nameWithType: FoodType.AdditionalObject
  fullName: TinyLife.Skills.FoodType.AdditionalObject
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    An object category that dictates an additional object that is required for this food type to be created.

    For default actions, the categories <xref href="TinyLife.Objects.ObjectCategory.Stove" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.ObjectCategory.Oven" data-throw-if-not-resolved="false"></xref> are supported.

    If this is not set, a <xref href="TinyLife.Skills.FoodType.IngredientSource.Fridge" data-throw-if-not-resolved="false"></xref> food will not be cooked or baked.
  example: []
  syntax:
    content: public ObjectCategory AdditionalObject { get; init; }
    parameters: []
    return:
      type: TinyLife.Objects.ObjectCategory
    content.vb: Public Property AdditionalObject As ObjectCategory
  overload: TinyLife.Skills.FoodType.AdditionalObject*
- uid: TinyLife.Skills.FoodType.Container
  commentId: P:TinyLife.Skills.FoodType.Container
  id: Container
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: Container
  nameWithType: FoodType.Container
  fullName: TinyLife.Skills.FoodType.Container
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: The <xref href="TinyLife.Skills.FoodType.ContainerType" data-throw-if-not-resolved="false"></xref> that this food type should be stored in.
  example: []
  syntax:
    content: public FoodType.ContainerType Container { get; init; }
    parameters: []
    return:
      type: TinyLife.Skills.FoodType.ContainerType
    content.vb: Public Property Container As FoodType.ContainerType
  overload: TinyLife.Skills.FoodType.Container*
- uid: TinyLife.Skills.FoodType.OnEaten
  commentId: P:TinyLife.Skills.FoodType.OnEaten
  id: OnEaten
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: OnEaten
  nameWithType: FoodType.OnEaten
  fullName: TinyLife.Skills.FoodType.OnEaten
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    An optional action that is invoked when this food object has been eaten.

    This method is called if the underlying <xref href="System.Action" data-throw-if-not-resolved="false"></xref> is completed after a sufficient amount of time, so the food item has not necessarily been fully finished when this action is invoked.

    This action is invoked in <xref href="TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo%2cTinyLife.Objects.FoodTypedItem)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Action<ActionInfo, FoodTypedItem> OnEaten { get; init; }
    parameters: []
    return:
      type: System.Action{TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem}
    content.vb: Public Property OnEaten As Action(Of ActionInfo, FoodTypedItem)
  overload: TinyLife.Skills.FoodType.OnEaten*
- uid: TinyLife.Skills.FoodType.CanEatFunc
  commentId: P:TinyLife.Skills.FoodType.CanEatFunc
  id: CanEatFunc
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: CanEatFunc
  nameWithType: FoodType.CanEatFunc
  fullName: TinyLife.Skills.FoodType.CanEatFunc
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    An optional <xref href="TinyLife.Actions.ActionType.CanExecuteDelegate" data-throw-if-not-resolved="false"></xref>-style function that allows passing additional conditions to <xref href="TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike%2cTinyLife.Objects.FoodTypedItem%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    If this is null, which is also the default value, no additional checks are done in <xref href="TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike%2cTinyLife.Objects.FoodTypedItem%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Func<(PersonLike Person, FoodTypedItem Food, bool Automatic), CanExecuteResult> CanEatFunc { get; init; }
    parameters: []
    return:
      type: System.Func{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean},TinyLife.Actions.CanExecuteResult}
    content.vb: Public Property CanEatFunc As Func(Of (Person As PersonLike, Food As FoodTypedItem, Automatic As Boolean), CanExecuteResult)
  overload: TinyLife.Skills.FoodType.CanEatFunc*
- uid: TinyLife.Skills.FoodType.CanCreateFunc
  commentId: P:TinyLife.Skills.FoodType.CanCreateFunc
  id: CanCreateFunc
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: CanCreateFunc
  nameWithType: FoodType.CanCreateFunc
  fullName: TinyLife.Skills.FoodType.CanCreateFunc
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    An optional <xref href="TinyLife.Actions.ActionType.CanExecuteDelegate" data-throw-if-not-resolved="false"></xref>-style function that allows passing additional conditions to <xref href="TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo%2cSystem.Boolean%2cSystem.Int32%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    If this is null, which is the default value, no additional checks are done in <xref href="TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo%2cSystem.Boolean%2cSystem.Int32%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Func<(ActionInfo Info, bool Automatic, int ServingSize, float PriceMarkup), CanExecuteResult> CanCreateFunc { get; init; }
    parameters: []
    return:
      type: System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single},TinyLife.Actions.CanExecuteResult}
    content.vb: Public Property CanCreateFunc As Func(Of (Info As ActionInfo, Automatic As Boolean, ServingSize As Integer, PriceMarkup As Single), CanExecuteResult)
  overload: TinyLife.Skills.FoodType.CanCreateFunc*
- uid: TinyLife.Skills.FoodType.CustomTextureFunc
  commentId: P:TinyLife.Skills.FoodType.CustomTextureFunc
  id: CustomTextureFunc
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: CustomTextureFunc
  nameWithType: FoodType.CustomTextureFunc
  fullName: TinyLife.Skills.FoodType.CustomTextureFunc
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A function that can optionally return a custom texture to be used for the given serving size.
  example: []
  syntax:
    content: public Func<string, int, TextureRegion> CustomTextureFunc { get; init; }
    parameters: []
    return:
      type: System.Func{System.String,System.Int32,MLEM.Textures.TextureRegion}
    content.vb: Public Property CustomTextureFunc As Func(Of String, Integer, TextureRegion)
  overload: TinyLife.Skills.FoodType.CustomTextureFunc*
- uid: TinyLife.Skills.FoodType.CanHaveCandle
  commentId: P:TinyLife.Skills.FoodType.CanHaveCandle
  id: CanHaveCandle
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: CanHaveCandle
  nameWithType: FoodType.CanHaveCandle
  fullName: TinyLife.Skills.FoodType.CanHaveCandle
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A function that returns whether the given instance of this <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref> can have a candle added to it.
  example: []
  syntax:
    content: public Func<Food, bool> CanHaveCandle { get; init; }
    parameters: []
    return:
      type: System.Func{TinyLife.Objects.Food,System.Boolean}
    content.vb: Public Property CanHaveCandle As Func(Of Food, Boolean)
  overload: TinyLife.Skills.FoodType.CanHaveCandle*
- uid: TinyLife.Skills.FoodType.Icon
  commentId: P:TinyLife.Skills.FoodType.Icon
  id: Icon
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: FoodType.Icon
  fullName: TinyLife.Skills.FoodType.Icon
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: An icon that can optionally be displayed with the food type.
  example: []
  syntax:
    content: public TextureRegion Icon { get; init; }
    parameters: []
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public Property Icon As TextureRegion
  overload: TinyLife.Skills.FoodType.Icon*
- uid: TinyLife.Skills.FoodType.DisplayName
  commentId: P:TinyLife.Skills.FoodType.DisplayName
  id: DisplayName
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: FoodType.DisplayName
  fullName: TinyLife.Skills.FoodType.DisplayName
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: This food type's <xref href="TinyLife.Skills.FoodType.Name" data-throw-if-not-resolved="false"></xref>, but localized using <xref href="TinyLife.LnCategory.Food" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public string DisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DisplayName As String
  overload: TinyLife.Skills.FoodType.DisplayName*
- uid: TinyLife.Skills.FoodType.SourceString
  commentId: P:TinyLife.Skills.FoodType.SourceString
  id: SourceString
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: SourceString
  nameWithType: FoodType.SourceString
  fullName: TinyLife.Skills.FoodType.SourceString
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: A (localized) string that is displayed when hovering over an <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> that has this source
  example: []
  syntax:
    content: public string SourceString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SourceString As String
  overload: TinyLife.Skills.FoodType.SourceString*
  implements:
  - TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.Skills.FoodType.#ctor(System.String,System.Int32,System.Int32,System.Single,TinyLife.Skills.FoodType.FoodRestriction,TinyLife.Skills.FoodType.IngredientSource,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.Skills.FoodType.#ctor(System.String,System.Int32,System.Int32,System.Single,TinyLife.Skills.FoodType.FoodRestriction,TinyLife.Skills.FoodType.IngredientSource,System.Nullable{Microsoft.Xna.Framework.Color})
  id: '#ctor(System.String,System.Int32,System.Int32,System.Single,TinyLife.Skills.FoodType.FoodRestriction,TinyLife.Skills.FoodType.IngredientSource,System.Nullable{Microsoft.Xna.Framework.Color})'
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: FoodType(string, int, int, float, FoodRestriction, IngredientSource, Color?)
  nameWithType: FoodType.FoodType(string, int, int, float, FoodType.FoodRestriction, FoodType.IngredientSource, Color?)
  fullName: TinyLife.Skills.FoodType.FoodType(string, int, int, float, TinyLife.Skills.FoodType.FoodRestriction, TinyLife.Skills.FoodType.IngredientSource, Microsoft.Xna.Framework.Color?)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: Creates a new food type with the given settings.
  example: []
  syntax:
    content: public FoodType(string name, int requiredSkillLevel, int price, float saturationModifier, FoodType.FoodRestriction restrictions, FoodType.IngredientSource source = null, Color? color = null)
    parameters:
    - id: name
      type: System.String
      description: The food type's name.
    - id: requiredSkillLevel
      type: System.Int32
      description: The required skill level for the <xref href="TinyLife.Skills.FoodType.RequiredSkill" data-throw-if-not-resolved="false"></xref>.
    - id: price
      type: System.Int32
      description: The price to prepare this food type.
    - id: saturationModifier
      type: System.Single
      description: A factor that determines how saturating this food type should be based on the default saturation value. As a reference, Mac and Cheese has a factor of 1, whereas Fish and Chips has a factor of 1.5.
    - id: restrictions
      type: TinyLife.Skills.FoodType.FoodRestriction
      description: A set of <xref href="TinyLife.Skills.FoodType.FoodRestriction" data-throw-if-not-resolved="false"></xref> flags that determine what things this food item contains that people might be intolerant to.
    - id: source
      type: TinyLife.Skills.FoodType.IngredientSource
      description: The <xref href="TinyLife.Skills.FoodType.IngredientSource" data-throw-if-not-resolved="false"></xref> that this food type can be created in, defaults to <xref href="TinyLife.Skills.FoodType.IngredientSource.Fridge" data-throw-if-not-resolved="false"></xref>. Also causes <xref href="TinyLife.Skills.FoodType.RequiredSkill" data-throw-if-not-resolved="false"></xref>a nd <xref href="TinyLife.Skills.FoodType.Container" data-throw-if-not-resolved="false"></xref> to be set.
    - id: color
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: The color that this food type should display with, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use <xref href="Microsoft.Xna.Framework.Color.White" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(name As String, requiredSkillLevel As Integer, price As Integer, saturationModifier As Single, restrictions As FoodType.FoodRestriction, source As FoodType.IngredientSource = Nothing, color As Color? = Nothing)
  overload: TinyLife.Skills.FoodType.#ctor*
  nameWithType.vb: FoodType.New(String, Integer, Integer, Single, FoodType.FoodRestriction, FoodType.IngredientSource, Color?)
  fullName.vb: TinyLife.Skills.FoodType.New(String, Integer, Integer, Single, TinyLife.Skills.FoodType.FoodRestriction, TinyLife.Skills.FoodType.IngredientSource, Microsoft.Xna.Framework.Color?)
  name.vb: New(String, Integer, Integer, Single, FoodRestriction, IngredientSource, Color?)
- uid: TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike,System.Int32,System.Single,System.Single@,System.Nullable{System.Single}@)
  commentId: M:TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike,System.Int32,System.Single,System.Single@,System.Nullable{System.Single}@)
  id: GetPrice(TinyLife.Objects.PersonLike,System.Int32,System.Single,System.Single@,System.Nullable{System.Single}@)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: GetPrice(PersonLike, int, float, out float, out float?)
  nameWithType: FoodType.GetPrice(PersonLike, int, float, out float, out float?)
  fullName: TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike, int, float, out float, out float?)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: Returns the price of this food type, based on the amount of servings provided, as well as the <xref href="TinyLife.Skills.FoodType.OnGetPrice" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public void GetPrice(PersonLike person, int servingSize, float markup, out float originalPrice, out float? modifiedPrice)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person to get the price for.
    - id: servingSize
      type: System.Int32
      description: The amount of servings to get the price for
    - id: markup
      type: System.Single
      description: The price markup multiplier.
    - id: originalPrice
      type: System.Single
      description: The original price that should be used if <code class="paramref">modifiedPrice</code> is unset.
    - id: modifiedPrice
      type: System.Nullable{System.Single}
      description: The final price of the item, which is unset if the <code class="paramref">originalPrice</code> should be used.
    content.vb: Public Sub GetPrice(person As PersonLike, servingSize As Integer, markup As Single, originalPrice As Single, modifiedPrice As Single?)
  overload: TinyLife.Skills.FoodType.GetPrice*
  nameWithType.vb: FoodType.GetPrice(PersonLike, Integer, Single, Single, Single?)
  fullName.vb: TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike, Integer, Single, Single, Single?)
  name.vb: GetPrice(PersonLike, Integer, Single, Single, Single?)
- uid: TinyLife.Skills.FoodType.Construct(TinyLife.World.Map,TinyLife.Skills.Quality,System.TimeSpan,System.Int32,TinyLife.Objects.PersonLike,System.Nullable{System.Guid},System.Boolean)
  commentId: M:TinyLife.Skills.FoodType.Construct(TinyLife.World.Map,TinyLife.Skills.Quality,System.TimeSpan,System.Int32,TinyLife.Objects.PersonLike,System.Nullable{System.Guid},System.Boolean)
  id: Construct(TinyLife.World.Map,TinyLife.Skills.Quality,System.TimeSpan,System.Int32,TinyLife.Objects.PersonLike,System.Nullable{System.Guid},System.Boolean)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: Construct(Map, Quality, TimeSpan, int, PersonLike, Guid?, bool)
  nameWithType: FoodType.Construct(Map, Quality, TimeSpan, int, PersonLike, Guid?, bool)
  fullName: TinyLife.Skills.FoodType.Construct(TinyLife.World.Map, TinyLife.Skills.Quality, System.TimeSpan, int, TinyLife.Objects.PersonLike, System.Guid?, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    Constructs a new <xref href="TinyLife.Objects.Food" data-throw-if-not-resolved="false"></xref> furniture instance based on this food type's <xref href="TinyLife.Skills.FoodType.ContainerType" data-throw-if-not-resolved="false"></xref>.

    Note that the returned item won't be added to the <code class="paramref">map</code> automatically.
  example: []
  syntax:
    content: public Food Construct(Map map, Quality quality, TimeSpan expirationTime, int servingSize, PersonLike creator = null, Guid? id = null, bool triggerGoals = true)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map
    - id: quality
      type: TinyLife.Skills.Quality
      description: The quality that the food should have, which also affects the <xref href="TinyLife.Objects.Food.FoodLeft" data-throw-if-not-resolved="false"></xref>
    - id: expirationTime
      type: System.TimeSpan
      description: The in-game time that the resulting food should expire at. This should be based on <xref href="TinyLife.World.Map.Time" data-throw-if-not-resolved="false"></xref>.
    - id: servingSize
      type: System.Int32
      description: The serving size
    - id: creator
      type: TinyLife.Objects.PersonLike
      description: An optional id of a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> that created this food item
    - id: id
      type: System.Nullable{System.Guid}
      description: An optional id to give to the <xref href="TinyLife.Objects.Food" data-throw-if-not-resolved="false"></xref> instance returned
    - id: triggerGoals
      type: System.Boolean
      description: Whether <xref href="TinyLife.Goals.AutoGoalInfo" data-throw-if-not-resolved="false"></xref> goals should be triggered in <xref href="TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
    return:
      type: TinyLife.Objects.Food
      description: A new food instance with the given settings
    content.vb: Public Function Construct(map As Map, quality As Quality, expirationTime As TimeSpan, servingSize As Integer, creator As PersonLike = Nothing, id As Guid? = Nothing, triggerGoals As Boolean = True) As Food
  overload: TinyLife.Skills.FoodType.Construct*
  nameWithType.vb: FoodType.Construct(Map, Quality, TimeSpan, Integer, PersonLike, Guid?, Boolean)
  fullName.vb: TinyLife.Skills.FoodType.Construct(TinyLife.World.Map, TinyLife.Skills.Quality, System.TimeSpan, Integer, TinyLife.Objects.PersonLike, System.Guid?, Boolean)
  name.vb: Construct(Map, Quality, TimeSpan, Integer, PersonLike, Guid?, Boolean)
- uid: TinyLife.Skills.FoodType.ConstructUnfinished(TinyLife.Objects.FurnitureType,TinyLife.World.Map,System.TimeSpan,System.Int32,TinyLife.Objects.PersonLike,System.Nullable{System.Guid},System.Boolean)
  commentId: M:TinyLife.Skills.FoodType.ConstructUnfinished(TinyLife.Objects.FurnitureType,TinyLife.World.Map,System.TimeSpan,System.Int32,TinyLife.Objects.PersonLike,System.Nullable{System.Guid},System.Boolean)
  id: ConstructUnfinished(TinyLife.Objects.FurnitureType,TinyLife.World.Map,System.TimeSpan,System.Int32,TinyLife.Objects.PersonLike,System.Nullable{System.Guid},System.Boolean)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: ConstructUnfinished(FurnitureType, Map, TimeSpan, int, PersonLike, Guid?, bool)
  nameWithType: FoodType.ConstructUnfinished(FurnitureType, Map, TimeSpan, int, PersonLike, Guid?, bool)
  fullName: TinyLife.Skills.FoodType.ConstructUnfinished(TinyLife.Objects.FurnitureType, TinyLife.World.Map, System.TimeSpan, int, TinyLife.Objects.PersonLike, System.Guid?, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    Constructs a new <xref href="TinyLife.Objects.FoodTypedItem" data-throw-if-not-resolved="false"></xref> furniture instance based on the passed <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref>

    Note that the returned item won't be added to the <code class="paramref">map</code> automatically.
  example: []
  syntax:
    content: public FoodTypedItem ConstructUnfinished(FurnitureType container, Map map, TimeSpan expirationTime, int servingSize, PersonLike creator = null, Guid? id = null, bool triggerGoals = false)
    parameters:
    - id: container
      type: TinyLife.Objects.FurnitureType
      description: The <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> that an instance of should be returned, has to construct a <xref href="TinyLife.Objects.FoodTypedItem" data-throw-if-not-resolved="false"></xref>
    - id: map
      type: TinyLife.World.Map
      description: The map
    - id: expirationTime
      type: System.TimeSpan
      description: The in-game time that the resulting food should expire at. This should be based on <xref href="TinyLife.World.Map.Time" data-throw-if-not-resolved="false"></xref>.
    - id: servingSize
      type: System.Int32
      description: The serving size
    - id: creator
      type: TinyLife.Objects.PersonLike
      description: An optional <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> that created this food item
    - id: id
      type: System.Nullable{System.Guid}
      description: An optional id to give to the <xref href="TinyLife.Objects.Food" data-throw-if-not-resolved="false"></xref> instance returned
    - id: triggerGoals
      type: System.Boolean
      description: Whether <xref href="TinyLife.Goals.AutoGoalInfo" data-throw-if-not-resolved="false"></xref> goals should be triggered in <xref href="TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
    return:
      type: TinyLife.Objects.FoodTypedItem
      description: ''
    content.vb: Public Function ConstructUnfinished(container As FurnitureType, map As Map, expirationTime As TimeSpan, servingSize As Integer, creator As PersonLike = Nothing, id As Guid? = Nothing, triggerGoals As Boolean = False) As FoodTypedItem
  overload: TinyLife.Skills.FoodType.ConstructUnfinished*
  nameWithType.vb: FoodType.ConstructUnfinished(FurnitureType, Map, TimeSpan, Integer, PersonLike, Guid?, Boolean)
  fullName.vb: TinyLife.Skills.FoodType.ConstructUnfinished(TinyLife.Objects.FurnitureType, TinyLife.World.Map, System.TimeSpan, Integer, TinyLife.Objects.PersonLike, System.Guid?, Boolean)
  name.vb: ConstructUnfinished(FurnitureType, Map, TimeSpan, Integer, PersonLike, Guid?, Boolean)
- uid: TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean)
  commentId: M:TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean)
  id: CanEat(TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: CanEat(PersonLike, FoodTypedItem, bool)
  nameWithType: FoodType.CanEat(PersonLike, FoodTypedItem, bool)
  fullName: TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike, TinyLife.Objects.FoodTypedItem, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    Returns a <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> indicating whether a <xref href="TinyLife.Objects.FoodTypedItem" data-throw-if-not-resolved="false"></xref> that has this food type can currently be eaten.

    This method also invokes <xref href="TinyLife.Skills.FoodType.CanEatFunc" data-throw-if-not-resolved="false"></xref> and checks for matching <xref href="TinyLife.Skills.FoodType.Restrictions" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public CanExecuteResult CanEat(PersonLike person, FoodTypedItem food, bool automatic)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person trying to eat this food item.
    - id: food
      type: TinyLife.Objects.FoodTypedItem
      description: The food item.
    - id: automatic
      type: System.Boolean
      description: Whether the action is invoked automatically.
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: A <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> indicating whether this food item can be eaten.
    content.vb: Public Function CanEat(person As PersonLike, food As FoodTypedItem, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Skills.FoodType.CanEat*
  nameWithType.vb: FoodType.CanEat(PersonLike, FoodTypedItem, Boolean)
  fullName.vb: TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike, TinyLife.Objects.FoodTypedItem, Boolean)
  name.vb: CanEat(PersonLike, FoodTypedItem, Boolean)
- uid: TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single,System.Boolean)
  commentId: M:TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single,System.Boolean)
  id: CanCreate(TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single,System.Boolean)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: CanCreate(ActionInfo, bool, int, float, bool)
  nameWithType: FoodType.CanCreate(ActionInfo, bool, int, float, bool)
  fullName: TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo, bool, int, float, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    Returns a <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> indicating whether an item with this food type can be created in some way.

    This method also invokes <xref href="TinyLife.Skills.FoodType.CanCreateFunc" data-throw-if-not-resolved="false"></xref>, checks against <xref href="TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike%2cSystem.Int32%2cSystem.Single%2cSystem.Single%40%2cSystem.Nullable%7bSystem.Single%7d%40)" data-throw-if-not-resolved="false"></xref> and checks for an object with the <xref href="TinyLife.Skills.FoodType.AdditionalObject" data-throw-if-not-resolved="false"></xref> category.
  example: []
  syntax:
    content: public CanExecuteResult CanCreate(ActionInfo info, bool automatic, int servingSize, float priceMarkup, bool onlyCheckPrice = false)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: automatic
      type: System.Boolean
      description: Whether the action is invoked automatically.
    - id: servingSize
      type: System.Int32
      description: The serving size that is being created.
    - id: priceMarkup
      type: System.Single
      description: A price markup that should be passed to <xref href="TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike%2cSystem.Int32%2cSystem.Single%2cSystem.Single%40%2cSystem.Nullable%7bSystem.Single%7d%40)" data-throw-if-not-resolved="false"></xref>.
    - id: onlyCheckPrice
      type: System.Boolean
      description: Whether only the price should be checked and additional conditions, like the <xref href="TinyLife.Skills.FoodType.AdditionalObject" data-throw-if-not-resolved="false"></xref> should be ignored.
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: A <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> indicating whether this food item can be created.
    content.vb: Public Function CanCreate(info As ActionInfo, automatic As Boolean, servingSize As Integer, priceMarkup As Single, onlyCheckPrice As Boolean = False) As CanExecuteResult
  overload: TinyLife.Skills.FoodType.CanCreate*
  nameWithType.vb: FoodType.CanCreate(ActionInfo, Boolean, Integer, Single, Boolean)
  fullName.vb: TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo, Boolean, Integer, Single, Boolean)
  name.vb: CanCreate(ActionInfo, Boolean, Integer, Single, Boolean)
- uid: TinyLife.Skills.FoodType.GetRestrictionsDescription(System.Boolean)
  commentId: M:TinyLife.Skills.FoodType.GetRestrictionsDescription(System.Boolean)
  id: GetRestrictionsDescription(System.Boolean)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: GetRestrictionsDescription(bool)
  nameWithType: FoodType.GetRestrictionsDescription(bool)
  fullName: TinyLife.Skills.FoodType.GetRestrictionsDescription(bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    Returns a set of strings that describe this food item's <xref href="TinyLife.Skills.FoodType.Restrictions" data-throw-if-not-resolved="false"></xref>.

    If this item has no restrictions, no strings are returned.
  example: []
  syntax:
    content: public IEnumerable<string> GetRestrictionsDescription(bool includeIcon = true)
    parameters:
    - id: includeIcon
      type: System.Boolean
      description: Whether the restrictions' icons should be included.
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: A set of strings that describe this food item's <xref href="TinyLife.Skills.FoodType.Restrictions" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetRestrictionsDescription(includeIcon As Boolean = True) As IEnumerable(Of String)
  overload: TinyLife.Skills.FoodType.GetRestrictionsDescription*
  nameWithType.vb: FoodType.GetRestrictionsDescription(Boolean)
  fullName.vb: TinyLife.Skills.FoodType.GetRestrictionsDescription(Boolean)
  name.vb: GetRestrictionsDescription(Boolean)
- uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
  commentId: M:TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
  id: InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: InvokeOnEaten(ActionInfo, FoodTypedItem)
  nameWithType: FoodType.InvokeOnEaten(ActionInfo, FoodTypedItem)
  fullName: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo, TinyLife.Objects.FoodTypedItem)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    Invokes this food type's <xref href="TinyLife.Skills.FoodType.OnEaten" data-throw-if-not-resolved="false"></xref> event, as well as this <xref href="TinyLife.Skills.FoodType.Sources" data-throw-if-not-resolved="false"></xref>' <xref href="TinyLife.Skills.FoodType.IngredientSource.OnEaten" data-throw-if-not-resolved="false"></xref> events.

    This method should be called when a significant amount of this item is consumed, but is automatically called in <xref href="TinyLife.Actions.ActionType.Eat" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void InvokeOnEaten(ActionInfo info, FoodTypedItem food)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The eat action's action info.
    - id: food
      type: TinyLife.Objects.FoodTypedItem
      description: The food item being eaten.
    content.vb: Public Sub InvokeOnEaten(info As ActionInfo, food As FoodTypedItem)
  overload: TinyLife.Skills.FoodType.InvokeOnEaten*
- uid: TinyLife.Skills.FoodType.GetTexture(System.Int32)
  commentId: M:TinyLife.Skills.FoodType.GetTexture(System.Int32)
  id: GetTexture(System.Int32)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: GetTexture(int)
  nameWithType: FoodType.GetTexture(int)
  fullName: TinyLife.Skills.FoodType.GetTexture(int)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    Returns the texture region that should be drawn for the given serving size.

    This method invokes the <xref href="TinyLife.Skills.FoodType.CustomTextureFunc" data-throw-if-not-resolved="false"></xref> and, by default, returns <xref href="TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture(TinyLife.Skills.FoodType)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TextureRegion GetTexture(int servingSize)
    parameters:
    - id: servingSize
      type: System.Int32
      description: The serving size to return a texture region for.
    return:
      type: MLEM.Textures.TextureRegion
      description: The texture region to draw.
    content.vb: Public Function GetTexture(servingSize As Integer) As TextureRegion
  overload: TinyLife.Skills.FoodType.GetTexture*
  nameWithType.vb: FoodType.GetTexture(Integer)
  fullName.vb: TinyLife.Skills.FoodType.GetTexture(Integer)
  name.vb: GetTexture(Integer)
- uid: TinyLife.Skills.FoodType.Register(TinyLife.Skills.FoodType)
  commentId: M:TinyLife.Skills.FoodType.Register(TinyLife.Skills.FoodType)
  id: Register(TinyLife.Skills.FoodType)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: Register(FoodType)
  nameWithType: FoodType.Register(FoodType)
  fullName: TinyLife.Skills.FoodType.Register(TinyLife.Skills.FoodType)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: Registers a new <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref> with the given settings.
  example: []
  syntax:
    content: public static FoodType Register(FoodType type)
    parameters:
    - id: type
      type: TinyLife.Skills.FoodType
      description: The food type to register.
    return:
      type: TinyLife.Skills.FoodType
      description: The passed <code class="paramref">type</code>, for chaining.
    content.vb: Public Shared Function Register(type As FoodType) As FoodType
  overload: TinyLife.Skills.FoodType.Register*
- uid: TinyLife.Skills.FoodType.GetPossibleArguments(TinyLife.Objects.PersonLike,System.Int32,TinyLife.Skills.FoodType.IngredientSource,System.Single,TinyLife.Skills.SkillType,System.Boolean)
  commentId: M:TinyLife.Skills.FoodType.GetPossibleArguments(TinyLife.Objects.PersonLike,System.Int32,TinyLife.Skills.FoodType.IngredientSource,System.Single,TinyLife.Skills.SkillType,System.Boolean)
  id: GetPossibleArguments(TinyLife.Objects.PersonLike,System.Int32,TinyLife.Skills.FoodType.IngredientSource,System.Single,TinyLife.Skills.SkillType,System.Boolean)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: GetPossibleArguments(PersonLike, int, IngredientSource, float, SkillType, bool)
  nameWithType: FoodType.GetPossibleArguments(PersonLike, int, FoodType.IngredientSource, float, SkillType, bool)
  fullName: TinyLife.Skills.FoodType.GetPossibleArguments(TinyLife.Objects.PersonLike, int, TinyLife.Skills.FoodType.IngredientSource, float, TinyLife.Skills.SkillType, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: Returns a set of action varieties for all <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref> objects that match the given predicate
  example: []
  syntax:
    content: public static IEnumerable<ActionArgument> GetPossibleArguments(PersonLike person, int servingSize, FoodType.IngredientSource source, float priceMarkup = 1, SkillType requiredSkill = null, bool onlyCheckPrice = false)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person executing the actions.
    - id: servingSize
      type: System.Int32
      description: The serving size that should be served when using the variety
    - id: source
      type: TinyLife.Skills.FoodType.IngredientSource
      description: The ingredient source to return actions for
    - id: priceMarkup
      type: System.Single
      description: The amount that the <xref href="TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike%2cSystem.Int32%2cSystem.Single%2cSystem.Single%40%2cSystem.Nullable%7bSystem.Single%7d%40)" data-throw-if-not-resolved="false"></xref> should be multiplied by for display and condition checking.
    - id: requiredSkill
      type: TinyLife.Skills.SkillType
      description: The required skill, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use <xref href="TinyLife.Skills.SkillType.Cooking" data-throw-if-not-resolved="false"></xref>.
    - id: onlyCheckPrice
      type: System.Boolean
      description: Whether only the price should be checked and additional conditions, like the <xref href="TinyLife.Skills.FoodType.AdditionalObject" data-throw-if-not-resolved="false"></xref> should be ignored.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionArgument}
      description: A set of action varieties representing food types
    content.vb: Public Shared Function GetPossibleArguments(person As PersonLike, servingSize As Integer, source As FoodType.IngredientSource, priceMarkup As Single = 1, requiredSkill As SkillType = Nothing, onlyCheckPrice As Boolean = False) As IEnumerable(Of ActionArgument)
  overload: TinyLife.Skills.FoodType.GetPossibleArguments*
  nameWithType.vb: FoodType.GetPossibleArguments(PersonLike, Integer, FoodType.IngredientSource, Single, SkillType, Boolean)
  fullName.vb: TinyLife.Skills.FoodType.GetPossibleArguments(TinyLife.Objects.PersonLike, Integer, TinyLife.Skills.FoodType.IngredientSource, Single, TinyLife.Skills.SkillType, Boolean)
  name.vb: GetPossibleArguments(PersonLike, Integer, IngredientSource, Single, SkillType, Boolean)
- uid: TinyLife.Skills.FoodType.GetAllContainers(System.Boolean,System.Boolean)
  commentId: M:TinyLife.Skills.FoodType.GetAllContainers(System.Boolean,System.Boolean)
  id: GetAllContainers(System.Boolean,System.Boolean)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: GetAllContainers(bool, bool)
  nameWithType: FoodType.GetAllContainers(bool, bool)
  fullName: TinyLife.Skills.FoodType.GetAllContainers(bool, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    Returns all of the <xref href="TinyLife.Skills.FoodType.ContainerType" data-throw-if-not-resolved="false"></xref> furniture types that any registered food types will be stored in, based on the serving size.

    This method returns a distinct collection of <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> instances representing the <xref href="TinyLife.Skills.FoodType.ContainerType" data-throw-if-not-resolved="false"></xref> values of all <xref href="TinyLife.Skills.FoodType.Types" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IEnumerable<FurnitureType> GetAllContainers(bool multiple, bool empty = false)
    parameters:
    - id: multiple
      type: System.Boolean
      description: Whether the container should hold multiple servings.
    - id: empty
      type: System.Boolean
      description: Whether to return all empty food containers, rather than all full food containers.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.FurnitureType}
      description: All food containers for the given serving size
    content.vb: Public Shared Function GetAllContainers(multiple As Boolean, empty As Boolean = False) As IEnumerable(Of FurnitureType)
  overload: TinyLife.Skills.FoodType.GetAllContainers*
  nameWithType.vb: FoodType.GetAllContainers(Boolean, Boolean)
  fullName.vb: TinyLife.Skills.FoodType.GetAllContainers(Boolean, Boolean)
  name.vb: GetAllContainers(Boolean, Boolean)
- uid: TinyLife.Skills.FoodType.CreateBaked(System.String,System.Int32,System.Int32,System.Single,TinyLife.Skills.FoodType.FoodRestriction,System.Boolean,TinyLife.Skills.FoodType.IngredientSource[])
  commentId: M:TinyLife.Skills.FoodType.CreateBaked(System.String,System.Int32,System.Int32,System.Single,TinyLife.Skills.FoodType.FoodRestriction,System.Boolean,TinyLife.Skills.FoodType.IngredientSource[])
  id: CreateBaked(System.String,System.Int32,System.Int32,System.Single,TinyLife.Skills.FoodType.FoodRestriction,System.Boolean,TinyLife.Skills.FoodType.IngredientSource[])
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: CreateBaked(string, int, int, float, FoodRestriction, bool, params IngredientSource[])
  nameWithType: FoodType.CreateBaked(string, int, int, float, FoodType.FoodRestriction, bool, params FoodType.IngredientSource[])
  fullName: TinyLife.Skills.FoodType.CreateBaked(string, int, int, float, TinyLife.Skills.FoodType.FoodRestriction, bool, params TinyLife.Skills.FoodType.IngredientSource[])
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: Helper method that creates a simple baked <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref>, which includes a set of sub-textures that are drawn when pieces or slices have been taken from it, as well as the ability to have a candle on it if it is a <code class="paramref">cake</code> and no slices have been taken yet.
  example: []
  syntax:
    content: public static FoodType CreateBaked(string name, int requiredBakingLevel, int price, float saturationModifier, FoodType.FoodRestriction restrictions, bool cake = false, params FoodType.IngredientSource[] additionalSources)
    parameters:
    - id: name
      type: System.String
      description: The food type's name.
    - id: requiredBakingLevel
      type: System.Int32
      description: The required skill level for the <xref href="TinyLife.Skills.SkillType.Baking" data-throw-if-not-resolved="false"></xref> skill.
    - id: price
      type: System.Int32
      description: The price to prepare this food type.
    - id: saturationModifier
      type: System.Single
      description: A factor that determines how saturating this food type should be based on the default saturation value. As a reference, Mac and Cheese has a factor of 1, whereas Fish and Chips has a factor of 1.5.
    - id: restrictions
      type: TinyLife.Skills.FoodType.FoodRestriction
      description: A set of <xref href="TinyLife.Skills.FoodType.FoodRestriction" data-throw-if-not-resolved="false"></xref> flags that determine what things this food item contains that people might be intolerant to.
    - id: cake
      type: System.Boolean
      description: Whether the item is a cake, which causes it to be able to have candles and slices.
    - id: additionalSources
      type: TinyLife.Skills.FoodType.IngredientSource[]
      description: A set of additional values to add to the <xref href="TinyLife.Skills.FoodType.Sources" data-throw-if-not-resolved="false"></xref> collection.
    return:
      type: TinyLife.Skills.FoodType
    content.vb: Public Shared Function CreateBaked(name As String, requiredBakingLevel As Integer, price As Integer, saturationModifier As Single, restrictions As FoodType.FoodRestriction, cake As Boolean = False, ParamArray additionalSources As FoodType.IngredientSource()) As FoodType
  overload: TinyLife.Skills.FoodType.CreateBaked*
  nameWithType.vb: FoodType.CreateBaked(String, Integer, Integer, Single, FoodType.FoodRestriction, Boolean, ParamArray FoodType.IngredientSource())
  fullName.vb: TinyLife.Skills.FoodType.CreateBaked(String, Integer, Integer, Single, TinyLife.Skills.FoodType.FoodRestriction, Boolean, ParamArray TinyLife.Skills.FoodType.IngredientSource())
  name.vb: CreateBaked(String, Integer, Integer, Single, FoodRestriction, Boolean, ParamArray IngredientSource())
- uid: TinyLife.Skills.FoodType.GetBuyableVariations(System.Int32,TinyLife.Skills.FoodType.ContainerType)
  commentId: M:TinyLife.Skills.FoodType.GetBuyableVariations(System.Int32,TinyLife.Skills.FoodType.ContainerType)
  id: GetBuyableVariations(System.Int32,TinyLife.Skills.FoodType.ContainerType)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: GetBuyableVariations(int, ContainerType)
  nameWithType: FoodType.GetBuyableVariations(int, FoodType.ContainerType)
  fullName: TinyLife.Skills.FoodType.GetBuyableVariations(int, TinyLife.Skills.FoodType.ContainerType)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: Returns a set of buyable variations for the given <code class="paramref">servingSize</code> and <code class="paramref">container</code>, which can be used by furniture through the <xref href="TinyLife.Objects.FurnitureType.TypeSettings.BuyableVariations" data-throw-if-not-resolved="false"></xref> field.
  example: []
  syntax:
    content: public static Action<Furniture>[] GetBuyableVariations(int servingSize, FoodType.ContainerType container)
    parameters:
    - id: servingSize
      type: System.Int32
      description: The serving size the buyable variations should be assigned.
    - id: container
      type: TinyLife.Skills.FoodType.ContainerType
      description: The container that buyable variations should be returned for.
    return:
      type: System.Action{TinyLife.Objects.Furniture}[]
      description: The buyable variations of the given container.
    content.vb: Public Shared Function GetBuyableVariations(servingSize As Integer, container As FoodType.ContainerType) As Action(Of Furniture)()
  overload: TinyLife.Skills.FoodType.GetBuyableVariations*
  nameWithType.vb: FoodType.GetBuyableVariations(Integer, FoodType.ContainerType)
  fullName.vb: TinyLife.Skills.FoodType.GetBuyableVariations(Integer, TinyLife.Skills.FoodType.ContainerType)
  name.vb: GetBuyableVariations(Integer, ContainerType)
- uid: TinyLife.Skills.FoodType.SlicedTexture(System.String,System.Int32)
  commentId: M:TinyLife.Skills.FoodType.SlicedTexture(System.String,System.Int32)
  id: SlicedTexture(System.String,System.Int32)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: SlicedTexture(string, int)
  nameWithType: FoodType.SlicedTexture(string, int)
  fullName: TinyLife.Skills.FoodType.SlicedTexture(string, int)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    A helper method that can be used for <xref href="TinyLife.Skills.FoodType.CustomTextureFunc" data-throw-if-not-resolved="false"></xref> to return textures based on whether the food is a single slice, a cut full item, or an uncut full item.

    This function expects texture regions to exist of the form "Food{name}Slice", "Food{name}Cut", and "Food{name}".
  example: []
  syntax:
    content: public static TextureRegion SlicedTexture(string name, int servingSize)
    parameters:
    - id: name
      type: System.String
      description: The name of the texture.
    - id: servingSize
      type: System.Int32
      description: The serving size.
    return:
      type: MLEM.Textures.TextureRegion
      description: The texture region to choose.
    content.vb: Public Shared Function SlicedTexture(name As String, servingSize As Integer) As TextureRegion
  overload: TinyLife.Skills.FoodType.SlicedTexture*
  nameWithType.vb: FoodType.SlicedTexture(String, Integer)
  fullName.vb: TinyLife.Skills.FoodType.SlicedTexture(String, Integer)
  name.vb: SlicedTexture(String, Integer)
- uid: TinyLife.Skills.FoodType.PlatterTexture(System.String,System.Int32)
  commentId: M:TinyLife.Skills.FoodType.PlatterTexture(System.String,System.Int32)
  id: PlatterTexture(System.String,System.Int32)
  parent: TinyLife.Skills.FoodType
  langs:
  - csharp
  - vb
  name: PlatterTexture(string, int)
  nameWithType: FoodType.PlatterTexture(string, int)
  fullName: TinyLife.Skills.FoodType.PlatterTexture(string, int)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Skills
  summary: >-
    A helper method that can be used for <xref href="TinyLife.Skills.FoodType.CustomTextureFunc" data-throw-if-not-resolved="false"></xref> to return textures based on whether the food is a single item or a platter.

    This function expects texture regions to exist of the form "Food{name}Platter" and "Food{name}".
  example: []
  syntax:
    content: public static TextureRegion PlatterTexture(string name, int servingSize)
    parameters:
    - id: name
      type: System.String
      description: The name of the texture.
    - id: servingSize
      type: System.Int32
      description: The serving size.
    return:
      type: MLEM.Textures.TextureRegion
      description: The texture region to choose.
    content.vb: Public Shared Function PlatterTexture(name As String, servingSize As Integer) As TextureRegion
  overload: TinyLife.Skills.FoodType.PlatterTexture*
  nameWithType.vb: FoodType.PlatterTexture(String, Integer)
  fullName.vb: TinyLife.Skills.FoodType.PlatterTexture(String, Integer)
  name.vb: PlatterTexture(String, Integer)
references:
- uid: TinyLife.Actions.ActionType.GetIngredientsSingle
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsSingle
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_GetIngredientsSingle
  name: GetIngredientsSingle
  nameWithType: ActionType.GetIngredientsSingle
  fullName: TinyLife.Actions.ActionType.GetIngredientsSingle
- uid: Microsoft.Xna.Framework.Graphics.Texture
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: Microsoft.Xna.Framework.Graphics.Texture
- uid: TinyLife.Skills.FoodType.ContainerType
  commentId: T:TinyLife.Skills.FoodType.ContainerType
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType.ContainerType
  nameWithType: FoodType.ContainerType
  fullName: TinyLife.Skills.FoodType.ContainerType
  spec.csharp:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
    href: TinyLife.Skills.FoodType.ContainerType.html
  spec.vb:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
    href: TinyLife.Skills.FoodType.ContainerType.html
- uid: TinyLife.Mods.Mod.GetCustomFurnitureTextures(TinyLife.Mods.ModInfo)
  commentId: M:TinyLife.Mods.Mod.GetCustomFurnitureTextures(TinyLife.Mods.ModInfo)
  href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_GetCustomFurnitureTextures_TinyLife_Mods_ModInfo_
  name: GetCustomFurnitureTextures(ModInfo)
  nameWithType: Mod.GetCustomFurnitureTextures(ModInfo)
  fullName: TinyLife.Mods.Mod.GetCustomFurnitureTextures(TinyLife.Mods.ModInfo)
  spec.csharp:
  - uid: TinyLife.Mods.Mod.GetCustomFurnitureTextures(TinyLife.Mods.ModInfo)
    name: GetCustomFurnitureTextures
    href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_GetCustomFurnitureTextures_TinyLife_Mods_ModInfo_
  - name: (
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
    href: TinyLife.Mods.ModInfo.html
  - name: )
  spec.vb:
  - uid: TinyLife.Mods.Mod.GetCustomFurnitureTextures(TinyLife.Mods.ModInfo)
    name: GetCustomFurnitureTextures
    href: TinyLife.Mods.Mod.html#TinyLife_Mods_Mod_GetCustomFurnitureTextures_TinyLife_Mods_ModInfo_
  - name: (
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
    href: TinyLife.Mods.ModInfo.html
  - name: )
- uid: TinyLife.Skills.FoodType.Name
  commentId: F:TinyLife.Skills.FoodType.Name
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Name
  name: Name
  nameWithType: FoodType.Name
  fullName: TinyLife.Skills.FoodType.Name
- uid: TinyLife.Skills.FoodType.Register(TinyLife.Skills.FoodType)
  commentId: M:TinyLife.Skills.FoodType.Register(TinyLife.Skills.FoodType)
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Register_TinyLife_Skills_FoodType_
  name: Register(FoodType)
  nameWithType: FoodType.Register(FoodType)
  fullName: TinyLife.Skills.FoodType.Register(TinyLife.Skills.FoodType)
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.Register(TinyLife.Skills.FoodType)
    name: Register
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Register_TinyLife_Skills_FoodType_
  - name: (
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.FoodType.Register(TinyLife.Skills.FoodType)
    name: Register
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Register_TinyLife_Skills_FoodType_
  - name: (
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: )
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Emotions.IEmotionSource
  commentId: T:TinyLife.Emotions.IEmotionSource
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.IEmotionSource.html
  name: IEmotionSource
  nameWithType: IEmotionSource
  fullName: TinyLife.Emotions.IEmotionSource
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Misc.GenericDataHolder
  definition: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: GenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(string)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Skills.FoodType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<FoodType>(FoodType)
  nameWithType: Extensions.JsonCopy<FoodType>(FoodType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.FoodType>(TinyLife.Skills.FoodType)
  nameWithType.vb: Extensions.JsonCopy(Of FoodType)(FoodType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.FoodType)(TinyLife.Skills.FoodType)
  name.vb: JsonCopy(Of FoodType)(FoodType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.FoodType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: '>'
  - name: (
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.FoodType)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: )
  - name: (
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  href: TinyLife.html
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Skills.FoodType
  commentId: T:TinyLife.Skills.FoodType
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType
  nameWithType: FoodType
  fullName: TinyLife.Skills.FoodType
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Skills.FoodType}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Skills.FoodType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, FoodType>
  nameWithType: ReadOnlyDictionary<string, FoodType>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Skills.FoodType>
  nameWithType.vb: ReadOnlyDictionary(Of String, FoodType)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Skills.FoodType)
  name.vb: ReadOnlyDictionary(Of String, FoodType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.Skills.FoodType.FoodRestriction
  commentId: T:TinyLife.Skills.FoodType.FoodRestriction
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType.FoodRestriction
  nameWithType: FoodType.FoodRestriction
  fullName: TinyLife.Skills.FoodType.FoodRestriction
  spec.csharp:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.FoodRestriction
    name: FoodRestriction
    href: TinyLife.Skills.FoodType.FoodRestriction.html
  spec.vb:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.FoodRestriction
    name: FoodRestriction
    href: TinyLife.Skills.FoodType.FoodRestriction.html
- uid: TinyLife.Skills.FoodType.FoodRestriction[]
  isExternal: true
  href: TinyLife.Skills.FoodType.FoodRestriction.html
  name: FoodRestriction[]
  nameWithType: FoodType.FoodRestriction[]
  fullName: TinyLife.Skills.FoodType.FoodRestriction[]
  nameWithType.vb: FoodType.FoodRestriction()
  fullName.vb: TinyLife.Skills.FoodType.FoodRestriction()
  name.vb: FoodRestriction()
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.FoodRestriction
    name: FoodRestriction
    href: TinyLife.Skills.FoodType.FoodRestriction.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Skills.FoodType.FoodRestriction
    name: FoodRestriction
    href: TinyLife.Skills.FoodType.FoodRestriction.html
  - name: (
  - name: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: TinyLife.Skills.FoodType.OnEaten
  commentId: P:TinyLife.Skills.FoodType.OnEaten
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_OnEaten
  name: OnEaten
  nameWithType: FoodType.OnEaten
  fullName: TinyLife.Skills.FoodType.OnEaten
- uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
  commentId: M:TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_ActionInfo_TinyLife_Objects_FoodTypedItem_
  name: InvokeOnEaten(ActionInfo, FoodTypedItem)
  nameWithType: FoodType.InvokeOnEaten(ActionInfo, FoodTypedItem)
  fullName: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo, TinyLife.Objects.FoodTypedItem)
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
    name: InvokeOnEaten
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_ActionInfo_TinyLife_Objects_FoodTypedItem_
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem)
    name: InvokeOnEaten
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_ActionInfo_TinyLife_Objects_FoodTypedItem_
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: )
- uid: System.Action{TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem,TinyLife.Skills.FoodType}
  commentId: T:System.Action{TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem,TinyLife.Skills.FoodType}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<ActionInfo, FoodTypedItem, FoodType>
  nameWithType: Action<ActionInfo, FoodTypedItem, FoodType>
  fullName: System.Action<TinyLife.Actions.ActionInfo, TinyLife.Objects.FoodTypedItem, TinyLife.Skills.FoodType>
  nameWithType.vb: Action(Of ActionInfo, FoodTypedItem, FoodType)
  fullName.vb: System.Action(Of TinyLife.Actions.ActionInfo, TinyLife.Objects.FoodTypedItem, TinyLife.Skills.FoodType)
  name.vb: Action(Of ActionInfo, FoodTypedItem, FoodType)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike,System.Int32,System.Single,System.Single@,System.Nullable{System.Single}@)
  commentId: M:TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike,System.Int32,System.Single,System.Single@,System.Nullable{System.Single}@)
  isExternal: true
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_GetPrice_TinyLife_Objects_PersonLike_System_Int32_System_Single_System_Single__System_Nullable_System_Single___
  name: GetPrice(PersonLike, int, float, out float, out float?)
  nameWithType: FoodType.GetPrice(PersonLike, int, float, out float, out float?)
  fullName: TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike, int, float, out float, out float?)
  nameWithType.vb: FoodType.GetPrice(PersonLike, Integer, Single, Single, Single?)
  fullName.vb: TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike, Integer, Single, Single, Single?)
  name.vb: GetPrice(PersonLike, Integer, Single, Single, Single?)
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike,System.Int32,System.Single,System.Single@,System.Nullable{System.Single}@)
    name: GetPrice
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_GetPrice_TinyLife_Objects_PersonLike_System_Int32_System_Single_System_Single__System_Nullable_System_Single___
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.FoodType.GetPrice(TinyLife.Objects.PersonLike,System.Int32,System.Single,System.Single@,System.Nullable{System.Single}@)
    name: GetPrice
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_GetPrice_TinyLife_Objects_PersonLike_System_Int32_System_Single_System_Single__System_Nullable_System_Single___
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: )
- uid: TinyLife.Skills.FoodType.GetPriceDelegate
  commentId: T:TinyLife.Skills.FoodType.GetPriceDelegate
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType.GetPriceDelegate
  nameWithType: FoodType.GetPriceDelegate
  fullName: TinyLife.Skills.FoodType.GetPriceDelegate
  spec.csharp:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.GetPriceDelegate
    name: GetPriceDelegate
    href: TinyLife.Skills.FoodType.GetPriceDelegate.html
  spec.vb:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.GetPriceDelegate
    name: GetPriceDelegate
    href: TinyLife.Skills.FoodType.GetPriceDelegate.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Skills.FoodType.RequiredSkill
  commentId: P:TinyLife.Skills.FoodType.RequiredSkill
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_RequiredSkill
  name: RequiredSkill
  nameWithType: FoodType.RequiredSkill
  fullName: TinyLife.Skills.FoodType.RequiredSkill
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Skills.FoodType.IngredientSource
  commentId: T:TinyLife.Skills.FoodType.IngredientSource
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType.IngredientSource
  nameWithType: FoodType.IngredientSource
  fullName: TinyLife.Skills.FoodType.IngredientSource
  spec.csharp:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
  spec.vb:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
- uid: System.Collections.Generic.ISet{TinyLife.Skills.FoodType.IngredientSource}
  commentId: T:System.Collections.Generic.ISet{TinyLife.Skills.FoodType.IngredientSource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<FoodType.IngredientSource>
  nameWithType: ISet<FoodType.IngredientSource>
  fullName: System.Collections.Generic.ISet<TinyLife.Skills.FoodType.IngredientSource>
  nameWithType.vb: ISet(Of FoodType.IngredientSource)
  fullName.vb: System.Collections.Generic.ISet(Of TinyLife.Skills.FoodType.IngredientSource)
  name.vb: ISet(Of FoodType.IngredientSource)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: .
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
  - name: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  href: TinyLife.Skills.SkillType.html
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: TinyLife.Skills.FoodType.RequiredSkillLevel
  commentId: F:TinyLife.Skills.FoodType.RequiredSkillLevel
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_RequiredSkillLevel
  name: RequiredSkillLevel
  nameWithType: FoodType.RequiredSkillLevel
  fullName: TinyLife.Skills.FoodType.RequiredSkillLevel
- uid: TinyLife.Skills.SkillType.Cooking
  commentId: F:TinyLife.Skills.SkillType.Cooking
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Cooking
  name: Cooking
  nameWithType: SkillType.Cooking
  fullName: TinyLife.Skills.SkillType.Cooking
- uid: TinyLife.Skills.FoodType.RequiredSkill*
  commentId: Overload:TinyLife.Skills.FoodType.RequiredSkill
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_RequiredSkill
  name: RequiredSkill
  nameWithType: FoodType.RequiredSkill
  fullName: TinyLife.Skills.FoodType.RequiredSkill
- uid: TinyLife.Objects.ObjectCategory.Stove
  commentId: F:TinyLife.Objects.ObjectCategory.Stove
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_Stove
  name: Stove
  nameWithType: ObjectCategory.Stove
  fullName: TinyLife.Objects.ObjectCategory.Stove
- uid: TinyLife.Objects.ObjectCategory.Oven
  commentId: F:TinyLife.Objects.ObjectCategory.Oven
  href: TinyLife.Objects.ObjectCategory.html#TinyLife_Objects_ObjectCategory_Oven
  name: Oven
  nameWithType: ObjectCategory.Oven
  fullName: TinyLife.Objects.ObjectCategory.Oven
- uid: TinyLife.Skills.FoodType.IngredientSource.Fridge
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Fridge
  href: TinyLife.Skills.FoodType.IngredientSource.html#TinyLife_Skills_FoodType_IngredientSource_Fridge
  name: Fridge
  nameWithType: FoodType.IngredientSource.Fridge
  fullName: TinyLife.Skills.FoodType.IngredientSource.Fridge
- uid: TinyLife.Skills.FoodType.AdditionalObject*
  commentId: Overload:TinyLife.Skills.FoodType.AdditionalObject
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_AdditionalObject
  name: AdditionalObject
  nameWithType: FoodType.AdditionalObject
  fullName: TinyLife.Skills.FoodType.AdditionalObject
- uid: TinyLife.Objects.ObjectCategory
  commentId: T:TinyLife.Objects.ObjectCategory
  parent: TinyLife.Objects
  href: TinyLife.Objects.ObjectCategory.html
  name: ObjectCategory
  nameWithType: ObjectCategory
  fullName: TinyLife.Objects.ObjectCategory
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Skills.FoodType.Container*
  commentId: Overload:TinyLife.Skills.FoodType.Container
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Container
  name: Container
  nameWithType: FoodType.Container
  fullName: TinyLife.Skills.FoodType.Container
- uid: TinyLife.Skills.FoodType.OnEaten*
  commentId: Overload:TinyLife.Skills.FoodType.OnEaten
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_OnEaten
  name: OnEaten
  nameWithType: FoodType.OnEaten
  fullName: TinyLife.Skills.FoodType.OnEaten
- uid: System.Action{TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem}
  commentId: T:System.Action{TinyLife.Actions.ActionInfo,TinyLife.Objects.FoodTypedItem}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<ActionInfo, FoodTypedItem>
  nameWithType: Action<ActionInfo, FoodTypedItem>
  fullName: System.Action<TinyLife.Actions.ActionInfo, TinyLife.Objects.FoodTypedItem>
  nameWithType.vb: Action(Of ActionInfo, FoodTypedItem)
  fullName.vb: System.Action(Of TinyLife.Actions.ActionInfo, TinyLife.Objects.FoodTypedItem)
  name.vb: Action(Of ActionInfo, FoodTypedItem)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate
  commentId: T:TinyLife.Actions.ActionType.CanExecuteDelegate
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType.CanExecuteDelegate
  nameWithType: ActionType.CanExecuteDelegate
  fullName: TinyLife.Actions.ActionType.CanExecuteDelegate
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
    href: TinyLife.Actions.ActionType.CanExecuteDelegate.html
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
    href: TinyLife.Actions.ActionType.CanExecuteDelegate.html
- uid: TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean)
  commentId: M:TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean)
  isExternal: true
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanEat_TinyLife_Objects_PersonLike_TinyLife_Objects_FoodTypedItem_System_Boolean_
  name: CanEat(PersonLike, FoodTypedItem, bool)
  nameWithType: FoodType.CanEat(PersonLike, FoodTypedItem, bool)
  fullName: TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike, TinyLife.Objects.FoodTypedItem, bool)
  nameWithType.vb: FoodType.CanEat(PersonLike, FoodTypedItem, Boolean)
  fullName.vb: TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike, TinyLife.Objects.FoodTypedItem, Boolean)
  name.vb: CanEat(PersonLike, FoodTypedItem, Boolean)
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean)
    name: CanEat
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanEat_TinyLife_Objects_PersonLike_TinyLife_Objects_FoodTypedItem_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.FoodType.CanEat(TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean)
    name: CanEat
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanEat_TinyLife_Objects_PersonLike_TinyLife_Objects_FoodTypedItem_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Skills.FoodType.CanEatFunc*
  commentId: Overload:TinyLife.Skills.FoodType.CanEatFunc
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanEatFunc
  name: CanEatFunc
  nameWithType: FoodType.CanEatFunc
  fullName: TinyLife.Skills.FoodType.CanEatFunc
- uid: System.Func{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean},TinyLife.Actions.CanExecuteResult}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean},TinyLife.Actions.CanExecuteResult}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(PersonLike Person, FoodTypedItem Food, bool Automatic), CanExecuteResult>
  nameWithType: Func<(PersonLike Person, FoodTypedItem Food, bool Automatic), CanExecuteResult>
  fullName: System.Func<(TinyLife.Objects.PersonLike Person, TinyLife.Objects.FoodTypedItem Food, bool Automatic), TinyLife.Actions.CanExecuteResult>
  nameWithType.vb: Func(Of (Person As PersonLike, Food As FoodTypedItem, Automatic As Boolean), CanExecuteResult)
  fullName.vb: System.Func(Of (Person As TinyLife.Objects.PersonLike, Food As TinyLife.Objects.FoodTypedItem, Automatic As Boolean), TinyLife.Actions.CanExecuteResult)
  name.vb: Func(Of (Person As PersonLike, Food As FoodTypedItem, Automatic As Boolean), CanExecuteResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Food
    name: Food
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.food
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.automatic
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.person
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Food
    name: Food
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.food
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.PersonLike,TinyLife.Objects.FoodTypedItem,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.personlike,tinylife.objects.foodtypeditem,system.boolean-.automatic
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single,System.Boolean)
  commentId: M:TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single,System.Boolean)
  isExternal: true
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanCreate_TinyLife_Actions_ActionInfo_System_Boolean_System_Int32_System_Single_System_Boolean_
  name: CanCreate(ActionInfo, bool, int, float, bool)
  nameWithType: FoodType.CanCreate(ActionInfo, bool, int, float, bool)
  fullName: TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo, bool, int, float, bool)
  nameWithType.vb: FoodType.CanCreate(ActionInfo, Boolean, Integer, Single, Boolean)
  fullName.vb: TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo, Boolean, Integer, Single, Boolean)
  name.vb: CanCreate(ActionInfo, Boolean, Integer, Single, Boolean)
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single,System.Boolean)
    name: CanCreate
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanCreate_TinyLife_Actions_ActionInfo_System_Boolean_System_Int32_System_Single_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.FoodType.CanCreate(TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single,System.Boolean)
    name: CanCreate
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanCreate_TinyLife_Actions_ActionInfo_System_Boolean_System_Int32_System_Single_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Skills.FoodType.CanCreateFunc*
  commentId: Overload:TinyLife.Skills.FoodType.CanCreateFunc
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanCreateFunc
  name: CanCreateFunc
  nameWithType: FoodType.CanCreateFunc
  fullName: TinyLife.Skills.FoodType.CanCreateFunc
- uid: System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single},TinyLife.Actions.CanExecuteResult}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single},TinyLife.Actions.CanExecuteResult}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(ActionInfo Info, bool Automatic, int ServingSize, float PriceMarkup), CanExecuteResult>
  nameWithType: Func<(ActionInfo Info, bool Automatic, int ServingSize, float PriceMarkup), CanExecuteResult>
  fullName: System.Func<(TinyLife.Actions.ActionInfo Info, bool Automatic, int ServingSize, float PriceMarkup), TinyLife.Actions.CanExecuteResult>
  nameWithType.vb: Func(Of (Info As ActionInfo, Automatic As Boolean, ServingSize As Integer, PriceMarkup As Single), CanExecuteResult)
  fullName.vb: System.Func(Of (Info As TinyLife.Actions.ActionInfo, Automatic As Boolean, ServingSize As Integer, PriceMarkup As Single), TinyLife.Actions.CanExecuteResult)
  name.vb: Func(Of (Info As ActionInfo, Automatic As Boolean, ServingSize As Integer, PriceMarkup As Single), CanExecuteResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,system.boolean,system.int32,system.single-.info
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,system.boolean,system.int32,system.single-.automatic
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single}.ServingSize
    name: ServingSize
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,system.boolean,system.int32,system.single-.servingsize
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single}.PriceMarkup
    name: PriceMarkup
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,system.boolean,system.int32,system.single-.pricemarkup
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,system.boolean,system.int32,system.single-.info
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,system.boolean,system.int32,system.single-.automatic
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single}.ServingSize
    name: ServingSize
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,system.boolean,system.int32,system.single-.servingsize
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,System.Boolean,System.Int32,System.Single}.PriceMarkup
    name: PriceMarkup
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,system.boolean,system.int32,system.single-.pricemarkup
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
- uid: TinyLife.Skills.FoodType.CustomTextureFunc*
  commentId: Overload:TinyLife.Skills.FoodType.CustomTextureFunc
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CustomTextureFunc
  name: CustomTextureFunc
  nameWithType: FoodType.CustomTextureFunc
  fullName: TinyLife.Skills.FoodType.CustomTextureFunc
- uid: System.Func{System.String,System.Int32,MLEM.Textures.TextureRegion}
  commentId: T:System.Func{System.String,System.Int32,MLEM.Textures.TextureRegion}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<string, int, TextureRegion>
  nameWithType: Func<string, int, TextureRegion>
  fullName: System.Func<string, int, MLEM.Textures.TextureRegion>
  nameWithType.vb: Func(Of String, Integer, TextureRegion)
  fullName.vb: System.Func(Of String, Integer, MLEM.Textures.TextureRegion)
  name.vb: Func(Of String, Integer, TextureRegion)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Skills.FoodType.CanHaveCandle*
  commentId: Overload:TinyLife.Skills.FoodType.CanHaveCandle
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanHaveCandle
  name: CanHaveCandle
  nameWithType: FoodType.CanHaveCandle
  fullName: TinyLife.Skills.FoodType.CanHaveCandle
- uid: System.Func{TinyLife.Objects.Food,System.Boolean}
  commentId: T:System.Func{TinyLife.Objects.Food,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Food, bool>
  nameWithType: Func<Food, bool>
  fullName: System.Func<TinyLife.Objects.Food, bool>
  nameWithType.vb: Func(Of Food, Boolean)
  fullName.vb: System.Func(Of TinyLife.Objects.Food, Boolean)
  name.vb: Func(Of Food, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Food
    name: Food
    href: TinyLife.Objects.Food.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Food
    name: Food
    href: TinyLife.Objects.Food.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Skills.FoodType.Icon*
  commentId: Overload:TinyLife.Skills.FoodType.Icon
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Icon
  name: Icon
  nameWithType: FoodType.Icon
  fullName: TinyLife.Skills.FoodType.Icon
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.LnCategory.Food
  commentId: F:TinyLife.LnCategory.Food
  href: TinyLife.LnCategory.html#TinyLife_LnCategory_Food
  name: Food
  nameWithType: LnCategory.Food
  fullName: TinyLife.LnCategory.Food
- uid: TinyLife.Skills.FoodType.DisplayName*
  commentId: Overload:TinyLife.Skills.FoodType.DisplayName
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_DisplayName
  name: DisplayName
  nameWithType: FoodType.DisplayName
  fullName: TinyLife.Skills.FoodType.DisplayName
- uid: TinyLife.Emotions.EmotionModifier
  commentId: T:TinyLife.Emotions.EmotionModifier
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionModifier.html
  name: EmotionModifier
  nameWithType: EmotionModifier
  fullName: TinyLife.Emotions.EmotionModifier
- uid: TinyLife.Skills.FoodType.SourceString*
  commentId: Overload:TinyLife.Skills.FoodType.SourceString
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_SourceString
  name: SourceString
  nameWithType: FoodType.SourceString
  fullName: TinyLife.Skills.FoodType.SourceString
- uid: TinyLife.Emotions.IEmotionSource.SourceString
  commentId: P:TinyLife.Emotions.IEmotionSource.SourceString
  parent: TinyLife.Emotions.IEmotionSource
  href: TinyLife.Emotions.IEmotionSource.html#TinyLife_Emotions_IEmotionSource_SourceString
  name: SourceString
  nameWithType: IEmotionSource.SourceString
  fullName: TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.Skills.FoodType.Container
  commentId: P:TinyLife.Skills.FoodType.Container
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Container
  name: Container
  nameWithType: FoodType.Container
  fullName: TinyLife.Skills.FoodType.Container
- uid: Microsoft.Xna.Framework.Color.White
  commentId: P:Microsoft.Xna.Framework.Color.White
  isExternal: true
  name: White
  nameWithType: Color.White
  fullName: Microsoft.Xna.Framework.Color.White
- uid: TinyLife.Skills.FoodType.#ctor*
  commentId: Overload:TinyLife.Skills.FoodType.#ctor
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType__ctor_System_String_System_Int32_System_Int32_System_Single_TinyLife_Skills_FoodType_FoodRestriction_TinyLife_Skills_FoodType_IngredientSource_System_Nullable_Microsoft_Xna_Framework_Color__
  name: FoodType
  nameWithType: FoodType.FoodType
  fullName: TinyLife.Skills.FoodType.FoodType
  nameWithType.vb: FoodType.New
  fullName.vb: TinyLife.Skills.FoodType.New
  name.vb: New
- uid: System.Nullable{Microsoft.Xna.Framework.Color}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: Microsoft.Xna.Framework.Color?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Skills.FoodType.OnGetPrice
  commentId: E:TinyLife.Skills.FoodType.OnGetPrice
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_OnGetPrice
  name: OnGetPrice
  nameWithType: FoodType.OnGetPrice
  fullName: TinyLife.Skills.FoodType.OnGetPrice
- uid: TinyLife.Skills.FoodType.GetPrice*
  commentId: Overload:TinyLife.Skills.FoodType.GetPrice
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_GetPrice_TinyLife_Objects_PersonLike_System_Int32_System_Single_System_Single__System_Nullable_System_Single___
  name: GetPrice
  nameWithType: FoodType.GetPrice
  fullName: TinyLife.Skills.FoodType.GetPrice
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: TinyLife.Objects.Food
  commentId: T:TinyLife.Objects.Food
  parent: TinyLife.Objects
  href: TinyLife.Objects.Food.html
  name: Food
  nameWithType: Food
  fullName: TinyLife.Objects.Food
- uid: TinyLife.Objects.Food.FoodLeft
  commentId: F:TinyLife.Objects.Food.FoodLeft
  href: TinyLife.Objects.Food.html#TinyLife_Objects_Food_FoodLeft
  name: FoodLeft
  nameWithType: Food.FoodLeft
  fullName: TinyLife.Objects.Food.FoodLeft
- uid: TinyLife.World.Map.Time
  commentId: P:TinyLife.World.Map.Time
  href: TinyLife.World.Map.html#TinyLife_World_Map_Time
  name: Time
  nameWithType: Map.Time
  fullName: TinyLife.World.Map.Time
- uid: TinyLife.Goals.AutoGoalInfo
  commentId: T:TinyLife.Goals.AutoGoalInfo
  parent: TinyLife.Goals
  href: TinyLife.Goals.AutoGoalInfo.html
  name: AutoGoalInfo
  nameWithType: AutoGoalInfo
  fullName: TinyLife.Goals.AutoGoalInfo
- uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_PersonLike_System_Boolean_
  name: SetCreator(PersonLike, bool)
  nameWithType: Furniture.SetCreator(PersonLike, bool)
  fullName: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike, bool)
  nameWithType.vb: Furniture.SetCreator(PersonLike, Boolean)
  fullName.vb: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike, Boolean)
  name.vb: SetCreator(PersonLike, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
    name: SetCreator
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_PersonLike_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.PersonLike,System.Boolean)
    name: SetCreator
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_PersonLike_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Skills.FoodType.Construct*
  commentId: Overload:TinyLife.Skills.FoodType.Construct
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Construct_TinyLife_World_Map_TinyLife_Skills_Quality_System_TimeSpan_System_Int32_TinyLife_Objects_PersonLike_System_Nullable_System_Guid__System_Boolean_
  name: Construct
  nameWithType: FoodType.Construct
  fullName: TinyLife.Skills.FoodType.Construct
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.Skills.Quality
  commentId: T:TinyLife.Skills.Quality
  parent: TinyLife.Skills
  href: TinyLife.Skills.Quality.html
  name: Quality
  nameWithType: Quality
  fullName: TinyLife.Skills.Quality
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid?
  nameWithType: Guid?
  fullName: System.Guid?
  spec.csharp:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  spec.vb:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.Objects.FoodTypedItem
  commentId: T:TinyLife.Objects.FoodTypedItem
  parent: TinyLife.Objects
  href: TinyLife.Objects.FoodTypedItem.html
  name: FoodTypedItem
  nameWithType: FoodTypedItem
  fullName: TinyLife.Objects.FoodTypedItem
- uid: TinyLife.Objects.FurnitureType
  commentId: T:TinyLife.Objects.FurnitureType
  parent: TinyLife.Objects
  href: TinyLife.Objects.FurnitureType.html
  name: FurnitureType
  nameWithType: FurnitureType
  fullName: TinyLife.Objects.FurnitureType
- uid: TinyLife.Skills.FoodType.ConstructUnfinished*
  commentId: Overload:TinyLife.Skills.FoodType.ConstructUnfinished
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_ConstructUnfinished_TinyLife_Objects_FurnitureType_TinyLife_World_Map_System_TimeSpan_System_Int32_TinyLife_Objects_PersonLike_System_Nullable_System_Guid__System_Boolean_
  name: ConstructUnfinished
  nameWithType: FoodType.ConstructUnfinished
  fullName: TinyLife.Skills.FoodType.ConstructUnfinished
- uid: TinyLife.Actions.CanExecuteResult
  commentId: T:TinyLife.Actions.CanExecuteResult
  parent: TinyLife.Actions
  href: TinyLife.Actions.CanExecuteResult.html
  name: CanExecuteResult
  nameWithType: CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult
- uid: TinyLife.Skills.FoodType.CanEatFunc
  commentId: P:TinyLife.Skills.FoodType.CanEatFunc
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanEatFunc
  name: CanEatFunc
  nameWithType: FoodType.CanEatFunc
  fullName: TinyLife.Skills.FoodType.CanEatFunc
- uid: TinyLife.Skills.FoodType.Restrictions
  commentId: F:TinyLife.Skills.FoodType.Restrictions
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Restrictions
  name: Restrictions
  nameWithType: FoodType.Restrictions
  fullName: TinyLife.Skills.FoodType.Restrictions
- uid: TinyLife.Skills.FoodType.CanEat*
  commentId: Overload:TinyLife.Skills.FoodType.CanEat
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanEat_TinyLife_Objects_PersonLike_TinyLife_Objects_FoodTypedItem_System_Boolean_
  name: CanEat
  nameWithType: FoodType.CanEat
  fullName: TinyLife.Skills.FoodType.CanEat
- uid: TinyLife.Skills.FoodType.CanCreateFunc
  commentId: P:TinyLife.Skills.FoodType.CanCreateFunc
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanCreateFunc
  name: CanCreateFunc
  nameWithType: FoodType.CanCreateFunc
  fullName: TinyLife.Skills.FoodType.CanCreateFunc
- uid: TinyLife.Skills.FoodType.AdditionalObject
  commentId: P:TinyLife.Skills.FoodType.AdditionalObject
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_AdditionalObject
  name: AdditionalObject
  nameWithType: FoodType.AdditionalObject
  fullName: TinyLife.Skills.FoodType.AdditionalObject
- uid: TinyLife.Skills.FoodType.CanCreate*
  commentId: Overload:TinyLife.Skills.FoodType.CanCreate
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CanCreate_TinyLife_Actions_ActionInfo_System_Boolean_System_Int32_System_Single_System_Boolean_
  name: CanCreate
  nameWithType: FoodType.CanCreate
  fullName: TinyLife.Skills.FoodType.CanCreate
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionInfo.html
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Skills.FoodType.GetRestrictionsDescription*
  commentId: Overload:TinyLife.Skills.FoodType.GetRestrictionsDescription
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_GetRestrictionsDescription_System_Boolean_
  name: GetRestrictionsDescription
  nameWithType: FoodType.GetRestrictionsDescription
  fullName: TinyLife.Skills.FoodType.GetRestrictionsDescription
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Skills.FoodType.Sources
  commentId: F:TinyLife.Skills.FoodType.Sources
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Sources
  name: Sources
  nameWithType: FoodType.Sources
  fullName: TinyLife.Skills.FoodType.Sources
- uid: TinyLife.Skills.FoodType.IngredientSource.OnEaten
  commentId: P:TinyLife.Skills.FoodType.IngredientSource.OnEaten
  href: TinyLife.Skills.FoodType.IngredientSource.html#TinyLife_Skills_FoodType_IngredientSource_OnEaten
  name: OnEaten
  nameWithType: FoodType.IngredientSource.OnEaten
  fullName: TinyLife.Skills.FoodType.IngredientSource.OnEaten
- uid: TinyLife.Actions.ActionType.Eat
  commentId: F:TinyLife.Actions.ActionType.Eat
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_Eat
  name: Eat
  nameWithType: ActionType.Eat
  fullName: TinyLife.Actions.ActionType.Eat
- uid: TinyLife.Skills.FoodType.InvokeOnEaten*
  commentId: Overload:TinyLife.Skills.FoodType.InvokeOnEaten
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_ActionInfo_TinyLife_Objects_FoodTypedItem_
  name: InvokeOnEaten
  nameWithType: FoodType.InvokeOnEaten
  fullName: TinyLife.Skills.FoodType.InvokeOnEaten
- uid: TinyLife.Skills.FoodType.CustomTextureFunc
  commentId: P:TinyLife.Skills.FoodType.CustomTextureFunc
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CustomTextureFunc
  name: CustomTextureFunc
  nameWithType: FoodType.CustomTextureFunc
  fullName: TinyLife.Skills.FoodType.CustomTextureFunc
- uid: TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture(TinyLife.Skills.FoodType)
  commentId: M:TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture(TinyLife.Skills.FoodType)
  href: TinyLife.Skills.FoodType.ContainerType.html#TinyLife_Skills_FoodType_ContainerType_GetDefaultTexture_TinyLife_Skills_FoodType_
  name: GetDefaultTexture(FoodType)
  nameWithType: FoodType.ContainerType.GetDefaultTexture(FoodType)
  fullName: TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture(TinyLife.Skills.FoodType)
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture(TinyLife.Skills.FoodType)
    name: GetDefaultTexture
    href: TinyLife.Skills.FoodType.ContainerType.html#TinyLife_Skills_FoodType_ContainerType_GetDefaultTexture_TinyLife_Skills_FoodType_
  - name: (
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.FoodType.ContainerType.GetDefaultTexture(TinyLife.Skills.FoodType)
    name: GetDefaultTexture
    href: TinyLife.Skills.FoodType.ContainerType.html#TinyLife_Skills_FoodType_ContainerType_GetDefaultTexture_TinyLife_Skills_FoodType_
  - name: (
  - uid: TinyLife.Skills.FoodType
    name: FoodType
    href: TinyLife.Skills.FoodType.html
  - name: )
- uid: TinyLife.Skills.FoodType.GetTexture*
  commentId: Overload:TinyLife.Skills.FoodType.GetTexture
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_GetTexture_System_Int32_
  name: GetTexture
  nameWithType: FoodType.GetTexture
  fullName: TinyLife.Skills.FoodType.GetTexture
- uid: TinyLife.Skills.FoodType.Register*
  commentId: Overload:TinyLife.Skills.FoodType.Register
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Register_TinyLife_Skills_FoodType_
  name: Register
  nameWithType: FoodType.Register
  fullName: TinyLife.Skills.FoodType.Register
- uid: TinyLife.Skills.FoodType.GetPossibleArguments*
  commentId: Overload:TinyLife.Skills.FoodType.GetPossibleArguments
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_GetPossibleArguments_TinyLife_Objects_PersonLike_System_Int32_TinyLife_Skills_FoodType_IngredientSource_System_Single_TinyLife_Skills_SkillType_System_Boolean_
  name: GetPossibleArguments
  nameWithType: FoodType.GetPossibleArguments
  fullName: TinyLife.Skills.FoodType.GetPossibleArguments
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionArgument}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionArgument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ActionArgument>
  nameWithType: IEnumerable<ActionArgument>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionArgument>
  nameWithType.vb: IEnumerable(Of ActionArgument)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionArgument)
  name.vb: IEnumerable(Of ActionArgument)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: )
- uid: TinyLife.Skills.FoodType.Types
  commentId: F:TinyLife.Skills.FoodType.Types
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_Types
  name: Types
  nameWithType: FoodType.Types
  fullName: TinyLife.Skills.FoodType.Types
- uid: TinyLife.Skills.FoodType.GetAllContainers*
  commentId: Overload:TinyLife.Skills.FoodType.GetAllContainers
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_GetAllContainers_System_Boolean_System_Boolean_
  name: GetAllContainers
  nameWithType: FoodType.GetAllContainers
  fullName: TinyLife.Skills.FoodType.GetAllContainers
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.FurnitureType}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.FurnitureType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<FurnitureType>
  nameWithType: IEnumerable<FurnitureType>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.FurnitureType>
  nameWithType.vb: IEnumerable(Of FurnitureType)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.FurnitureType)
  name.vb: IEnumerable(Of FurnitureType)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    href: TinyLife.Objects.FurnitureType.html
  - name: )
- uid: TinyLife.Skills.SkillType.Baking
  commentId: F:TinyLife.Skills.SkillType.Baking
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_Baking
  name: Baking
  nameWithType: SkillType.Baking
  fullName: TinyLife.Skills.SkillType.Baking
- uid: TinyLife.Skills.FoodType.CreateBaked*
  commentId: Overload:TinyLife.Skills.FoodType.CreateBaked
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_CreateBaked_System_String_System_Int32_System_Int32_System_Single_TinyLife_Skills_FoodType_FoodRestriction_System_Boolean_TinyLife_Skills_FoodType_IngredientSource___
  name: CreateBaked
  nameWithType: FoodType.CreateBaked
  fullName: TinyLife.Skills.FoodType.CreateBaked
- uid: TinyLife.Skills.FoodType.IngredientSource[]
  isExternal: true
  href: TinyLife.Skills.FoodType.IngredientSource.html
  name: IngredientSource[]
  nameWithType: FoodType.IngredientSource[]
  fullName: TinyLife.Skills.FoodType.IngredientSource[]
  nameWithType.vb: FoodType.IngredientSource()
  fullName.vb: TinyLife.Skills.FoodType.IngredientSource()
  name.vb: IngredientSource()
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
    href: TinyLife.Skills.FoodType.IngredientSource.html
  - name: (
  - name: )
- uid: TinyLife.Objects.FurnitureType.TypeSettings.BuyableVariations
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.BuyableVariations
  href: TinyLife.Objects.FurnitureType.TypeSettings.html#TinyLife_Objects_FurnitureType_TypeSettings_BuyableVariations
  name: BuyableVariations
  nameWithType: FurnitureType.TypeSettings.BuyableVariations
  fullName: TinyLife.Objects.FurnitureType.TypeSettings.BuyableVariations
- uid: TinyLife.Skills.FoodType.GetBuyableVariations*
  commentId: Overload:TinyLife.Skills.FoodType.GetBuyableVariations
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_GetBuyableVariations_System_Int32_TinyLife_Skills_FoodType_ContainerType_
  name: GetBuyableVariations
  nameWithType: FoodType.GetBuyableVariations
  fullName: TinyLife.Skills.FoodType.GetBuyableVariations
- uid: System.Action{TinyLife.Objects.Furniture}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Furniture>[]
  nameWithType: Action<Furniture>[]
  fullName: System.Action<TinyLife.Objects.Furniture>[]
  nameWithType.vb: Action(Of Furniture)()
  fullName.vb: System.Action(Of TinyLife.Objects.Furniture)()
  name.vb: Action(Of Furniture)()
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
  - name: (
  - name: )
- uid: TinyLife.Skills.FoodType.SlicedTexture*
  commentId: Overload:TinyLife.Skills.FoodType.SlicedTexture
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_SlicedTexture_System_String_System_Int32_
  name: SlicedTexture
  nameWithType: FoodType.SlicedTexture
  fullName: TinyLife.Skills.FoodType.SlicedTexture
- uid: TinyLife.Skills.FoodType.PlatterTexture*
  commentId: Overload:TinyLife.Skills.FoodType.PlatterTexture
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_PlatterTexture_System_String_System_Int32_
  name: PlatterTexture
  nameWithType: FoodType.PlatterTexture
  fullName: TinyLife.Skills.FoodType.PlatterTexture
