### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.Project
  commentId: T:TinyLife.Goals.Project
  id: Project
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.Project.#ctor(TinyLife.Objects.Person,System.String,System.String)
  - TinyLife.Goals.Project.Archived
  - TinyLife.Goals.Project.Completed
  - TinyLife.Goals.Project.CreateActions(TinyLife.Goals.Project.ActionSettings)
  - TinyLife.Goals.Project.DailyPay
  - TinyLife.Goals.Project.DailyPayReductionFactor
  - TinyLife.Goals.Project.GetPossibleArguments(TinyLife.Actions.ActionInfo,System.String,System.Predicate{TinyLife.Goals.Project},System.Func{TinyLife.Goals.Project,System.String})
  - TinyLife.Goals.Project.MakeProgress(System.Single,System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  - TinyLife.Goals.Project.Name
  - TinyLife.Goals.Project.OnCompleted
  - TinyLife.Goals.Project.OnNewDay
  - TinyLife.Goals.Project.OpenNamePrompt(TinyLife.Actions.Action,System.String,System.Action{TinyLife.Goals.Project},System.String)
  - TinyLife.Goals.Project.OpenScrapPrompt(TinyLife.Actions.Action,System.String,System.String,System.Action)
  - TinyLife.Goals.Project.Person
  - TinyLife.Goals.Project.Progress
  - TinyLife.Goals.Project.Quality
  - TinyLife.Goals.Project.Remove
  - TinyLife.Goals.Project.SetDailyPay(System.Single,System.Single,System.Boolean)
  - TinyLife.Goals.Project.Type
  - TinyLife.Goals.Project.Validate(TinyLife.Objects.Person)
  langs:
  - csharp
  - vb
  name: Project
  nameWithType: Project
  fullName: TinyLife.Goals.Project
  type: Class
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A project is a thing that can be done, saved, completed and monetized by a <xref href="TinyLife.Goals.Project.Person" data-throw-if-not-resolved="false"></xref>.

    A project should be used for actions like writing and programming, where there isn't a physical, <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref>-based representation of the projecgt in the world (like with paintings).
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Project : JsonTypeSafeGenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class Project Inherits JsonTypeSafeGenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.Project.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Project.Type
  commentId: F:TinyLife.Goals.Project.Type
  id: Type
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Project.Type
  fullName: TinyLife.Goals.Project.Type
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    The type of this project, which is an arbitrary string.

    Book writing projects, for example, have the type set to "Book".
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly string Type
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public ReadOnly Type As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Project.Name
  commentId: F:TinyLife.Goals.Project.Name
  id: Name
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Project.Name
  fullName: TinyLife.Goals.Project.Name
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: The name of this project, which is usually user-entered using <xref href="TinyLife.Actions.Action.OpenTextPrompt(System.String%2cSystem.Action%7bSystem.String%7d%2cSystem.Predicate%7bSystem.String%7d%2cMLEM.Ui.Elements.TextField.Rule%2cSystem.String%2cSystem.Boolean%2cSystem.Nullable%7bSystem.Int32%7d%2cMLEM.Textures.TextureRegion%2cSystem.Action%7bTinyLife.Uis.CoveringGroup%2cMLEM.Ui.Elements.Panel%7d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly string Name
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public ReadOnly Name As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Project.Completed
  commentId: P:TinyLife.Goals.Project.Completed
  id: Completed
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: Project.Completed
  fullName: TinyLife.Goals.Project.Completed
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    Returns whether this project is completed.

    For default projects, this returns whether <xref href="TinyLife.Goals.Project.Progress" data-throw-if-not-resolved="false"></xref> is greater than or equal to 100.
  example: []
  syntax:
    content: public virtual bool Completed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property Completed As Boolean
  overload: TinyLife.Goals.Project.Completed*
- uid: TinyLife.Goals.Project.Quality
  commentId: F:TinyLife.Goals.Project.Quality
  id: Quality
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: Quality
  nameWithType: Project.Quality
  fullName: TinyLife.Goals.Project.Quality
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: The quality of this project, which defaults to <xref href="TinyLife.Skills.Quality.Terrible" data-throw-if-not-resolved="false"></xref>, and does not have to be used
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public Quality Quality
    return:
      type: TinyLife.Skills.Quality
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public Quality As Quality
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Goals.Project.Progress
  commentId: P:TinyLife.Goals.Project.Progress
  id: Progress
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: Project.Progress
  fullName: TinyLife.Goals.Project.Progress
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    The progress of this project, which can be an arbitrary number.

    Most projects in the default game use a progress between 0 and 100, at which point <xref href="TinyLife.Goals.Project.Completed" data-throw-if-not-resolved="false"></xref> will also return true by default.
  example: []
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TinyLife.Goals.Project.Progress*
- uid: TinyLife.Goals.Project.DailyPay
  commentId: P:TinyLife.Goals.Project.DailyPay
  id: DailyPay
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: DailyPay
  nameWithType: Project.DailyPay
  fullName: TinyLife.Goals.Project.DailyPay
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    The daily pay value of this project.

    If this is set, and <xref href="TinyLife.Goals.Project.DailyPayReductionFactor" data-throw-if-not-resolved="false"></xref> is also set, daily royalties will be paid to the <xref href="TinyLife.Goals.Project.Person" data-throw-if-not-resolved="false"></xref> that owns it.
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public float DailyPay { get; protected set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public Property DailyPay As Single
  overload: TinyLife.Goals.Project.DailyPay*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Goals.Project.DailyPayReductionFactor
  commentId: P:TinyLife.Goals.Project.DailyPayReductionFactor
  id: DailyPayReductionFactor
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: DailyPayReductionFactor
  nameWithType: Project.DailyPayReductionFactor
  fullName: TinyLife.Goals.Project.DailyPayReductionFactor
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    The amount by which the <xref href="TinyLife.Goals.Project.DailyPay" data-throw-if-not-resolved="false"></xref> of this project is reduced every day.

    If this value is set to 0.1, for example, the <xref href="TinyLife.Goals.Project.DailyPay" data-throw-if-not-resolved="false"></xref> will be multiplied by 1 - 0.1 (= 0.9) every day.
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public float DailyPayReductionFactor { get; protected set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public Property DailyPayReductionFactor As Single
  overload: TinyLife.Goals.Project.DailyPayReductionFactor*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
- uid: TinyLife.Goals.Project.Person
  commentId: P:TinyLife.Goals.Project.Person
  id: Person
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: Person
  nameWithType: Project.Person
  fullName: TinyLife.Goals.Project.Person
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: The person that owns this project
  example: []
  syntax:
    content: public Person Person { get; protected set; }
    parameters: []
    return:
      type: TinyLife.Objects.Person
    content.vb: Public Property Person As Person
  overload: TinyLife.Goals.Project.Person*
- uid: TinyLife.Goals.Project.Archived
  commentId: P:TinyLife.Goals.Project.Archived
  id: Archived
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: Archived
  nameWithType: Project.Archived
  fullName: TinyLife.Goals.Project.Archived
  type: Property
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: A property that stores whether this project is archived. A project is archived automatically in <xref href="TinyLife.Goals.Project.OnNewDay" data-throw-if-not-resolved="false"></xref> once its <xref href="TinyLife.Goals.Project.DailyPay" data-throw-if-not-resolved="false"></xref> reaches 0.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool Archived { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property Archived As Boolean
  overload: TinyLife.Goals.Project.Archived*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Project.#ctor(TinyLife.Objects.Person,System.String,System.String)
  commentId: M:TinyLife.Goals.Project.#ctor(TinyLife.Objects.Person,System.String,System.String)
  id: '#ctor(TinyLife.Objects.Person,System.String,System.String)'
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: Project(Person, string, string)
  nameWithType: Project.Project(Person, string, string)
  fullName: TinyLife.Goals.Project.Project(TinyLife.Objects.Person, string, string)
  type: Constructor
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: Creates a new project with the given settings
  example: []
  syntax:
    content: public Project(Person person, string type, string name)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person that owns this project
    - id: type
      type: System.String
      description: The type of the project
    - id: name
      type: System.String
      description: The name of the project
    content.vb: Public Sub New(person As Person, type As String, name As String)
  overload: TinyLife.Goals.Project.#ctor*
  nameWithType.vb: Project.New(Person, String, String)
  fullName.vb: TinyLife.Goals.Project.New(TinyLife.Objects.Person, String, String)
  name.vb: New(Person, String, String)
- uid: TinyLife.Goals.Project.Validate(TinyLife.Objects.Person)
  commentId: M:TinyLife.Goals.Project.Validate(TinyLife.Objects.Person)
  id: Validate(TinyLife.Objects.Person)
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: Validate(Person)
  nameWithType: Project.Validate(Person)
  fullName: TinyLife.Goals.Project.Validate(TinyLife.Objects.Person)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: Validates this project, setting the <xref href="TinyLife.Goals.Project.Person" data-throw-if-not-resolved="false"></xref> that owns it after the game is loaded.
  example: []
  syntax:
    content: public virtual bool Validate(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person that owns this project
    return:
      type: System.Boolean
      description: Whether this project is considered valid
    content.vb: Public Overridable Function Validate(person As Person) As Boolean
  overload: TinyLife.Goals.Project.Validate*
- uid: TinyLife.Goals.Project.MakeProgress(System.Single,System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Goals.Project.MakeProgress(System.Single,System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  id: MakeProgress(System.Single,System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: MakeProgress(float, float, ActionInfo, SkillType, float)
  nameWithType: Project.MakeProgress(float, float, ActionInfo, SkillType, float)
  fullName: TinyLife.Goals.Project.MakeProgress(float, float, TinyLife.Actions.ActionInfo, TinyLife.Skills.SkillType, float)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: Makes progress on the project, updating the <xref href="TinyLife.Goals.Project.Progress" data-throw-if-not-resolved="false"></xref> value based on the <xref href="TinyLife.Goals.Project.Person" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Skills.Skill" data-throw-if-not-resolved="false"></xref> and general efficiency modifier
  example: []
  syntax:
    content: public virtual void MakeProgress(float amount, float speedMultiplier, ActionInfo info = null, SkillType skill = null, float levelModifier = 0.1)
    parameters:
    - id: amount
      type: System.Single
      description: The amount to add to the <xref href="TinyLife.Goals.Project.Progress" data-throw-if-not-resolved="false"></xref>
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action informatio nthat optionally influences progress gain using <xref href="TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single%2cTinyLife.Actions.ActionInfo%2cTinyLife.Skills.SkillType%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
    - id: skill
      type: TinyLife.Skills.SkillType
      description: The (optional) skill that influences progress gain using <xref href="TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single%2cTinyLife.Actions.ActionInfo%2cTinyLife.Skills.SkillType%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
    - id: levelModifier
      type: System.Single
      description: The (optional) amount that each level of the <code class="paramref">skill</code> influences progress gain. Defaults to 0.1.
    content.vb: Public Overridable Sub MakeProgress(amount As Single, speedMultiplier As Single, info As ActionInfo = Nothing, skill As SkillType = Nothing, levelModifier As Single = 0.1)
  overload: TinyLife.Goals.Project.MakeProgress*
  nameWithType.vb: Project.MakeProgress(Single, Single, ActionInfo, SkillType, Single)
  fullName.vb: TinyLife.Goals.Project.MakeProgress(Single, Single, TinyLife.Actions.ActionInfo, TinyLife.Skills.SkillType, Single)
  name.vb: MakeProgress(Single, Single, ActionInfo, SkillType, Single)
- uid: TinyLife.Goals.Project.Remove
  commentId: M:TinyLife.Goals.Project.Remove
  id: Remove
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: Remove()
  nameWithType: Project.Remove()
  fullName: TinyLife.Goals.Project.Remove()
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: Removes this project from the <xref href="TinyLife.Goals.Project.Person" data-throw-if-not-resolved="false"></xref>'s project list, effectively deleting it
  example: []
  syntax:
    content: public virtual void Remove()
    content.vb: Public Overridable Sub Remove()
  overload: TinyLife.Goals.Project.Remove*
- uid: TinyLife.Goals.Project.OnNewDay
  commentId: M:TinyLife.Goals.Project.OnNewDay
  id: OnNewDay
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: OnNewDay()
  nameWithType: Project.OnNewDay()
  fullName: TinyLife.Goals.Project.OnNewDay()
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: This method gets called when a new day is reached. By default, this method reduces the <xref href="TinyLife.Goals.Project.DailyPay" data-throw-if-not-resolved="false"></xref> by the <xref href="TinyLife.Goals.Project.DailyPayReductionFactor" data-throw-if-not-resolved="false"></xref> and sets <xref href="TinyLife.Goals.Project.Archived" data-throw-if-not-resolved="false"></xref> to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <xref href="TinyLife.Goals.Project.DailyPay" data-throw-if-not-resolved="false"></xref> goes below 1.
  example: []
  syntax:
    content: public virtual void OnNewDay()
    content.vb: Public Overridable Sub OnNewDay()
  overload: TinyLife.Goals.Project.OnNewDay*
- uid: TinyLife.Goals.Project.OnCompleted
  commentId: M:TinyLife.Goals.Project.OnCompleted
  id: OnCompleted
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: OnCompleted()
  nameWithType: Project.OnCompleted()
  fullName: TinyLife.Goals.Project.OnCompleted()
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A method called automatically when <xref href="TinyLife.Goals.Project.Completed" data-throw-if-not-resolved="false"></xref> turns to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> after <xref href="TinyLife.Goals.Project.Progress" data-throw-if-not-resolved="false"></xref> changes.

    Note that, if <xref href="TinyLife.Goals.Project.Completed" data-throw-if-not-resolved="false"></xref> has a custom implementation, this method will respect that.
  example: []
  syntax:
    content: protected virtual void OnCompleted()
    content.vb: Protected Overridable Sub OnCompleted()
  overload: TinyLife.Goals.Project.OnCompleted*
- uid: TinyLife.Goals.Project.SetDailyPay(System.Single,System.Single,System.Boolean)
  commentId: M:TinyLife.Goals.Project.SetDailyPay(System.Single,System.Single,System.Boolean)
  id: SetDailyPay(System.Single,System.Single,System.Boolean)
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: SetDailyPay(float, float, bool)
  nameWithType: Project.SetDailyPay(float, float, bool)
  fullName: TinyLife.Goals.Project.SetDailyPay(float, float, bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    Sets the daily pay amount of this project, optionally based on its <xref href="TinyLife.Goals.Project.Quality" data-throw-if-not-resolved="false"></xref>.

    If <code class="paramref">influencedByQuality</code> is true, the daily pay and daily reduction factor will be modified to suit the quality better.
  example: []
  syntax:
    content: public void SetDailyPay(float amount, float dailyReductionFactor, bool influencedByQuality = true)
    parameters:
    - id: amount
      type: System.Single
      description: The amount to pay daily
    - id: dailyReductionFactor
      type: System.Single
      description: The amount that the daily pay should be reduced by. <code class="paramref">amount</code> is multiplied with 1 - dailyReductionFactor every day.
    - id: influencedByQuality
      type: System.Boolean
      description: Whether the current <xref href="TinyLife.Goals.Project.Quality" data-throw-if-not-resolved="false"></xref> should have an effect on the pay
    content.vb: Public Sub SetDailyPay(amount As Single, dailyReductionFactor As Single, influencedByQuality As Boolean = True)
  overload: TinyLife.Goals.Project.SetDailyPay*
  nameWithType.vb: Project.SetDailyPay(Single, Single, Boolean)
  fullName.vb: TinyLife.Goals.Project.SetDailyPay(Single, Single, Boolean)
  name.vb: SetDailyPay(Single, Single, Boolean)
- uid: TinyLife.Goals.Project.CreateActions(TinyLife.Goals.Project.ActionSettings)
  commentId: M:TinyLife.Goals.Project.CreateActions(TinyLife.Goals.Project.ActionSettings)
  id: CreateActions(TinyLife.Goals.Project.ActionSettings)
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: CreateActions(ActionSettings)
  nameWithType: Project.CreateActions(Project.ActionSettings)
  fullName: TinyLife.Goals.Project.CreateActions(TinyLife.Goals.Project.ActionSettings)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    Creates a set of action settings (which can be registered using <xref href="TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)" data-throw-if-not-resolved="false"></xref>) that involve creating, continuing and scrapping projects of a specified type.

    It is recommended to use the provided non-default constructor of <xref href="TinyLife.Goals.Project.ActionSettings" data-throw-if-not-resolved="false"></xref> for this method.
  example: []
  syntax:
    content: public static IEnumerable<ActionType.TypeSettings> CreateActions(Project.ActionSettings settings)
    parameters:
    - id: settings
      type: TinyLife.Goals.Project.ActionSettings
      description: The action settings
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionType.TypeSettings}
      description: A set of type settings for a start, continue and scrap action
    content.vb: Public Shared Function CreateActions(settings As Project.ActionSettings) As IEnumerable(Of ActionType.TypeSettings)
  overload: TinyLife.Goals.Project.CreateActions*
- uid: TinyLife.Goals.Project.GetPossibleArguments(TinyLife.Actions.ActionInfo,System.String,System.Predicate{TinyLife.Goals.Project},System.Func{TinyLife.Goals.Project,System.String})
  commentId: M:TinyLife.Goals.Project.GetPossibleArguments(TinyLife.Actions.ActionInfo,System.String,System.Predicate{TinyLife.Goals.Project},System.Func{TinyLife.Goals.Project,System.String})
  id: GetPossibleArguments(TinyLife.Actions.ActionInfo,System.String,System.Predicate{TinyLife.Goals.Project},System.Func{TinyLife.Goals.Project,System.String})
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: GetPossibleArguments(ActionInfo, string, Predicate<Project>, Func<Project, string>)
  nameWithType: Project.GetPossibleArguments(ActionInfo, string, Predicate<Project>, Func<Project, string>)
  fullName: TinyLife.Goals.Project.GetPossibleArguments(TinyLife.Actions.ActionInfo, string, System.Predicate<TinyLife.Goals.Project>, System.Func<TinyLife.Goals.Project, string>)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    Returns the varieties that a <xref href="TinyLife.Goals.Project.Person" data-throw-if-not-resolved="false"></xref> has at their disposal for a given project <xref href="TinyLife.Goals.Project.Type" data-throw-if-not-resolved="false"></xref>.

    The varieties returned include all of the projects that the <xref href="TinyLife.Goals.Project.Person" data-throw-if-not-resolved="false"></xref> has in their project list.
  example: []
  syntax:
    content: public static IEnumerable<ActionArgument> GetPossibleArguments(ActionInfo info, string type, Predicate<Project> condition = null, Func<Project, string> projectDisplayName = null)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: type
      type: System.String
      description: The type of projects to return varieties for
    - id: condition
      type: System.Predicate{TinyLife.Goals.Project}
      description: A condition that determines whether a project should be turned into a variety
    - id: projectDisplayName
      type: System.Func{TinyLife.Goals.Project,System.String}
      description: A function that determines the display name of each project, or null to display its <xref href="TinyLife.Goals.Project.Name" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionArgument}
      description: A set of action varieties
    content.vb: Public Shared Function GetPossibleArguments(info As ActionInfo, type As String, condition As Predicate(Of Project) = Nothing, projectDisplayName As Func(Of Project, String) = Nothing) As IEnumerable(Of ActionArgument)
  overload: TinyLife.Goals.Project.GetPossibleArguments*
  nameWithType.vb: Project.GetPossibleArguments(ActionInfo, String, Predicate(Of Project), Func(Of Project, String))
  fullName.vb: TinyLife.Goals.Project.GetPossibleArguments(TinyLife.Actions.ActionInfo, String, System.Predicate(Of TinyLife.Goals.Project), System.Func(Of TinyLife.Goals.Project, String))
  name.vb: GetPossibleArguments(ActionInfo, String, Predicate(Of Project), Func(Of Project, String))
- uid: TinyLife.Goals.Project.OpenNamePrompt(TinyLife.Actions.Action,System.String,System.Action{TinyLife.Goals.Project},System.String)
  commentId: M:TinyLife.Goals.Project.OpenNamePrompt(TinyLife.Actions.Action,System.String,System.Action{TinyLife.Goals.Project},System.String)
  id: OpenNamePrompt(TinyLife.Actions.Action,System.String,System.Action{TinyLife.Goals.Project},System.String)
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: OpenNamePrompt(Action, string, Action<Project>, string)
  nameWithType: Project.OpenNamePrompt(Action, string, Action<Project>, string)
  fullName: TinyLife.Goals.Project.OpenNamePrompt(TinyLife.Actions.Action, string, System.Action<TinyLife.Goals.Project>, string)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A helper method that uses <xref href="TinyLife.Actions.Action.OpenTextPrompt(System.String%2cSystem.Action%7bSystem.String%7d%2cSystem.Predicate%7bSystem.String%7d%2cMLEM.Ui.Elements.TextField.Rule%2cSystem.String%2cSystem.Boolean%2cSystem.Nullable%7bSystem.Int32%7d%2cMLEM.Textures.TextureRegion%2cSystem.Action%7bTinyLife.Uis.CoveringGroup%2cMLEM.Ui.Elements.Panel%7d)" data-throw-if-not-resolved="false"></xref> to open a prompt that the player can enter a project name in when starting a new project.

    Additionally, a (random or single) <code class="paramref">defaultName</code> can be specified to fill the text field by default.
  example: []
  syntax:
    content: public static void OpenNamePrompt(Action action, string type, Action<Project> onNameChosen, string defaultName = null)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The action to open the prompt for.
    - id: type
      type: System.String
      description: The type of project to start and name.
    - id: onNameChosen
      type: System.Action{TinyLife.Goals.Project}
      description: An action that is invoked when the name is chosen and the project is started.
    - id: defaultName
      type: System.String
      description: The default name to fill the text field with.
    content.vb: Public Shared Sub OpenNamePrompt(action As Action, type As String, onNameChosen As Action(Of Project), defaultName As String = Nothing)
  overload: TinyLife.Goals.Project.OpenNamePrompt*
  nameWithType.vb: Project.OpenNamePrompt(Action, String, Action(Of Project), String)
  fullName.vb: TinyLife.Goals.Project.OpenNamePrompt(TinyLife.Actions.Action, String, System.Action(Of TinyLife.Goals.Project), String)
  name.vb: OpenNamePrompt(Action, String, Action(Of Project), String)
- uid: TinyLife.Goals.Project.OpenScrapPrompt(TinyLife.Actions.Action,System.String,System.String,System.Action)
  commentId: M:TinyLife.Goals.Project.OpenScrapPrompt(TinyLife.Actions.Action,System.String,System.String,System.Action)
  id: OpenScrapPrompt(TinyLife.Actions.Action,System.String,System.String,System.Action)
  parent: TinyLife.Goals.Project
  langs:
  - csharp
  - vb
  name: OpenScrapPrompt(Action, string, string, Action)
  nameWithType: Project.OpenScrapPrompt(Action, string, string, Action)
  fullName: TinyLife.Goals.Project.OpenScrapPrompt(TinyLife.Actions.Action, string, string, System.Action)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: A helper method that uses <xref href="TinyLife.Actions.Action.OpenTextPrompt(System.String%2cSystem.Action%7bSystem.String%7d%2cSystem.Predicate%7bSystem.String%7d%2cMLEM.Ui.Elements.TextField.Rule%2cSystem.String%2cSystem.Boolean%2cSystem.Nullable%7bSystem.Int32%7d%2cMLEM.Textures.TextureRegion%2cSystem.Action%7bTinyLife.Uis.CoveringGroup%2cMLEM.Ui.Elements.Panel%7d)" data-throw-if-not-resolved="false"></xref> to open a prompt for when a project should be scrapped by a player.
  example: []
  syntax:
    content: public static void OpenScrapPrompt(Action action, string type, string name, Action onScrapped = null)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The action to open the prompt for.
    - id: type
      type: System.String
      description: The type of project to scrap.
    - id: name
      type: System.String
      description: The name of the project to scrap.
    - id: onScrapped
      type: System.Action
      description: An action that is invoked when the project is scrapped.
    content.vb: Public Shared Sub OpenScrapPrompt(action As Action, type As String, name As String, onScrapped As Action = Nothing)
  overload: TinyLife.Goals.Project.OpenScrapPrompt*
  nameWithType.vb: Project.OpenScrapPrompt(Action, String, String, Action)
  fullName.vb: TinyLife.Goals.Project.OpenScrapPrompt(TinyLife.Actions.Action, String, String, System.Action)
  name.vb: OpenScrapPrompt(Action, String, String, Action)
references:
- uid: TinyLife.Goals.Project.Person
  commentId: P:TinyLife.Goals.Project.Person
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Person
  name: Person
  nameWithType: Project.Person
  fullName: TinyLife.Goals.Project.Person
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Goals.Project.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Project>(Project)
  nameWithType: Extensions.JsonCopy<Project>(Project)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.Project>(TinyLife.Goals.Project)
  nameWithType.vb: Extensions.JsonCopy(Of Project)(Project)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.Project)(TinyLife.Goals.Project)
  name.vb: JsonCopy(Of Project)(Project)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.Project)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.Project)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: )
  - name: (
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,System.Boolean,System.Nullable{System.Int32},MLEM.Textures.TextureRegion,System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel})
  commentId: M:TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,System.Boolean,System.Nullable{System.Int32},MLEM.Textures.TextureRegion,System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel})
  parent: TinyLife.Actions.Action
  isExternal: true
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_OpenTextPrompt_System_String_System_Action_System_String__System_Predicate_System_String__MLEM_Ui_Elements_TextField_Rule_System_String_System_Boolean_System_Nullable_System_Int32__MLEM_Textures_TextureRegion_System_Action_TinyLife_Uis_CoveringGroup_MLEM_Ui_Elements_Panel__
  name: OpenTextPrompt(string, Action<string>, Predicate<string>, Rule, string, bool, int?, TextureRegion, Action<CoveringGroup, Panel>)
  nameWithType: Action.OpenTextPrompt(string, Action<string>, Predicate<string>, TextField.Rule, string, bool, int?, TextureRegion, Action<CoveringGroup, Panel>)
  fullName: TinyLife.Actions.Action.OpenTextPrompt(string, System.Action<string>, System.Predicate<string>, MLEM.Ui.Elements.TextField.Rule, string, bool, int?, MLEM.Textures.TextureRegion, System.Action<TinyLife.Uis.CoveringGroup, MLEM.Ui.Elements.Panel>)
  nameWithType.vb: Action.OpenTextPrompt(String, Action(Of String), Predicate(Of String), TextField.Rule, String, Boolean, Integer?, TextureRegion, Action(Of CoveringGroup, Panel))
  fullName.vb: TinyLife.Actions.Action.OpenTextPrompt(String, System.Action(Of String), System.Predicate(Of String), MLEM.Ui.Elements.TextField.Rule, String, Boolean, Integer?, MLEM.Textures.TextureRegion, System.Action(Of TinyLife.Uis.CoveringGroup, MLEM.Ui.Elements.Panel))
  name.vb: OpenTextPrompt(String, Action(Of String), Predicate(Of String), Rule, String, Boolean, Integer?, TextureRegion, Action(Of CoveringGroup, Panel))
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,System.Boolean,System.Nullable{System.Int32},MLEM.Textures.TextureRegion,System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel})
    name: OpenTextPrompt
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_OpenTextPrompt_System_String_System_Action_System_String__System_Predicate_System_String__MLEM_Ui_Elements_TextField_Rule_System_String_System_Boolean_System_Nullable_System_Int32__MLEM_Textures_TextureRegion_System_Action_TinyLife_Uis_CoveringGroup_MLEM_Ui_Elements_Panel__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: Rule
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
    href: TinyLife.Uis.CoveringGroup.html
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,System.Boolean,System.Nullable{System.Int32},MLEM.Textures.TextureRegion,System.Action{TinyLife.Uis.CoveringGroup,MLEM.Ui.Elements.Panel})
    name: OpenTextPrompt
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_OpenTextPrompt_System_String_System_Action_System_String__System_Predicate_System_String__MLEM_Ui_Elements_TextField_Rule_System_String_System_Boolean_System_Nullable_System_Int32__MLEM_Textures_TextureRegion_System_Action_TinyLife_Uis_CoveringGroup_MLEM_Ui_Elements_Panel__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: Rule
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
    href: TinyLife.Uis.CoveringGroup.html
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: )
  - name: )
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: TinyLife.Goals.Project.Progress
  commentId: P:TinyLife.Goals.Project.Progress
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Progress
  name: Progress
  nameWithType: Project.Progress
  fullName: TinyLife.Goals.Project.Progress
- uid: TinyLife.Goals.Project.Completed*
  commentId: Overload:TinyLife.Goals.Project.Completed
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Completed
  name: Completed
  nameWithType: Project.Completed
  fullName: TinyLife.Goals.Project.Completed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Skills.Quality.Terrible
  commentId: F:TinyLife.Skills.Quality.Terrible
  href: TinyLife.Skills.Quality.html#TinyLife_Skills_Quality_Terrible
  name: Terrible
  nameWithType: Quality.Terrible
  fullName: TinyLife.Skills.Quality.Terrible
- uid: TinyLife.Skills.Quality
  commentId: T:TinyLife.Skills.Quality
  parent: TinyLife.Skills
  href: TinyLife.Skills.Quality.html
  name: Quality
  nameWithType: Quality
  fullName: TinyLife.Skills.Quality
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: TinyLife.Goals.Project.Completed
  commentId: P:TinyLife.Goals.Project.Completed
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Completed
  name: Completed
  nameWithType: Project.Completed
  fullName: TinyLife.Goals.Project.Completed
- uid: TinyLife.Goals.Project.Progress*
  commentId: Overload:TinyLife.Goals.Project.Progress
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Progress
  name: Progress
  nameWithType: Project.Progress
  fullName: TinyLife.Goals.Project.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Goals.Project.DailyPayReductionFactor
  commentId: P:TinyLife.Goals.Project.DailyPayReductionFactor
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_DailyPayReductionFactor
  name: DailyPayReductionFactor
  nameWithType: Project.DailyPayReductionFactor
  fullName: TinyLife.Goals.Project.DailyPayReductionFactor
- uid: TinyLife.Goals.Project.DailyPay*
  commentId: Overload:TinyLife.Goals.Project.DailyPay
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_DailyPay
  name: DailyPay
  nameWithType: Project.DailyPay
  fullName: TinyLife.Goals.Project.DailyPay
- uid: TinyLife.Goals.Project.DailyPay
  commentId: P:TinyLife.Goals.Project.DailyPay
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_DailyPay
  name: DailyPay
  nameWithType: Project.DailyPay
  fullName: TinyLife.Goals.Project.DailyPay
- uid: TinyLife.Goals.Project.DailyPayReductionFactor*
  commentId: Overload:TinyLife.Goals.Project.DailyPayReductionFactor
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_DailyPayReductionFactor
  name: DailyPayReductionFactor
  nameWithType: Project.DailyPayReductionFactor
  fullName: TinyLife.Goals.Project.DailyPayReductionFactor
- uid: TinyLife.Goals.Project.Person*
  commentId: Overload:TinyLife.Goals.Project.Person
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Person
  name: Person
  nameWithType: Project.Person
  fullName: TinyLife.Goals.Project.Person
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Goals.Project.OnNewDay
  commentId: M:TinyLife.Goals.Project.OnNewDay
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OnNewDay
  name: OnNewDay()
  nameWithType: Project.OnNewDay()
  fullName: TinyLife.Goals.Project.OnNewDay()
  spec.csharp:
  - uid: TinyLife.Goals.Project.OnNewDay
    name: OnNewDay
    href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OnNewDay
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.Project.OnNewDay
    name: OnNewDay
    href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OnNewDay
  - name: (
  - name: )
- uid: TinyLife.Goals.Project.Archived*
  commentId: Overload:TinyLife.Goals.Project.Archived
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Archived
  name: Archived
  nameWithType: Project.Archived
  fullName: TinyLife.Goals.Project.Archived
- uid: TinyLife.Goals.Project.#ctor*
  commentId: Overload:TinyLife.Goals.Project.#ctor
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project__ctor_TinyLife_Objects_Person_System_String_System_String_
  name: Project
  nameWithType: Project.Project
  fullName: TinyLife.Goals.Project.Project
  nameWithType.vb: Project.New
  fullName.vb: TinyLife.Goals.Project.New
  name.vb: New
- uid: TinyLife.Goals.Project.Validate*
  commentId: Overload:TinyLife.Goals.Project.Validate
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Validate_TinyLife_Objects_Person_
  name: Validate
  nameWithType: Project.Validate
  fullName: TinyLife.Goals.Project.Validate
- uid: TinyLife.Skills.Skill
  commentId: T:TinyLife.Skills.Skill
  parent: TinyLife.Skills
  href: TinyLife.Skills.Skill.html
  name: Skill
  nameWithType: Skill
  fullName: TinyLife.Skills.Skill
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  href: TinyLife.GameImpl.html#TinyLife_GameImpl_Speed
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
- uid: TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  parent: TinyLife.Objects.PersonLike
  isExternal: true
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetEfficiencyModifier_System_Single_TinyLife_Actions_ActionInfo_TinyLife_Skills_SkillType_System_Single_
  name: GetEfficiencyModifier(float, ActionInfo, SkillType, float)
  nameWithType: PersonLike.GetEfficiencyModifier(float, ActionInfo, SkillType, float)
  fullName: TinyLife.Objects.PersonLike.GetEfficiencyModifier(float, TinyLife.Actions.ActionInfo, TinyLife.Skills.SkillType, float)
  nameWithType.vb: PersonLike.GetEfficiencyModifier(Single, ActionInfo, SkillType, Single)
  fullName.vb: TinyLife.Objects.PersonLike.GetEfficiencyModifier(Single, TinyLife.Actions.ActionInfo, TinyLife.Skills.SkillType, Single)
  name.vb: GetEfficiencyModifier(Single, ActionInfo, SkillType, Single)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetEfficiencyModifier_System_Single_TinyLife_Actions_ActionInfo_TinyLife_Skills_SkillType_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetEfficiencyModifier_System_Single_TinyLife_Actions_ActionInfo_TinyLife_Skills_SkillType_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Goals.Project.MakeProgress*
  commentId: Overload:TinyLife.Goals.Project.MakeProgress
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_MakeProgress_System_Single_System_Single_TinyLife_Actions_ActionInfo_TinyLife_Skills_SkillType_System_Single_
  name: MakeProgress
  nameWithType: Project.MakeProgress
  fullName: TinyLife.Goals.Project.MakeProgress
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionInfo.html
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  href: TinyLife.Skills.SkillType.html
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Goals.Project.Remove*
  commentId: Overload:TinyLife.Goals.Project.Remove
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Remove
  name: Remove
  nameWithType: Project.Remove
  fullName: TinyLife.Goals.Project.Remove
- uid: TinyLife.Goals.Project.Archived
  commentId: P:TinyLife.Goals.Project.Archived
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Archived
  name: Archived
  nameWithType: Project.Archived
  fullName: TinyLife.Goals.Project.Archived
- uid: TinyLife.Goals.Project.OnNewDay*
  commentId: Overload:TinyLife.Goals.Project.OnNewDay
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OnNewDay
  name: OnNewDay
  nameWithType: Project.OnNewDay
  fullName: TinyLife.Goals.Project.OnNewDay
- uid: TinyLife.Goals.Project.OnCompleted*
  commentId: Overload:TinyLife.Goals.Project.OnCompleted
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OnCompleted
  name: OnCompleted
  nameWithType: Project.OnCompleted
  fullName: TinyLife.Goals.Project.OnCompleted
- uid: TinyLife.Goals.Project.Quality
  commentId: F:TinyLife.Goals.Project.Quality
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Quality
  name: Quality
  nameWithType: Project.Quality
  fullName: TinyLife.Goals.Project.Quality
- uid: TinyLife.Goals.Project.SetDailyPay*
  commentId: Overload:TinyLife.Goals.Project.SetDailyPay
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_SetDailyPay_System_Single_System_Single_System_Boolean_
  name: SetDailyPay
  nameWithType: Project.SetDailyPay
  fullName: TinyLife.Goals.Project.SetDailyPay
- uid: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  commentId: M:TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_Register_TinyLife_Actions_ActionType_TypeSettings_
  name: Register(TypeSettings)
  nameWithType: ActionType.Register(ActionType.TypeSettings)
  fullName: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  spec.csharp:
  - uid: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
    name: Register
    href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_Register_TinyLife_Actions_ActionType_TypeSettings_
  - name: (
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
    name: Register
    href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_Register_TinyLife_Actions_ActionType_TypeSettings_
  - name: (
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
  - name: )
- uid: TinyLife.Goals.Project.ActionSettings
  commentId: T:TinyLife.Goals.Project.ActionSettings
  parent: TinyLife.Goals
  href: TinyLife.Goals.Project.html
  name: Project.ActionSettings
  nameWithType: Project.ActionSettings
  fullName: TinyLife.Goals.Project.ActionSettings
  spec.csharp:
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: .
  - uid: TinyLife.Goals.Project.ActionSettings
    name: ActionSettings
    href: TinyLife.Goals.Project.ActionSettings.html
  spec.vb:
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: .
  - uid: TinyLife.Goals.Project.ActionSettings
    name: ActionSettings
    href: TinyLife.Goals.Project.ActionSettings.html
- uid: TinyLife.Goals.Project.CreateActions*
  commentId: Overload:TinyLife.Goals.Project.CreateActions
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_CreateActions_TinyLife_Goals_Project_ActionSettings_
  name: CreateActions
  nameWithType: Project.CreateActions
  fullName: TinyLife.Goals.Project.CreateActions
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionType.TypeSettings}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionType.TypeSettings}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ActionType.TypeSettings>
  nameWithType: IEnumerable<ActionType.TypeSettings>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionType.TypeSettings>
  nameWithType.vb: IEnumerable(Of ActionType.TypeSettings)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionType.TypeSettings)
  name.vb: IEnumerable(Of ActionType.TypeSettings)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Goals.Project.Type
  commentId: F:TinyLife.Goals.Project.Type
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Type
  name: Type
  nameWithType: Project.Type
  fullName: TinyLife.Goals.Project.Type
- uid: TinyLife.Goals.Project.Name
  commentId: F:TinyLife.Goals.Project.Name
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_Name
  name: Name
  nameWithType: Project.Name
  fullName: TinyLife.Goals.Project.Name
- uid: TinyLife.Goals.Project.GetPossibleArguments*
  commentId: Overload:TinyLife.Goals.Project.GetPossibleArguments
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_GetPossibleArguments_TinyLife_Actions_ActionInfo_System_String_System_Predicate_TinyLife_Goals_Project__System_Func_TinyLife_Goals_Project_System_String__
  name: GetPossibleArguments
  nameWithType: Project.GetPossibleArguments
  fullName: TinyLife.Goals.Project.GetPossibleArguments
- uid: System.Predicate{TinyLife.Goals.Project}
  commentId: T:System.Predicate{TinyLife.Goals.Project}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<Project>
  nameWithType: Predicate<Project>
  fullName: System.Predicate<TinyLife.Goals.Project>
  nameWithType.vb: Predicate(Of Project)
  fullName.vb: System.Predicate(Of TinyLife.Goals.Project)
  name.vb: Predicate(Of Project)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: )
- uid: System.Func{TinyLife.Goals.Project,System.String}
  commentId: T:System.Func{TinyLife.Goals.Project,System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Project, string>
  nameWithType: Func<Project, string>
  fullName: System.Func<TinyLife.Goals.Project, string>
  nameWithType.vb: Func(Of Project, String)
  fullName.vb: System.Func(Of TinyLife.Goals.Project, String)
  name.vb: Func(Of Project, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionArgument}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionArgument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ActionArgument>
  nameWithType: IEnumerable<ActionArgument>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionArgument>
  nameWithType.vb: IEnumerable(Of ActionArgument)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionArgument)
  name.vb: IEnumerable(Of ActionArgument)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Goals.Project.OpenNamePrompt*
  commentId: Overload:TinyLife.Goals.Project.OpenNamePrompt
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OpenNamePrompt_TinyLife_Actions_Action_System_String_System_Action_TinyLife_Goals_Project__System_String_
  name: OpenNamePrompt
  nameWithType: Project.OpenNamePrompt
  fullName: TinyLife.Goals.Project.OpenNamePrompt
- uid: System.Action{TinyLife.Goals.Project}
  commentId: T:System.Action{TinyLife.Goals.Project}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Project>
  nameWithType: Action<Project>
  fullName: System.Action<TinyLife.Goals.Project>
  nameWithType.vb: Action(Of Project)
  fullName.vb: System.Action(Of TinyLife.Goals.Project)
  name.vb: Action(Of Project)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Project
    name: Project
    href: TinyLife.Goals.Project.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Goals.Project.OpenScrapPrompt*
  commentId: Overload:TinyLife.Goals.Project.OpenScrapPrompt
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OpenScrapPrompt_TinyLife_Actions_Action_System_String_System_String_System_Action_
  name: OpenScrapPrompt
  nameWithType: Project.OpenScrapPrompt
  fullName: TinyLife.Goals.Project.OpenScrapPrompt
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
