### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  id: GoalSet
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.GoalSet.#ctor(TinyLife.Goals.GoalSetInfo)
  - TinyLife.Goals.GoalSet.GetDisplay(MLEM.Ui.Anchor,System.Boolean)
  - TinyLife.Goals.GoalSet.GetGoal``1
  - TinyLife.Goals.GoalSet.GetGoal``1(System.String)
  - TinyLife.Goals.GoalSet.GetGoals``1
  - TinyLife.Goals.GoalSet.GetProgress
  - TinyLife.Goals.GoalSet.Goals
  - TinyLife.Goals.GoalSet.Info
  - TinyLife.Goals.GoalSet.IsCompleted
  - TinyLife.Goals.GoalSet.Reset
  - TinyLife.Goals.GoalSet.Validate(TinyLife.Goals.GoalSetInfo)
  langs:
  - csharp
  - vb
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    A goal set is a set of <xref href="TinyLife.Goals.Goal" data-throw-if-not-resolved="false"></xref> instances that manages them.

    Goal sets are used by a <xref href="TinyLife.Goals.Job" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Goals.Job.DailyTasks" data-throw-if-not-resolved="false"></xref> as well as by the <xref href="TinyLife.Goals.LifeGoal" data-throw-if-not-resolved="false"></xref> system.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class GoalSet : JsonTypeSafeGenericDataHolder, IGenericDataHolder, IGoalTriggerable
    content.vb: >-
      <DataContract>

      Public Class GoalSet Inherits JsonTypeSafeGenericDataHolder Implements IGenericDataHolder, IGoalTriggerable
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  - TinyLife.Goals.IGoalTriggerable
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.GoalSet.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.GoalSet.Goals
  commentId: P:TinyLife.Goals.GoalSet.Goals
  id: Goals
  parent: TinyLife.Goals.GoalSet
  langs:
  - csharp
  - vb
  name: Goals
  nameWithType: GoalSet.Goals
  fullName: TinyLife.Goals.GoalSet.Goals
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The goals in this goal set.
  example: []
  syntax:
    content: public ICollection<Goal> Goals { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{TinyLife.Goals.Goal}
    content.vb: Public ReadOnly Property Goals As ICollection(Of Goal)
  overload: TinyLife.Goals.GoalSet.Goals*
- uid: TinyLife.Goals.GoalSet.Info
  commentId: P:TinyLife.Goals.GoalSet.Info
  id: Info
  parent: TinyLife.Goals.GoalSet
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: GoalSet.Info
  fullName: TinyLife.Goals.GoalSet.Info
  type: Property
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: The underlying <xref href="TinyLife.Goals.GoalSetInfo" data-throw-if-not-resolved="false"></xref> that this goal set was constructed from
  example: []
  syntax:
    content: public GoalSetInfo Info { get; }
    parameters: []
    return:
      type: TinyLife.Goals.GoalSetInfo
    content.vb: Public Property Info As GoalSetInfo
  overload: TinyLife.Goals.GoalSet.Info*
- uid: TinyLife.Goals.GoalSet.#ctor(TinyLife.Goals.GoalSetInfo)
  commentId: M:TinyLife.Goals.GoalSet.#ctor(TinyLife.Goals.GoalSetInfo)
  id: '#ctor(TinyLife.Goals.GoalSetInfo)'
  parent: TinyLife.Goals.GoalSet
  langs:
  - csharp
  - vb
  name: GoalSet(GoalSetInfo)
  nameWithType: GoalSet.GoalSet(GoalSetInfo)
  fullName: TinyLife.Goals.GoalSet.GoalSet(TinyLife.Goals.GoalSetInfo)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Creates a new goal set with the given settings
  example: []
  syntax:
    content: public GoalSet(GoalSetInfo info)
    parameters:
    - id: info
      type: TinyLife.Goals.GoalSetInfo
      description: The underlying goal set info
    content.vb: Public Sub New(info As GoalSetInfo)
  overload: TinyLife.Goals.GoalSet.#ctor*
  nameWithType.vb: GoalSet.New(GoalSetInfo)
  fullName.vb: TinyLife.Goals.GoalSet.New(TinyLife.Goals.GoalSetInfo)
  name.vb: New(GoalSetInfo)
- uid: TinyLife.Goals.GoalSet.GetProgress
  commentId: M:TinyLife.Goals.GoalSet.GetProgress
  id: GetProgress
  parent: TinyLife.Goals.GoalSet
  langs:
  - csharp
  - vb
  name: GetProgress()
  nameWithType: GoalSet.GetProgress()
  fullName: TinyLife.Goals.GoalSet.GetProgress()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Returns the progress of this goal set as a percentage between 0 and 1, which is a combination of the <xref href="TinyLife.Goals.Goal.GetProgress" data-throw-if-not-resolved="false"></xref> values from the underlying <xref href="TinyLife.Goals.Goal" data-throw-if-not-resolved="false"></xref> instances
  example: []
  syntax:
    content: public float GetProgress()
    return:
      type: System.Single
      description: The progress, between 0 and 1
    content.vb: Public Function GetProgress() As Single
  overload: TinyLife.Goals.GoalSet.GetProgress*
- uid: TinyLife.Goals.GoalSet.IsCompleted
  commentId: M:TinyLife.Goals.GoalSet.IsCompleted
  id: IsCompleted
  parent: TinyLife.Goals.GoalSet
  langs:
  - csharp
  - vb
  name: IsCompleted()
  nameWithType: GoalSet.IsCompleted()
  fullName: TinyLife.Goals.GoalSet.IsCompleted()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Returns whether this goal set is completed.

    This returns whether <xref href="TinyLife.Goals.GoalSet.GetProgress" data-throw-if-not-resolved="false"></xref> is greater than or equal to 1.
  example: []
  syntax:
    content: public bool IsCompleted()
    return:
      type: System.Boolean
      description: Whether this goal set is completed
    content.vb: Public Function IsCompleted() As Boolean
  overload: TinyLife.Goals.GoalSet.IsCompleted*
- uid: TinyLife.Goals.GoalSet.Reset
  commentId: M:TinyLife.Goals.GoalSet.Reset
  id: Reset
  parent: TinyLife.Goals.GoalSet
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: GoalSet.Reset()
  fullName: TinyLife.Goals.GoalSet.Reset()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Resets this goal set by calling the <xref href="TinyLife.Goals.Goal.Reset" data-throw-if-not-resolved="false"></xref> methods of the underlying goals
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: TinyLife.Goals.GoalSet.Reset*
- uid: TinyLife.Goals.GoalSet.GetGoals``1
  commentId: M:TinyLife.Goals.GoalSet.GetGoals``1
  id: GetGoals``1
  parent: TinyLife.Goals.GoalSet
  langs:
  - csharp
  - vb
  name: GetGoals<T>()
  nameWithType: GoalSet.GetGoals<T>()
  fullName: TinyLife.Goals.GoalSet.GetGoals<T>()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Returns a set of all of the <xref href="TinyLife.Goals.Goal" data-throw-if-not-resolved="false"></xref> instnaces that are contained in this goal set, optionally matching the specified type parameter <code class="typeparamref">T</code>
  example: []
  syntax:
    content: 'public IEnumerable<T> GetGoals<T>() where T : Goal'
    typeParameters:
    - id: T
      description: The type of goal to return
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The goals in this goal set
    content.vb: Public Function GetGoals(Of T As Goal)() As IEnumerable(Of T)
  overload: TinyLife.Goals.GoalSet.GetGoals*
  nameWithType.vb: GoalSet.GetGoals(Of T)()
  fullName.vb: TinyLife.Goals.GoalSet.GetGoals(Of T)()
  name.vb: GetGoals(Of T)()
- uid: TinyLife.Goals.GoalSet.GetGoal``1(System.String)
  commentId: M:TinyLife.Goals.GoalSet.GetGoal``1(System.String)
  id: GetGoal``1(System.String)
  parent: TinyLife.Goals.GoalSet
  langs:
  - csharp
  - vb
  name: GetGoal<T>(string)
  nameWithType: GoalSet.GetGoal<T>(string)
  fullName: TinyLife.Goals.GoalSet.GetGoal<T>(string)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Returns the <xref href="TinyLife.Goals.Goal" data-throw-if-not-resolved="false"></xref> instance in this goal set with the given name, or null if there is no matching goal
  example: []
  syntax:
    content: 'public T GetGoal<T>(string name) where T : Goal'
    parameters:
    - id: name
      type: System.String
      description: The name of the goal to return
    typeParameters:
    - id: T
      description: The type of goal to return
    return:
      type: '{T}'
      description: The goal with the given name and type
    content.vb: Public Function GetGoal(Of T As Goal)(name As String) As T
  overload: TinyLife.Goals.GoalSet.GetGoal*
  nameWithType.vb: GoalSet.GetGoal(Of T)(String)
  fullName.vb: TinyLife.Goals.GoalSet.GetGoal(Of T)(String)
  name.vb: GetGoal(Of T)(String)
- uid: TinyLife.Goals.GoalSet.GetGoal``1
  commentId: M:TinyLife.Goals.GoalSet.GetGoal``1
  id: GetGoal``1
  parent: TinyLife.Goals.GoalSet
  langs:
  - csharp
  - vb
  name: GetGoal<T>()
  nameWithType: GoalSet.GetGoal<T>()
  fullName: TinyLife.Goals.GoalSet.GetGoal<T>()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Returns the single <xref href="TinyLife.Goals.Goal" data-throw-if-not-resolved="false"></xref> instance in this goal set of the given type.

    If there are more goals of the given type, this method will throw an <xref href="System.InvalidOperationException" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public T GetGoal<T>() where T : Goal'
    typeParameters:
    - id: T
      description: The type of goal to return
    return:
      type: '{T}'
      description: The single goal of the given type
    content.vb: Public Function GetGoal(Of T As Goal)() As T
  overload: TinyLife.Goals.GoalSet.GetGoal*
  nameWithType.vb: GoalSet.GetGoal(Of T)()
  fullName.vb: TinyLife.Goals.GoalSet.GetGoal(Of T)()
  name.vb: GetGoal(Of T)()
- uid: TinyLife.Goals.GoalSet.GetDisplay(MLEM.Ui.Anchor,System.Boolean)
  commentId: M:TinyLife.Goals.GoalSet.GetDisplay(MLEM.Ui.Anchor,System.Boolean)
  id: GetDisplay(MLEM.Ui.Anchor,System.Boolean)
  parent: TinyLife.Goals.GoalSet
  langs:
  - csharp
  - vb
  name: GetDisplay(Anchor, bool)
  nameWithType: GoalSet.GetDisplay(Anchor, bool)
  fullName: TinyLife.Goals.GoalSet.GetDisplay(MLEM.Ui.Anchor, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: Returns a <xref href="MLEM.Ui.Elements.Group" data-throw-if-not-resolved="false"></xref> of elements that display the progress of this goal set dynamically
  example: []
  syntax:
    content: public Group GetDisplay(Anchor anchor, bool descriptionAsChild = false)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The anchor that the returned group should have
    - id: descriptionAsChild
      type: System.Boolean
      description: Whether the description should be returned as a child of the returned group, rather than added as a tooltip.
    return:
      type: MLEM.Ui.Elements.Group
      description: A group that displays this goal set's progress
    content.vb: Public Function GetDisplay(anchor As Anchor, descriptionAsChild As Boolean = False) As Group
  overload: TinyLife.Goals.GoalSet.GetDisplay*
  nameWithType.vb: GoalSet.GetDisplay(Anchor, Boolean)
  fullName.vb: TinyLife.Goals.GoalSet.GetDisplay(MLEM.Ui.Anchor, Boolean)
  name.vb: GetDisplay(Anchor, Boolean)
- uid: TinyLife.Goals.GoalSet.Validate(TinyLife.Goals.GoalSetInfo)
  commentId: M:TinyLife.Goals.GoalSet.Validate(TinyLife.Goals.GoalSetInfo)
  id: Validate(TinyLife.Goals.GoalSetInfo)
  parent: TinyLife.Goals.GoalSet
  langs:
  - csharp
  - vb
  name: Validate(GoalSetInfo)
  nameWithType: GoalSet.Validate(GoalSetInfo)
  fullName: TinyLife.Goals.GoalSet.Validate(TinyLife.Goals.GoalSetInfo)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Goals
  summary: >-
    Validates this goal set and all of the underlying <xref href="TinyLife.Goals.Goal" data-throw-if-not-resolved="false"></xref> instances.

    This method should be called when this goal set is loaded from disk.
  example: []
  syntax:
    content: public bool Validate(GoalSetInfo info)
    parameters:
    - id: info
      type: TinyLife.Goals.GoalSetInfo
      description: The underlying goal set info that this goal set was constructed from
    return:
      type: System.Boolean
      description: Whether this goal set is considered valid
    content.vb: Public Function Validate(info As GoalSetInfo) As Boolean
  overload: TinyLife.Goals.GoalSet.Validate*
references:
- uid: TinyLife.Goals.Goal
  commentId: T:TinyLife.Goals.Goal
  parent: TinyLife.Goals
  href: TinyLife.Goals.Goal.html
  name: Goal
  nameWithType: Goal
  fullName: TinyLife.Goals.Goal
- uid: TinyLife.Goals.Job
  commentId: T:TinyLife.Goals.Job
  parent: TinyLife.Goals
  href: TinyLife.Goals.Job.html
  name: Job
  nameWithType: Job
  fullName: TinyLife.Goals.Job
- uid: TinyLife.Goals.Job.DailyTasks
  commentId: P:TinyLife.Goals.Job.DailyTasks
  href: TinyLife.Goals.Job.html#TinyLife_Goals_Job_DailyTasks
  name: DailyTasks
  nameWithType: Job.DailyTasks
  fullName: TinyLife.Goals.Job.DailyTasks
- uid: TinyLife.Goals.LifeGoal
  commentId: T:TinyLife.Goals.LifeGoal
  parent: TinyLife.Goals
  href: TinyLife.Goals.LifeGoal.html
  name: LifeGoal
  nameWithType: LifeGoal
  fullName: TinyLife.Goals.LifeGoal
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Goals.IGoalTriggerable
  commentId: T:TinyLife.Goals.IGoalTriggerable
  parent: TinyLife.Goals
  href: TinyLife.Goals.IGoalTriggerable.html
  name: IGoalTriggerable
  nameWithType: IGoalTriggerable
  fullName: TinyLife.Goals.IGoalTriggerable
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Goals.GoalSet.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<GoalSet>(GoalSet)
  nameWithType: Extensions.JsonCopy<GoalSet>(GoalSet)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.GoalSet>(TinyLife.Goals.GoalSet)
  nameWithType.vb: Extensions.JsonCopy(Of GoalSet)(GoalSet)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.GoalSet)(TinyLife.Goals.GoalSet)
  name.vb: JsonCopy(Of GoalSet)(GoalSet)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.GoalSet)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    href: TinyLife.Goals.GoalSet.html
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    href: TinyLife.Goals.GoalSet.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.GoalSet)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    href: TinyLife.Goals.GoalSet.html
  - name: )
  - name: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    href: TinyLife.Goals.GoalSet.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Goals.GoalSet.Goals*
  commentId: Overload:TinyLife.Goals.GoalSet.Goals
  href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_Goals
  name: Goals
  nameWithType: GoalSet.Goals
  fullName: TinyLife.Goals.GoalSet.Goals
- uid: System.Collections.Generic.ICollection{TinyLife.Goals.Goal}
  commentId: T:System.Collections.Generic.ICollection{TinyLife.Goals.Goal}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<Goal>
  nameWithType: ICollection<Goal>
  fullName: System.Collections.Generic.ICollection<TinyLife.Goals.Goal>
  nameWithType.vb: ICollection(Of Goal)
  fullName.vb: System.Collections.Generic.ICollection(Of TinyLife.Goals.Goal)
  name.vb: ICollection(Of Goal)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: TinyLife.Goals.Goal
    name: Goal
    href: TinyLife.Goals.Goal.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Goal
    name: Goal
    href: TinyLife.Goals.Goal.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Goals.GoalSetInfo
  commentId: T:TinyLife.Goals.GoalSetInfo
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalSetInfo.html
  name: GoalSetInfo
  nameWithType: GoalSetInfo
  fullName: TinyLife.Goals.GoalSetInfo
- uid: TinyLife.Goals.GoalSet.Info*
  commentId: Overload:TinyLife.Goals.GoalSet.Info
  href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_Info
  name: Info
  nameWithType: GoalSet.Info
  fullName: TinyLife.Goals.GoalSet.Info
- uid: TinyLife.Goals.GoalSet.#ctor*
  commentId: Overload:TinyLife.Goals.GoalSet.#ctor
  href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet__ctor_TinyLife_Goals_GoalSetInfo_
  name: GoalSet
  nameWithType: GoalSet.GoalSet
  fullName: TinyLife.Goals.GoalSet.GoalSet
  nameWithType.vb: GoalSet.New
  fullName.vb: TinyLife.Goals.GoalSet.New
  name.vb: New
- uid: TinyLife.Goals.Goal.GetProgress
  commentId: M:TinyLife.Goals.Goal.GetProgress
  parent: TinyLife.Goals.Goal
  href: TinyLife.Goals.Goal.html#TinyLife_Goals_Goal_GetProgress
  name: GetProgress()
  nameWithType: Goal.GetProgress()
  fullName: TinyLife.Goals.Goal.GetProgress()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.GetProgress
    name: GetProgress
    href: TinyLife.Goals.Goal.html#TinyLife_Goals_Goal_GetProgress
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.GetProgress
    name: GetProgress
    href: TinyLife.Goals.Goal.html#TinyLife_Goals_Goal_GetProgress
  - name: (
  - name: )
- uid: TinyLife.Goals.GoalSet.GetProgress*
  commentId: Overload:TinyLife.Goals.GoalSet.GetProgress
  href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_GetProgress
  name: GetProgress
  nameWithType: GoalSet.GetProgress
  fullName: TinyLife.Goals.GoalSet.GetProgress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Goals.GoalSet.GetProgress
  commentId: M:TinyLife.Goals.GoalSet.GetProgress
  href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_GetProgress
  name: GetProgress()
  nameWithType: GoalSet.GetProgress()
  fullName: TinyLife.Goals.GoalSet.GetProgress()
  spec.csharp:
  - uid: TinyLife.Goals.GoalSet.GetProgress
    name: GetProgress
    href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_GetProgress
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.GoalSet.GetProgress
    name: GetProgress
    href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_GetProgress
  - name: (
  - name: )
- uid: TinyLife.Goals.GoalSet.IsCompleted*
  commentId: Overload:TinyLife.Goals.GoalSet.IsCompleted
  href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_IsCompleted
  name: IsCompleted
  nameWithType: GoalSet.IsCompleted
  fullName: TinyLife.Goals.GoalSet.IsCompleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Goals.Goal.Reset
  commentId: M:TinyLife.Goals.Goal.Reset
  parent: TinyLife.Goals.Goal
  href: TinyLife.Goals.Goal.html#TinyLife_Goals_Goal_Reset
  name: Reset()
  nameWithType: Goal.Reset()
  fullName: TinyLife.Goals.Goal.Reset()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.Reset
    name: Reset
    href: TinyLife.Goals.Goal.html#TinyLife_Goals_Goal_Reset
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.Reset
    name: Reset
    href: TinyLife.Goals.Goal.html#TinyLife_Goals_Goal_Reset
  - name: (
  - name: )
- uid: TinyLife.Goals.GoalSet.Reset*
  commentId: Overload:TinyLife.Goals.GoalSet.Reset
  href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_Reset
  name: Reset
  nameWithType: GoalSet.Reset
  fullName: TinyLife.Goals.GoalSet.Reset
- uid: TinyLife.Goals.GoalSet.GetGoals*
  commentId: Overload:TinyLife.Goals.GoalSet.GetGoals
  href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_GetGoals__1
  name: GetGoals
  nameWithType: GoalSet.GetGoals
  fullName: TinyLife.Goals.GoalSet.GetGoals
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Goals.GoalSet.GetGoal*
  commentId: Overload:TinyLife.Goals.GoalSet.GetGoal
  href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_GetGoal__1_System_String_
  name: GetGoal
  nameWithType: GoalSet.GetGoal
  fullName: TinyLife.Goals.GoalSet.GetGoal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: MLEM.Ui.Elements.Group
  commentId: T:MLEM.Ui.Elements.Group
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Group
  nameWithType: Group
  fullName: MLEM.Ui.Elements.Group
- uid: TinyLife.Goals.GoalSet.GetDisplay*
  commentId: Overload:TinyLife.Goals.GoalSet.GetDisplay
  href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_GetDisplay_MLEM_Ui_Anchor_System_Boolean_
  name: GetDisplay
  nameWithType: GoalSet.GetDisplay
  fullName: TinyLife.Goals.GoalSet.GetDisplay
- uid: MLEM.Ui.Anchor
  commentId: T:MLEM.Ui.Anchor
  parent: MLEM.Ui
  isExternal: true
  name: Anchor
  nameWithType: Anchor
  fullName: MLEM.Ui.Anchor
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  isExternal: true
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
- uid: TinyLife.Goals.GoalSet.Validate*
  commentId: Overload:TinyLife.Goals.GoalSet.Validate
  href: TinyLife.Goals.GoalSet.html#TinyLife_Goals_GoalSet_Validate_TinyLife_Goals_GoalSetInfo_
  name: Validate
  nameWithType: GoalSet.Validate
  fullName: TinyLife.Goals.GoalSet.Validate
