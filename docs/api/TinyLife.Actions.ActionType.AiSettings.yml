### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.ActionType.AiSettings
  commentId: T:TinyLife.Actions.ActionType.AiSettings
  id: ActionType.AiSettings
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.ActionType.AiSettings.#ctor
  - TinyLife.Actions.ActionType.AiSettings.CanDoAtAnyPoint
  - TinyLife.Actions.ActionType.AiSettings.CanDoRandomly
  - TinyLife.Actions.ActionType.AiSettings.IgnoreAiDisabled
  - TinyLife.Actions.ActionType.AiSettings.IgnorePartnerNeeds
  - TinyLife.Actions.ActionType.AiSettings.NeedsFreeActionSpot
  - TinyLife.Actions.ActionType.AiSettings.PassivePriority
  - TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
  langs:
  - csharp
  - vb
  name: ActionType.AiSettings
  nameWithType: ActionType.AiSettings
  fullName: TinyLife.Actions.ActionType.AiSettings
  type: Struct
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: A set of settings that <xref href="TinyLife.Actions.ActionType.TypeSettings" data-throw-if-not-resolved="false"></xref> uses to determine how <xref href="TinyLife.Objects.PersonAi" data-throw-if-not-resolved="false"></xref> should deal with this <xref href="TinyLife.Actions.ActionType" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public struct ActionType.AiSettings
    content.vb: Public Structure ActionType.AiSettings
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - TinyLife.Actions.ActionType.AiSettings.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
  commentId: F:TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
  id: SolvedNeeds
  parent: TinyLife.Actions.ActionType.AiSettings
  langs:
  - csharp
  - vb
  name: SolvedNeeds
  nameWithType: ActionType.AiSettings.SolvedNeeds
  fullName: TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    The need that this action solves when invoked.

    The action doesn't need to actually solve this need in its implementation, but instead, this value is used to determine which actions to choose from if a person's needs are low.

    Note that, for this value to have an effect, the <xref href="TinyLife.Actions.ActionType.AiSettings.PassivePriority" data-throw-if-not-resolved="false"></xref> needs to be greater than 0.

    Defaults to null.
  example: []
  syntax:
    content: public NeedType[] SolvedNeeds
    return:
      type: TinyLife.NeedType[]
    content.vb: Public SolvedNeeds As NeedType()
- uid: TinyLife.Actions.ActionType.AiSettings.PassivePriority
  commentId: F:TinyLife.Actions.ActionType.AiSettings.PassivePriority
  id: PassivePriority
  parent: TinyLife.Actions.ActionType.AiSettings
  langs:
  - csharp
  - vb
  name: PassivePriority
  nameWithType: ActionType.AiSettings.PassivePriority
  fullName: TinyLife.Actions.ActionType.AiSettings.PassivePriority
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A function that returns the passive priority of this action type.

    By default, the passive priority is unset, meaning this action will never be executed randomly.

    The higher the passive priority, the more likely it is that this action will be invoked randomly by a person.

    This function is usually only queried through <xref href="TinyLife.Objects.PersonLike.GetPassiveActionPriority(TinyLife.Actions.ActionType)" data-throw-if-not-resolved="false"></xref>, as personality modifiers and the like get applied there.

    The passive priority only has an effect if <xref href="TinyLife.Actions.ActionType.AiSettings.SolvedNeeds" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Actions.ActionType.AiSettings.CanDoRandomly" data-throw-if-not-resolved="false"></xref>, or <xref href="TinyLife.Actions.ActionType.AiSettings.CanDoAtAnyPoint" data-throw-if-not-resolved="false"></xref> is true, or if a person's <xref href="TinyLife.World.LotEmployment" data-throw-if-not-resolved="false"></xref> contains this action.
  example: []
  syntax:
    content: public Func<PersonLike, float> PassivePriority
    return:
      type: System.Func{TinyLife.Objects.PersonLike,System.Single}
    content.vb: Public PassivePriority As Func(Of PersonLike, Single)
- uid: TinyLife.Actions.ActionType.AiSettings.CanDoRandomly
  commentId: F:TinyLife.Actions.ActionType.AiSettings.CanDoRandomly
  id: CanDoRandomly
  parent: TinyLife.Actions.ActionType.AiSettings
  langs:
  - csharp
  - vb
  name: CanDoRandomly
  nameWithType: ActionType.AiSettings.CanDoRandomly
  fullName: TinyLife.Actions.ActionType.AiSettings.CanDoRandomly
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A value that determines whether or not this action can be started randomly by the AI.

    A random action will only be started if the corresponding person's <xref href="TinyLife.Objects.PersonLike.ActionQueue" data-throw-if-not-resolved="false"></xref>, as well as their <xref href="TinyLife.Objects.PersonLike.CurrentActions" data-throw-if-not-resolved="false"></xref>, are empty.

    If this value is false, but <xref href="TinyLife.Actions.ActionType.AiSettings.SolvedNeeds" data-throw-if-not-resolved="false"></xref> is true, this action will still be started if the need set is low.

    Note that, for this value to have an effect, the <xref href="TinyLife.Actions.ActionType.AiSettings.PassivePriority" data-throw-if-not-resolved="false"></xref> needs to be greater than 0.
  example: []
  syntax:
    content: public bool CanDoRandomly
    return:
      type: System.Boolean
    content.vb: Public CanDoRandomly As Boolean
- uid: TinyLife.Actions.ActionType.AiSettings.CanDoAtAnyPoint
  commentId: F:TinyLife.Actions.ActionType.AiSettings.CanDoAtAnyPoint
  id: CanDoAtAnyPoint
  parent: TinyLife.Actions.ActionType.AiSettings
  langs:
  - csharp
  - vb
  name: CanDoAtAnyPoint
  nameWithType: ActionType.AiSettings.CanDoAtAnyPoint
  fullName: TinyLife.Actions.ActionType.AiSettings.CanDoAtAnyPoint
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A value that determines whether or not this action can be started randomly, at any point, by the AI.

    Whereas <xref href="TinyLife.Actions.ActionType.AiSettings.CanDoRandomly" data-throw-if-not-resolved="false"></xref> actions can only be started when the <xref href="TinyLife.Objects.PersonLike.ActionQueue" data-throw-if-not-resolved="false"></xref> is empty, an action with this flag can always be started randomly.

    If this value is false, but <xref href="TinyLife.Actions.ActionType.AiSettings.SolvedNeeds" data-throw-if-not-resolved="false"></xref> is true, this action will still be started if the need set is low.

    Note that, for this value to have an effect, the <xref href="TinyLife.Actions.ActionType.AiSettings.PassivePriority" data-throw-if-not-resolved="false"></xref> needs to be greater than 0.
  example: []
  syntax:
    content: public bool CanDoAtAnyPoint
    return:
      type: System.Boolean
    content.vb: Public CanDoAtAnyPoint As Boolean
- uid: TinyLife.Actions.ActionType.AiSettings.NeedsFreeActionSpot
  commentId: F:TinyLife.Actions.ActionType.AiSettings.NeedsFreeActionSpot
  id: NeedsFreeActionSpot
  parent: TinyLife.Actions.ActionType.AiSettings
  langs:
  - csharp
  - vb
  name: NeedsFreeActionSpot
  nameWithType: ActionType.AiSettings.NeedsFreeActionSpot
  fullName: TinyLife.Actions.ActionType.AiSettings.NeedsFreeActionSpot
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A value that determines whether this action needs to find a free <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> on the object that it is invoked on.

    This value only has an effect if this action can be executed on any <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref>.

    This value defaults to true.
  example: []
  syntax:
    content: public bool NeedsFreeActionSpot
    return:
      type: System.Boolean
    content.vb: Public NeedsFreeActionSpot As Boolean
- uid: TinyLife.Actions.ActionType.AiSettings.IgnorePartnerNeeds
  commentId: F:TinyLife.Actions.ActionType.AiSettings.IgnorePartnerNeeds
  id: IgnorePartnerNeeds
  parent: TinyLife.Actions.ActionType.AiSettings
  langs:
  - csharp
  - vb
  name: IgnorePartnerNeeds
  nameWithType: ActionType.AiSettings.IgnorePartnerNeeds
  fullName: TinyLife.Actions.ActionType.AiSettings.IgnorePartnerNeeds
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    Whether to, when gathering partners for this action using <xref href="TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.PersonLike%2cTinyLife.Actions.ActionType%2cTinyLife.World.Map%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Vector2%7d%2cSystem.Nullable%7bSystem.Single%7d%2cSystem.Nullable%7bSystem.Single%7d%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Func%7bTinyLife.Objects.PersonLike%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref>, the people's needs should be ignored.

    If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, which it is by default, only people whose needs match a certain threshold will be considered as partners.

    If this action doesn't involve other people, this value is ignored.
  example: []
  syntax:
    content: public bool IgnorePartnerNeeds
    return:
      type: System.Boolean
    content.vb: Public IgnorePartnerNeeds As Boolean
- uid: TinyLife.Actions.ActionType.AiSettings.IgnoreAiDisabled
  commentId: F:TinyLife.Actions.ActionType.AiSettings.IgnoreAiDisabled
  id: IgnoreAiDisabled
  parent: TinyLife.Actions.ActionType.AiSettings
  langs:
  - csharp
  - vb
  name: IgnoreAiDisabled
  nameWithType: ActionType.AiSettings.IgnoreAiDisabled
  fullName: TinyLife.Actions.ActionType.AiSettings.IgnoreAiDisabled
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: A value that determines whether this action can be started (based on <xref href="TinyLife.Actions.ActionType.AiSettings.CanDoRandomly" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Actions.ActionType.AiSettings.CanDoAtAnyPoint" data-throw-if-not-resolved="false"></xref>), even if the starting person's AI is currently disabled.
  example: []
  syntax:
    content: public bool IgnoreAiDisabled
    return:
      type: System.Boolean
    content.vb: Public IgnoreAiDisabled As Boolean
- uid: TinyLife.Actions.ActionType.AiSettings.#ctor
  commentId: M:TinyLife.Actions.ActionType.AiSettings.#ctor
  id: '#ctor'
  parent: TinyLife.Actions.ActionType.AiSettings
  langs:
  - csharp
  - vb
  name: AiSettings()
  nameWithType: ActionType.AiSettings.AiSettings()
  fullName: TinyLife.Actions.ActionType.AiSettings.AiSettings()
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Creates a new <xref href="TinyLife.Actions.ActionType.AiSettings" data-throw-if-not-resolved="false"></xref> instance with default settings.
  example: []
  syntax:
    content: public AiSettings()
    content.vb: Public Sub New()
  overload: TinyLife.Actions.ActionType.AiSettings.#ctor*
  nameWithType.vb: ActionType.AiSettings.New()
  fullName.vb: TinyLife.Actions.ActionType.AiSettings.New()
  name.vb: New()
references:
- uid: TinyLife.Actions.ActionType.TypeSettings
  commentId: T:TinyLife.Actions.ActionType.TypeSettings
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType.TypeSettings
  nameWithType: ActionType.TypeSettings
  fullName: TinyLife.Actions.ActionType.TypeSettings
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
    href: TinyLife.Actions.ActionType.TypeSettings.html
- uid: TinyLife.Objects.PersonAi
  commentId: T:TinyLife.Objects.PersonAi
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonAi.html
  name: PersonAi
  nameWithType: PersonAi
  fullName: TinyLife.Objects.PersonAi
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.Actions.ActionType.AiSettings.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<AiSettings>(AiSettings)
  nameWithType: Extensions.JsonCopy<ActionType.AiSettings>(ActionType.AiSettings)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.ActionType.AiSettings>(TinyLife.Actions.ActionType.AiSettings)
  nameWithType.vb: Extensions.JsonCopy(Of ActionType.AiSettings)(ActionType.AiSettings)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.ActionType.AiSettings)(TinyLife.Actions.ActionType.AiSettings)
  name.vb: JsonCopy(Of AiSettings)(AiSettings)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.ActionType.AiSettings)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
    href: TinyLife.Actions.ActionType.AiSettings.html
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
    href: TinyLife.Actions.ActionType.AiSettings.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.ActionType.AiSettings)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
    href: TinyLife.Actions.ActionType.AiSettings.html
  - name: )
  - name: (
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
    href: TinyLife.Actions.ActionType.AiSettings.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Actions.ActionType.AiSettings.PassivePriority
  commentId: F:TinyLife.Actions.ActionType.AiSettings.PassivePriority
  href: TinyLife.Actions.ActionType.AiSettings.html#TinyLife_Actions_ActionType_AiSettings_PassivePriority
  name: PassivePriority
  nameWithType: ActionType.AiSettings.PassivePriority
  fullName: TinyLife.Actions.ActionType.AiSettings.PassivePriority
- uid: TinyLife.NeedType[]
  isExternal: true
  href: TinyLife.NeedType.html
  name: NeedType[]
  nameWithType: NeedType[]
  fullName: TinyLife.NeedType[]
  nameWithType.vb: NeedType()
  fullName.vb: TinyLife.NeedType()
  name.vb: NeedType()
  spec.csharp:
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.NeedType
    name: NeedType
    href: TinyLife.NeedType.html
  - name: (
  - name: )
- uid: TinyLife.Objects.PersonLike.GetPassiveActionPriority(TinyLife.Actions.ActionType)
  commentId: M:TinyLife.Objects.PersonLike.GetPassiveActionPriority(TinyLife.Actions.ActionType)
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetPassiveActionPriority_TinyLife_Actions_ActionType_
  name: GetPassiveActionPriority(ActionType)
  nameWithType: PersonLike.GetPassiveActionPriority(ActionType)
  fullName: TinyLife.Objects.PersonLike.GetPassiveActionPriority(TinyLife.Actions.ActionType)
  spec.csharp:
  - uid: TinyLife.Objects.PersonLike.GetPassiveActionPriority(TinyLife.Actions.ActionType)
    name: GetPassiveActionPriority
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetPassiveActionPriority_TinyLife_Actions_ActionType_
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.PersonLike.GetPassiveActionPriority(TinyLife.Actions.ActionType)
    name: GetPassiveActionPriority
    href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_GetPassiveActionPriority_TinyLife_Actions_ActionType_
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: )
- uid: TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
  commentId: F:TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
  href: TinyLife.Actions.ActionType.AiSettings.html#TinyLife_Actions_ActionType_AiSettings_SolvedNeeds
  name: SolvedNeeds
  nameWithType: ActionType.AiSettings.SolvedNeeds
  fullName: TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
- uid: TinyLife.Actions.ActionType.AiSettings.CanDoRandomly
  commentId: F:TinyLife.Actions.ActionType.AiSettings.CanDoRandomly
  href: TinyLife.Actions.ActionType.AiSettings.html#TinyLife_Actions_ActionType_AiSettings_CanDoRandomly
  name: CanDoRandomly
  nameWithType: ActionType.AiSettings.CanDoRandomly
  fullName: TinyLife.Actions.ActionType.AiSettings.CanDoRandomly
- uid: TinyLife.Actions.ActionType.AiSettings.CanDoAtAnyPoint
  commentId: F:TinyLife.Actions.ActionType.AiSettings.CanDoAtAnyPoint
  href: TinyLife.Actions.ActionType.AiSettings.html#TinyLife_Actions_ActionType_AiSettings_CanDoAtAnyPoint
  name: CanDoAtAnyPoint
  nameWithType: ActionType.AiSettings.CanDoAtAnyPoint
  fullName: TinyLife.Actions.ActionType.AiSettings.CanDoAtAnyPoint
- uid: TinyLife.World.LotEmployment
  commentId: T:TinyLife.World.LotEmployment
  parent: TinyLife.World
  href: TinyLife.World.LotEmployment.html
  name: LotEmployment
  nameWithType: LotEmployment
  fullName: TinyLife.World.LotEmployment
- uid: System.Func{TinyLife.Objects.PersonLike,System.Single}
  commentId: T:System.Func{TinyLife.Objects.PersonLike,System.Single}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<PersonLike, float>
  nameWithType: Func<PersonLike, float>
  fullName: System.Func<TinyLife.Objects.PersonLike, float>
  nameWithType.vb: Func(Of PersonLike, Single)
  fullName.vb: System.Func(Of TinyLife.Objects.PersonLike, Single)
  name.vb: Func(Of PersonLike, Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Objects.PersonLike.ActionQueue
  commentId: F:TinyLife.Objects.PersonLike.ActionQueue
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_ActionQueue
  name: ActionQueue
  nameWithType: PersonLike.ActionQueue
  fullName: TinyLife.Objects.PersonLike.ActionQueue
- uid: TinyLife.Objects.PersonLike.CurrentActions
  commentId: F:TinyLife.Objects.PersonLike.CurrentActions
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_CurrentActions
  name: CurrentActions
  nameWithType: PersonLike.CurrentActions
  fullName: TinyLife.Objects.PersonLike.CurrentActions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.ActionSpot
  commentId: T:TinyLife.Objects.ActionSpot
  parent: TinyLife.Objects
  href: TinyLife.Objects.ActionSpot.html
  name: ActionSpot
  nameWithType: ActionSpot
  fullName: TinyLife.Objects.ActionSpot
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Func{TinyLife.Objects.PersonLike,System.Boolean})
  commentId: M:TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Func{TinyLife.Objects.PersonLike,System.Boolean})
  parent: TinyLife.Actions.Action
  isExternal: true
  href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_FindAllFreePeople_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionType_TinyLife_World_Map_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Nullable_System_Single__System_Nullable_System_Single__System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Func_TinyLife_Objects_PersonLike_System_Boolean__
  name: FindAllFreePeople(PersonLike, ActionType, Map, Vector2?, float?, float?, bool, bool, bool, bool, Func<PersonLike, bool>)
  nameWithType: Action.FindAllFreePeople(PersonLike, ActionType, Map, Vector2?, float?, float?, bool, bool, bool, bool, Func<PersonLike, bool>)
  fullName: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionType, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, float?, float?, bool, bool, bool, bool, System.Func<TinyLife.Objects.PersonLike, bool>)
  nameWithType.vb: Action.FindAllFreePeople(PersonLike, ActionType, Map, Vector2?, Single?, Single?, Boolean, Boolean, Boolean, Boolean, Func(Of PersonLike, Boolean))
  fullName.vb: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.PersonLike, TinyLife.Actions.ActionType, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, Single?, Single?, Boolean, Boolean, Boolean, Boolean, System.Func(Of TinyLife.Objects.PersonLike, Boolean))
  name.vb: FindAllFreePeople(PersonLike, ActionType, Map, Vector2?, Single?, Single?, Boolean, Boolean, Boolean, Boolean, Func(Of PersonLike, Boolean))
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Func{TinyLife.Objects.PersonLike,System.Boolean})
    name: FindAllFreePeople
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_FindAllFreePeople_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionType_TinyLife_World_Map_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Nullable_System_Single__System_Nullable_System_Single__System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Func_TinyLife_Objects_PersonLike_System_Boolean__
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.PersonLike,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Func{TinyLife.Objects.PersonLike,System.Boolean})
    name: FindAllFreePeople
    href: TinyLife.Actions.Action.html#TinyLife_Actions_Action_FindAllFreePeople_TinyLife_Objects_PersonLike_TinyLife_Actions_ActionType_TinyLife_World_Map_System_Nullable_Microsoft_Xna_Framework_Vector2__System_Nullable_System_Single__System_Nullable_System_Single__System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Func_TinyLife_Objects_PersonLike_System_Boolean__
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
    href: TinyLife.World.Map.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.ActionType.AiSettings
  commentId: T:TinyLife.Actions.ActionType.AiSettings
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType.AiSettings
  nameWithType: ActionType.AiSettings
  fullName: TinyLife.Actions.ActionType.AiSettings
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
    href: TinyLife.Actions.ActionType.AiSettings.html
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
    href: TinyLife.Actions.ActionType.AiSettings.html
- uid: TinyLife.Actions.ActionType.AiSettings.#ctor*
  commentId: Overload:TinyLife.Actions.ActionType.AiSettings.#ctor
  href: TinyLife.Actions.ActionType.AiSettings.html#TinyLife_Actions_ActionType_AiSettings__ctor
  name: AiSettings
  nameWithType: ActionType.AiSettings.AiSettings
  fullName: TinyLife.Actions.ActionType.AiSettings.AiSettings
  nameWithType.vb: ActionType.AiSettings.New
  fullName.vb: TinyLife.Actions.ActionType.AiSettings.New
  name.vb: New
