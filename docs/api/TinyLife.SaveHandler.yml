### YamlMime:ManagedReference
items:
- uid: TinyLife.SaveHandler
  commentId: T:TinyLife.SaveHandler
  id: SaveHandler
  parent: TinyLife
  children:
  - TinyLife.SaveHandler.AddResolvableType(System.String)
  - TinyLife.SaveHandler.AddResolvableType(System.Type)
  - TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  - TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  - TinyLife.SaveHandler.GetGameDir
  - TinyLife.SaveHandler.GetSaveBackups(System.String)
  - TinyLife.SaveHandler.GetSaveDir(System.String)
  - TinyLife.SaveHandler.GetSavesDir
  - TinyLife.SaveHandler.GetScreenshotsDir
  - TinyLife.SaveHandler.OnGameLoaded
  - TinyLife.SaveHandler.OnGameSaved
  - TinyLife.SaveHandler.OnSaveDataCreated
  - TinyLife.SaveHandler.OnSaveDataLoaded
  - TinyLife.SaveHandler.OnSaveLoadError
  - TinyLife.SaveHandler.StaticJsonConverterMigrations
  - TinyLife.SaveHandler.TypeMigrations
  langs:
  - csharp
  - vb
  name: SaveHandler
  nameWithType: SaveHandler
  fullName: TinyLife.SaveHandler
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: A utility class used by the game for various actions and information related to saving and loading.
  example: []
  syntax:
    content: public static class SaveHandler
    content.vb: Public Module SaveHandler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TinyLife.SaveHandler.TypeMigrations
  commentId: F:TinyLife.SaveHandler.TypeMigrations
  id: TypeMigrations
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: TypeMigrations
  nameWithType: SaveHandler.TypeMigrations
  fullName: TinyLife.SaveHandler.TypeMigrations
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    A set of migrations that get applied when a save file is loaded whenever a <xref href="System.Type" data-throw-if-not-resolved="false"></xref> is searched for by name.

    The passed <xref href="TinyLife.SaveHandler.TypeMigrationInfo" data-throw-if-not-resolved="false"></xref> contains the assembly name and type name of the missing type.
  example: []
  syntax:
    content: public static readonly List<Migration<SaveHandler.TypeMigrationInfo>> TypeMigrations
    return:
      type: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.SaveHandler.TypeMigrationInfo}}
    content.vb: Public Shared ReadOnly TypeMigrations As List(Of Migration(Of SaveHandler.TypeMigrationInfo))
- uid: TinyLife.SaveHandler.StaticJsonConverterMigrations
  commentId: F:TinyLife.SaveHandler.StaticJsonConverterMigrations
  id: StaticJsonConverterMigrations
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: StaticJsonConverterMigrations
  nameWithType: SaveHandler.StaticJsonConverterMigrations
  fullName: TinyLife.SaveHandler.StaticJsonConverterMigrations
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    A set of migrations that get applied when an object using the <xref href="TinyLife.MigratingStaticJsonConverter%601" data-throw-if-not-resolved="false"></xref> is loaded from disk.

    The passed <xref href="TinyLife.SaveHandler.StaticMigrationInfo" data-throw-if-not-resolved="false"></xref> contains the name of the object being loaded, as well as the object that it should be loaded as.
  example: []
  syntax:
    content: public static readonly List<Migration<SaveHandler.StaticMigrationInfo>> StaticJsonConverterMigrations
    return:
      type: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.SaveHandler.StaticMigrationInfo}}
    content.vb: Public Shared ReadOnly StaticJsonConverterMigrations As List(Of Migration(Of SaveHandler.StaticMigrationInfo))
- uid: TinyLife.SaveHandler.OnGameSaved
  commentId: E:TinyLife.SaveHandler.OnGameSaved
  id: OnGameSaved
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: OnGameSaved
  nameWithType: SaveHandler.OnGameSaved
  fullName: TinyLife.SaveHandler.OnGameSaved
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: An event that is raised before and after the game is saved.
  example: []
  syntax:
    content: public static event Action<GameImpl, EventPhase> OnGameSaved
    return:
      type: System.Action{TinyLife.GameImpl,TinyLife.Mods.EventPhase}
    content.vb: Public Shared Event OnGameSaved As Action(Of GameImpl, EventPhase)
- uid: TinyLife.SaveHandler.OnGameLoaded
  commentId: E:TinyLife.SaveHandler.OnGameLoaded
  id: OnGameLoaded
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: OnGameLoaded
  nameWithType: SaveHandler.OnGameLoaded
  fullName: TinyLife.SaveHandler.OnGameLoaded
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: An event that is raised before and after the game is loaded.
  example: []
  syntax:
    content: public static event Action<GameImpl, EventPhase> OnGameLoaded
    return:
      type: System.Action{TinyLife.GameImpl,TinyLife.Mods.EventPhase}
    content.vb: Public Shared Event OnGameLoaded As Action(Of GameImpl, EventPhase)
- uid: TinyLife.SaveHandler.OnSaveDataCreated
  commentId: E:TinyLife.SaveHandler.OnSaveDataCreated
  id: OnSaveDataCreated
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: OnSaveDataCreated
  nameWithType: SaveHandler.OnSaveDataCreated
  fullName: TinyLife.SaveHandler.OnSaveDataCreated
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: An event that is raised when the game's <xref href="TinyLife.SaveHandler.SaveData" data-throw-if-not-resolved="false"></xref> is loaded.
  example: []
  syntax:
    content: public static event Action<GameImpl, SaveHandler.SaveData> OnSaveDataCreated
    return:
      type: System.Action{TinyLife.GameImpl,TinyLife.SaveHandler.SaveData}
    content.vb: Public Shared Event OnSaveDataCreated As Action(Of GameImpl, SaveHandler.SaveData)
- uid: TinyLife.SaveHandler.OnSaveDataLoaded
  commentId: E:TinyLife.SaveHandler.OnSaveDataLoaded
  id: OnSaveDataLoaded
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: OnSaveDataLoaded
  nameWithType: SaveHandler.OnSaveDataLoaded
  fullName: TinyLife.SaveHandler.OnSaveDataLoaded
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: An event that is raised when the game's <xref href="TinyLife.SaveHandler.SaveData" data-throw-if-not-resolved="false"></xref> is saved.
  example: []
  syntax:
    content: public static event Action<GameImpl, SaveHandler.SaveData> OnSaveDataLoaded
    return:
      type: System.Action{TinyLife.GameImpl,TinyLife.SaveHandler.SaveData}
    content.vb: Public Shared Event OnSaveDataLoaded As Action(Of GameImpl, SaveHandler.SaveData)
- uid: TinyLife.SaveHandler.OnSaveLoadError
  commentId: E:TinyLife.SaveHandler.OnSaveLoadError
  id: OnSaveLoadError
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: OnSaveLoadError
  nameWithType: SaveHandler.OnSaveLoadError
  fullName: TinyLife.SaveHandler.OnSaveLoadError
  type: Event
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    An event that is raised when a <xref href="Newtonsoft.Json.JsonSerializer" data-throw-if-not-resolved="false"></xref> or <xref href="Newtonsoft.Json.JsonSerializerSettings" data-throw-if-not-resolved="false"></xref> created in <xref href="TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext%2cTinyLife.SerializerUsage%2cSystem.EventHandler%7bNewtonsoft.Json.Serialization.ErrorEventArgs%7d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext%2cTinyLife.SerializerUsage%2cSystem.EventHandler%7bNewtonsoft.Json.Serialization.ErrorEventArgs%7d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> is used for serialization or deserialization, and an error occurs.

    This event is a subscription to <xref href="Newtonsoft.Json.JsonSerializerSettings.Error" data-throw-if-not-resolved="false"></xref>.

    If your event handler handles the error gracefully, you should set the argument's <xref href="Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorContext" data-throw-if-not-resolved="false"></xref>'s <xref href="Newtonsoft.Json.Serialization.ErrorContext.Handled" data-throw-if-not-resolved="false"></xref> to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public static event EventHandler<(SerializerContext Context, SerializerUsage Usages, ErrorEventArgs Args, EventPhase Phase)> OnSaveLoadError
    return:
      type: System.EventHandler{System.ValueTuple{TinyLife.SerializerContext,TinyLife.SerializerUsage,Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}}
    content.vb: Public Shared Event OnSaveLoadError As EventHandler(Of (Context As SerializerContext, Usages As SerializerUsage, Args As ErrorEventArgs, Phase As EventPhase))
- uid: TinyLife.SaveHandler.GetGameDir
  commentId: M:TinyLife.SaveHandler.GetGameDir
  id: GetGameDir
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: GetGameDir()
  nameWithType: SaveHandler.GetGameDir()
  fullName: TinyLife.SaveHandler.GetGameDir()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    Returns a <xref href="System.IO.DirectoryInfo" data-throw-if-not-resolved="false"></xref> that points to the game's data directory.

    For more information on where this directory is stored, see https://docs.tinylifegame.com/articles/game_dir.html.
  example: []
  syntax:
    content: public static DirectoryInfo GetGameDir()
    return:
      type: System.IO.DirectoryInfo
      description: The game's data directory.
    content.vb: Public Shared Function GetGameDir() As DirectoryInfo
  overload: TinyLife.SaveHandler.GetGameDir*
- uid: TinyLife.SaveHandler.GetSavesDir
  commentId: M:TinyLife.SaveHandler.GetSavesDir
  id: GetSavesDir
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: GetSavesDir()
  nameWithType: SaveHandler.GetSavesDir()
  fullName: TinyLife.SaveHandler.GetSavesDir()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    Returns a <xref href="System.IO.DirectoryInfo" data-throw-if-not-resolved="false"></xref> that points to the game's saves directory.

    This method returns a subdirectory of <xref href="TinyLife.SaveHandler.GetGameDir" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static DirectoryInfo GetSavesDir()
    return:
      type: System.IO.DirectoryInfo
      description: The game's saves directory.
    content.vb: Public Shared Function GetSavesDir() As DirectoryInfo
  overload: TinyLife.SaveHandler.GetSavesDir*
- uid: TinyLife.SaveHandler.GetSaveDir(System.String)
  commentId: M:TinyLife.SaveHandler.GetSaveDir(System.String)
  id: GetSaveDir(System.String)
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: GetSaveDir(string)
  nameWithType: SaveHandler.GetSaveDir(string)
  fullName: TinyLife.SaveHandler.GetSaveDir(string)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    Returns a <xref href="System.IO.DirectoryInfo" data-throw-if-not-resolved="false"></xref> that points to the directory that a save with the given <code class="paramref">name</code> is or would be stored in.

    This method returns a subdirectory of <xref href="TinyLife.SaveHandler.GetSavesDir" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static DirectoryInfo GetSaveDir(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: System.IO.DirectoryInfo
      description: The directory for the given save.
    content.vb: Public Shared Function GetSaveDir(name As String) As DirectoryInfo
  overload: TinyLife.SaveHandler.GetSaveDir*
  nameWithType.vb: SaveHandler.GetSaveDir(String)
  fullName.vb: TinyLife.SaveHandler.GetSaveDir(String)
  name.vb: GetSaveDir(String)
- uid: TinyLife.SaveHandler.GetSaveBackups(System.String)
  commentId: M:TinyLife.SaveHandler.GetSaveBackups(System.String)
  id: GetSaveBackups(System.String)
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: GetSaveBackups(string)
  nameWithType: SaveHandler.GetSaveBackups(string)
  fullName: TinyLife.SaveHandler.GetSaveBackups(string)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Returns a set of all of the files in the directory of the save with the given <code class="paramref">name</code> that have the extension ".bak" or ".old".
  example: []
  syntax:
    content: public static IEnumerable<FileInfo> GetSaveBackups(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the save.
    return:
      type: System.Collections.Generic.IEnumerable{System.IO.FileInfo}
      description: The backup files.
    content.vb: Public Shared Function GetSaveBackups(name As String) As IEnumerable(Of FileInfo)
  overload: TinyLife.SaveHandler.GetSaveBackups*
  nameWithType.vb: SaveHandler.GetSaveBackups(String)
  fullName.vb: TinyLife.SaveHandler.GetSaveBackups(String)
  name.vb: GetSaveBackups(String)
- uid: TinyLife.SaveHandler.GetScreenshotsDir
  commentId: M:TinyLife.SaveHandler.GetScreenshotsDir
  id: GetScreenshotsDir
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: GetScreenshotsDir()
  nameWithType: SaveHandler.GetScreenshotsDir()
  fullName: TinyLife.SaveHandler.GetScreenshotsDir()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Returns the <xref href="System.IO.DirectoryInfo" data-throw-if-not-resolved="false"></xref> that points to the directory where screenshots are stored.
  example: []
  syntax:
    content: public static DirectoryInfo GetScreenshotsDir()
    return:
      type: System.IO.DirectoryInfo
      description: The screenshots directory.
    content.vb: Public Shared Function GetScreenshotsDir() As DirectoryInfo
  overload: TinyLife.SaveHandler.GetScreenshotsDir*
- uid: TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  commentId: M:TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  id: CreateSerializerSettings(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: CreateSerializerSettings(SerializerContext, SerializerUsage, EventHandler<ErrorEventArgs>, bool)
  nameWithType: SaveHandler.CreateSerializerSettings(SerializerContext, SerializerUsage, EventHandler<ErrorEventArgs>, bool)
  fullName: TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext, TinyLife.SerializerUsage, System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs>, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: >-
    Creates a new instance of <xref href="Newtonsoft.Json.JsonSerializerSettings" data-throw-if-not-resolved="false"></xref>, initialized to some default values for saving and loading <xref href="TinyLife.World.Map" data-throw-if-not-resolved="false"></xref> and, specifically, <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref> instances.

    Additionally, an <code class="paramref">errorHandler</code> can optionally be attached to determine what should happen when a serialization error occurs.
  example: []
  syntax:
    content: public static JsonSerializerSettings CreateSerializerSettings(SerializerContext context, SerializerUsage usages, EventHandler<ErrorEventArgs> errorHandler = null, bool prettyPrint = false)
    parameters:
    - id: context
      type: TinyLife.SerializerContext
      description: The context that the serializer settings will be used for.
    - id: usages
      type: TinyLife.SerializerUsage
      description: The usage or combined flag ofu sages that the serializer will be used for.
    - id: errorHandler
      type: System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs}
      description: An optional error handler.
    - id: prettyPrint
      type: System.Boolean
      description: Whether the resulting JSON should be pretty-printed.
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
      description: A new instance of <xref href="Newtonsoft.Json.JsonSerializerSettings" data-throw-if-not-resolved="false"></xref> with some default values set.
    content.vb: Public Shared Function CreateSerializerSettings(context As SerializerContext, usages As SerializerUsage, errorHandler As EventHandler(Of ErrorEventArgs) = Nothing, prettyPrint As Boolean = False) As JsonSerializerSettings
  overload: TinyLife.SaveHandler.CreateSerializerSettings*
  nameWithType.vb: SaveHandler.CreateSerializerSettings(SerializerContext, SerializerUsage, EventHandler(Of ErrorEventArgs), Boolean)
  fullName.vb: TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext, TinyLife.SerializerUsage, System.EventHandler(Of Newtonsoft.Json.Serialization.ErrorEventArgs), Boolean)
  name.vb: CreateSerializerSettings(SerializerContext, SerializerUsage, EventHandler(Of ErrorEventArgs), Boolean)
- uid: TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  commentId: M:TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  id: CreateSerializer(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: CreateSerializer(SerializerContext, SerializerUsage, EventHandler<ErrorEventArgs>, bool)
  nameWithType: SaveHandler.CreateSerializer(SerializerContext, SerializerUsage, EventHandler<ErrorEventArgs>, bool)
  fullName: TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext, TinyLife.SerializerUsage, System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs>, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  summary: Creates a new <xref href="Newtonsoft.Json.JsonSerializer" data-throw-if-not-resolved="false"></xref> that uses the <xref href="Newtonsoft.Json.JsonSerializerSettings" data-throw-if-not-resolved="false"></xref> returned in <xref href="TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext%2cTinyLife.SerializerUsage%2cSystem.EventHandler%7bNewtonsoft.Json.Serialization.ErrorEventArgs%7d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonSerializer CreateSerializer(SerializerContext context, SerializerUsage usages, EventHandler<ErrorEventArgs> errorHandler = null, bool prettyPrint = false)
    parameters:
    - id: context
      type: TinyLife.SerializerContext
      description: The context that the serializer will be used for.
    - id: usages
      type: TinyLife.SerializerUsage
      description: The usage or combined flag ofu sages that the serializer will be used for.
    - id: errorHandler
      type: System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs}
      description: An optional error handler.
    - id: prettyPrint
      type: System.Boolean
      description: Whether the resulting JSON should be pretty-printed.
    return:
      type: Newtonsoft.Json.JsonSerializer
      description: A new <xref href="Newtonsoft.Json.JsonSerializer" data-throw-if-not-resolved="false"></xref> with some default values set.
    content.vb: Public Shared Function CreateSerializer(context As SerializerContext, usages As SerializerUsage, errorHandler As EventHandler(Of ErrorEventArgs) = Nothing, prettyPrint As Boolean = False) As JsonSerializer
  overload: TinyLife.SaveHandler.CreateSerializer*
  nameWithType.vb: SaveHandler.CreateSerializer(SerializerContext, SerializerUsage, EventHandler(Of ErrorEventArgs), Boolean)
  fullName.vb: TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext, TinyLife.SerializerUsage, System.EventHandler(Of Newtonsoft.Json.Serialization.ErrorEventArgs), Boolean)
  name.vb: CreateSerializer(SerializerContext, SerializerUsage, EventHandler(Of ErrorEventArgs), Boolean)
- uid: TinyLife.SaveHandler.AddResolvableType(System.String)
  commentId: M:TinyLife.SaveHandler.AddResolvableType(System.String)
  id: AddResolvableType(System.String)
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: AddResolvableType(string)
  nameWithType: SaveHandler.AddResolvableType(string)
  fullName: TinyLife.SaveHandler.AddResolvableType(string)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  syntax:
    content: public static void AddResolvableType(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Shared Sub AddResolvableType(name As String)
  overload: TinyLife.SaveHandler.AddResolvableType*
  nameWithType.vb: SaveHandler.AddResolvableType(String)
  fullName.vb: TinyLife.SaveHandler.AddResolvableType(String)
  name.vb: AddResolvableType(String)
- uid: TinyLife.SaveHandler.AddResolvableType(System.Type)
  commentId: M:TinyLife.SaveHandler.AddResolvableType(System.Type)
  id: AddResolvableType(System.Type)
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: AddResolvableType(Type)
  nameWithType: SaveHandler.AddResolvableType(Type)
  fullName: TinyLife.SaveHandler.AddResolvableType(System.Type)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife
  syntax:
    content: public static void AddResolvableType(Type type)
    parameters:
    - id: type
      type: System.Type
    content.vb: Public Shared Sub AddResolvableType(type As Type)
  overload: TinyLife.SaveHandler.AddResolvableType*
references:
- uid: TinyLife
  commentId: N:TinyLife
  href: TinyLife.html
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TinyLife.SaveHandler.TypeMigrationInfo
  commentId: T:TinyLife.SaveHandler.TypeMigrationInfo
  href: TinyLife.SaveHandler.html
  name: SaveHandler.TypeMigrationInfo
  nameWithType: SaveHandler.TypeMigrationInfo
  fullName: TinyLife.SaveHandler.TypeMigrationInfo
  spec.csharp:
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.TypeMigrationInfo
    name: TypeMigrationInfo
    href: TinyLife.SaveHandler.TypeMigrationInfo.html
  spec.vb:
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.TypeMigrationInfo
    name: TypeMigrationInfo
    href: TinyLife.SaveHandler.TypeMigrationInfo.html
- uid: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.SaveHandler.TypeMigrationInfo}}
  commentId: T:System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.SaveHandler.TypeMigrationInfo}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Migration<SaveHandler.TypeMigrationInfo>>
  nameWithType: List<Migration<SaveHandler.TypeMigrationInfo>>
  fullName: System.Collections.Generic.List<TinyLife.Utilities.Migration<TinyLife.SaveHandler.TypeMigrationInfo>>
  nameWithType.vb: List(Of Migration(Of SaveHandler.TypeMigrationInfo))
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Utilities.Migration(Of TinyLife.SaveHandler.TypeMigrationInfo))
  name.vb: List(Of Migration(Of SaveHandler.TypeMigrationInfo))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: <
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.TypeMigrationInfo
    name: TypeMigrationInfo
    href: TinyLife.SaveHandler.TypeMigrationInfo.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.TypeMigrationInfo
    name: TypeMigrationInfo
    href: TinyLife.SaveHandler.TypeMigrationInfo.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.MigratingStaticJsonConverter`1
  commentId: T:TinyLife.MigratingStaticJsonConverter`1
  href: TinyLife.MigratingStaticJsonConverter-1.html
  name: MigratingStaticJsonConverter<T>
  nameWithType: MigratingStaticJsonConverter<T>
  fullName: TinyLife.MigratingStaticJsonConverter<T>
  nameWithType.vb: MigratingStaticJsonConverter(Of T)
  fullName.vb: TinyLife.MigratingStaticJsonConverter(Of T)
  name.vb: MigratingStaticJsonConverter(Of T)
  spec.csharp:
  - uid: TinyLife.MigratingStaticJsonConverter`1
    name: MigratingStaticJsonConverter
    href: TinyLife.MigratingStaticJsonConverter-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: TinyLife.MigratingStaticJsonConverter`1
    name: MigratingStaticJsonConverter
    href: TinyLife.MigratingStaticJsonConverter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.SaveHandler.StaticMigrationInfo
  commentId: T:TinyLife.SaveHandler.StaticMigrationInfo
  href: TinyLife.SaveHandler.html
  name: SaveHandler.StaticMigrationInfo
  nameWithType: SaveHandler.StaticMigrationInfo
  fullName: TinyLife.SaveHandler.StaticMigrationInfo
  spec.csharp:
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.StaticMigrationInfo
    name: StaticMigrationInfo
    href: TinyLife.SaveHandler.StaticMigrationInfo.html
  spec.vb:
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.StaticMigrationInfo
    name: StaticMigrationInfo
    href: TinyLife.SaveHandler.StaticMigrationInfo.html
- uid: System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.SaveHandler.StaticMigrationInfo}}
  commentId: T:System.Collections.Generic.List{TinyLife.Utilities.Migration{TinyLife.SaveHandler.StaticMigrationInfo}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Migration<SaveHandler.StaticMigrationInfo>>
  nameWithType: List<Migration<SaveHandler.StaticMigrationInfo>>
  fullName: System.Collections.Generic.List<TinyLife.Utilities.Migration<TinyLife.SaveHandler.StaticMigrationInfo>>
  nameWithType.vb: List(Of Migration(Of SaveHandler.StaticMigrationInfo))
  fullName.vb: System.Collections.Generic.List(Of TinyLife.Utilities.Migration(Of TinyLife.SaveHandler.StaticMigrationInfo))
  name.vb: List(Of Migration(Of SaveHandler.StaticMigrationInfo))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: <
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.StaticMigrationInfo
    name: StaticMigrationInfo
    href: TinyLife.SaveHandler.StaticMigrationInfo.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Utilities.Migration`1
    name: Migration
    href: TinyLife.Utilities.Migration-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.StaticMigrationInfo
    name: StaticMigrationInfo
    href: TinyLife.SaveHandler.StaticMigrationInfo.html
  - name: )
  - name: )
- uid: System.Action{TinyLife.GameImpl,TinyLife.Mods.EventPhase}
  commentId: T:System.Action{TinyLife.GameImpl,TinyLife.Mods.EventPhase}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<GameImpl, EventPhase>
  nameWithType: Action<GameImpl, EventPhase>
  fullName: System.Action<TinyLife.GameImpl, TinyLife.Mods.EventPhase>
  nameWithType.vb: Action(Of GameImpl, EventPhase)
  fullName.vb: System.Action(Of TinyLife.GameImpl, TinyLife.Mods.EventPhase)
  name.vb: Action(Of GameImpl, EventPhase)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
    href: TinyLife.Mods.EventPhase.html
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
    href: TinyLife.Mods.EventPhase.html
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.SaveHandler.SaveData
  commentId: T:TinyLife.SaveHandler.SaveData
  href: TinyLife.SaveHandler.html
  name: SaveHandler.SaveData
  nameWithType: SaveHandler.SaveData
  fullName: TinyLife.SaveHandler.SaveData
  spec.csharp:
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.SaveData
    name: SaveData
    href: TinyLife.SaveHandler.SaveData.html
  spec.vb:
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.SaveData
    name: SaveData
    href: TinyLife.SaveHandler.SaveData.html
- uid: System.Action{TinyLife.GameImpl,TinyLife.SaveHandler.SaveData}
  commentId: T:System.Action{TinyLife.GameImpl,TinyLife.SaveHandler.SaveData}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<GameImpl, SaveHandler.SaveData>
  nameWithType: Action<GameImpl, SaveHandler.SaveData>
  fullName: System.Action<TinyLife.GameImpl, TinyLife.SaveHandler.SaveData>
  nameWithType.vb: Action(Of GameImpl, SaveHandler.SaveData)
  fullName.vb: System.Action(Of TinyLife.GameImpl, TinyLife.SaveHandler.SaveData)
  name.vb: Action(Of GameImpl, SaveHandler.SaveData)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.SaveData
    name: SaveData
    href: TinyLife.SaveHandler.SaveData.html
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.GameImpl
    name: GameImpl
    href: TinyLife.GameImpl.html
  - name: ','
  - name: " "
  - uid: TinyLife.SaveHandler
    name: SaveHandler
    href: TinyLife.SaveHandler.html
  - name: .
  - uid: TinyLife.SaveHandler.SaveData
    name: SaveData
    href: TinyLife.SaveHandler.SaveData.html
  - name: )
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  commentId: M:TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  isExternal: true
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_CreateSerializer_TinyLife_SerializerContext_TinyLife_SerializerUsage_System_EventHandler_Newtonsoft_Json_Serialization_ErrorEventArgs__System_Boolean_
  name: CreateSerializer(SerializerContext, SerializerUsage, EventHandler<ErrorEventArgs>, bool)
  nameWithType: SaveHandler.CreateSerializer(SerializerContext, SerializerUsage, EventHandler<ErrorEventArgs>, bool)
  fullName: TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext, TinyLife.SerializerUsage, System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs>, bool)
  nameWithType.vb: SaveHandler.CreateSerializer(SerializerContext, SerializerUsage, EventHandler(Of ErrorEventArgs), Boolean)
  fullName.vb: TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext, TinyLife.SerializerUsage, System.EventHandler(Of Newtonsoft.Json.Serialization.ErrorEventArgs), Boolean)
  name.vb: CreateSerializer(SerializerContext, SerializerUsage, EventHandler(Of ErrorEventArgs), Boolean)
  spec.csharp:
  - uid: TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
    name: CreateSerializer
    href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_CreateSerializer_TinyLife_SerializerContext_TinyLife_SerializerUsage_System_EventHandler_Newtonsoft_Json_Serialization_ErrorEventArgs__System_Boolean_
  - name: (
  - uid: TinyLife.SerializerContext
    name: SerializerContext
    href: TinyLife.SerializerContext.html
  - name: ','
  - name: " "
  - uid: TinyLife.SerializerUsage
    name: SerializerUsage
    href: TinyLife.SerializerUsage.html
  - name: ','
  - name: " "
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.SaveHandler.CreateSerializer(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
    name: CreateSerializer
    href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_CreateSerializer_TinyLife_SerializerContext_TinyLife_SerializerUsage_System_EventHandler_Newtonsoft_Json_Serialization_ErrorEventArgs__System_Boolean_
  - name: (
  - uid: TinyLife.SerializerContext
    name: SerializerContext
    href: TinyLife.SerializerContext.html
  - name: ','
  - name: " "
  - uid: TinyLife.SerializerUsage
    name: SerializerUsage
    href: TinyLife.SerializerUsage.html
  - name: ','
  - name: " "
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  commentId: M:TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
  isExternal: true
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_CreateSerializerSettings_TinyLife_SerializerContext_TinyLife_SerializerUsage_System_EventHandler_Newtonsoft_Json_Serialization_ErrorEventArgs__System_Boolean_
  name: CreateSerializerSettings(SerializerContext, SerializerUsage, EventHandler<ErrorEventArgs>, bool)
  nameWithType: SaveHandler.CreateSerializerSettings(SerializerContext, SerializerUsage, EventHandler<ErrorEventArgs>, bool)
  fullName: TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext, TinyLife.SerializerUsage, System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs>, bool)
  nameWithType.vb: SaveHandler.CreateSerializerSettings(SerializerContext, SerializerUsage, EventHandler(Of ErrorEventArgs), Boolean)
  fullName.vb: TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext, TinyLife.SerializerUsage, System.EventHandler(Of Newtonsoft.Json.Serialization.ErrorEventArgs), Boolean)
  name.vb: CreateSerializerSettings(SerializerContext, SerializerUsage, EventHandler(Of ErrorEventArgs), Boolean)
  spec.csharp:
  - uid: TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
    name: CreateSerializerSettings
    href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_CreateSerializerSettings_TinyLife_SerializerContext_TinyLife_SerializerUsage_System_EventHandler_Newtonsoft_Json_Serialization_ErrorEventArgs__System_Boolean_
  - name: (
  - uid: TinyLife.SerializerContext
    name: SerializerContext
    href: TinyLife.SerializerContext.html
  - name: ','
  - name: " "
  - uid: TinyLife.SerializerUsage
    name: SerializerUsage
    href: TinyLife.SerializerUsage.html
  - name: ','
  - name: " "
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.SaveHandler.CreateSerializerSettings(TinyLife.SerializerContext,TinyLife.SerializerUsage,System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs},System.Boolean)
    name: CreateSerializerSettings
    href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_CreateSerializerSettings_TinyLife_SerializerContext_TinyLife_SerializerUsage_System_EventHandler_Newtonsoft_Json_Serialization_ErrorEventArgs__System_Boolean_
  - name: (
  - uid: TinyLife.SerializerContext
    name: SerializerContext
    href: TinyLife.SerializerContext.html
  - name: ','
  - name: " "
  - uid: TinyLife.SerializerUsage
    name: SerializerUsage
    href: TinyLife.SerializerUsage.html
  - name: ','
  - name: " "
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Newtonsoft.Json.JsonSerializerSettings.Error
  commentId: P:Newtonsoft.Json.JsonSerializerSettings.Error
  isExternal: true
  name: Error
  nameWithType: JsonSerializerSettings.Error
  fullName: Newtonsoft.Json.JsonSerializerSettings.Error
- uid: Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorContext
  commentId: P:Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorContext
  isExternal: true
  name: ErrorContext
  nameWithType: ErrorEventArgs.ErrorContext
  fullName: Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorContext
- uid: Newtonsoft.Json.Serialization.ErrorContext.Handled
  commentId: P:Newtonsoft.Json.Serialization.ErrorContext.Handled
  isExternal: true
  name: Handled
  nameWithType: ErrorContext.Handled
  fullName: Newtonsoft.Json.Serialization.ErrorContext.Handled
- uid: System.EventHandler{System.ValueTuple{TinyLife.SerializerContext,TinyLife.SerializerUsage,Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}}
  commentId: T:System.EventHandler{System.ValueTuple{TinyLife.SerializerContext,TinyLife.SerializerUsage,Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<(SerializerContext Context, SerializerUsage Usages, ErrorEventArgs Args, EventPhase Phase)>
  nameWithType: EventHandler<(SerializerContext Context, SerializerUsage Usages, ErrorEventArgs Args, EventPhase Phase)>
  fullName: System.EventHandler<(TinyLife.SerializerContext Context, TinyLife.SerializerUsage Usages, Newtonsoft.Json.Serialization.ErrorEventArgs Args, TinyLife.Mods.EventPhase Phase)>
  nameWithType.vb: EventHandler(Of (Context As SerializerContext, Usages As SerializerUsage, Args As ErrorEventArgs, Phase As EventPhase))
  fullName.vb: System.EventHandler(Of (Context As TinyLife.SerializerContext, Usages As TinyLife.SerializerUsage, Args As Newtonsoft.Json.Serialization.ErrorEventArgs, Phase As TinyLife.Mods.EventPhase))
  name.vb: EventHandler(Of (Context As SerializerContext, Usages As SerializerUsage, Args As ErrorEventArgs, Phase As EventPhase))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: (
  - uid: TinyLife.SerializerContext
    name: SerializerContext
    href: TinyLife.SerializerContext.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.SerializerContext,TinyLife.SerializerUsage,Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}.Context
    name: Context
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.serializercontext,tinylife.serializerusage,newtonsoft.json.serialization.erroreventargs,tinylife.mods.eventphase-.context
  - name: ','
  - name: " "
  - uid: TinyLife.SerializerUsage
    name: SerializerUsage
    href: TinyLife.SerializerUsage.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.SerializerContext,TinyLife.SerializerUsage,Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}.Usages
    name: Usages
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.serializercontext,tinylife.serializerusage,newtonsoft.json.serialization.erroreventargs,tinylife.mods.eventphase-.usages
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{TinyLife.SerializerContext,TinyLife.SerializerUsage,Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}.Args
    name: Args
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.serializercontext,tinylife.serializerusage,newtonsoft.json.serialization.erroreventargs,tinylife.mods.eventphase-.args
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
    href: TinyLife.Mods.EventPhase.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.SerializerContext,TinyLife.SerializerUsage,Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}.Phase
    name: Phase
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.serializercontext,tinylife.serializerusage,newtonsoft.json.serialization.erroreventargs,tinylife.mods.eventphase-.phase
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.SerializerContext,TinyLife.SerializerUsage,Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}.Context
    name: Context
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.serializercontext,tinylife.serializerusage,newtonsoft.json.serialization.erroreventargs,tinylife.mods.eventphase-.context
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.SerializerContext
    name: SerializerContext
    href: TinyLife.SerializerContext.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.SerializerContext,TinyLife.SerializerUsage,Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}.Usages
    name: Usages
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.serializercontext,tinylife.serializerusage,newtonsoft.json.serialization.erroreventargs,tinylife.mods.eventphase-.usages
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.SerializerUsage
    name: SerializerUsage
    href: TinyLife.SerializerUsage.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.SerializerContext,TinyLife.SerializerUsage,Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}.Args
    name: Args
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.serializercontext,tinylife.serializerusage,newtonsoft.json.serialization.erroreventargs,tinylife.mods.eventphase-.args
  - name: " "
  - name: As
  - name: " "
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.SerializerContext,TinyLife.SerializerUsage,Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}.Phase
    name: Phase
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.serializercontext,tinylife.serializerusage,newtonsoft.json.serialization.erroreventargs,tinylife.mods.eventphase-.phase
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
    href: TinyLife.Mods.EventPhase.html
  - name: )
  - name: )
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: TinyLife.SaveHandler.GetGameDir*
  commentId: Overload:TinyLife.SaveHandler.GetGameDir
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_GetGameDir
  name: GetGameDir
  nameWithType: SaveHandler.GetGameDir
  fullName: TinyLife.SaveHandler.GetGameDir
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: TinyLife.SaveHandler.GetGameDir
  commentId: M:TinyLife.SaveHandler.GetGameDir
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_GetGameDir
  name: GetGameDir()
  nameWithType: SaveHandler.GetGameDir()
  fullName: TinyLife.SaveHandler.GetGameDir()
  spec.csharp:
  - uid: TinyLife.SaveHandler.GetGameDir
    name: GetGameDir
    href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_GetGameDir
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.SaveHandler.GetGameDir
    name: GetGameDir
    href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_GetGameDir
  - name: (
  - name: )
- uid: TinyLife.SaveHandler.GetSavesDir*
  commentId: Overload:TinyLife.SaveHandler.GetSavesDir
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_GetSavesDir
  name: GetSavesDir
  nameWithType: SaveHandler.GetSavesDir
  fullName: TinyLife.SaveHandler.GetSavesDir
- uid: TinyLife.SaveHandler.GetSavesDir
  commentId: M:TinyLife.SaveHandler.GetSavesDir
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_GetSavesDir
  name: GetSavesDir()
  nameWithType: SaveHandler.GetSavesDir()
  fullName: TinyLife.SaveHandler.GetSavesDir()
  spec.csharp:
  - uid: TinyLife.SaveHandler.GetSavesDir
    name: GetSavesDir
    href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_GetSavesDir
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.SaveHandler.GetSavesDir
    name: GetSavesDir
    href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_GetSavesDir
  - name: (
  - name: )
- uid: TinyLife.SaveHandler.GetSaveDir*
  commentId: Overload:TinyLife.SaveHandler.GetSaveDir
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_GetSaveDir_System_String_
  name: GetSaveDir
  nameWithType: SaveHandler.GetSaveDir
  fullName: TinyLife.SaveHandler.GetSaveDir
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.SaveHandler.GetSaveBackups*
  commentId: Overload:TinyLife.SaveHandler.GetSaveBackups
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_GetSaveBackups_System_String_
  name: GetSaveBackups
  nameWithType: SaveHandler.GetSaveBackups
  fullName: TinyLife.SaveHandler.GetSaveBackups
- uid: System.Collections.Generic.IEnumerable{System.IO.FileInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.IO.FileInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<FileInfo>
  nameWithType: IEnumerable<FileInfo>
  fullName: System.Collections.Generic.IEnumerable<System.IO.FileInfo>
  nameWithType.vb: IEnumerable(Of FileInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.IO.FileInfo)
  name.vb: IEnumerable(Of FileInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.SaveHandler.GetScreenshotsDir*
  commentId: Overload:TinyLife.SaveHandler.GetScreenshotsDir
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_GetScreenshotsDir
  name: GetScreenshotsDir
  nameWithType: SaveHandler.GetScreenshotsDir
  fullName: TinyLife.SaveHandler.GetScreenshotsDir
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  href: TinyLife.World.Map.html
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.SaveHandler.CreateSerializerSettings*
  commentId: Overload:TinyLife.SaveHandler.CreateSerializerSettings
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_CreateSerializerSettings_TinyLife_SerializerContext_TinyLife_SerializerUsage_System_EventHandler_Newtonsoft_Json_Serialization_ErrorEventArgs__System_Boolean_
  name: CreateSerializerSettings
  nameWithType: SaveHandler.CreateSerializerSettings
  fullName: TinyLife.SaveHandler.CreateSerializerSettings
- uid: TinyLife.SerializerContext
  commentId: T:TinyLife.SerializerContext
  parent: TinyLife
  href: TinyLife.SerializerContext.html
  name: SerializerContext
  nameWithType: SerializerContext
  fullName: TinyLife.SerializerContext
- uid: TinyLife.SerializerUsage
  commentId: T:TinyLife.SerializerUsage
  parent: TinyLife
  href: TinyLife.SerializerUsage.html
  name: SerializerUsage
  nameWithType: SerializerUsage
  fullName: TinyLife.SerializerUsage
- uid: System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs}
  commentId: T:System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ErrorEventArgs>
  nameWithType: EventHandler<ErrorEventArgs>
  fullName: System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs>
  nameWithType.vb: EventHandler(Of ErrorEventArgs)
  fullName.vb: System.EventHandler(Of Newtonsoft.Json.Serialization.ErrorEventArgs)
  name.vb: EventHandler(Of ErrorEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.SaveHandler.CreateSerializer*
  commentId: Overload:TinyLife.SaveHandler.CreateSerializer
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_CreateSerializer_TinyLife_SerializerContext_TinyLife_SerializerUsage_System_EventHandler_Newtonsoft_Json_Serialization_ErrorEventArgs__System_Boolean_
  name: CreateSerializer
  nameWithType: SaveHandler.CreateSerializer
  fullName: TinyLife.SaveHandler.CreateSerializer
- uid: TinyLife.SaveHandler.AddResolvableType*
  commentId: Overload:TinyLife.SaveHandler.AddResolvableType
  href: TinyLife.SaveHandler.html#TinyLife_SaveHandler_AddResolvableType_System_String_
  name: AddResolvableType
  nameWithType: SaveHandler.AddResolvableType
  fullName: TinyLife.SaveHandler.AddResolvableType
