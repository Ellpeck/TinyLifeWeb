### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.ActionSpot
  commentId: T:TinyLife.Objects.ActionSpot
  id: ActionSpot
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.ActionSpot.#ctor(Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2[])
  - TinyLife.Objects.ActionSpot.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2[])
  - TinyLife.Objects.ActionSpot.#ctor(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2[])
  - TinyLife.Objects.ActionSpot.AllSpots(Microsoft.Xna.Framework.Point,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.ActionSpot.BedSpots(System.Boolean,System.Single,System.Single)
  - TinyLife.Objects.ActionSpot.BenchSpots(System.Boolean,System.Single)
  - TinyLife.Objects.ActionSpot.CategoryRestriction
  - TinyLife.Objects.ActionSpot.ChairSpots(System.Single)
  - TinyLife.Objects.ActionSpot.CribSpots(System.Single)
  - TinyLife.Objects.ActionSpot.GetFreeDirections(TinyLife.Objects.Furniture,TinyLife.Objects.PersonLike)
  - TinyLife.Objects.ActionSpot.GetOccupants(TinyLife.Objects.Furniture,System.Boolean,System.Boolean)
  - TinyLife.Objects.ActionSpot.GetPicnicBenchDrawLayer(TinyLife.Objects.Furniture)
  - TinyLife.Objects.ActionSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point)
  - TinyLife.Objects.ActionSpot.SinkSpots
  langs:
  - csharp
  - vb
  name: ActionSpot
  nameWithType: ActionSpot
  fullName: TinyLife.Objects.ActionSpot
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: An action spot is a <xref href="TinyLife.Objects.AbstractSpot" data-throw-if-not-resolved="false"></xref> extension that is used by <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> to declare a location that a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> can interact with the furniture at
  example: []
  syntax:
    content: 'public class ActionSpot : AbstractSpot'
    content.vb: Public Class ActionSpot Inherits AbstractSpot
  inheritance:
  - System.Object
  - TinyLife.Objects.AbstractSpot
  inheritedMembers:
  - TinyLife.Objects.AbstractSpot.YOffset
  - TinyLife.Objects.AbstractSpot.Group
  - TinyLife.Objects.AbstractSpot.VisualDirection
  - TinyLife.Objects.AbstractSpot.DrawLayer
  - TinyLife.Objects.AbstractSpot.IsOnGround
  - TinyLife.Objects.AbstractSpot.ValidDirections
  - TinyLife.Objects.AbstractSpot.Offset
  - TinyLife.Objects.AbstractSpot.VisualOffset
  - TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
  - TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
  - TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture,System.Boolean)
  - TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
  - TinyLife.Objects.AbstractSpot.SortDrawLayers``1({T}[])
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.ActionSpot.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.ActionSpot.CategoryRestriction
  commentId: F:TinyLife.Objects.ActionSpot.CategoryRestriction
  id: CategoryRestriction
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: CategoryRestriction
  nameWithType: ActionSpot.CategoryRestriction
  fullName: TinyLife.Objects.ActionSpot.CategoryRestriction
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    The categories that this <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> is restricted to.

    This is used by things like <xref href="TinyLife.Objects.FurnitureType.ModernBed" data-throw-if-not-resolved="false"></xref> to declare separate spots for sitting on and sleeping on.

    By default, this is set to null.
  example: []
  syntax:
    content: public ObjectCategory CategoryRestriction
    return:
      type: TinyLife.Objects.ObjectCategory
    content.vb: Public CategoryRestriction As ObjectCategory
- uid: TinyLife.Objects.ActionSpot.#ctor(Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2[])
  commentId: M:TinyLife.Objects.ActionSpot.#ctor(Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2[])
  id: '#ctor(Microsoft.Xna.Framework.Vector2,MLEM.Maths.Direction2[])'
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: ActionSpot(Vector2, params Direction2[])
  nameWithType: ActionSpot.ActionSpot(Vector2, params Direction2[])
  fullName: TinyLife.Objects.ActionSpot.ActionSpot(Microsoft.Xna.Framework.Vector2, params MLEM.Maths.Direction2[])
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new action spot with the given settings
  example: []
  syntax:
    content: public ActionSpot(Vector2 offset, params Direction2[] validDirections)
    parameters:
    - id: offset
      type: Microsoft.Xna.Framework.Vector2
      description: The offset on both the x and y axis that this spot has
    - id: validDirections
      type: MLEM.Maths.Direction2[]
      description: The directions that this spot can be accessed from
    content.vb: Public Sub New(offset As Vector2, ParamArray validDirections As Direction2())
  overload: TinyLife.Objects.ActionSpot.#ctor*
  nameWithType.vb: ActionSpot.New(Vector2, ParamArray Direction2())
  fullName.vb: TinyLife.Objects.ActionSpot.New(Microsoft.Xna.Framework.Vector2, ParamArray MLEM.Maths.Direction2())
  name.vb: New(Vector2, ParamArray Direction2())
- uid: TinyLife.Objects.ActionSpot.#ctor(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2[])
  commentId: M:TinyLife.Objects.ActionSpot.#ctor(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2[])
  id: '#ctor(Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2[])'
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: ActionSpot(Vector2, float, params Direction2[])
  nameWithType: ActionSpot.ActionSpot(Vector2, float, params Direction2[])
  fullName: TinyLife.Objects.ActionSpot.ActionSpot(Microsoft.Xna.Framework.Vector2, float, params MLEM.Maths.Direction2[])
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new action spot with the given settings
  example: []
  syntax:
    content: public ActionSpot(Vector2 offset, float yOffset, params Direction2[] validDirections)
    parameters:
    - id: offset
      type: Microsoft.Xna.Framework.Vector2
      description: The offset on both the x and y axis that this spot has
    - id: yOffset
      type: System.Single
      description: The offset on the visual y axis
    - id: validDirections
      type: MLEM.Maths.Direction2[]
      description: The directions that this spot can be accessed from
    content.vb: Public Sub New(offset As Vector2, yOffset As Single, ParamArray validDirections As Direction2())
  overload: TinyLife.Objects.ActionSpot.#ctor*
  nameWithType.vb: ActionSpot.New(Vector2, Single, ParamArray Direction2())
  fullName.vb: TinyLife.Objects.ActionSpot.New(Microsoft.Xna.Framework.Vector2, Single, ParamArray MLEM.Maths.Direction2())
  name.vb: New(Vector2, Single, ParamArray Direction2())
- uid: TinyLife.Objects.ActionSpot.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2[])
  commentId: M:TinyLife.Objects.ActionSpot.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2[])
  id: '#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Maths.Direction2[])'
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: ActionSpot(Vector2, Vector2, float, params Direction2[])
  nameWithType: ActionSpot.ActionSpot(Vector2, Vector2, float, params Direction2[])
  fullName: TinyLife.Objects.ActionSpot.ActionSpot(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, float, params MLEM.Maths.Direction2[])
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: Creates a new action spot with the given settings
  example: []
  syntax:
    content: public ActionSpot(Vector2 offset, Vector2 visualOffset, float yOffset, params Direction2[] validDirections)
    parameters:
    - id: offset
      type: Microsoft.Xna.Framework.Vector2
      description: The offset on both the x and y axis that this spot has
    - id: visualOffset
      type: Microsoft.Xna.Framework.Vector2
      description: The visual offset on both the x and y axis that this spot has
    - id: yOffset
      type: System.Single
      description: The offset on the visual y axis
    - id: validDirections
      type: MLEM.Maths.Direction2[]
      description: The directions that this spot can be accessed from
    content.vb: Public Sub New(offset As Vector2, visualOffset As Vector2, yOffset As Single, ParamArray validDirections As Direction2())
  overload: TinyLife.Objects.ActionSpot.#ctor*
  nameWithType.vb: ActionSpot.New(Vector2, Vector2, Single, ParamArray Direction2())
  fullName.vb: TinyLife.Objects.ActionSpot.New(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Single, ParamArray MLEM.Maths.Direction2())
  name.vb: New(Vector2, Vector2, Single, ParamArray Direction2())
- uid: TinyLife.Objects.ActionSpot.GetFreeDirections(TinyLife.Objects.Furniture,TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.Objects.ActionSpot.GetFreeDirections(TinyLife.Objects.Furniture,TinyLife.Objects.PersonLike)
  id: GetFreeDirections(TinyLife.Objects.Furniture,TinyLife.Objects.PersonLike)
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: GetFreeDirections(Furniture, PersonLike)
  nameWithType: ActionSpot.GetFreeDirections(Furniture, PersonLike)
  fullName: TinyLife.Objects.ActionSpot.GetFreeDirections(TinyLife.Objects.Furniture, TinyLife.Objects.PersonLike)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns a set of <xref href="MLEM.Maths.Direction2" data-throw-if-not-resolved="false"></xref> values that this spot can be accessed from.

    Valid directions will have an empty space that a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> can stand in, but not necessarily walk to.

    The returned value is used by <xref href="TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike%2cTinyLife.Objects.ObjectCategory)" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike%2cTinyLife.Objects.ObjectCategory)" data-throw-if-not-resolved="false"></xref> to find a location adjacent to this action spot that a <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> can walk to.
  example: []
  syntax:
    content: public IEnumerable<Direction2> GetFreeDirections(Furniture furniture, PersonLike person)
    parameters:
    - id: furniture
      type: TinyLife.Objects.Furniture
      description: The furnituret that this action spot belongs to
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person trying to use this action spot
    return:
      type: System.Collections.Generic.IEnumerable{MLEM.Maths.Direction2}
      description: A set of directions that are considered free, or an empty set if there are none
    content.vb: Public Function GetFreeDirections(furniture As Furniture, person As PersonLike) As IEnumerable(Of Direction2)
  overload: TinyLife.Objects.ActionSpot.GetFreeDirections*
- uid: TinyLife.Objects.ActionSpot.GetOccupants(TinyLife.Objects.Furniture,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Objects.ActionSpot.GetOccupants(TinyLife.Objects.Furniture,System.Boolean,System.Boolean)
  id: GetOccupants(TinyLife.Objects.Furniture,System.Boolean,System.Boolean)
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: GetOccupants(Furniture, bool, bool)
  nameWithType: ActionSpot.GetOccupants(Furniture, bool, bool)
  fullName: TinyLife.Objects.ActionSpot.GetOccupants(TinyLife.Objects.Furniture, bool, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns a set of the <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> instances that are currently occupying this action spot.

    Note that an action spot is also marked as occupied if the person is currently on their way to it.
  example: []
  syntax:
    content: public IEnumerable<PersonLike> GetOccupants(Furniture furniture, bool visualOnly = false, bool includeGroup = false)
    parameters:
    - id: furniture
      type: TinyLife.Objects.Furniture
      description: The furnituret that this action spot belongs to
    - id: visualOnly
      type: System.Boolean
      description: Whether only occupants that occupy this spot visually, using <xref href="TinyLife.Objects.PersonLike.VisuallyOccupiedSpot" data-throw-if-not-resolved="false"></xref>, should be returned.
    - id: includeGroup
      type: System.Boolean
      description: Whether to include other action spots that have at least one of the same <xref href="TinyLife.Objects.AbstractSpot.Group" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
      description: A set of people interacting with this action spot
    content.vb: Public Function GetOccupants(furniture As Furniture, visualOnly As Boolean = False, includeGroup As Boolean = False) As IEnumerable(Of PersonLike)
  overload: TinyLife.Objects.ActionSpot.GetOccupants*
  nameWithType.vb: ActionSpot.GetOccupants(Furniture, Boolean, Boolean)
  fullName.vb: TinyLife.Objects.ActionSpot.GetOccupants(TinyLife.Objects.Furniture, Boolean, Boolean)
  name.vb: GetOccupants(Furniture, Boolean, Boolean)
- uid: TinyLife.Objects.ActionSpot.BedSpots(System.Boolean,System.Single,System.Single)
  commentId: M:TinyLife.Objects.ActionSpot.BedSpots(System.Boolean,System.Single,System.Single)
  id: BedSpots(System.Boolean,System.Single,System.Single)
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: BedSpots(bool, float, float)
  nameWithType: ActionSpot.BedSpots(bool, float, float)
  fullName: TinyLife.Objects.ActionSpot.BedSpots(bool, float, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A helper method that returns an array of <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> instances at the locations that they have to be for a bed.

    The spots returned also contain spots that a person can sit on if there's not already someone laying in the bed.

    This method can be used for single and double beds.
  example: []
  syntax:
    content: public static ActionSpot[] BedSpots(bool single = false, float sleepDrawLayer = 3, float sitDrawLayer = 4)
    parameters:
    - id: single
      type: System.Boolean
      description: Whether the bed in question is a single bed (or a double bed)
    - id: sleepDrawLayer
      type: System.Single
      description: The layer that sleeping people should be drawn on.
    - id: sitDrawLayer
      type: System.Single
      description: The layer that sitting people should be drawn on.
    return:
      type: TinyLife.Objects.ActionSpot[]
      description: A set of action spots for the bed
    content.vb: Public Shared Function BedSpots([single] As Boolean = False, sleepDrawLayer As Single = 3, sitDrawLayer As Single = 4) As ActionSpot()
  overload: TinyLife.Objects.ActionSpot.BedSpots*
  nameWithType.vb: ActionSpot.BedSpots(Boolean, Single, Single)
  fullName.vb: TinyLife.Objects.ActionSpot.BedSpots(Boolean, Single, Single)
  name.vb: BedSpots(Boolean, Single, Single)
- uid: TinyLife.Objects.ActionSpot.CribSpots(System.Single)
  commentId: M:TinyLife.Objects.ActionSpot.CribSpots(System.Single)
  id: CribSpots(System.Single)
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: CribSpots(float)
  nameWithType: ActionSpot.CribSpots(float)
  fullName: TinyLife.Objects.ActionSpot.CribSpots(float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A helper method that returns an array of <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> instances at the locations that they have to be for a crib for babies to sleep in.
  example: []
  syntax:
    content: public static ActionSpot[] CribSpots(float drawLayer = 3)
    parameters:
    - id: drawLayer
      type: System.Single
      description: The layer that people in the crib should be drawn on.
    return:
      type: TinyLife.Objects.ActionSpot[]
      description: A set of action spots for the crib.
    content.vb: Public Shared Function CribSpots(drawLayer As Single = 3) As ActionSpot()
  overload: TinyLife.Objects.ActionSpot.CribSpots*
  nameWithType.vb: ActionSpot.CribSpots(Single)
  fullName.vb: TinyLife.Objects.ActionSpot.CribSpots(Single)
  name.vb: CribSpots(Single)
- uid: TinyLife.Objects.ActionSpot.BenchSpots(System.Boolean,System.Single)
  commentId: M:TinyLife.Objects.ActionSpot.BenchSpots(System.Boolean,System.Single)
  id: BenchSpots(System.Boolean,System.Single)
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: BenchSpots(bool, float)
  nameWithType: ActionSpot.BenchSpots(bool, float)
  fullName: TinyLife.Objects.ActionSpot.BenchSpots(bool, float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A helper method that returns an array of <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> instances at locations relevant for benches and sofas.

    This is used by objects like <xref href="TinyLife.Objects.FurnitureType.SimpleBench" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Objects.FurnitureType.SimpleSofa" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ActionSpot[] BenchSpots(bool threeSeater = false, float drawLayer = 2)
    parameters:
    - id: threeSeater
      type: System.Boolean
      description: Whether the bench is a three-seater (three tiles large)
    - id: drawLayer
      type: System.Single
      description: The layer that people should be drawn on when sitting.
    return:
      type: TinyLife.Objects.ActionSpot[]
      description: An array of action spots for benches and sofas
    content.vb: Public Shared Function BenchSpots(threeSeater As Boolean = False, drawLayer As Single = 2) As ActionSpot()
  overload: TinyLife.Objects.ActionSpot.BenchSpots*
  nameWithType.vb: ActionSpot.BenchSpots(Boolean, Single)
  fullName.vb: TinyLife.Objects.ActionSpot.BenchSpots(Boolean, Single)
  name.vb: BenchSpots(Boolean, Single)
- uid: TinyLife.Objects.ActionSpot.ChairSpots(System.Single)
  commentId: M:TinyLife.Objects.ActionSpot.ChairSpots(System.Single)
  id: ChairSpots(System.Single)
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: ChairSpots(float)
  nameWithType: ActionSpot.ChairSpots(float)
  fullName: TinyLife.Objects.ActionSpot.ChairSpots(float)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A helper method that returns an array of <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> instances at locations relevant for regular chairs.
  example: []
  syntax:
    content: public static ActionSpot[] ChairSpots(float drawLayer = 1)
    parameters:
    - id: drawLayer
      type: System.Single
      description: The layer that people should be drawn on when sitting.
    return:
      type: TinyLife.Objects.ActionSpot[]
      description: An array of action spots for chairs
    content.vb: Public Shared Function ChairSpots(drawLayer As Single = 1) As ActionSpot()
  overload: TinyLife.Objects.ActionSpot.ChairSpots*
  nameWithType.vb: ActionSpot.ChairSpots(Single)
  fullName.vb: TinyLife.Objects.ActionSpot.ChairSpots(Single)
  name.vb: ChairSpots(Single)
- uid: TinyLife.Objects.ActionSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Objects.ActionSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point)
  id: PicnicTableSpots(Microsoft.Xna.Framework.Point)
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: PicnicTableSpots(Point)
  nameWithType: ActionSpot.PicnicTableSpots(Point)
  fullName: TinyLife.Objects.ActionSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    A helper method that returns an array of <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> instances at locations relevant for picnic-style tables that have attached benches.

    This is used by objects like <xref href="TinyLife.Objects.FurnitureType.SimplePicnicTable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ActionSpot[] PicnicTableSpots(Point size)
    parameters:
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size of the picnic table furniture
    return:
      type: TinyLife.Objects.ActionSpot[]
      description: An array of action spots for picnic tables
    content.vb: Public Shared Function PicnicTableSpots(size As Point) As ActionSpot()
  overload: TinyLife.Objects.ActionSpot.PicnicTableSpots*
- uid: TinyLife.Objects.ActionSpot.SinkSpots
  commentId: M:TinyLife.Objects.ActionSpot.SinkSpots
  id: SinkSpots
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: SinkSpots()
  nameWithType: ActionSpot.SinkSpots()
  fullName: TinyLife.Objects.ActionSpot.SinkSpots()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: A helper method that returns an array of <xref href="TinyLife.Objects.ActionSpot" data-throw-if-not-resolved="false"></xref> instances at locations relevant for kitchen and bathroom sinks.
  example: []
  syntax:
    content: public static ActionSpot[] SinkSpots()
    return:
      type: TinyLife.Objects.ActionSpot[]
      description: An array of action spots for sinks.
    content.vb: Public Shared Function SinkSpots() As ActionSpot()
  overload: TinyLife.Objects.ActionSpot.SinkSpots*
- uid: TinyLife.Objects.ActionSpot.AllSpots(Microsoft.Xna.Framework.Point,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.ActionSpot.AllSpots(Microsoft.Xna.Framework.Point,TinyLife.Objects.ObjectCategory)
  id: AllSpots(Microsoft.Xna.Framework.Point,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: AllSpots(Point, ObjectCategory)
  nameWithType: ActionSpot.AllSpots(Point, ObjectCategory)
  fullName: TinyLife.Objects.ActionSpot.AllSpots(Microsoft.Xna.Framework.Point, TinyLife.Objects.ObjectCategory)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    Returns an array of action spots with four valid directions for each location within the given <code class="paramref">size</code>.

    This is the default behavior for furniture that doesn't have manually set action spots.
  example: []
  syntax:
    content: public static ActionSpot[] AllSpots(Point size, ObjectCategory categoryRestriction = null)
    parameters:
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size of the furniture
    - id: categoryRestriction
      type: TinyLife.Objects.ObjectCategory
      description: An optional <xref href="TinyLife.Objects.ActionSpot.CategoryRestriction" data-throw-if-not-resolved="false"></xref>
    return:
      type: TinyLife.Objects.ActionSpot[]
      description: An array of all spots within the size
    content.vb: Public Shared Function AllSpots(size As Point, categoryRestriction As ObjectCategory = Nothing) As ActionSpot()
  overload: TinyLife.Objects.ActionSpot.AllSpots*
- uid: TinyLife.Objects.ActionSpot.GetPicnicBenchDrawLayer(TinyLife.Objects.Furniture)
  commentId: M:TinyLife.Objects.ActionSpot.GetPicnicBenchDrawLayer(TinyLife.Objects.Furniture)
  id: GetPicnicBenchDrawLayer(TinyLife.Objects.Furniture)
  parent: TinyLife.Objects.ActionSpot
  langs:
  - csharp
  - vb
  name: GetPicnicBenchDrawLayer(Furniture)
  nameWithType: ActionSpot.GetPicnicBenchDrawLayer(Furniture)
  fullName: TinyLife.Objects.ActionSpot.GetPicnicBenchDrawLayer(TinyLife.Objects.Furniture)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Objects
  summary: >-
    This is a helper method used by <xref href="TinyLife.Objects.ActionSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point)" data-throw-if-not-resolved="false"></xref>.

    Since picnic tables have their benches attached, their <xref href="TinyLife.Objects.AbstractSpot.DrawLayer" data-throw-if-not-resolved="false"></xref> needs to be based on the <xref href="TinyLife.Options.CameraRotation" data-throw-if-not-resolved="false"></xref>, which is what this method calculates.
  example: []
  syntax:
    content: public static float GetPicnicBenchDrawLayer(Furniture furniture)
    parameters:
    - id: furniture
      type: TinyLife.Objects.Furniture
      description: The object whose draw layer to get
    return:
      type: System.Single
      description: The draw layer as required by <xref href="TinyLife.Objects.AbstractSpot.DrawLayer" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function GetPicnicBenchDrawLayer(furniture As Furniture) As Single
  overload: TinyLife.Objects.ActionSpot.GetPicnicBenchDrawLayer*
references:
- uid: TinyLife.Objects.AbstractSpot
  commentId: T:TinyLife.Objects.AbstractSpot
  parent: TinyLife.Objects
  href: TinyLife.Objects.AbstractSpot.html
  name: AbstractSpot
  nameWithType: AbstractSpot
  fullName: TinyLife.Objects.AbstractSpot
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Objects.AbstractSpot.YOffset
  commentId: P:TinyLife.Objects.AbstractSpot.YOffset
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_YOffset
  name: YOffset
  nameWithType: AbstractSpot.YOffset
  fullName: TinyLife.Objects.AbstractSpot.YOffset
- uid: TinyLife.Objects.AbstractSpot.Group
  commentId: P:TinyLife.Objects.AbstractSpot.Group
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_Group
  name: Group
  nameWithType: AbstractSpot.Group
  fullName: TinyLife.Objects.AbstractSpot.Group
- uid: TinyLife.Objects.AbstractSpot.VisualDirection
  commentId: P:TinyLife.Objects.AbstractSpot.VisualDirection
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_VisualDirection
  name: VisualDirection
  nameWithType: AbstractSpot.VisualDirection
  fullName: TinyLife.Objects.AbstractSpot.VisualDirection
- uid: TinyLife.Objects.AbstractSpot.DrawLayer
  commentId: F:TinyLife.Objects.AbstractSpot.DrawLayer
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_DrawLayer
  name: DrawLayer
  nameWithType: AbstractSpot.DrawLayer
  fullName: TinyLife.Objects.AbstractSpot.DrawLayer
- uid: TinyLife.Objects.AbstractSpot.IsOnGround
  commentId: P:TinyLife.Objects.AbstractSpot.IsOnGround
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_IsOnGround
  name: IsOnGround
  nameWithType: AbstractSpot.IsOnGround
  fullName: TinyLife.Objects.AbstractSpot.IsOnGround
- uid: TinyLife.Objects.AbstractSpot.ValidDirections
  commentId: F:TinyLife.Objects.AbstractSpot.ValidDirections
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_ValidDirections
  name: ValidDirections
  nameWithType: AbstractSpot.ValidDirections
  fullName: TinyLife.Objects.AbstractSpot.ValidDirections
- uid: TinyLife.Objects.AbstractSpot.Offset
  commentId: F:TinyLife.Objects.AbstractSpot.Offset
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_Offset
  name: Offset
  nameWithType: AbstractSpot.Offset
  fullName: TinyLife.Objects.AbstractSpot.Offset
- uid: TinyLife.Objects.AbstractSpot.VisualOffset
  commentId: F:TinyLife.Objects.AbstractSpot.VisualOffset
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_VisualOffset
  name: VisualOffset
  nameWithType: AbstractSpot.VisualOffset
  fullName: TinyLife.Objects.AbstractSpot.VisualOffset
- uid: TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
  commentId: M:TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
  parent: TinyLife.Objects.AbstractSpot
  isExternal: true
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetValidDirections_MLEM_Maths_Direction2_
  name: GetValidDirections(Direction2)
  nameWithType: AbstractSpot.GetValidDirections(Direction2)
  fullName: TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
    name: GetValidDirections
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetValidDirections_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.GetValidDirections(MLEM.Maths.Direction2)
    name: GetValidDirections
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetValidDirections_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
- uid: TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
  commentId: M:TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
  parent: TinyLife.Objects.AbstractSpot
  isExternal: true
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetVisualDirection_MLEM_Maths_Direction2_
  name: GetVisualDirection(Direction2)
  nameWithType: AbstractSpot.GetVisualDirection(Direction2)
  fullName: TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
    name: GetVisualDirection
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetVisualDirection_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.GetVisualDirection(MLEM.Maths.Direction2)
    name: GetVisualDirection
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetVisualDirection_MLEM_Maths_Direction2_
  - name: (
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
- uid: TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture,System.Boolean)
  commentId: M:TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture,System.Boolean)
  parent: TinyLife.Objects.AbstractSpot
  isExternal: true
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetLocation_TinyLife_Objects_Furniture_System_Boolean_
  name: GetLocation(Furniture, bool)
  nameWithType: AbstractSpot.GetLocation(Furniture, bool)
  fullName: TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture, bool)
  nameWithType.vb: AbstractSpot.GetLocation(Furniture, Boolean)
  fullName.vb: TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture, Boolean)
  name.vb: GetLocation(Furniture, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture,System.Boolean)
    name: GetLocation
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetLocation_TinyLife_Objects_Furniture_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.GetLocation(TinyLife.Objects.Furniture,System.Boolean)
    name: GetLocation
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_GetLocation_TinyLife_Objects_Furniture_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
  commentId: M:TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
  parent: TinyLife.Objects.AbstractSpot
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_DoGroupsOverlap_TinyLife_Objects_AbstractSpot_
  name: DoGroupsOverlap(AbstractSpot)
  nameWithType: AbstractSpot.DoGroupsOverlap(AbstractSpot)
  fullName: TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
    name: DoGroupsOverlap
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_DoGroupsOverlap_TinyLife_Objects_AbstractSpot_
  - name: (
  - uid: TinyLife.Objects.AbstractSpot
    name: AbstractSpot
    href: TinyLife.Objects.AbstractSpot.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.DoGroupsOverlap(TinyLife.Objects.AbstractSpot)
    name: DoGroupsOverlap
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_DoGroupsOverlap_TinyLife_Objects_AbstractSpot_
  - name: (
  - uid: TinyLife.Objects.AbstractSpot
    name: AbstractSpot
    href: TinyLife.Objects.AbstractSpot.html
  - name: )
- uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1({T}[])
  commentId: M:TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
  parent: TinyLife.Objects.AbstractSpot
  definition: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  name: SortDrawLayers<T>(T[])
  nameWithType: AbstractSpot.SortDrawLayers<T>(T[])
  fullName: TinyLife.Objects.AbstractSpot.SortDrawLayers<T>(T[])
  nameWithType.vb: AbstractSpot.SortDrawLayers(Of T)(T())
  fullName.vb: TinyLife.Objects.AbstractSpot.SortDrawLayers(Of T)(T())
  name.vb: SortDrawLayers(Of T)(T())
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
    name: SortDrawLayers
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
    name: SortDrawLayers
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: (
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Objects.ActionSpot.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<ActionSpot>(ActionSpot)
  nameWithType: Extensions.JsonCopy<ActionSpot>(ActionSpot)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.ActionSpot>(TinyLife.Objects.ActionSpot)
  nameWithType.vb: Extensions.JsonCopy(Of ActionSpot)(ActionSpot)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.ActionSpot)(TinyLife.Objects.ActionSpot)
  name.vb: JsonCopy(Of ActionSpot)(ActionSpot)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.ActionSpot)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.ActionSpot)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: )
  - name: (
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
  commentId: M:TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
  href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  name: SortDrawLayers<T>(T[])
  nameWithType: AbstractSpot.SortDrawLayers<T>(T[])
  fullName: TinyLife.Objects.AbstractSpot.SortDrawLayers<T>(T[])
  nameWithType.vb: AbstractSpot.SortDrawLayers(Of T)(T())
  fullName.vb: TinyLife.Objects.AbstractSpot.SortDrawLayers(Of T)(T())
  name.vb: SortDrawLayers(Of T)(T())
  spec.csharp:
  - uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
    name: SortDrawLayers
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.AbstractSpot.SortDrawLayers``1(``0[])
    name: SortDrawLayers
    href: TinyLife.Objects.AbstractSpot.html#TinyLife_Objects_AbstractSpot_SortDrawLayers__1___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: (
  - name: )
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.ActionSpot
  commentId: T:TinyLife.Objects.ActionSpot
  parent: TinyLife.Objects
  href: TinyLife.Objects.ActionSpot.html
  name: ActionSpot
  nameWithType: ActionSpot
  fullName: TinyLife.Objects.ActionSpot
- uid: TinyLife.Objects.FurnitureType.ModernBed
  commentId: F:TinyLife.Objects.FurnitureType.ModernBed
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_ModernBed
  name: ModernBed
  nameWithType: FurnitureType.ModernBed
  fullName: TinyLife.Objects.FurnitureType.ModernBed
- uid: TinyLife.Objects.ObjectCategory
  commentId: T:TinyLife.Objects.ObjectCategory
  parent: TinyLife.Objects
  href: TinyLife.Objects.ObjectCategory.html
  name: ObjectCategory
  nameWithType: ObjectCategory
  fullName: TinyLife.Objects.ObjectCategory
- uid: TinyLife.Objects.ActionSpot.#ctor*
  commentId: Overload:TinyLife.Objects.ActionSpot.#ctor
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot__ctor_Microsoft_Xna_Framework_Vector2_MLEM_Maths_Direction2___
  name: ActionSpot
  nameWithType: ActionSpot.ActionSpot
  fullName: TinyLife.Objects.ActionSpot.ActionSpot
  nameWithType.vb: ActionSpot.New
  fullName.vb: TinyLife.Objects.ActionSpot.New
  name.vb: New
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: MLEM.Maths.Direction2[]
  isExternal: true
  name: Direction2[]
  nameWithType: Direction2[]
  fullName: MLEM.Maths.Direction2[]
  nameWithType.vb: Direction2()
  fullName.vb: MLEM.Maths.Direction2()
  name.vb: Direction2()
  spec.csharp:
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Maths.Direction2
  commentId: T:MLEM.Maths.Direction2
  parent: MLEM.Maths
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Maths.Direction2
- uid: TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.Furniture
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetFreeActionSpots_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetFreeActionSpots(PersonLike, ObjectCategory)
  nameWithType: Furniture.GetFreeActionSpots(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpots
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetFreeActionSpots_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetFreeActionSpots(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpots
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_GetFreeActionSpots_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetFreeActionSpotInfo_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  name: GetFreeActionSpotInfo(PersonLike, ObjectCategory)
  nameWithType: MapObject.GetFreeActionSpotInfo(PersonLike, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpotInfo
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetFreeActionSpotInfo_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.PersonLike,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpotInfo
    href: TinyLife.Objects.MapObject.html#TinyLife_Objects_MapObject_GetFreeActionSpotInfo_TinyLife_Objects_PersonLike_TinyLife_Objects_ObjectCategory_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    href: TinyLife.Objects.ObjectCategory.html
  - name: )
- uid: TinyLife.Objects.ActionSpot.GetFreeDirections*
  commentId: Overload:TinyLife.Objects.ActionSpot.GetFreeDirections
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_GetFreeDirections_TinyLife_Objects_Furniture_TinyLife_Objects_PersonLike_
  name: GetFreeDirections
  nameWithType: ActionSpot.GetFreeDirections
  fullName: TinyLife.Objects.ActionSpot.GetFreeDirections
- uid: System.Collections.Generic.IEnumerable{MLEM.Maths.Direction2}
  commentId: T:System.Collections.Generic.IEnumerable{MLEM.Maths.Direction2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Direction2>
  nameWithType: IEnumerable<Direction2>
  fullName: System.Collections.Generic.IEnumerable<MLEM.Maths.Direction2>
  nameWithType.vb: IEnumerable(Of Direction2)
  fullName.vb: System.Collections.Generic.IEnumerable(Of MLEM.Maths.Direction2)
  name.vb: IEnumerable(Of Direction2)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Maths.Direction2
    name: Direction2
    isExternal: true
  - name: )
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  isExternal: true
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Objects.PersonLike.VisuallyOccupiedSpot
  commentId: P:TinyLife.Objects.PersonLike.VisuallyOccupiedSpot
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_VisuallyOccupiedSpot
  name: VisuallyOccupiedSpot
  nameWithType: PersonLike.VisuallyOccupiedSpot
  fullName: TinyLife.Objects.PersonLike.VisuallyOccupiedSpot
- uid: TinyLife.Objects.ActionSpot.GetOccupants*
  commentId: Overload:TinyLife.Objects.ActionSpot.GetOccupants
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_GetOccupants_TinyLife_Objects_Furniture_System_Boolean_System_Boolean_
  name: GetOccupants
  nameWithType: ActionSpot.GetOccupants
  fullName: TinyLife.Objects.ActionSpot.GetOccupants
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.PersonLike}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<PersonLike>
  nameWithType: IEnumerable<PersonLike>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.PersonLike>
  nameWithType.vb: IEnumerable(Of PersonLike)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.PersonLike)
  name.vb: IEnumerable(Of PersonLike)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
- uid: TinyLife.Objects.ActionSpot.BedSpots*
  commentId: Overload:TinyLife.Objects.ActionSpot.BedSpots
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_BedSpots_System_Boolean_System_Single_System_Single_
  name: BedSpots
  nameWithType: ActionSpot.BedSpots
  fullName: TinyLife.Objects.ActionSpot.BedSpots
- uid: TinyLife.Objects.ActionSpot[]
  isExternal: true
  href: TinyLife.Objects.ActionSpot.html
  name: ActionSpot[]
  nameWithType: ActionSpot[]
  fullName: TinyLife.Objects.ActionSpot[]
  nameWithType.vb: ActionSpot()
  fullName.vb: TinyLife.Objects.ActionSpot()
  name.vb: ActionSpot()
  spec.csharp:
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    href: TinyLife.Objects.ActionSpot.html
  - name: (
  - name: )
- uid: TinyLife.Objects.ActionSpot.CribSpots*
  commentId: Overload:TinyLife.Objects.ActionSpot.CribSpots
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_CribSpots_System_Single_
  name: CribSpots
  nameWithType: ActionSpot.CribSpots
  fullName: TinyLife.Objects.ActionSpot.CribSpots
- uid: TinyLife.Objects.FurnitureType.SimpleBench
  commentId: F:TinyLife.Objects.FurnitureType.SimpleBench
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_SimpleBench
  name: SimpleBench
  nameWithType: FurnitureType.SimpleBench
  fullName: TinyLife.Objects.FurnitureType.SimpleBench
- uid: TinyLife.Objects.FurnitureType.SimpleSofa
  commentId: F:TinyLife.Objects.FurnitureType.SimpleSofa
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_SimpleSofa
  name: SimpleSofa
  nameWithType: FurnitureType.SimpleSofa
  fullName: TinyLife.Objects.FurnitureType.SimpleSofa
- uid: TinyLife.Objects.ActionSpot.BenchSpots*
  commentId: Overload:TinyLife.Objects.ActionSpot.BenchSpots
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_BenchSpots_System_Boolean_System_Single_
  name: BenchSpots
  nameWithType: ActionSpot.BenchSpots
  fullName: TinyLife.Objects.ActionSpot.BenchSpots
- uid: TinyLife.Objects.ActionSpot.ChairSpots*
  commentId: Overload:TinyLife.Objects.ActionSpot.ChairSpots
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_ChairSpots_System_Single_
  name: ChairSpots
  nameWithType: ActionSpot.ChairSpots
  fullName: TinyLife.Objects.ActionSpot.ChairSpots
- uid: TinyLife.Objects.FurnitureType.SimplePicnicTable
  commentId: F:TinyLife.Objects.FurnitureType.SimplePicnicTable
  href: TinyLife.Objects.FurnitureType.html#TinyLife_Objects_FurnitureType_SimplePicnicTable
  name: SimplePicnicTable
  nameWithType: FurnitureType.SimplePicnicTable
  fullName: TinyLife.Objects.FurnitureType.SimplePicnicTable
- uid: TinyLife.Objects.ActionSpot.PicnicTableSpots*
  commentId: Overload:TinyLife.Objects.ActionSpot.PicnicTableSpots
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_PicnicTableSpots_Microsoft_Xna_Framework_Point_
  name: PicnicTableSpots
  nameWithType: ActionSpot.PicnicTableSpots
  fullName: TinyLife.Objects.ActionSpot.PicnicTableSpots
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: TinyLife.Objects.ActionSpot.SinkSpots*
  commentId: Overload:TinyLife.Objects.ActionSpot.SinkSpots
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_SinkSpots
  name: SinkSpots
  nameWithType: ActionSpot.SinkSpots
  fullName: TinyLife.Objects.ActionSpot.SinkSpots
- uid: TinyLife.Objects.ActionSpot.CategoryRestriction
  commentId: F:TinyLife.Objects.ActionSpot.CategoryRestriction
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_CategoryRestriction
  name: CategoryRestriction
  nameWithType: ActionSpot.CategoryRestriction
  fullName: TinyLife.Objects.ActionSpot.CategoryRestriction
- uid: TinyLife.Objects.ActionSpot.AllSpots*
  commentId: Overload:TinyLife.Objects.ActionSpot.AllSpots
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_AllSpots_Microsoft_Xna_Framework_Point_TinyLife_Objects_ObjectCategory_
  name: AllSpots
  nameWithType: ActionSpot.AllSpots
  fullName: TinyLife.Objects.ActionSpot.AllSpots
- uid: TinyLife.Objects.ActionSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Objects.ActionSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point)
  isExternal: true
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_PicnicTableSpots_Microsoft_Xna_Framework_Point_
  name: PicnicTableSpots(Point)
  nameWithType: ActionSpot.PicnicTableSpots(Point)
  fullName: TinyLife.Objects.ActionSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point)
  spec.csharp:
  - uid: TinyLife.Objects.ActionSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point)
    name: PicnicTableSpots
    href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_PicnicTableSpots_Microsoft_Xna_Framework_Point_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.ActionSpot.PicnicTableSpots(Microsoft.Xna.Framework.Point)
    name: PicnicTableSpots
    href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_PicnicTableSpots_Microsoft_Xna_Framework_Point_
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: TinyLife.Options.CameraRotation
  commentId: F:TinyLife.Options.CameraRotation
  href: TinyLife.Options.html#TinyLife_Options_CameraRotation
  name: CameraRotation
  nameWithType: Options.CameraRotation
  fullName: TinyLife.Options.CameraRotation
- uid: TinyLife.Objects.ActionSpot.GetPicnicBenchDrawLayer*
  commentId: Overload:TinyLife.Objects.ActionSpot.GetPicnicBenchDrawLayer
  href: TinyLife.Objects.ActionSpot.html#TinyLife_Objects_ActionSpot_GetPicnicBenchDrawLayer_TinyLife_Objects_Furniture_
  name: GetPicnicBenchDrawLayer
  nameWithType: ActionSpot.GetPicnicBenchDrawLayer
  fullName: TinyLife.Objects.ActionSpot.GetPicnicBenchDrawLayer
