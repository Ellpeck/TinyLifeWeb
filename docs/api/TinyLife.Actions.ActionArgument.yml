### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.ActionArgument
  commentId: T:TinyLife.Actions.ActionArgument
  id: ActionArgument
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.ActionArgument.#ctor(System.Object)
  - TinyLife.Actions.ActionArgument.#ctor(System.String,System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}})
  - TinyLife.Actions.ActionArgument.#ctor(System.String,System.Object[])
  - TinyLife.Actions.ActionArgument.AddedConstructorArguments
  - TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionArgument.CanExecute
  - TinyLife.Actions.ActionArgument.CustomLayout
  - TinyLife.Actions.ActionArgument.Description
  - TinyLife.Actions.ActionArgument.DisplayName
  - TinyLife.Actions.ActionArgument.FreePeople(TinyLife.Actions.ActionInfo,System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean},TinyLife.Actions.CanExecuteResult},System.Boolean)
  - TinyLife.Actions.ActionArgument.GetDisplayName
  - TinyLife.Actions.ActionArgument.GetPassivePriority(TinyLife.Objects.PersonLike)
  - TinyLife.Actions.ActionArgument.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Maths.Padding)
  - TinyLife.Actions.ActionArgument.MarkSeen
  - TinyLife.Actions.ActionArgument.Name
  - TinyLife.Actions.ActionArgument.PassivePriority
  - TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,System.Boolean)
  - TinyLife.Actions.ActionArgument.StoredFurniture(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture},System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult})
  langs:
  - csharp
  - vb
  name: ActionArgument
  nameWithType: ActionArgument
  fullName: TinyLife.Actions.ActionArgument
  type: Class
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    An action variety is a modification to a <xref href="TinyLife.Actions.ActionType" data-throw-if-not-resolved="false"></xref> that represents a slightly changed version of the generic action type.

    Action varieties are used, for example, by <xref href="TinyLife.Actions.ActionType.PrepareFood" data-throw-if-not-resolved="false"></xref> to determine the kind of food that should be prepared.
  example: []
  syntax:
    content: 'public class ActionArgument : GenericDataHolder, IGenericDataHolder'
    content.vb: Public Class ActionArgument Inherits GenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.ActionArgument.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.ActionArgument.Name
  commentId: F:TinyLife.Actions.ActionArgument.Name
  id: Name
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ActionArgument.Name
  fullName: TinyLife.Actions.ActionArgument.Name
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: The name of this action variety
  example: []
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
- uid: TinyLife.Actions.ActionArgument.AddedConstructorArguments
  commentId: F:TinyLife.Actions.ActionArgument.AddedConstructorArguments
  id: AddedConstructorArguments
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: AddedConstructorArguments
  nameWithType: ActionArgument.AddedConstructorArguments
  fullName: TinyLife.Actions.ActionArgument.AddedConstructorArguments
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A set of additional arguments passed to the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> contructor by this variety.

    This is used in <xref href="TinyLife.Actions.ActionType.Construct%60%601(TinyLife.Actions.ActionInfo%2cTinyLife.Actions.ActionArgument%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Func<ActionType, ActionInfo, IEnumerable<object>> AddedConstructorArguments
    return:
      type: System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}}
    content.vb: Public AddedConstructorArguments As Func(Of ActionType, ActionInfo, IEnumerable(Of Object))
- uid: TinyLife.Actions.ActionArgument.PassivePriority
  commentId: F:TinyLife.Actions.ActionArgument.PassivePriority
  id: PassivePriority
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: PassivePriority
  nameWithType: ActionArgument.PassivePriority
  fullName: TinyLife.Actions.ActionArgument.PassivePriority
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A function that returns the passive priority of this action variety.

    If this function is null (which it is by default), <xref href="TinyLife.Actions.ActionArgument.GetPassivePriority(TinyLife.Objects.PersonLike)" data-throw-if-not-resolved="false"></xref> will return 1.

    If this function returns 0, this variety will not be chosen by the AI.

    This is an extension of <xref href="TinyLife.Actions.ActionType.AiSettings.PassivePriority" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Func<PersonLike, float> PassivePriority
    return:
      type: System.Func{TinyLife.Objects.PersonLike,System.Single}
    content.vb: Public PassivePriority As Func(Of PersonLike, Single)
- uid: TinyLife.Actions.ActionArgument.CanExecute
  commentId: F:TinyLife.Actions.ActionArgument.CanExecute
  id: CanExecute
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: CanExecute
  nameWithType: ActionArgument.CanExecute
  fullName: TinyLife.Actions.ActionArgument.CanExecute
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A function that returns whether or not this action variety can currently be chosen.

    This is an extension of <xref href="TinyLife.Actions.ActionType.TypeSettings.CanExecute" data-throw-if-not-resolved="false"></xref>.

    To query this delegate effectively, use <xref href="TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ActionType.CanExecuteDelegate CanExecute
    return:
      type: TinyLife.Actions.ActionType.CanExecuteDelegate
    content.vb: Public CanExecute As ActionType.CanExecuteDelegate
- uid: TinyLife.Actions.ActionArgument.DisplayName
  commentId: F:TinyLife.Actions.ActionArgument.DisplayName
  id: DisplayName
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: ActionArgument.DisplayName
  fullName: TinyLife.Actions.ActionArgument.DisplayName
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A function that is called to describe this action variety.

    This is used in the menu that pops up when the underlying <xref href="TinyLife.Actions.ActionType" data-throw-if-not-resolved="false"></xref> is picked.
  example: []
  syntax:
    content: public Func<string> DisplayName
    return:
      type: System.Func{System.String}
    content.vb: Public DisplayName As Func(Of String)
- uid: TinyLife.Actions.ActionArgument.Description
  commentId: F:TinyLife.Actions.ActionArgument.Description
  id: Description
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ActionArgument.Description
  fullName: TinyLife.Actions.ActionArgument.Description
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A function that is called to describe this action variety in more detail.

    This is used in the menu that pops up when the underlying <xref href="TinyLife.Actions.ActionType" data-throw-if-not-resolved="false"></xref> is picked.
  example: []
  syntax:
    content: public Func<string> Description
    return:
      type: System.Func{System.String}
    content.vb: Public Description As Func(Of String)
- uid: TinyLife.Actions.ActionArgument.CustomLayout
  commentId: F:TinyLife.Actions.ActionArgument.CustomLayout
  id: CustomLayout
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: CustomLayout
  nameWithType: ActionArgument.CustomLayout
  fullName: TinyLife.Actions.ActionArgument.CustomLayout
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    An action that is invoked when this action variety is added to a play mode ui.

    If this action is set, the <xref href="MLEM.Ui.Elements.Group" data-throw-if-not-resolved="false"></xref> or its main <xref href="MLEM.Ui.Elements.Button" data-throw-if-not-resolved="false"></xref> can be modified to look different (or removed) based on this variety.

    Predefined custom layouts such as <xref href="TinyLife.Actions.ActionArgument.ImageLayout(System.Single%2cMLEM.Ui.Elements.Element.DrawCallback%2cMLEM.Maths.Padding)" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike%2cTinyLife.Objects.PersonLike%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> can be found statically in this class.
  example: []
  syntax:
    content: public Action<(Group Group, Button Button, Image Tickmark, Tooltip Tooltip)> CustomLayout
    return:
      type: System.Action{System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}}
    content.vb: Public CustomLayout As Action(Of (Group As Group, Button As Button, Tickmark As Image, Tooltip As Tooltip))
- uid: TinyLife.Actions.ActionArgument.MarkSeen
  commentId: F:TinyLife.Actions.ActionArgument.MarkSeen
  id: MarkSeen
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: MarkSeen
  nameWithType: ActionArgument.MarkSeen
  fullName: TinyLife.Actions.ActionArgument.MarkSeen
  type: Field
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    Whether to use the <xref href="TinyLife.Options.SeenObjects" data-throw-if-not-resolved="false"></xref> system for this action argument based on its <xref href="TinyLife.Actions.ActionArgument.Name" data-throw-if-not-resolved="false"></xref>.

    If this returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, a green dot will display next to this action argument's button if it hasn't been seen by the player yet, and hovering over it will mark it as seen.
  example: []
  syntax:
    content: public Func<CanExecuteResult, bool> MarkSeen
    return:
      type: System.Func{TinyLife.Actions.CanExecuteResult,System.Boolean}
    content.vb: Public MarkSeen As Func(Of CanExecuteResult, Boolean)
- uid: TinyLife.Actions.ActionArgument.#ctor(System.String,System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}})
  commentId: M:TinyLife.Actions.ActionArgument.#ctor(System.String,System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}})
  id: '#ctor(System.String,System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}})'
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: ActionArgument(string, Func<ActionType, ActionInfo, IEnumerable<object>>)
  nameWithType: ActionArgument.ActionArgument(string, Func<ActionType, ActionInfo, IEnumerable<object>>)
  fullName: TinyLife.Actions.ActionArgument.ActionArgument(string, System.Func<TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, System.Collections.Generic.IEnumerable<object>>)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Creates a new action variety with the given settings.
  example: []
  syntax:
    content: public ActionArgument(string name, Func<ActionType, ActionInfo, IEnumerable<object>> addedConstructorArguments)
    parameters:
    - id: name
      type: System.String
      description: The name of this action variety.
    - id: addedConstructorArguments
      type: System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}}
      description: A set of added constructor arugments that are passed to the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(name As String, addedConstructorArguments As Func(Of ActionType, ActionInfo, IEnumerable(Of Object)))
  overload: TinyLife.Actions.ActionArgument.#ctor*
  nameWithType.vb: ActionArgument.New(String, Func(Of ActionType, ActionInfo, IEnumerable(Of Object)))
  fullName.vb: TinyLife.Actions.ActionArgument.New(String, System.Func(Of TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, System.Collections.Generic.IEnumerable(Of Object)))
  name.vb: New(String, Func(Of ActionType, ActionInfo, IEnumerable(Of Object)))
- uid: TinyLife.Actions.ActionArgument.#ctor(System.String,System.Object[])
  commentId: M:TinyLife.Actions.ActionArgument.#ctor(System.String,System.Object[])
  id: '#ctor(System.String,System.Object[])'
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: ActionArgument(string, params object[])
  nameWithType: ActionArgument.ActionArgument(string, params object[])
  fullName: TinyLife.Actions.ActionArgument.ActionArgument(string, params object[])
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Creates a new action variety with the given settings.
  example: []
  syntax:
    content: public ActionArgument(string name, params object[] addedConstructorArguments)
    parameters:
    - id: name
      type: System.String
      description: The name of this action variety.
    - id: addedConstructorArguments
      type: System.Object[]
      description: A set of added constructor arugments that are passed to the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(name As String, ParamArray addedConstructorArguments As Object())
  overload: TinyLife.Actions.ActionArgument.#ctor*
  nameWithType.vb: ActionArgument.New(String, ParamArray Object())
  fullName.vb: TinyLife.Actions.ActionArgument.New(String, ParamArray Object())
  name.vb: New(String, ParamArray Object())
- uid: TinyLife.Actions.ActionArgument.#ctor(System.Object)
  commentId: M:TinyLife.Actions.ActionArgument.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: ActionArgument(object)
  nameWithType: ActionArgument.ActionArgument(object)
  fullName: TinyLife.Actions.ActionArgument.ActionArgument(object)
  type: Constructor
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    Creates a new action variety with the given settings.

    The <xref href="TinyLife.Actions.ActionArgument.Name" data-throw-if-not-resolved="false"></xref> is set to the string representation of the <code class="paramref">addedConstructorArgument</code>.
  example: []
  syntax:
    content: public ActionArgument(object addedConstructorArgument)
    parameters:
    - id: addedConstructorArgument
      type: System.Object
      description: An added constructor arugment that is passed to the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(addedConstructorArgument As Object)
  overload: TinyLife.Actions.ActionArgument.#ctor*
  nameWithType.vb: ActionArgument.New(Object)
  fullName.vb: TinyLife.Actions.ActionArgument.New(Object)
  name.vb: New(Object)
- uid: TinyLife.Actions.ActionArgument.GetDisplayName
  commentId: M:TinyLife.Actions.ActionArgument.GetDisplayName
  id: GetDisplayName
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: GetDisplayName()
  nameWithType: ActionArgument.GetDisplayName()
  fullName: TinyLife.Actions.ActionArgument.GetDisplayName()
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Returns the display name of this action varietiy, which is either the value returned by <xref href="TinyLife.Actions.ActionArgument.DisplayName" data-throw-if-not-resolved="false"></xref> or a default localized display name
  example: []
  syntax:
    content: public string GetDisplayName()
    return:
      type: System.String
      description: This action variety's display name
    content.vb: Public Function GetDisplayName() As String
  overload: TinyLife.Actions.ActionArgument.GetDisplayName*
- uid: TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  id: CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: CanBeExecuted(ActionInfo, bool)
  nameWithType: ActionArgument.CanBeExecuted(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    Returns whether this action variety can be executed using the provided <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref>.

    This returns the result of <xref href="TinyLife.Actions.ActionArgument.CanExecute" data-throw-if-not-resolved="false"></xref>, or <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if it is null.
  example: []
  syntax:
    content: public CanExecuteResult CanBeExecuted(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether the action is automatic
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: Whether this variety can currently be executed
    content.vb: Public Function CanBeExecuted(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionArgument.CanBeExecuted*
  nameWithType.vb: ActionArgument.CanBeExecuted(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanBeExecuted(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionArgument.GetPassivePriority(TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.Actions.ActionArgument.GetPassivePriority(TinyLife.Objects.PersonLike)
  id: GetPassivePriority(TinyLife.Objects.PersonLike)
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: GetPassivePriority(PersonLike)
  nameWithType: ActionArgument.GetPassivePriority(PersonLike)
  fullName: TinyLife.Actions.ActionArgument.GetPassivePriority(TinyLife.Objects.PersonLike)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: Returns the passive priority of this action variety, which is based on <xref href="TinyLife.Actions.ActionArgument.PassivePriority" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float GetPassivePriority(PersonLike person)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person for whom to return the passive priority
    return:
      type: System.Single
      description: The passive priority of this action variety
    content.vb: Public Function GetPassivePriority(person As PersonLike) As Single
  overload: TinyLife.Actions.ActionArgument.GetPassivePriority*
- uid: TinyLife.Actions.ActionArgument.FreePeople(TinyLife.Actions.ActionInfo,System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean},TinyLife.Actions.CanExecuteResult},System.Boolean)
  commentId: M:TinyLife.Actions.ActionArgument.FreePeople(TinyLife.Actions.ActionInfo,System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean},TinyLife.Actions.CanExecuteResult},System.Boolean)
  id: FreePeople(TinyLife.Actions.ActionInfo,System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean},TinyLife.Actions.CanExecuteResult},System.Boolean)
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: FreePeople(ActionInfo, Func<(ActionInfo Info, PersonLike Other, bool Automatic), CanExecuteResult>, bool)
  nameWithType: ActionArgument.FreePeople(ActionInfo, Func<(ActionInfo Info, PersonLike Other, bool Automatic), CanExecuteResult>, bool)
  fullName: TinyLife.Actions.ActionArgument.FreePeople(TinyLife.Actions.ActionInfo, System.Func<(TinyLife.Actions.ActionInfo Info, TinyLife.Objects.PersonLike Other, bool Automatic), TinyLife.Actions.CanExecuteResult>, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A helper method that returns a set of <xref href="TinyLife.Actions.ActionArgument" data-throw-if-not-resolved="false"></xref> instances that represents a set of people that are currently around and able to be interacted with.

    Each action variety contains passes the <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> instance in question as an <xref href="TinyLife.Actions.ActionArgument.AddedConstructorArguments" data-throw-if-not-resolved="false"></xref> rather than passing itself.

    This method is used for actions like <xref href="TinyLife.Actions.ActionType.AskToTaste" data-throw-if-not-resolved="false"></xref>, where a person can be selected to interact with from a variety menu.
  example: []
  syntax:
    content: public static IEnumerable<ActionArgument> FreePeople(ActionInfo info, Func<(ActionInfo Info, PersonLike Other, bool Automatic), CanExecuteResult> canExecute = null, bool showRelationship = true)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: canExecute
      type: System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean},TinyLife.Actions.CanExecuteResult}
      description: A <xref href="TinyLife.Actions.ActionType.CanExecuteDelegate" data-throw-if-not-resolved="false"></xref>-esque function that determines whether a given person should be included.
    - id: showRelationship
      type: System.Boolean
      description: Whether the relationship level between the <code class="paramref">info</code>'s <xref href="TinyLife.Actions.ActionInfo.Person" data-throw-if-not-resolved="false"></xref> and the free people should be displayed.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionArgument}
      description: A set of action varieties that represents the free people around.
    content.vb: Public Shared Function FreePeople(info As ActionInfo, canExecute As Func(Of (Info As ActionInfo, Other As PersonLike, Automatic As Boolean), CanExecuteResult) = Nothing, showRelationship As Boolean = True) As IEnumerable(Of ActionArgument)
  overload: TinyLife.Actions.ActionArgument.FreePeople*
  nameWithType.vb: ActionArgument.FreePeople(ActionInfo, Func(Of (Info As ActionInfo, Other As PersonLike, Automatic As Boolean), CanExecuteResult), Boolean)
  fullName.vb: TinyLife.Actions.ActionArgument.FreePeople(TinyLife.Actions.ActionInfo, System.Func(Of (Info As TinyLife.Actions.ActionInfo, Other As TinyLife.Objects.PersonLike, Automatic As Boolean), TinyLife.Actions.CanExecuteResult), Boolean)
  name.vb: FreePeople(ActionInfo, Func(Of (Info As ActionInfo, Other As PersonLike, Automatic As Boolean), CanExecuteResult), Boolean)
- uid: TinyLife.Actions.ActionArgument.StoredFurniture(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture},System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult})
  commentId: M:TinyLife.Actions.ActionArgument.StoredFurniture(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture},System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult})
  id: StoredFurniture(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture},System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult})
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: StoredFurniture(IEnumerable<Furniture>, Func<(ActionInfo Info, Furniture Furniture, bool Automatic), CanExecuteResult>)
  nameWithType: ActionArgument.StoredFurniture(IEnumerable<Furniture>, Func<(ActionInfo Info, Furniture Furniture, bool Automatic), CanExecuteResult>)
  fullName: TinyLife.Actions.ActionArgument.StoredFurniture(System.Collections.Generic.IEnumerable<TinyLife.Objects.Furniture>, System.Func<(TinyLife.Actions.ActionInfo Info, TinyLife.Objects.Furniture Furniture, bool Automatic), TinyLife.Actions.CanExecuteResult>)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A helper method that returns a set of <xref href="TinyLife.Actions.ActionArgument" data-throw-if-not-resolved="false"></xref> instances that represents a set of furniture that is currently stored in an object.

    Each action variety contains passes the <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> instance in question as an <xref href="TinyLife.Actions.ActionArgument.AddedConstructorArguments" data-throw-if-not-resolved="false"></xref> rather than passing itself.
  example: []
  syntax:
    content: public static IEnumerable<ActionArgument> StoredFurniture(IEnumerable<Furniture> furniture, Func<(ActionInfo Info, Furniture Furniture, bool Automatic), CanExecuteResult> canExecute = null)
    parameters:
    - id: furniture
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture}
      description: The furniture stored. If this is null, <xref href="System.Linq.Enumerable.Empty%60%601" data-throw-if-not-resolved="false"></xref> is returned.
    - id: canExecute
      type: System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult}
      description: A <xref href="TinyLife.Actions.ActionType.CanExecuteDelegate" data-throw-if-not-resolved="false"></xref>-esque function that determines whether a furniture item should be included.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionArgument}
      description: A set of action varieties that represents the furniture stored in an object.
    content.vb: Public Shared Function StoredFurniture(furniture As IEnumerable(Of Furniture), canExecute As Func(Of (Info As ActionInfo, Furniture As Furniture, Automatic As Boolean), CanExecuteResult) = Nothing) As IEnumerable(Of ActionArgument)
  overload: TinyLife.Actions.ActionArgument.StoredFurniture*
  nameWithType.vb: ActionArgument.StoredFurniture(IEnumerable(Of Furniture), Func(Of (Info As ActionInfo, Furniture As Furniture, Automatic As Boolean), CanExecuteResult))
  fullName.vb: TinyLife.Actions.ActionArgument.StoredFurniture(System.Collections.Generic.IEnumerable(Of TinyLife.Objects.Furniture), System.Func(Of (Info As TinyLife.Actions.ActionInfo, Furniture As TinyLife.Objects.Furniture, Automatic As Boolean), TinyLife.Actions.CanExecuteResult))
  name.vb: StoredFurniture(IEnumerable(Of Furniture), Func(Of (Info As ActionInfo, Furniture As Furniture, Automatic As Boolean), CanExecuteResult))
- uid: TinyLife.Actions.ActionArgument.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Maths.Padding)
  commentId: M:TinyLife.Actions.ActionArgument.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Maths.Padding)
  id: ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Maths.Padding)
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: ImageLayout(float, DrawCallback, Padding)
  nameWithType: ActionArgument.ImageLayout(float, Element.DrawCallback, Padding)
  fullName: TinyLife.Actions.ActionArgument.ImageLayout(float, MLEM.Ui.Elements.Element.DrawCallback, MLEM.Maths.Padding)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: >-
    A helper method intended to be used with <xref href="TinyLife.Actions.ActionArgument.CustomLayout" data-throw-if-not-resolved="false"></xref> that creates a layout with large, rectangular variety buttons that can draw something on themselves.

    This layout is used by actions like <xref href="TinyLife.Actions.ActionType.GetIngredientsSingle" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Actions.ActionType.ChangeOutfit" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Action<(Group Group, Button Button, Image Tickmark, Tooltip Tooltip)> ImageLayout(float height, Element.DrawCallback draw, Padding padding = default)
    parameters:
    - id: height
      type: System.Single
      description: The height that each button should have
    - id: draw
      type: MLEM.Ui.Elements.Element.DrawCallback
      description: A <xref href="MLEM.Ui.Elements.Element.DrawCallback" data-throw-if-not-resolved="false"></xref> that can be used to draw onto the button
    - id: padding
      type: MLEM.Maths.Padding
      description: The padding that the group that the image is displayed on should have, defaults to no padding
    return:
      type: System.Action{System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}}
      description: An action that can be fed into <xref href="TinyLife.Actions.ActionArgument.CustomLayout" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function ImageLayout(height As Single, draw As Element.DrawCallback, padding As Padding = Nothing) As Action(Of (Group As Group, Button As Button, Tickmark As Image, Tooltip As Tooltip))
  overload: TinyLife.Actions.ActionArgument.ImageLayout*
  nameWithType.vb: ActionArgument.ImageLayout(Single, Element.DrawCallback, Padding)
  fullName.vb: TinyLife.Actions.ActionArgument.ImageLayout(Single, MLEM.Ui.Elements.Element.DrawCallback, MLEM.Maths.Padding)
  name.vb: ImageLayout(Single, DrawCallback, Padding)
- uid: TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,System.Boolean)
  commentId: M:TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,System.Boolean)
  id: PortraitLayout(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,System.Boolean)
  parent: TinyLife.Actions.ActionArgument
  langs:
  - csharp
  - vb
  name: PortraitLayout(PersonLike, PersonLike, bool)
  nameWithType: ActionArgument.PortraitLayout(PersonLike, PersonLike, bool)
  fullName: TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike, TinyLife.Objects.PersonLike, bool)
  type: Method
  assemblies:
  - TinyLife
  namespace: TinyLife.Actions
  summary: A helper method intended to be used with <xref href="TinyLife.Actions.ActionArgument.CustomLayout" data-throw-if-not-resolved="false"></xref> that creates a layout that includes the <xref href="TinyLife.Objects.PersonLike.Portrait" data-throw-if-not-resolved="false"></xref> of the given <xref href="TinyLife.Objects.PersonLike" data-throw-if-not-resolved="false"></xref> in the center bottom.
  example: []
  syntax:
    content: public static Action<(Group Group, Button Button, Image Tickmark, Tooltip Tooltip)> PortraitLayout(PersonLike person, PersonLike otherPerson, bool showRelationship)
    parameters:
    - id: person
      type: TinyLife.Objects.PersonLike
      description: The person that will be interacting with the portrait layout, and subsequently the <code class="paramref">otherPerson</code>.
    - id: otherPerson
      type: TinyLife.Objects.PersonLike
      description: The person to create the portrait layout for
    - id: showRelationship
      type: System.Boolean
      description: Whether the relationship level between the <code class="paramref">person</code> and the <code class="paramref">otherPerson</code> should be displayed.
    return:
      type: System.Action{System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}}
      description: An action that can be fed into <xref href="TinyLife.Actions.ActionArgument.CustomLayout" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function PortraitLayout(person As PersonLike, otherPerson As PersonLike, showRelationship As Boolean) As Action(Of (Group As Group, Button As Button, Tickmark As Image, Tooltip As Tooltip))
  overload: TinyLife.Actions.ActionArgument.PortraitLayout*
  nameWithType.vb: ActionArgument.PortraitLayout(PersonLike, PersonLike, Boolean)
  fullName.vb: TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike, TinyLife.Objects.PersonLike, Boolean)
  name.vb: PortraitLayout(PersonLike, PersonLike, Boolean)
references:
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions.ActionType.PrepareFood
  commentId: F:TinyLife.Actions.ActionType.PrepareFood
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_PrepareFood
  name: PrepareFood
  nameWithType: ActionType.PrepareFood
  fullName: TinyLife.Actions.ActionType.PrepareFood
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Misc.GenericDataHolder
  definition: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: GenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(string)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Actions.ActionArgument.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<ActionArgument>(ActionArgument)
  nameWithType: Extensions.JsonCopy<ActionArgument>(ActionArgument)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.ActionArgument>(TinyLife.Actions.ActionArgument)
  nameWithType.vb: Extensions.JsonCopy(Of ActionArgument)(ActionArgument)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.ActionArgument)(TinyLife.Actions.ActionArgument)
  name.vb: JsonCopy(Of ActionArgument)(ActionArgument)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.ActionArgument)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.ActionArgument)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: )
  - name: (
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.ActionType.Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionArgument[])
  commentId: M:TinyLife.Actions.ActionType.Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionArgument[])
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_Construct__1_TinyLife_Actions_ActionInfo_TinyLife_Actions_ActionArgument___
  name: Construct<T>(ActionInfo, params ActionArgument[])
  nameWithType: ActionType.Construct<T>(ActionInfo, params ActionArgument[])
  fullName: TinyLife.Actions.ActionType.Construct<T>(TinyLife.Actions.ActionInfo, params TinyLife.Actions.ActionArgument[])
  nameWithType.vb: ActionType.Construct(Of T)(ActionInfo, ParamArray ActionArgument())
  fullName.vb: TinyLife.Actions.ActionType.Construct(Of T)(TinyLife.Actions.ActionInfo, ParamArray TinyLife.Actions.ActionArgument())
  name.vb: Construct(Of T)(ActionInfo, ParamArray ActionArgument())
  spec.csharp:
  - uid: TinyLife.Actions.ActionType.Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionArgument[])
    name: Construct
    href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_Construct__1_TinyLife_Actions_ActionInfo_TinyLife_Actions_ActionArgument___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionType.Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionArgument[])
    name: Construct
    href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_Construct__1_TinyLife_Actions_ActionInfo_TinyLife_Actions_ActionArgument___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: (
  - name: )
  - name: )
- uid: System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}}
  commentId: T:System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<ActionType, ActionInfo, IEnumerable<object>>
  nameWithType: Func<ActionType, ActionInfo, IEnumerable<object>>
  fullName: System.Func<TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, System.Collections.Generic.IEnumerable<object>>
  nameWithType.vb: Func(Of ActionType, ActionInfo, IEnumerable(Of Object))
  fullName.vb: System.Func(Of TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, System.Collections.Generic.IEnumerable(Of Object))
  name.vb: Func(Of ActionType, ActionInfo, IEnumerable(Of Object))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Actions.ActionArgument.GetPassivePriority(TinyLife.Objects.PersonLike)
  commentId: M:TinyLife.Actions.ActionArgument.GetPassivePriority(TinyLife.Objects.PersonLike)
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_GetPassivePriority_TinyLife_Objects_PersonLike_
  name: GetPassivePriority(PersonLike)
  nameWithType: ActionArgument.GetPassivePriority(PersonLike)
  fullName: TinyLife.Actions.ActionArgument.GetPassivePriority(TinyLife.Objects.PersonLike)
  spec.csharp:
  - uid: TinyLife.Actions.ActionArgument.GetPassivePriority(TinyLife.Objects.PersonLike)
    name: GetPassivePriority
    href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_GetPassivePriority_TinyLife_Objects_PersonLike_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionArgument.GetPassivePriority(TinyLife.Objects.PersonLike)
    name: GetPassivePriority
    href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_GetPassivePriority_TinyLife_Objects_PersonLike_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: )
- uid: TinyLife.Actions.ActionType.AiSettings.PassivePriority
  commentId: F:TinyLife.Actions.ActionType.AiSettings.PassivePriority
  href: TinyLife.Actions.ActionType.AiSettings.html#TinyLife_Actions_ActionType_AiSettings_PassivePriority
  name: PassivePriority
  nameWithType: ActionType.AiSettings.PassivePriority
  fullName: TinyLife.Actions.ActionType.AiSettings.PassivePriority
- uid: System.Func{TinyLife.Objects.PersonLike,System.Single}
  commentId: T:System.Func{TinyLife.Objects.PersonLike,System.Single}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<PersonLike, float>
  nameWithType: Func<PersonLike, float>
  fullName: System.Func<TinyLife.Objects.PersonLike, float>
  nameWithType.vb: Func(Of PersonLike, Single)
  fullName.vb: System.Func(Of TinyLife.Objects.PersonLike, Single)
  name.vb: Func(Of PersonLike, Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Actions.ActionType.TypeSettings.CanExecute
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.CanExecute
  href: TinyLife.Actions.ActionType.TypeSettings.html#TinyLife_Actions_ActionType_TypeSettings_CanExecute
  name: CanExecute
  nameWithType: ActionType.TypeSettings.CanExecute
  fullName: TinyLife.Actions.ActionType.TypeSettings.CanExecute
- uid: TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_CanBeExecuted_TinyLife_Actions_ActionInfo_System_Boolean_
  name: CanBeExecuted(ActionInfo, bool)
  nameWithType: ActionArgument.CanBeExecuted(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo, bool)
  nameWithType.vb: ActionArgument.CanBeExecuted(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanBeExecuted(ActionInfo, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
    name: CanBeExecuted
    href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_CanBeExecuted_TinyLife_Actions_ActionInfo_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionArgument.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
    name: CanBeExecuted
    href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_CanBeExecuted_TinyLife_Actions_ActionInfo_System_Boolean_
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate
  commentId: T:TinyLife.Actions.ActionType.CanExecuteDelegate
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionType.html
  name: ActionType.CanExecuteDelegate
  nameWithType: ActionType.CanExecuteDelegate
  fullName: TinyLife.Actions.ActionType.CanExecuteDelegate
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
    href: TinyLife.Actions.ActionType.CanExecuteDelegate.html
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    href: TinyLife.Actions.ActionType.html
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
    href: TinyLife.Actions.ActionType.CanExecuteDelegate.html
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<string>
  nameWithType: Func<string>
  fullName: System.Func<string>
  nameWithType.vb: Func(Of String)
  fullName.vb: System.Func(Of String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: MLEM.Ui.Elements.Group
  commentId: T:MLEM.Ui.Elements.Group
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Group
  nameWithType: Group
  fullName: MLEM.Ui.Elements.Group
- uid: MLEM.Ui.Elements.Button
  commentId: T:MLEM.Ui.Elements.Button
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Button
  nameWithType: Button
  fullName: MLEM.Ui.Elements.Button
- uid: TinyLife.Actions.ActionArgument.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Maths.Padding)
  commentId: M:TinyLife.Actions.ActionArgument.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Maths.Padding)
  isExternal: true
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_ImageLayout_System_Single_MLEM_Ui_Elements_Element_DrawCallback_MLEM_Maths_Padding_
  name: ImageLayout(float, DrawCallback, Padding)
  nameWithType: ActionArgument.ImageLayout(float, Element.DrawCallback, Padding)
  fullName: TinyLife.Actions.ActionArgument.ImageLayout(float, MLEM.Ui.Elements.Element.DrawCallback, MLEM.Maths.Padding)
  nameWithType.vb: ActionArgument.ImageLayout(Single, Element.DrawCallback, Padding)
  fullName.vb: TinyLife.Actions.ActionArgument.ImageLayout(Single, MLEM.Ui.Elements.Element.DrawCallback, MLEM.Maths.Padding)
  name.vb: ImageLayout(Single, DrawCallback, Padding)
  spec.csharp:
  - uid: TinyLife.Actions.ActionArgument.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Maths.Padding)
    name: ImageLayout
    href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_ImageLayout_System_Single_MLEM_Ui_Elements_Element_DrawCallback_MLEM_Maths_Padding_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Padding
    name: Padding
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionArgument.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Maths.Padding)
    name: ImageLayout
    href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_ImageLayout_System_Single_MLEM_Ui_Elements_Element_DrawCallback_MLEM_Maths_Padding_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Padding
    name: Padding
    isExternal: true
  - name: )
- uid: TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,System.Boolean)
  commentId: M:TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,System.Boolean)
  isExternal: true
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_PortraitLayout_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_System_Boolean_
  name: PortraitLayout(PersonLike, PersonLike, bool)
  nameWithType: ActionArgument.PortraitLayout(PersonLike, PersonLike, bool)
  fullName: TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike, TinyLife.Objects.PersonLike, bool)
  nameWithType.vb: ActionArgument.PortraitLayout(PersonLike, PersonLike, Boolean)
  fullName.vb: TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike, TinyLife.Objects.PersonLike, Boolean)
  name.vb: PortraitLayout(PersonLike, PersonLike, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,System.Boolean)
    name: PortraitLayout
    href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_PortraitLayout_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionArgument.PortraitLayout(TinyLife.Objects.PersonLike,TinyLife.Objects.PersonLike,System.Boolean)
    name: PortraitLayout
    href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_PortraitLayout_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action{System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}}
  commentId: T:System.Action{System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<(Group Group, Button Button, Image Tickmark, Tooltip Tooltip)>
  nameWithType: Action<(Group Group, Button Button, Image Tickmark, Tooltip Tooltip)>
  fullName: System.Action<(MLEM.Ui.Elements.Group Group, MLEM.Ui.Elements.Button Button, MLEM.Ui.Elements.Image Tickmark, MLEM.Ui.Elements.Tooltip Tooltip)>
  nameWithType.vb: Action(Of (Group As Group, Button As Button, Tickmark As Image, Tooltip As Tooltip))
  fullName.vb: System.Action(Of (Group As MLEM.Ui.Elements.Group, Button As MLEM.Ui.Elements.Button, Tickmark As MLEM.Ui.Elements.Image, Tooltip As MLEM.Ui.Elements.Tooltip))
  name.vb: Action(Of (Group As Group, Button As Button, Tickmark As Image, Tooltip As Tooltip))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: (
  - uid: MLEM.Ui.Elements.Group
    name: Group
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}.Group
    name: Group
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-mlem.ui.elements.group,mlem.ui.elements.button,mlem.ui.elements.image,mlem.ui.elements.tooltip-.group
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Button
    name: Button
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}.Button
    name: Button
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-mlem.ui.elements.group,mlem.ui.elements.button,mlem.ui.elements.image,mlem.ui.elements.tooltip-.button
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Image
    name: Image
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}.Tickmark
    name: Tickmark
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-mlem.ui.elements.group,mlem.ui.elements.button,mlem.ui.elements.image,mlem.ui.elements.tooltip-.tickmark
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}.Tooltip
    name: Tooltip
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-mlem.ui.elements.group,mlem.ui.elements.button,mlem.ui.elements.image,mlem.ui.elements.tooltip-.tooltip
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}.Group
    name: Group
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-mlem.ui.elements.group,mlem.ui.elements.button,mlem.ui.elements.image,mlem.ui.elements.tooltip-.group
  - name: " "
  - name: As
  - name: " "
  - uid: MLEM.Ui.Elements.Group
    name: Group
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}.Button
    name: Button
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-mlem.ui.elements.group,mlem.ui.elements.button,mlem.ui.elements.image,mlem.ui.elements.tooltip-.button
  - name: " "
  - name: As
  - name: " "
  - uid: MLEM.Ui.Elements.Button
    name: Button
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}.Tickmark
    name: Tickmark
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-mlem.ui.elements.group,mlem.ui.elements.button,mlem.ui.elements.image,mlem.ui.elements.tooltip-.tickmark
  - name: " "
  - name: As
  - name: " "
  - uid: MLEM.Ui.Elements.Image
    name: Image
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{MLEM.Ui.Elements.Group,MLEM.Ui.Elements.Button,MLEM.Ui.Elements.Image,MLEM.Ui.Elements.Tooltip}.Tooltip
    name: Tooltip
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-mlem.ui.elements.group,mlem.ui.elements.button,mlem.ui.elements.image,mlem.ui.elements.tooltip-.tooltip
  - name: " "
  - name: As
  - name: " "
  - uid: MLEM.Ui.Elements.Tooltip
    name: Tooltip
    isExternal: true
  - name: )
  - name: )
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Options.SeenObjects
  commentId: F:TinyLife.Options.SeenObjects
  href: TinyLife.Options.html#TinyLife_Options_SeenObjects
  name: SeenObjects
  nameWithType: Options.SeenObjects
  fullName: TinyLife.Options.SeenObjects
- uid: TinyLife.Actions.ActionArgument.Name
  commentId: F:TinyLife.Actions.ActionArgument.Name
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_Name
  name: Name
  nameWithType: ActionArgument.Name
  fullName: TinyLife.Actions.ActionArgument.Name
- uid: System.Func{TinyLife.Actions.CanExecuteResult,System.Boolean}
  commentId: T:System.Func{TinyLife.Actions.CanExecuteResult,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<CanExecuteResult, bool>
  nameWithType: Func<CanExecuteResult, bool>
  fullName: System.Func<TinyLife.Actions.CanExecuteResult, bool>
  nameWithType.vb: Func(Of CanExecuteResult, Boolean)
  fullName.vb: System.Func(Of TinyLife.Actions.CanExecuteResult, Boolean)
  name.vb: Func(Of CanExecuteResult, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.ActionArgument.#ctor*
  commentId: Overload:TinyLife.Actions.ActionArgument.#ctor
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument__ctor_System_String_System_Func_TinyLife_Actions_ActionType_TinyLife_Actions_ActionInfo_System_Collections_Generic_IEnumerable_System_Object___
  name: ActionArgument
  nameWithType: ActionArgument.ActionArgument
  fullName: TinyLife.Actions.ActionArgument.ActionArgument
  nameWithType.vb: ActionArgument.New
  fullName.vb: TinyLife.Actions.ActionArgument.New
  name.vb: New
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: TinyLife.Actions.ActionArgument.DisplayName
  commentId: F:TinyLife.Actions.ActionArgument.DisplayName
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_DisplayName
  name: DisplayName
  nameWithType: ActionArgument.DisplayName
  fullName: TinyLife.Actions.ActionArgument.DisplayName
- uid: TinyLife.Actions.ActionArgument.GetDisplayName*
  commentId: Overload:TinyLife.Actions.ActionArgument.GetDisplayName
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_GetDisplayName
  name: GetDisplayName
  nameWithType: ActionArgument.GetDisplayName
  fullName: TinyLife.Actions.ActionArgument.GetDisplayName
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  href: TinyLife.Actions.ActionInfo.html
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Actions.ActionArgument.CanExecute
  commentId: F:TinyLife.Actions.ActionArgument.CanExecute
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_CanExecute
  name: CanExecute
  nameWithType: ActionArgument.CanExecute
  fullName: TinyLife.Actions.ActionArgument.CanExecute
- uid: TinyLife.Actions.CanExecuteResult.Valid
  commentId: F:TinyLife.Actions.CanExecuteResult.Valid
  href: TinyLife.Actions.CanExecuteResult.html#TinyLife_Actions_CanExecuteResult_Valid
  name: Valid
  nameWithType: CanExecuteResult.Valid
  fullName: TinyLife.Actions.CanExecuteResult.Valid
- uid: TinyLife.Actions.ActionArgument.CanBeExecuted*
  commentId: Overload:TinyLife.Actions.ActionArgument.CanBeExecuted
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_CanBeExecuted_TinyLife_Actions_ActionInfo_System_Boolean_
  name: CanBeExecuted
  nameWithType: ActionArgument.CanBeExecuted
  fullName: TinyLife.Actions.ActionArgument.CanBeExecuted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Actions.CanExecuteResult
  commentId: T:TinyLife.Actions.CanExecuteResult
  parent: TinyLife.Actions
  href: TinyLife.Actions.CanExecuteResult.html
  name: CanExecuteResult
  nameWithType: CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult
- uid: TinyLife.Actions.ActionArgument.PassivePriority
  commentId: F:TinyLife.Actions.ActionArgument.PassivePriority
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_PassivePriority
  name: PassivePriority
  nameWithType: ActionArgument.PassivePriority
  fullName: TinyLife.Actions.ActionArgument.PassivePriority
- uid: TinyLife.Actions.ActionArgument.GetPassivePriority*
  commentId: Overload:TinyLife.Actions.ActionArgument.GetPassivePriority
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_GetPassivePriority_TinyLife_Objects_PersonLike_
  name: GetPassivePriority
  nameWithType: ActionArgument.GetPassivePriority
  fullName: TinyLife.Actions.ActionArgument.GetPassivePriority
- uid: TinyLife.Objects.PersonLike
  commentId: T:TinyLife.Objects.PersonLike
  parent: TinyLife.Objects
  href: TinyLife.Objects.PersonLike.html
  name: PersonLike
  nameWithType: PersonLike
  fullName: TinyLife.Objects.PersonLike
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Actions.ActionArgument
  commentId: T:TinyLife.Actions.ActionArgument
  href: TinyLife.Actions.ActionArgument.html
  name: ActionArgument
  nameWithType: ActionArgument
  fullName: TinyLife.Actions.ActionArgument
- uid: TinyLife.Actions.ActionArgument.AddedConstructorArguments
  commentId: F:TinyLife.Actions.ActionArgument.AddedConstructorArguments
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_AddedConstructorArguments
  name: AddedConstructorArguments
  nameWithType: ActionArgument.AddedConstructorArguments
  fullName: TinyLife.Actions.ActionArgument.AddedConstructorArguments
- uid: TinyLife.Actions.ActionType.AskToTaste
  commentId: F:TinyLife.Actions.ActionType.AskToTaste
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_AskToTaste
  name: AskToTaste
  nameWithType: ActionType.AskToTaste
  fullName: TinyLife.Actions.ActionType.AskToTaste
- uid: TinyLife.Actions.ActionInfo.Person
  commentId: P:TinyLife.Actions.ActionInfo.Person
  href: TinyLife.Actions.ActionInfo.html#TinyLife_Actions_ActionInfo_Person
  name: Person
  nameWithType: ActionInfo.Person
  fullName: TinyLife.Actions.ActionInfo.Person
- uid: TinyLife.Actions.ActionArgument.FreePeople*
  commentId: Overload:TinyLife.Actions.ActionArgument.FreePeople
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_FreePeople_TinyLife_Actions_ActionInfo_System_Func_System_ValueTuple_TinyLife_Actions_ActionInfo_TinyLife_Objects_PersonLike_System_Boolean__TinyLife_Actions_CanExecuteResult__System_Boolean_
  name: FreePeople
  nameWithType: ActionArgument.FreePeople
  fullName: TinyLife.Actions.ActionArgument.FreePeople
- uid: System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean},TinyLife.Actions.CanExecuteResult}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean},TinyLife.Actions.CanExecuteResult}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(ActionInfo Info, PersonLike Other, bool Automatic), CanExecuteResult>
  nameWithType: Func<(ActionInfo Info, PersonLike Other, bool Automatic), CanExecuteResult>
  fullName: System.Func<(TinyLife.Actions.ActionInfo Info, TinyLife.Objects.PersonLike Other, bool Automatic), TinyLife.Actions.CanExecuteResult>
  nameWithType.vb: Func(Of (Info As ActionInfo, Other As PersonLike, Automatic As Boolean), CanExecuteResult)
  fullName.vb: System.Func(Of (Info As TinyLife.Actions.ActionInfo, Other As TinyLife.Objects.PersonLike, Automatic As Boolean), TinyLife.Actions.CanExecuteResult)
  name.vb: Func(Of (Info As ActionInfo, Other As PersonLike, Automatic As Boolean), CanExecuteResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.personlike,system.boolean-.info
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.personlike,system.boolean-.other
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.personlike,system.boolean-.automatic
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.personlike,system.boolean-.info
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.personlike,system.boolean-.other
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.PersonLike
    name: PersonLike
    href: TinyLife.Objects.PersonLike.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.PersonLike,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.personlike,system.boolean-.automatic
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionArgument}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionArgument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ActionArgument>
  nameWithType: IEnumerable<ActionArgument>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionArgument>
  nameWithType.vb: IEnumerable(Of ActionArgument)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionArgument)
  name.vb: IEnumerable(Of ActionArgument)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionArgument
    name: ActionArgument
    href: TinyLife.Actions.ActionArgument.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: System.Linq.Enumerable.Empty``1
  commentId: M:System.Linq.Enumerable.Empty``1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.enumerable.empty
  name: Empty<TResult>()
  nameWithType: Enumerable.Empty<TResult>()
  fullName: System.Linq.Enumerable.Empty<TResult>()
  nameWithType.vb: Enumerable.Empty(Of TResult)()
  fullName.vb: System.Linq.Enumerable.Empty(Of TResult)()
  name.vb: Empty(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Empty``1
    name: Empty
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.enumerable.empty
  - name: <
  - name: TResult
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: System.Linq.Enumerable.Empty``1
    name: Empty
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.enumerable.empty
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - name: )
- uid: TinyLife.Actions.ActionArgument.StoredFurniture*
  commentId: Overload:TinyLife.Actions.ActionArgument.StoredFurniture
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_StoredFurniture_System_Collections_Generic_IEnumerable_TinyLife_Objects_Furniture__System_Func_System_ValueTuple_TinyLife_Actions_ActionInfo_TinyLife_Objects_Furniture_System_Boolean__TinyLife_Actions_CanExecuteResult__
  name: StoredFurniture
  nameWithType: ActionArgument.StoredFurniture
  fullName: TinyLife.Actions.ActionArgument.StoredFurniture
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Furniture>
  nameWithType: IEnumerable<Furniture>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.Furniture>
  nameWithType.vb: IEnumerable(Of Furniture)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.Furniture)
  name.vb: IEnumerable(Of Furniture)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: )
- uid: System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(ActionInfo Info, Furniture Furniture, bool Automatic), CanExecuteResult>
  nameWithType: Func<(ActionInfo Info, Furniture Furniture, bool Automatic), CanExecuteResult>
  fullName: System.Func<(TinyLife.Actions.ActionInfo Info, TinyLife.Objects.Furniture Furniture, bool Automatic), TinyLife.Actions.CanExecuteResult>
  nameWithType.vb: Func(Of (Info As ActionInfo, Furniture As Furniture, Automatic As Boolean), CanExecuteResult)
  fullName.vb: System.Func(Of (Info As TinyLife.Actions.ActionInfo, Furniture As TinyLife.Objects.Furniture, Automatic As Boolean), TinyLife.Actions.CanExecuteResult)
  name.vb: Func(Of (Info As ActionInfo, Furniture As Furniture, Automatic As Boolean), CanExecuteResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.info
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Furniture
    name: Furniture
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.automatic
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.info
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Furniture
    name: Furniture
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.furniture
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    href: TinyLife.Objects.Furniture.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.automatic
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    href: TinyLife.Actions.CanExecuteResult.html
  - name: )
- uid: TinyLife.Actions.ActionArgument.CustomLayout
  commentId: F:TinyLife.Actions.ActionArgument.CustomLayout
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_CustomLayout
  name: CustomLayout
  nameWithType: ActionArgument.CustomLayout
  fullName: TinyLife.Actions.ActionArgument.CustomLayout
- uid: TinyLife.Actions.ActionType.GetIngredientsSingle
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsSingle
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_GetIngredientsSingle
  name: GetIngredientsSingle
  nameWithType: ActionType.GetIngredientsSingle
  fullName: TinyLife.Actions.ActionType.GetIngredientsSingle
- uid: TinyLife.Actions.ActionType.ChangeOutfit
  commentId: F:TinyLife.Actions.ActionType.ChangeOutfit
  href: TinyLife.Actions.ActionType.html#TinyLife_Actions_ActionType_ChangeOutfit
  name: ChangeOutfit
  nameWithType: ActionType.ChangeOutfit
  fullName: TinyLife.Actions.ActionType.ChangeOutfit
- uid: MLEM.Ui.Elements.Element.DrawCallback
  commentId: T:MLEM.Ui.Elements.Element.DrawCallback
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element.DrawCallback
  nameWithType: Element.DrawCallback
  fullName: MLEM.Ui.Elements.Element.DrawCallback
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
  spec.vb:
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
- uid: TinyLife.Actions.ActionArgument.ImageLayout*
  commentId: Overload:TinyLife.Actions.ActionArgument.ImageLayout
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_ImageLayout_System_Single_MLEM_Ui_Elements_Element_DrawCallback_MLEM_Maths_Padding_
  name: ImageLayout
  nameWithType: ActionArgument.ImageLayout
  fullName: TinyLife.Actions.ActionArgument.ImageLayout
- uid: MLEM.Maths.Padding
  commentId: T:MLEM.Maths.Padding
  parent: MLEM.Maths
  isExternal: true
  name: Padding
  nameWithType: Padding
  fullName: MLEM.Maths.Padding
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  isExternal: true
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Maths
    name: Maths
    isExternal: true
- uid: TinyLife.Objects.PersonLike.Portrait
  commentId: P:TinyLife.Objects.PersonLike.Portrait
  parent: TinyLife.Objects.PersonLike
  href: TinyLife.Objects.PersonLike.html#TinyLife_Objects_PersonLike_Portrait
  name: Portrait
  nameWithType: PersonLike.Portrait
  fullName: TinyLife.Objects.PersonLike.Portrait
- uid: TinyLife.Actions.ActionArgument.PortraitLayout*
  commentId: Overload:TinyLife.Actions.ActionArgument.PortraitLayout
  href: TinyLife.Actions.ActionArgument.html#TinyLife_Actions_ActionArgument_PortraitLayout_TinyLife_Objects_PersonLike_TinyLife_Objects_PersonLike_System_Boolean_
  name: PortraitLayout
  nameWithType: ActionArgument.PortraitLayout
  fullName: TinyLife.Actions.ActionArgument.PortraitLayout
